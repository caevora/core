<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MudletPackage>
<MudletPackage version="1.001">
	<TriggerPackage>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Achaean System</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName>Achaean System</packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>system</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Ugrach - back to life</name>
					<script>systemPaused = false
cecho("\nSystem has been "..(systemPaused and "&lt;red&gt;paused." or "&lt;green&gt;unpaused.")) </script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Unbearable pain crushes your soul, and you collapse</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>class</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>class change</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You are now a member of the (\w+) class\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>lesserform</name>
						<script>classchange = false

-- To load or create the file:
settings.myclass = myclass()

local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
local filename = myclass() .. "prios.lua"
local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"
ensureFileExists(tablesDir, filename, "load", afflictions)

initializeVitals()
initializeCureBalance()
initializeDefensiveTable("load")

  systemPaused=false
  send("curing on")
  tryToDefup()

expandAlias("mconfig gare false")

if gmcp.Char.Status.class == "Serpent" then 
  expandAlias("mconfig dash true")
  expandAlias("mconfig lockwormholes false") 
elseif gmcp.Char.Status.class == "Blademaster" then
  expandAlias("mconfig dash true")
  expandAlias("mconfig lockwormholes true") 
end 

  if mounted then
    expandAlias("mconfig gallop true")
  end
 
 
  for k, v in pairs(defenses) do 
    if "dragoncraft" == v.type then 
       v.active = false 
       table.remove(mydefs, table.index_of(mydefs, k))
    end 
  end
  

  if myclass() == "serpent" then 
    expandAlias("mconfig dash true")
    expandAlias("mconfig lockwormholes false") 
  else
    expandAlias("mconfig dash false")
    expandAlias("mconfig lockwormholes true")
  end

if parrymethod ~= "manual" then 
  send("queue add eqbal " .. checkForParry())
end

local armor = armour()
send("queue addclear eqbal wear "..armor)  
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Your race is now that of (\w+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>not in dragon</name>
						<script>local armor = armour()
send("queue addclear eqbal wear "..armor) 

settings.myclass = myclass()

-- To load or create the file:
local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
local filename = myclass() .. "prios.lua"
local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"
ensureFileExists(tablesDir, filename, "load", afflictions)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You are not in Dragon form.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>dragonform - started</name>
						<script>classchange = true
expandAlias("mconfig gallop false")
expandAlias("mconfig gare true")

if not(myclass()=="dragon") then
  for k, v in pairs(defenses) do 
    for _, list in pairs(skillTreeList[myclass()]) do
       if list == v.type then
          v.active = false 
          table.remove(mydefs, table.index_of(mydefs, k))
       end
    end 
  end
end
  
         

</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Invoking the power that the line of Sycaerunax grants you, you will forth the Dragon within, and a \w+ light begins to emanate from your very soul\.$</string>
							<string>^With a grimness born of determination, you begin to unleash the Dragon that is now so much a part of the fabric of your soul. A \w+ light begins to shine through from within you\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>dragonform - complete</name>
						<script>classchange = false
settings.myclass = myclass()

-- To load or create the file:
local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
local filename = myclass() .. "prios.lua"
local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"
ensureFileExists(tablesDir, filename, "load", afflictions)

initializeVitals()
initializeCureBalance()
initializeDefensiveTable("load")



  systemPaused=false
  send("curing on")
  cecho("\nSystem has been "..(systemPaused and "&lt;red&gt;paused." or "&lt;green&gt;unpaused.")) 
  --remedy:process()
  tryToDefup()
   


expandAlias("mconfig dash false")
expandAlias("mconfig lockwormholes true")
expandAlias("mconfig gare true")

if parrymethod ~= "manual" then 
  send("queue add eqbal " .. checkForParry())
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>With an ear-splitting roar, you rear back your draconic head and scream out your triumph.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>ndb</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Get Player Information</name>
						<script>if honoursPerson and matches[2]:find(honoursPerson) then
  getNDBCity = "None"
  NDBIsMark = false
  NDBARank = 0
	enableTrigger("Additional Information NDB")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(.+) \((male|female|fae|Fae) (.+)\).</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>City Enemies Capture</name>
						<script>NDB.cityEnemies = {}
table.insert(NDB.cityEnemies, multimatches[2][2])
for person in multimatches[2][3]:gmatch("[%w'%-]+") do
	table.insert(NDB.cityEnemies, person)
end
table.sort(NDB.cityEnemies)
cecho("&lt;green&gt;Updated city enemies list.")

disableTrigger("City Enemies Capture")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Enemies of the City of (\w+)\:$</string>
							<string>^(\w+), (.+)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>city enemies</name>
						<script>NDB.cityEnemies = NDB.cityEnemies or {}
if table.is_empty(NDB.cityEnemies) then
  deleteFull()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>2</conditonLineDelta>
						<mStayOpen>2</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Enemies of the</string>
							<string>^Enemies of the (.+)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>insert names</name>
							<script>local list = {
  
  Eleusis  = "Primordial Empire of Nature"

}

if matches[2] == "Enemies of the " .. list[city_capture()] then
  return
else
  local enemies = matches[2]:split(", ")
  for _, enemy in ipairs(enemies) do
    table.insert(NDB.cityEnemies, enemy)
    table.sort(NDB.cityEnemies)
    if not NDB_Exists(enemy) then
			NDB_Acquire(enemy)
		end
    
    
  end

end
setTriggerStayOpen("city enemies", 0)

-- Define the base directory for the C: drive
local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"

-- Save `cityenemylist.lua` in `C:/Users/YourUsername/Documents/Achaean System/Tables`
ensureFileExists(tablesDir, "cityenemylist.lua", "save", NDB.cityEnemies)

-- Save `ndbData.lua` in `C:/Users/YourUsername/Documents/Achaean System/Tables/ndb`
ensureFileExists(tablesDir, "ndbData.lua", "save", NDB)
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>33</conditonLineDelta>
							<mStayOpen>2</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([A-Z a-z,]+)</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>city members</name>
						<script>NDB.cityList = NDB.cityList or {}
if table.is_empty(NDB.cityList) then
  deleteFull()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>2</conditonLineDelta>
						<mStayOpen>2</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The following are ACTIVE citizens of</string>
							<string>The following are ACTIVE citizens of (\w+):</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>insert names</name>
							<script>if matches[2] == "The following are ACTIVE citizens of " .. city_capture() then
  return
else
  local allies = matches[2]:split(", ")
  for _, ally in ipairs(allies) do
    table.insert(NDB.cityList, ally)
    table.sort(NDB.cityList)
    if not NDB_Exists(ally) then
			NDB_Acquire(ally)
		end
    
    
  end

end
setTriggerStayOpen("city members", 0)


-- Define the base directory for the C: drive
local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"

-- Save `cityenemylist.lua` in `C:/Users/YourUsername/Documents/Achaean System/Tables`
ensureFileExists(tablesDir, "cityallylist.lua", "save", NDB.cityList)

-- Save `ndbData.lua` in `C:/Users/YourUsername/Documents/Achaean System/Tables/ndb`
ensureFileExists(tablesDir, "ndbData.lua", "save", NDB)
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>33</conditonLineDelta>
							<mStayOpen>2</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff00ff</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([A-Z a-z,]+)</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>citizens total</name>
						<script>deleteLine()
disableTrigger("city members")
disableTrigger("citizens total")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Total:</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>enemies total</name>
						<script>deleteLine()
disableTrigger("city enemies")
disableTrigger("enemies total")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Total:</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Explorers Rankings</name>
						<script>explorersUnchecked = {}</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>999</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>*********************************[ Explorers ]*********************************</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Get Person</name>
							<script>if not NDB_Exists(matches[3]) then
	table.insert(explorersUnchecked, matches[3])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\s+(\d+) (\w+)</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>End Capture</name>
							<script>setTriggerStayOpen("Explorers Rankings", 0)
if explorersUnchecked[1] then
	cecho("\n&lt;DarkSlateGray&gt; - "..#explorersUnchecked.." new names identified, grabbing their info.")
	cecho("\n&lt;DarkSlateGray&gt; - "..table.concat(explorersUnchecked, ", ")..".")
	NDB_NameList(explorersUnchecked)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string></string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>7</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Who Grouping</name>
						<script>needMore = false
deleteLine()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>999</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>-Parsing Who List:</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Get Person</name>
							<script>if not matches[3] then
  whogroups.unknown = whogroups.unknown or {}
  table.insert(whogroups.unknown, matches[2])
  table.sort(whogroups.unknown)
else
  whogroups[matches[3]] = whogroups[matches[3]] or {}
  table.insert(whogroups[matches[3]], matches[2])
  table.sort(whogroups[matches[3]])  
end

deleteLine()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+)$</string>
								<string>^(\w+) \s+ \((.+)\)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Need More</name>
							<script>needMore = true
deleteFull()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>[Type MORE</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Remove Lines</name>
							<script>deleteLine()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>[File continued via MORE]</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Print Results</name>
							<script>if not DEBUG_MODE then deleteLine() end

cecho("\n&lt;white&gt;People grouped by area:\n")

groupedByArea = {}

for where, who in spairs(whogroups) do
    if where ~= "unknown" then
        local areaName = mmp.getAreaNameFromQuery(where)

        -- Initialize the group for this area if not already present
        if not groupedByArea[areaName] then
            groupedByArea[areaName] = {}
        end

        -- Add the location and people to the group's list
        table.insert(groupedByArea[areaName], {location = where, people = who, room = mmp.getRoomNumber(where) or "Unknown" })
    end
end

-- Display grouped output -- unformatted
--for areaName, locations in spairs(groupedByArea) do
  --  cecho(string.format("\n&lt;green&gt;[ %s ]\n", areaName))
    --for _, locationData in ipairs(locations) do
      --  cecho(string.format(
        --    " - (&lt;LightSlateGray&gt;%s&lt;white&gt;): &lt;DimGrey&gt;%s ",
          --  locationData.location,
          --  table.concat(locationData.people, ", ")
        --))
        --mmp.echonums(locationData.location) -- Place this at the end
        --cecho("\n") -- Ensure the line ends properly
    --end
--end

-- Display grouped output -- formatted - right margin justified
local pageWidth = 80 -- Adjust this based on your terminal's width
for areaName, locations in spairs(groupedByArea) do
    cecho(string.format("\n&lt;green&gt;[ %s ]\n", areaName))
    for _, locationData in ipairs(locations) do
        -- Prepare the main text
        local mainText = string.format(
            " - (&lt;LightSlateGray&gt;%s&lt;white&gt;): &lt;DimGrey&gt;%s ",
            locationData.location,
            table.concat(locationData.people, ", ")
        )

        -- Get the length of the main text without formatting
        local plainMainText = mainText:gsub("&lt;[^&gt;]+&gt;", "") -- Remove ANSI codes for length calculation
        local padding = pageWidth - #plainMainText - 15 -- Subtract estimated width of the room number

        -- Ensure padding is at least 1
        if padding &lt; 1 then
            padding = 1
        end

        -- Add padding before the room number
        cecho(mainText .. string.rep(" ", padding))
        mmp.echonums(locationData.location) -- Echo the room number at the end
        cecho("\n") -- Ensure the line ends properly
    end
end


-- Handle unknown locations
if whogroups.unknown and #whogroups.unknown &gt; 0 then
    cecho("\n\n&lt;red&gt;Unknown location: &lt;DodgerBlue&gt;" .. table.concat(whogroups.unknown, ", ") .. ".\n\n")
end

whogroups = nil
setTriggerStayOpen("Who Grouping", 0)
disableTrigger("Who Grouping")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Total</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>More failsafe</name>
							<script>waitMore = nil</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>[File continued</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Prompt</name>
							<script>needMore = false
waitMore = true
send("more")

if not DEBUG_MODE then deleteLine() end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string></string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>7</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Print Results OLD</name>
							<script>if not DEBUG_MODE then deleteLine() end
cecho("\n&lt;white&gt;  People who are grouped:\n")

for where, who in spairs(whogroups) do
  if #who &gt; 1 then
    if where ~= "unknown" then
      mmp.roomFindEchoArea(where)
      cecho("\n&lt;white&gt; - (&lt;green&gt;"..where:title().."&lt;white&gt;): &lt;DimGrey&gt;"..table.concat(who, ", ")..".  ")
      mmp.echonums(where)
    end
  end
end

cecho("\n\n&lt;NavajoWhite&gt;  People on their own:\n")
for where, who in spairs(whogroups) do
  if #who == 1 then
    if where ~= "unknown" then
      mmp.roomFindEchoArea(where)
      cecho("\n&lt;white&gt; - (&lt;brown&gt;"..where:title().."&lt;white&gt;): &lt;DimGrey&gt;"..table.concat(who, ", ")..".  ")
      mmp.echonums(where)
    end
  end
end


cecho("\n\n&lt;red&gt;  Unknown location: &lt;DodgerBlue&gt;"..table.concat(whogroups.unknown, ", ")..".\n\n")
whogroups = nil
setTriggerStayOpen("Who Grouping", 0)
disableTrigger("Who Grouping")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>THIS IS AN OLD PRINT REPORT SAVING FOR LONGEVITY</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Additional Information NDB</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Check Player City</name>
							<script>if not honoursPerson then return end
NDB.players[honoursPerson].city = matches[3]:title()

getNDBCity = matches[3]

selectString(matches[3], 1)
fg(NDB.highlighting[matches[3]])
resetFormat()

raiseEvent("NDB Check Highlight", honoursPerson)
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(He|She|Fae) is an? \w+ in (\w+).$</string>
								<string>^(He|She|Fae) is an? .+ in The (\w+).$</string>
								<string>^(He|She|Fae) is a .+ in The (\w+).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Close Capturing</name>
							<script>if honoursPerson and NDB.players[honoursPerson] and NDB.players[honoursPerson].city ~= getNDBCity then 
  NDB.players[honoursPerson].city = getNDBCity
  cecho("\n&lt;green&gt;Updated city for "..honoursPerson..".")
end

if NDBIsMark then
  if not NDB_isMark(honoursPerson) then
    cecho("\n&lt;red&gt;Updated as being mark: "..NDBIsMark..".")
    NDB.players[honoursPerson].mark = NDBIsMark
  end
else
  if NDB_isMark(honoursPerson) then
    cecho("\n&lt;red&gt;This person is no longer in the mark.")
    NDB.players[honoursPerson].mark = nil
  end
end

if NDBARank &gt; 0 then
  if NDB_armyRank(honoursPerson) &lt; NDBARank then
    cecho("\n&lt;yellow&gt;Updated army rank to Rank "..NDBARank..".")
    NDB.players[honoursPerson].armyRank = NDBARank
    
    if NDBARank &gt;= 3 then
      cecho("&lt;red&gt; - This person is attackable for sanctions.")
    end
  end
else
  if NDB_armyRank(honoursPerson) &gt; 0 then
    cecho("\n&lt;yellow&gt;This person is no longer in the army.")
    NDB.players[honoursPerson].armyRank = nil
  end
end


NDBARank = nil
NDBIsMark = nil
getNDBCity = nil
honoursPerson = nil
disableTrigger("Get Player Information")
disableTrigger("Additional Information NDB")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string></string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>7</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Army Rank</name>
							<script>NDBARank = tonumber(matches[4])
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(He|She|Fae) is (.+)\((\d+)\) in the army of (\w+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Ivory Mark</name>
							<script>NDBIsMark = "Ivory"</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(He|She|Fae) is a member of the Ivory Mark\.$</string>
								<string>^(He|She|Fae) is the Avenging Arrow Champion in the Ivory Mark\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Quisalis Mark</name>
							<script>NDBIsMark = "Quisalis"</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(He|She|Fae) is the Silent Executioner in the Quisalis Mark\.$</string>
								<string>^(He|She|Fae) is a member of the Quisalis Mark\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>date</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>ambient day passing</name>
						<script>date = date or {}
  date = {day = matches.day, month = matches.month, year = matches.year, 
  monthabrev = {
    ["Sarapin"] = "Sar",
    ["Daedalan"] = "Dae",
    ["Aeguary"] = "Aeg",
    ["Miraman"] = "Mir",
    ["Scarlatan"] = "Scar",
    ["Ero"] = "Ero",
    ["Valnuary"] = "Val",
    ["Lupar"] = "Lup",
    ["Phaestian"] = "Phae",
    ["Chronos"] = "Chr",
    ["Glacian"] = "Gla",
    ["Mayan"] = "May",
    }}</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^It is now the (?&lt;day&gt;\d+)(?:\w+) of (?&lt;month&gt;\w+), (?&lt;year&gt;\d+) years after the fall of the Seleucarian Empire\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>calander date grab</name>
						<script>date.year = matches[2]</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\+--------------------- ACHAEAN CALENDAR (\d+) AF ---------------------\+$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>on date</name>
						<script>date = date or {}
date = {day = matches.day, month = matches.month, year = matches.year, 
  monthabrev = {
    ["Sarapin"] = "Sar",
    ["Daedalan"] = "Dae",
    ["Aeguary"] = "Aeg",
    ["Miraman"] = "Mir",
    ["Scarlatan"] = "Scar",
    ["Ero"] = "Ero",
    ["Valnuary"] = "Val",
    ["Lupar"] = "Lup",
    ["Phaestian"] = "Phae",
    ["Chronos"] = "Chr",
    ["Glacian"] = "Gla",
    ["Mayan"] = "May",
    }, 
}
 	  if date.month == "Sarapin" or date.month == "Daedalan" or date.month == "Mayan" then
      date.season =  "winter"
    end
    
    if date.month == "Aeguary" or date.month == "Miraman" or date.month == "Scarlatan" then
      date.season =  "spring"
    end
    
    if date.month == "Ero" or date.month == "Valnuary" or date.month == "Lupar" then
      date.season =  "summer"
    end
    
    if date.month == "Sarapin" or date.month == "Daedalan" or date.month == "Mayan" then
      date.season =  "winter"
    end
    
    if date.month == "Phaestian" or date.month == "Chronos" or date.month == "Glacian" then
      date.season =  "fall"
    end


</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Today is the (?&lt;day&gt;\d+)(?:\w+) of (?&lt;month&gt;\w+), (?&lt;year&gt;\d+) years after the fall of the Seleucarian Empire\.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>prompt</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>prompt</name>
						<script>if systemLoaded then

  prompt()
  sipper()
  afflictionlist()
  
  if hiddenaff &gt;= 2 and gmcp.Char.Vitals.bal == '1' then
    send("diagnose")
  end
  
  remedy:process()
  tryToDefup()
  
  
  onCureFailsafe()
  
  --stop fullsipping if full health and mana.
  if fullsipping then
    local health_full = tonumber(gmcp.Char.Vitals.hp) &gt;= tonumber(gmcp.Char.Vitals.maxhp) * 0.99
    local mana_full = tonumber(gmcp.Char.Vitals.mp) &gt;= tonumber(gmcp.Char.Vitals.maxmp) * 0.99  
    fullsipping = not (health_full and mana_full)
  end  
  
    --auto keepup meditating when meditating is active.
  if meditating then
    if (vitals.mana.current &lt; vitals.maxMana * .87) or (vitals.wp.current &lt; vitals.maxWp * .97) then
      if fullwillandmana then 
        fullwillandmana = false     
        send("queue addclear eqbal meditate")
      end
    end
  end
  
   --if hunting and autohunting and table.contains(myaffs, "blackout") then
    -- huntNext()
   --end
  
  --if hunting and fleemode then
   -- if vitals.health.current &gt;= vitals.maxHealth * 0.45 then
    --  tempTimer(.5, [[
    --  send("clearqueue all")
    --  send("queue addclear eqbal go "..fleetable[fleedir])
    --  fleemode = false]])
   -- end
  --end
  
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string></string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>7</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>trigger handler</name>
						<script>-- Process the balance update if not prompted by the system
if not isPrompt() then
   balanceTracker()
   if combatLoaded then
    combatHandler(matches[2])
   end
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(.*)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>empty prompt</name>
						<script>if not (promptEnabled) then
  --if not DEBUG_MODE then deleteLine() end
  --creplaceLine("&lt;magenta&gt;[ALERT!]: &lt;reset&gt;"..matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^- $</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>gagging</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>alias</name>
						<script>if not DEBUG_MODE then deleteFull() end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>[System]:</string>
							<string>Alias \"(\w+)\" will now execute\: \".*\"</string>
							<string>You have cleared alias</string>
							<string>You have exceeded the spam threshold for curing priority.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
							<integer>2</integer>
							<integer>2</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>system</name>
						<script>if not DEBUG_MODE then deleteFull() end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>[Curing]:</string>
							<string>I see no "body" to take.</string>
							<string>I see no "gold" to take.</string>
							<string>You hold no "gold".</string>
							<string>You will now use alternative curing methods if your selected curing type is not available.</string>
							<string>You must regain balance first.</string>
							<string>You already possess equilibrium.</string>
							<string>You must regain equilibrium first.</string>
							<string>You are not fallen or kneeling.</string>
							<string>You are already concentrating on regaining equilibrium.</string>
							<string>Your queues are already empty.</string>
							<string>You already have the KILL warning deactivated.</string>
							<string>Now now, don't be so hasty!</string>
							<string>Server-side queueing is already enabled.</string>
							<string>You are already viewing advanced curing options.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>breathing</name>
						<script>if not DEBUG_MODE then deleteFull() end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\w+ exhales loudly\.$</string>
							<string>^\w+ inhales and begins holding \w+ breath\.$</string>
							<string>You inhale deeply and begin holding your breath.</string>
							<string>You cease holding your breath and exhale loudly.</string>
							<string>[Curing]: HOLD BREATH</string>
							<string>Inhaling underwater? Are you mad?</string>
							<string>You are breathing lightly.</string>
							<string>You have recovered your wind and are breathing normally on</string>
							<string>You are panting softly.</string>
							<string>You are panting heavily.</string>
							<string>You are breathing heavily.</string>
							<string>You have recovered your wind and are breathing normally once again.</string>
							<string>Inhaling underwater? Are you mad?</string>
							<string>You are gasping for breath.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>queue gagging</name>
						<script>if not DEBUG_MODE then deleteFull() end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>[System]: Added </string>
							<string>[System]: Running queued</string>
							<string>Your queues are already empty.</string>
							<string>Your eqbal queue is full.</string>
							<string>Your eqbal queue is already empty.</string>
							<string>[System]: Queued eb commands cleared.</string>
							<string>Cleared your queues.</string>
							<string>[System]: Queued eb!t commands cleared.</string>
							<string>[System]: All queued commands cleared.</string>
							<string>[System]: Queued free commands cleared.</string>
							<string>[System]: Queued full commands cleared.</string>
							<string>[System]: Queued freestand commands cleared.</string>
							<string>^(.+) was added to your (balance|equilibrium|class) queue\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>2</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>3p Trades</name>
						<script>if not DEBUG_MODE then deleteFull() end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Carefully closing the lid on .+, \w+ begins to slowly turn the handle on top, grinding and combining the contents\.$</string>
							<string>^Gaining momentum, \w+ turns the handle on .+, the contents providing less resistance to \w+ efforts\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>arena</name>
						<script>if not DEBUG_MODE then deleteFull() end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>[You]:</string>
							<string>[gmcp.Char.Status.name]:</string>
							<string>[target]:</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>2</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Add Clear Prompt Killer</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>1</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>[System]: Queued eb commands cleared.</string>
							<string>[System]: Queued eb!t commands cleared.</string>
							<string>[System]: All queued commands cleared.</string>
							<string>[System]: Queued free commands cleared.</string>
							<string>[System]: Queued full commands cleared.</string>
							<string>[System]: Queued freestand commands cleared.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Secondary</name>
							<script>tempLineTrigger(1,1,[[
   if isPrompt() then
      if not DEBUG_MODE then deleteLine() end
   end
]])

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>[System]: Added</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>stupidity gag</name>
						<script>cecho("\n&lt;red&gt; + Stupidity ")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>99</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Hmmmm. Why must everything be so difficult to figure out?</string>
							<string></string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>7</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>lines</name>
							<script>if table.contains(myaffs, "stupidity") then
  if not DEBUG_MODE then deleteLine() end
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Tears fill your eyes and begin to slowly run down your face.</string>
								<string>You sweep across the floor, leaping and twirling like a true master.</string>
								<string>As horrible thoughts fill your mind, you begin to sob uncontrollably.</string>
								<string>You attempt to do a standing backflip, but merely stumble over your own feet.</string>
								<string>You get down on one knee and serenade the world.</string>
								<string>You hug yourself compassionately.</string>
								<string>You flap your arms madly.</string>
								<string>You give up a round of applause.</string>
								<string>You burp obscenely.</string>
								<string>You make a strangled meowing noise and quickly shut up in embarrassment.</string>
								<string>Tears fill your eyes and begin to slowly run down your face.</string>
								<string>You fall to your knees in worship.</string>
								<string>You waggle your eyebrows comically.</string>
								<string>You let out a loud, long "MOOOOOOOOOOO!"</string>
								<string>You pull down your pants and moon the world.</string>
								<string>My friend, clearly you know little of the sultry tango, if you think that you can perform it without a partner.</string>
								<string>You blink.</string>
								<string>You sweep across the floor, leaping and twirling like a true master.</string>
								<string>You wail like an old woman.</string>
								<string>You twitch spasmodically.</string>
								<string>You giggle happily.</string>
								<string>You pick your nose absently.</string>
								<string>You drop to one knee.</string>
								<string>You grunt a bit and then let out a loud "OINK!"</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>weed gag</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>weed_smilie</name>
							<script>selectString(line, 1)
if not DEBUG_MODE then deleteLine() end
if not warnedsmileys then
  warnedsmileys = true
  tempTimer(
    0.5,
    function()
      if not DEBUG_MODE then cecho(" Saved you from seeing a giant-ass smiley.") end;
      warnedsmileys = nil
    end
  )
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>99</conditonLineDelta>
							<mStayOpen>20</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\s*\.\.o@@@@@@@@@@@@@o\.\.\s*$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>temp</name>
								<script>selectString(line, 1)
if not DEBUG_MODE then deleteLine() end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>69</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\s*.+\s*$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>gag end</name>
								<script>setTriggerStayOpen("weed_smilie", 0)
selectString(line, 1)
if not DEBUG_MODE then deleteLine() end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string></string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>7</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>weed blackout</name>
							<script>if not DEBUG_MODE then deleteLine() end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your senses go numb as the cactus weed overwhelms your mind.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>blank gag</name>
								<script>if not DEBUG_MODE then deleteLine() end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>gag end</name>
								<script>if not DEBUG_MODE then deleteLine() end
setTriggerStayOpen("weed_blackout", 0)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string></string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>7</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>No more smiles</name>
							<script>if not DEBUG_MODE then deleteFull() end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>17</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string> ..o@@@@@@@@@@@@@o..</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>defenses</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>dragon</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>dragonarmour</name>
							<script>fortify:update("dragonarmour",true)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You are already surrounded by draconic armour, Wyrm.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>dragonbreath</name>
							<script>fortify:update("dragonbreath",true)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You already have your breath summoned, Wyrm.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>serpent</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>weaving</name>
							<script>fortify:update("weaving",true)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You picture a cobra in your mind, and slowly begin to weave back and forth agilely.</string>
								<string>You are already imitating the cobra.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>relax weaving</name>
							<script>fortify:update("weaving",false)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You cease your cobra-like weaving.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>scales</name>
							<script>fortify:update("scales",true)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You concentrate and slowly your body is covered by protective, serpentine scales.</string>
								<string>You are already covered in protective, serpentine scales.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>scales shed</name>
							<script>fortify:update("scales",false)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You ripple your muscles and as you watch, your skin turns white and peels off, taking your protective scaling with it.</string>
								<string>You have nothing to shed.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>ghost</name>
							<script>fortify:update("ghost",true)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You project a net of light about yourself until your image becomes faded and ghostly.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>dispel me</name>
							<script>fortify:update("shroud",false)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You dispel all illusion magics that were woven about yourself.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>emerge</name>
							<script>fortify:update("hiding",false)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You emerge from your hiding place.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>can't hide</name>
							<script>fortify:update("hiding",false)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Too many prying eyes prevent you from finding a suitable hiding place.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>hiding on</name>
							<script>fortify:update("hiding",true)
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You conceal yourself using all the guile you possess.</string>
								<string>You are already hidden.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>lipread</name>
							<script>fortify:update("lipreading",true)
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You will now lip read to overcome the effects of deafness.</string>
								<string>You are already lipreading.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>secondsight</name>
							<script>fortify:update("secondsight",true)
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You narrow your eyes, allowing your vision to extend beyond the normal spectrum.</string>
								<string>You already possess the second sight.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>pacing</name>
							<script>fortify:update("pacing",true)
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You begin to pace yourself and prepare for sudden bursts of exertion.</string>
								<string>You are already pacing.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>relax pacing</name>
							<script>fortify:update("pacing",false)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You are no longer pacing yourself.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>shroud</name>
							<script>fortify:update("shroud",true)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You toss a sparkling cloud of dust over yourself and as it settles you shimmer into invisibility.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>cant hide</name>
							<script>if table.contains(pipeline.defenses, "hiding") then
  table.remove(pipeline.defenses, table.index_of(pipeline.defenses, "hiding"))
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Too many prying eyes prevent you from finding a suitable hiding place.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>survival</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>insomnia</name>
							<script>fortify:update("insomnia",true)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You clench your fists, grit your teeth, and banish all possibility of sleep.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>insomnia relax</name>
							<script>fortify:update("insomnia",false)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You relax your mind and feel as if you could sleep.</string>
								<string>You are not an insomniac.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>selfishness</name>
							<script>fortify:update("selfishness",true)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You rub your hands together greedily.</string>
								<string>You already are a selfish bastard.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>generosity</name>
							<script>fortify:update("selfishness",false)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A feeling of generosity spreads throughout you.</string>
								<string>No worries. You're not a selfish bastard as is.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>metawake</name>
							<script>fortify:update("metawake",true)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You order your mind to ensure you will not journey far into the dreamworld.</string>
								<string>You already have metawake turned on.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>metawake relax</name>
							<script>fortify:update("metawake",false)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You cease concentrating on maintaining distance from the dreamworld.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>curseward</name>
							<script>fortify:update("curseward",true)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You bring a curseward into being to protect you from harm.</string>
								<string>You already have curseward up.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>curseward lost</name>
							<script>fortify:update("curseward",false)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The ward against curses surrounding you fractures as you disrupt it.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>vision</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>deathsight</name>
							<script>fortify:update("deathsight",true)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You shut your eyes and concentrate on the Soulrealms. A moment later, you feel inextricably linked with the realm of Death.</string>
								<string>Your mind is already attuned to the realm of Death.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>deathsight relax</name>
							<script>fortify:update("deathsight",false)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You relax your link with the realm of Death.</string>
								<string>You are not linked with the realm of Death.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>thirdeye</name>
							<script>fortify:update("thirdeye",true)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You now possess the gift of the third eye.</string>
								<string>You already possess the gift of the third eye.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>nightsight</name>
							<script>fortify:update("nightsight",true)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your vision sharpens with light as you gain night sight.</string>
								<string>Your eyes already have the benefit of night sight.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>nightsight relax</name>
							<script>fortify:update("nightsight",false)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your eyes lose the benefit of night sight.</string>
								<string>Your eyes cannot lose the benefit of night sight, since they do not already have it!</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>groundwatch</name>
							<script>fortify:update("groundwatch",true)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You begin to keep a watchful eye on the ground below.</string>
								<string>You are already keeping a watchful eye on the ground.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>groundwatch relax</name>
							<script>fortify:update("groundwatch",false)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You cease keeping a watchful eye on the ground below.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>hypersight</name>
							<script>fortify:update("hypersight",true)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You concentrate your mind and engage your ability of hypersight.</string>
								<string>You are already concentrating on hypersight.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>hypersight relax</name>
							<script>fortify:update("hypersight",false)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You cease to concentrate on hypersight.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>treewatch</name>
							<script>fortify:update("treewatch",true)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You begin to keep a watchful eye on the treeline.</string>
								<string>You are already keeping a watchful eye on the trees.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>treewatch relax</name>
							<script>fortify:update("treewatch",false)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You cease to watch the treeline.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>skywatch</name>
							<script>fortify:update("skywatch",true)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You are now watching the skies.</string>
								<string>You are already watching the skies.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>skywatch relax</name>
							<script>fortify:update("skywatch",false)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You are no longer watching the skies.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>softfocusing</name>
							<script>fortify:update("softfocusing",true)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You let your eyes go out of focus, causing you to miss some details.</string>
								<string>Your eyes are already out of focus.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>softfocus relax</name>
							<script>fortify:update("softfocusing",false)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You bring your eyes back into focus.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>telesense</name>
							<script>fortify:update("telesense",true)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You attune your mind to local telepathic interference.</string>
								<string>Your mind is already attuned to local telepathic interference.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>telesense relax</name>
							<script>fortify:update("telesense",false)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your mind is no longer concentrating on telepathic interference.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>vigilance</name>
							<script>fortify:update("vigilance",true)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You squint your eyes, more alert to potential danger.</string>
								<string>You are already vigilant.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>vigilance relax</name>
							<script>fortify:update("vigilance",false)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You relax your vigilance.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>alertness</name>
							<script>fortify:update("alertness",true)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You prick up your ears.</string>
								<string>Your sense of hearing is already heightened.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>alertness relax</name>
							<script>fortify:update("alertness",false)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You cease your watchful alertness.</string>
								<string>Your sense of hearing is not presently heightened.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>elixirs</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>speed</name>
							<script>fortify:update("speed",true)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Tiny tremours spread through your body as the world seems to slow down.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>levitation</name>
							<script>fortify:update("levitation",true)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your body begins to feel lighter and you feel that you are floating slightly.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>frost (temperance)</name>
							<script>fortify:update("temperance",true)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A chill runs over your icy skin.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>venom (poison resist)</name>
							<script>fortify:update("poisonresist",true)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You feel a momentary dizziness as your resistance to damage by poison increases.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>salves</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>caloric (insulation)</name>
							<script>fortify:update("insulation",true)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A feeling of comfortable warmth spreads over you.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>mass (density)</name>
							<script>fortify:update("density",true)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your body grows extremely dense and heavy as the mass salve infuses your skin.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>sileris (fangbarrier)</name>
							<script>fortify:update("fangbarrier",true)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You apply a quicksilver droplet to yourself.</string>
								<string>You apply a sileris berry to yourself.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>herbs</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>blindness</name>
							<script>fortify:update("blindness",true)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your eyes dim as you lose your sight.</string>
								<string>The arsenic has no effect. You are already blind.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>not blind</name>
							<script>fortify:update("blindness",false)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You are no longer blind.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>deafness</name>
							<script>fortify:update("deafness",true)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The aural world fades to silence.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>not deaf</name>
							<script>fortify:update("deafness",false)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You are no longer deaf.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>tattoos</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>tattoos</name>
							<script>fortify:update(matches[2],true)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^As the (\w+) tattoo's shape is codified on the \w+ of yourself, the last of the ink leaves the air and you pause for a moment to admire your handiwork.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>no tattoo</name>
							<script>local tattoo = matches[2]
if matches[2] =="megalith" or matches[2] == "ox" or matches[2] == "moss" or matches[2] == "bell" or matches[2] == "boar" or matches[2] == "moon" then
  tattoo = matches[2].."tattoo"
end
fortify:update(tattoo,false)
fortify:process()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You have no (\w+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>mindseye</name>
							<script>balance_data["equilibrium"].in_use = true
fortify:update("mindseye",true)
mindseye = true
send("ql")


if systemLoaded and gmcp.Room and gmcp.Room.Info then 
 if gmcp.Room.Info.environment == "Vessel" then
  GUI.mapwindow:activateTab("Ocean")
 elseif gmcp.Room.Info.environment == "Wilderness" then
  GUI.mapwindow:activateTab("Wilderness")
 else
  GUI.mapwindow:activateTab("Mainland")
 end
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You already possess the mindseye defence.</string>
								<string>Touching the mindseye tattoo, your senses are suddenly heightened.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>boar</name>
							<script>if systemLoaded then
  fortify:update("boartattoo",true)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The vitality of the black boar begins to flow through you.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>moss</name>
							<script>if systemLoaded then
  fortify:update("mosstattoo",true)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your moss tattoo tingles slightly.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>megalith</name>
							<script>if systemLoaded then
  fortify:update("megalithtattoo",true)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You feel your mind enhanced by the megalith tattoo.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>cloak</name>
							<script>if systemLoaded then
  fortify:update("cloak",true)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You caress the tattoo and immediately you feel a cloak of protection surround you.</string>
								<string>You are already protected by the cloak tattoo.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>bell</name>
							<script>if systemLoaded then
  fortify:update("belltattoo",true)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You will now attempt to detect attempts to spy on your person.</string>
								<string>You already have the bell tattoo defence.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>ox</name>
							<script>if systemLoaded then
  fortify:update("oxtattoo",true)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You feel your fatigue pushed away by the endurance of the great ox.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>blademaster</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>shin trance</name>
							<script>fortify:update("shintrance",true)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>With a thrilling shiver, the energy of the Shin trance suffuses your form.</string>
								<string>You are already focused upon gaining shindo energy.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>relax shin trance</name>
							<script>fortify:update("shintrance",false)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You break out of the Shin trance, sighing as you feel your accumulated Shin energy vanish.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>waterwalking</name>
							<script>fortify:update("waterwalking",true)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Dancing lightly on your feet, you prepare to run across the surface of water.</string>
								<string>You are already poised to glide across the surface of water.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>consciousness</name>
							<script>fortify:update("consciousness",true)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You are already maintaining consciousness.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>retaliation</name>
							<script>fortify:update("retaliation",true)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Grasping the hilt of (.+), you prepare to counter attack when the opportunityarises.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>relax retaliation</name>
							<script>fortify:update("retaliation",false)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You will no longer strike in retaliation.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>mindnet</name>
							<script>fortify:update("mindnet",true)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Extending your well-trained senses, you focus upon the movements of others nearby.</string>
								<string>You already have mindnet active.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>relax mindnet</name>
							<script>fortify:update("mindnet",false)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You cease concentration and your mind net vanishes.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>projectiles</name>
							<script>fortify:update("projectiles",true)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Heightening your reflexes, you may sense and avoid many projectiles.</string>
								<string>You are already watching for projectiles.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>relax projectiles</name>
							<script>fortify:update("projectiles",false)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You cease your watch for projectiles.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>relax waterwalk</name>
							<script>fortify:update("waterwalking",false)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Relaxing your posture, you relax your waterwalking defence.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>shinbinding</name>
							<script>fortify:update("shinbinding",true)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You bind Shin energy to your form, willing your body to accept its restorative power.</string>
								<string>You are already binding Shin energy.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>relax shinbinding</name>
							<script>fortify:update("shinbinding",false)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You cease binding excess Shin energy towards regeneration.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>relax consciousness</name>
							<script>fortify:update("consciousness",false)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You will remain conscious at all times.</string>
								<string>You will no longer concentrate on retaining full consciousness.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>weathering</name>
							<script>fortify:update("weathering",true)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A brief shiver runs through your body.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>shin clarity</name>
							<script>fortify:update("shinclarity",true)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>As you focus upon your visual field, the shadows grow faint, details become pronounced,and the world seems somehow more real.</string>
								<string>You are already concentrating on a clearer awareness of your environs.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>curing</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>current priority</name>
						<script>local affliction = string.gsub(matches[2], "%((%d+)%)","%1")
local priority = tonumber(matches[3])

    curinglist = curinglist or {}

    -- Update curinglist with the manually set priority
    curinglist[affliction] = priority
    
    cecho("")
    
     onPriorityResetSent(affliction, priority)
    
--if not DEBUG_MODE then deleteLine() end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You have set the '(.+)' affliction to the (\d+) priority\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>misc</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>predict impatience</name>
							<script>send("curing predict impatience")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You're unable to focus your mind.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>diagnose</name>
							<script>diagnose()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You are:</string>
								<string>You are in perfect health.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>hidden affs</name>
							<script>if not hiddenaff then hiddenaff = 0 end
hiddenaff = hiddenaff + 1
send("curing predict impatience")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#00ff00</mFgColor>
							<mBgColor>#aa0000</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You are confused as to the effects of the venom.</string>
								<string>The knowledge that you've been cursed floods your mind.</string>
								<string>The Contradanse melody swells sharply in your ear with a discombobulating sonic burst.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>meditate</name>
							<script>if systemPaused then
  systemPaused=false
  cecho("\n&lt;green&gt;System Unpaused")
end
fullwillandmana = true
send("curing insomnia on")
expandAlias("fl")
   
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You cease your meditation having achieved full will and mana.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>meditate interrupted</name>
							<script>if meditating then
  send("queue addclear eqbal meditate")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You snap your head up as you break your meditation.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>manathreshhold</name>
							<script>if not(manathreshold)==tostring(matches[2]) then
  manathreshold=tostring(matches[2])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You will now use mana if above (\d+)% of your maximum mana reserves\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>outr rift</name>
							<script>if table.contains(desired_precache, matches[3]) then
  precache[matches[3]] = precache[matches[3]] + tonumber(matches[2])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You remove (\d+) (\w+), bringing the total in the rift to \d+.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>inr all herbs</name>
							<script>initializeSelfPrecache()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You have stored everything in your rift that you are able.</string>
								<string>You have nothing to store in the rift.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>disloyalty</name>
							<script>if not hiddenaff then hiddenaff = 0 end
hiddenaff = hiddenaff + 1

--curing predit disloyalty</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Your (.+) refuses to work with such a disloyal coward such as you.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>darktimer</name>
							<script>darktimer = 0
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>No longer will the sunlight harm you.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>endure stop</name>
							<script>endure=false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You cease focussing on driving off attempts to paralyse you.</string>
								<string>You are not currently enduring attempts to paralyse you.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>willpower drained</name>
							<script>if not systemPaused then
  systemPaused=true
  cecho("\n&lt;red&gt;System Paused")
  expandAlias("meditate")
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your willpower is too weak</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>endure start</name>
							<script>endure=true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You begin focussing on driving off attempts to paralyse you.</string>
								<string>You are already enduring attempts to paralyse you.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>fire ablaze</name>
							<script>if table.contains(myaffs, "blackout") then	send("diag") end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A greater fire elemental flares brightly as it emits a pulse of flame, scorching everything within reach.</string>
								<string>A greater fire elemental claws at you with its spindly arms, burning wounds deep into your torso.</string>
								<string>A greater fire elemental makes a winding gesture in your direction, igniting a fiery pain in your stomach.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>unnamable fire</name>
							<script>local unn = {
	"stupidity",
	"confusion",
	"dementia",
}
for i=1, tonumber(matches[2]) do
	send("curing predict "..unn[i],false)
	cecho("\n&lt;red&gt; + + &lt;yellow&gt;"..unn[i]:upper().."&lt;red&gt; + +")
end

if not hiddenaff then hiddenaff = 0 end
hiddenaff = hiddenaff + 3</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You realise with horror that the eldritch utterence has caused (\d+) \w+ to descend upon you.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>sip mana</name>
							<script>sippriority = "curing priority mana"</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Curing will now prioritise mana over health.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>sip health</name>
							<script>sippriority = "curing priority health"</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Curing will now prioritise health over mana.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>wake up</name>
							<script>if systemPaused then
  systemPaused=false
  send("curing on")
  echo"\n"
  remedy:process()
  if not meditating then 
    fortify:process()
  end 
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You open your eyes and yawn mightily.</string>
								<string>You open your eyes and stretch languidly, feeling deliciously well-rested.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>xorani burdock</name>
							<script>send("outr burdock;eat burdock")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>afflicted with a mysterious illness.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>fitness regained</name>
							<script>balance_data.fitness.in_use = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You may purge your lungs once again.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>classes</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>alchemist attacks</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>temper</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>1</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) glowers at you with a look of repressed disgust before making a slight gesture toward you\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>humor wrack</name>
								<script>if target:title() == matches[2]  or #gmcp.Room.Players &lt; 3 then
 set_class("alchemist")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A short convulsion sweeps through your body as (\w+) wracks your \w+ humour\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>humor truewrack</name>
								<script>--if target:title() == matches[2]  or #gmcp.Room.Players &lt; 3 then
 set_class("alchemist")
--end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A short convulsion sweeps through your body as (\w+) wracks your \w+ and \w+ humours\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>throat</name>
								<script>--if target:title() == matches[2]  or #gmcp.Room.Players &lt; 3 then
 set_class("alchemist")
--end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A diminutive homunculus resembling (\w+) turns its head towards you, its jaws opening wider than what seems possible\. The homunculus stares intently at you and lets out an ear-piercing shriek that disrupts your thoughts\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>homunculus mercury</name>
								<script>--if target:title() == matches[2] then
 set_class("alchemist")
--end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Your flesh begins to swell as a diminutive homunculus resembling (\w+) sinks its teeth into you\.$</string>
									<string>^A diminutive homunculus resembling (\w+) claws into your flesh with dirty nails. The surrounding flesh begins to swell with fluid\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>homunculus corruption</name>
								<script>--if target:title() == matches[2] then
 set_class("alchemist")
--end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A diminutive homunculus resembling (\w+) stares intendedly at you, its eyes flashing a deep blue\. A strange feeling spreads through your body as your melancholic and sanguine humours become corrupted\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>vitrification</name>
								<script>---if target:title() == matches[2]  or #gmcp.Room.Players &lt; 3 then
 set_class("alchemist")
--end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) waves a hand in your direction and you feel energy wreathing about you\. Small patches of your skin waver before turning into shards of sharp glass\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>wrack (hidden)</name>
								<script>--if target:title() == multimatches[1][2]  or #gmcp.Room.Players &lt; 3 then
 set_class("alchemist")
--end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) glowers at you with a look of repressed disgust before making a slight gesture toward you.$</string>
									<string>^A short convulsion sweeps through your body as \w+ wracks your (sanguine|melancholic|phlegmatic|choleric) humour\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>truewrack</name>
								<script>--if target:title() == multimatches[1][2]  or #gmcp.Room.Players &lt; 3 then
 set_class("alchemist")
--end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) glowers at you with a look of repressed disgust before making a slight gesture toward you\.$</string>
									<string>^A short convulsion sweeps through your body as \w+ wracks your (sanguine|melancholic|phlegmatic|choleric) and (sanguine|melancholic|phlegmatic|choleric) humours\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>bleeding</name>
								<script>--if target:title() == matches[2]  or #gmcp.Room.Players &lt; 3 then
 set_class("alchemist")
--end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A low growl echoes from a diminutive homunculus resembling (\w+)('|'s) throat, and blood begins flowing from your nose\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>innundated phlegmatic</name>
								<script> 
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ffffff</mFgColor>
								<mBgColor>#000000</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Your surroundings swim as you feel slowed in mind and body.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>innundated sanguine</name>
								<script>set_class("alchemist")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ffffff</mFgColor>
								<mBgColor>#000000</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Horrifyingly, blood begins to seep from your eyes, ears, and nose.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>innundated choleric</name>
								<script>set_class("alchemist")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Sudden pain radiates throughout your body.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>innundated melancholic</name>
								<script>set_class("alchemist")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ffffff</mFgColor>
								<mBgColor>#000000</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You feel your mind wander as a sense of mental weakness settles in.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>corruption +</name>
								<script>set_class("alchemist")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A diminutive homunculus resembling (\w+) stares intendedly at you, its eyes flashing a deep blue. A strange feeling spreads through your body as your \w+ and \w+ humours become corrupted\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>throat / shriek</name>
								<script>--if target:title() == matches[2]  or #gmcp.Room.Players &lt; 3 then
 set_class("alchemist")
--end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A diminutive homunculus resembling (\w+) turns its head towards you, its jaws opening wider than what seems possible\. The homunculus stares intently at you and lets out an ear-piercing shriek that disrupts your thoughts\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>alchemist tick</name>
								<script>herb_balance_increase = true</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Struggling to process edible curatives.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>corruption -</name>
								<script>set_class("alchemist")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>The corruption of your humours fades.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>silver</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) illuminates you with a radiant light\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>apostate attacks</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>stain</name>
								<script>--if target:title() == matches[2] then
 set_class("apostate")
--end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^With a snarl, (\w+)('|'s) Baalzadeen opens its mouth and spews a foul black liquid all over you\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>daegger hit</name>
								<script>set_class("alchemist")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>The whirling daegger plunges into your flesh.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>evil eye</name>
								<script>--if target:title() == matches[2] then
 set_class("apostate")
--end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) stares at you, giving you the evil eye\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>daegger hit</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>The whirling daegger plunges into your flesh.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>daegger strip rebounding</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>The daegger cuts through your skullcap-formed aura.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>fear</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>The Baalzadeen's terrible gaze turns to you, and utter terror floods your soul.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>balzaadeen def strip</name>
								<script>--if target:title() == matches[3] then
 set_class("apostate")
--end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Your (.+) defence has been stripped by (\w+)('|'s) Baalzadeen\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>balzadeen sap</name>
								<script>--if target:title() == matches[2] then
 set_class("apostate")
--end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+)('|'s) Baalzadeen casts a piercing glance at you\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>blackwind</name>
								<script>--if target:title() == matches[2] then
	cecho("&lt;red&gt;==========================")
	cecho("&lt;red&gt;   STARTED BLACKWIND!!!")
	cecho("&lt;red&gt;==========================")
  set_class("apostate")
--end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Tendrils of black vapour begin to whip about (\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>bard attacks</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Jab</name>
								<script>--Nehmrah viciously jabs a Soulpiercer into your right leg.</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Bard Jab 1</name>
									<script>local weapons = {"Soulpiercer", "Eagle's Scream","rapier"}

for i in pairs(weapons) do
 if string.find(matches[3], weapons[i]) then
  if target:title() == matches[2] or #gmcp.Room.Players &lt; 3 then
   set_class("bard")
  end
 end
end

</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>1</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) viciously \w+ ([^\.]+) into you\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Bard Jab 2</name>
									<script>local weapons = {"Soulpiercer", "Eagle's Scream","rapier"}

for i in pairs(weapons) do
 if string.find(matches[3], weapons[i]) then
  if target:title() == matches[2] or #gmcp.Room.Players &lt; 3 then
   set_class("bard")
  end
 end
end

</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>1</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Lightning-quick, (\w+) \w+ you with ([^\.]+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Bard Slash 1</name>
									<script>local weapons = {"Soulpiercer", "Eagle's Scream","rapier"}

for i in pairs(weapons) do
 if string.find(matches[3], weapons[i]) then
  if target:title() == matches[2] or #gmcp.Room.Players &lt; 3 then
   set_class("bard")
  end
 end
end

</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>1</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) slashes into you with a ([^\.]+)\!$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Bard Slash 2</name>
									<script>local weapons = {"Soulpiercer", "Eagle's Scream","rapier"}

for i in pairs(weapons) do
 if string.find(matches[3], weapons[i]) then
  if target:title() == matches[2] or #gmcp.Room.Players &lt; 3 then
   set_class("bard")
  end
 end
end

</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>1</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) swings ([^\.]+) at you with all (\w+) might\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>contradanse</name>
								<script>if #gmcp.Room.Players &lt; 3 then 
 set_class("bard")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>The Contradanse melody swells sharply in your ear with a discombobulating sonic burst.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>acciaccatura</name>
								<script>if target:title() == matches[2]  or #gmcp.Room.Players &lt; 3 then
 set_class("bard")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A bell-like tone rings out from (\w+)('|'s) rapier, echoed by the sound of cracking bone as your (right|left) (leg|arm) snaps painfully\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>death from above</name>
								<script>if target:title() == matches[2]  or #gmcp.Room.Players &lt; 3 then
 set_class("bard")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You're knocked to the ground by the impact of (\w+)('|'s) feet\. Your surprise is quickly supplanted by pain as s?he skewers you like a wild boar\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>aura bless</name>
								<script>if target:title() == matches[2]  or #gmcp.Room.Players &lt; 3 then
 set_class("bard")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) lightly strikes the side of your head with (\w+) rapier, restoring your hearing\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>fugue</name>
								<script>if target:title() == matches[2] or #gmcp.Room.Players &lt; 3  then
 set_class("bard")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Confidence drains from you, replaced by fear, as (\w+) weaves a counterpoint between instrument and voice aimed at you\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>def strip</name>
								<script>if target:title() == matches[2]  or #gmcp.Room.Players &lt; 3 then
 set_class("bard")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) sings a sonorous chant at you, stripping your (.+) defence\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>tremolo</name>
								<script>if target:title() == matches[2]  or #gmcp.Room.Players &lt; 3 then
 set_class("bard")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Using a heavy tremolo (\w+) crushes your (right|left) leg\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>tremolo already broken</name>
								<script>if target:title() == matches[2] then
 set_class("bard")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Using a heavy tremolo (\w+) brutally punishes your already shattered (left|right) leg\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>vibrato</name>
								<script>if target:title() == matches[2] or #gmcp.Room.Players &lt; 3  then
 set_class("bard")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^With a trilling vibrato (\w+) shatters your (right|left) arm\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>vibrato already broken</name>
								<script>if target:title() == matches[2]  or #gmcp.Room.Players &lt; 3 then
 set_class("bard")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^With a trilling vibrato (\w+) attacks your broken (left|right) arm causing you to scream in pain\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>vibrato break</name>
								<script>if target:title() == matches[2]  or #gmcp.Room.Players &lt; 3 then
 set_class("bard")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>1</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^With a trilling vibrato ([A-Z][a-z]+) attacks your broken (left|right) arm causing you to scream in pain\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>arm break</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>1</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Your (left|right) arm is greatly damaged from the beating\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>prompt</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>1</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string></string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>7</integer>
									</regexCodePropertyList>
								</Trigger>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>qasida</name>
								<script>if target:title() == matches[2]  or #gmcp.Room.Players &lt; 3 then
 set_class("bard")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^With a characteristic Jaziran trill, (\w+) sings a qasida of asceticism to you\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>clumsiness</name>
								<script>if target:title() == matches[2]  or #gmcp.Room.Players &lt; 3 then
 set_class("bard")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You feel suddenly clumsy beside the graceful maqam of el'Jazira that (\w+) sings at you\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>clumsiness songbird</name>
								<script>if target:title() == matches[2]  or #gmcp.Room.Players &lt; 3 then
 set_class("bard")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The songbird upon (\w+)('|'s) shoulder sings a graceful maqam of el'Jazira at you, and you feel suddenly clumsy in comparison\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>epilepsy</name>
								<script>if target:title() == matches[2]  or #gmcp.Room.Players &lt; 3 then
 set_class("bard")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Your mind is disrupted by the irritating ditty (\w+) sings at you\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>epilepsy songbird</name>
								<script>if target:title() == matches[2]  or #gmcp.Room.Players &lt; 3 then
 set_class("bard")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The songbird upon (\w+)('|'s) shoulder twitters an irritating ditty at you, disrupting your mind\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>confusion</name>
								<script>if target:title() == matches[2]  or #gmcp.Room.Players &lt; 3 then
 set_class("bard")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) recites an obscure, confusing Kamleikan haiku to you\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>confusion songbird</name>
								<script>if target:title() == matches[2]  or #gmcp.Room.Players &lt; 3 then
 set_class("bard")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The songbird upon (\w+)('|'s) shoulder perfectly mimics the recitation of an obscure, confusing Kamleikan haiku to you\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>noise</name>
								<script>if target:title() == matches[2]  or #gmcp.Room.Players &lt; 3 then
 set_class("bard")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) belts out a meaningless screech of varying pitch at you\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>cancelled tumble</name>
									<script>highlightline(matches[2])</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>The discordant racket of the song disrupts your concentration, ruining your movement attempt.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>generosity</name>
								<script>if target:title() == matches[2]  or #gmcp.Room.Players &lt; 3 then
 set_class("bard")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) chants 'GIMMEGIMME' at you and you begin to feel quite generous\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>impatience</name>
								<script>if target:title() == matches[3] then
 set_class("bard")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) eyes gleaming, (\w+) smiles and quickly sings a jaunty limerick at you\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>vertigo</name>
								<script>if target:title() == matches[2] then
 set_class("bard")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) sings a pastorale of the fields and streams to you\. You feel reluctant to leave the ground\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>vertigo songbird</name>
								<script>if target:title() == matches[2] then
 set_class("bard")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The songbird upon (\w+)('|'s) shoulder sings a pastorale of the fields and streams to you\. You feel reluctant to leave the ground\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>stupidity</name>
								<script>if target:title() == matches[2] then
 set_class("bard")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) sings the Passion of Imithia and your mind glazes with its beauty\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>nausea</name>
								<script>if target:title() == matches[2] then
 set_class("bard")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+)('|'s) poem of gluttony and decay makes you feel ill\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>paranoia</name>
								<script>if target:title() == matches[2] then
 set_class("bard")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^So convincing is (\w+)('|'s) requiem for historical Seleucar that paranoia of the future sets in\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>backflipped</name>
								<script>if target:title() == matches[2] then
 set_class("bard")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) tumbles into a backflip to the up, kicking you in the back of the knee, which gives out and trips you to the ground in the process\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>fear</name>
								<script>if target:title() == matches[2] then
 set_class("bard")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Confidence drains from you, replaced by fear, as ([A-Z][a-z]+) weaves a counterpoint between instrument and voice aimed at you\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>fear songbird</name>
								<script>if target:title() == matches[2] then
 set_class("bard")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The songbird upon (\w+)('|'s) shoulder perfectly mimicks a complex counterpoint between instrument and voice aimed at you, and your confidence drains to be replaced by fear\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>cantata</name>
								<script>if target:title() == matches[2] then
 set_class("bard")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+)('|'s) cantata shatters the defences surrounding you\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>nausea</name>
								<script>if target:title() == matches[2] then
 set_class("bard")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+)('|'s) poem of gluttony and decay makes you feel ill\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>paralysis</name>
								<script>if target:title() == matches[2] then
 set_class("bard")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You are held motionless by (\w+)('|'s) epic tale of Nicator's heroism and bravery\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>paralysis songbird</name>
								<script>if target:title() == matches[2] then
 set_class("bard")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The songbird upon (\w+)('|'s) shoulder perfectly mimics the recitation of an epic tale of Nicator's heroism and bravery to you, holding you motionless\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>anorexia</name>
								<script>if target:title() == matches[2] then
 set_class("bard")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^With a characteristic Jaziran trill, ([A-Z][a-z]+) sings a qasida of asceticism to you\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>anorexia songbird</name>
								<script>if target:title() == matches[2] then
 set_class("bard")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The songbird upon (\w+)('|'s) shoulder sings a qasida of asceticism to you, starting with the characteristic Jaziran trill\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>claustrophobia</name>
								<script>if target:title() == matches[2] then
 set_class("bard")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You feel as if the world has closed in on you after listening to (\w+)('|'s) droning, repetitive isorhythm.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>claustrophobia songbird</name>
								<script>if target:title() == matches[2] then
 set_class("bard")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The songbird upon (\w+)('|'s) shoulder launches into a droning song. You feel as if the world has closed in on you after listening to \w+('|'s) repetitive isorhythm.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>aria self</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Your voice rises to the heavens with your instrument as you sing an Aria of healing to yourself. </string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>aural bless self</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You lightly strike the side of yourself's head with your rapier.</string>
									<string>You take out some salve and quickly rub it on your ears.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>blademaster attacks</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>icing</name>
								<script>if target:title() == matches[2] then
 set_class("blademaster")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Icy vapour escapes from (\w+)'s clenched fist as s?he aims a blow towards you\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>A thin rime of ice encases your body, numbing your extremities.</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>A thin rime of ice encases your body, numbing your extremities.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>burning</name>
								<script>if target:title() == matches[2] then
 set_class("blademaster")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Sweltering heat hazes the air as (\w+) lashes at you with a blazing fist\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Crackling flames erupt and surge across your skin in a frenzy.</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Crackling flames erupt and surge across your skin in a frenzy.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>voided</name>
								<script>if target:title() == matches[3] then
 set_class("blademaster")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) eyes dark and expression blank, (\w+) strikes you a hollow blow\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>The emptiness of the void clutches at your soul.</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>The emptiness of the void clutches at your soul.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>galed</name>
								<script>if target:title() == matches[2] then
 set_class("blademaster")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Moving with unpredictable grace, (\w+) sends a dancing blow towards you\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>A sudden phantom wind seizes your mind, blurring the world into a shifting sea.</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>A sudden phantom wind seizes your mind, blurring the world into a shifting sea.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>hamstring</name>
								<script>if target:title() == matches[2] then
 set_class("blademaster")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Ducking behind you, (\w+) strikes at your hamstring with a rigid grip\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>The crippling blow renders your leg insensate.</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>The crippling blow renders your leg insensate.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>pommelstrike</name>
								<script>if target:title() == matches[2] then
 set_class("blademaster")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^As (\w+) draws \w+ \w+ from its scabbard, s?he drives the pommel into your chin\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>strike feet</name>
								<script>if target:title() == matches[2] then
 set_class("blademaster")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) darts to your mount's flank in a rapid dash\. Grabbing your ankle and executing a graceful twist, s?he sends you tumbling from the saddle\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>chill</name>
								<script>if target:title() == matches[2] then
 set_class("blademaster")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Vapourous mist coalesces about (\w+)('|'s) form as the surroundings cool\. Moisture in the air crystallises into tiny shards of ice, which hang, unmoving, until a gesture from (\w+) sends .+ whirling upon a bitter white wind to cut into your flesh\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>pre clot</name>
								<script>if target:title() == matches[2] then
 set_class("blademaster")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You groan in pain as (\w+) twists the blade within your gut\.$</string>
									<string>^As (\w+) shifts the blade transfixing your gut, the loathsome kiss of metal ravages your insides\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>You feel weak and lightheaded.</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You feel weak and lightheaded.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>bleeding</name>
								<script>if target:title() == matches[3] then
 set_class("blademaster")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^With a flourish of (\w+) blade, (\w+) sends a trail of blood arcing through the air\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>limb damage drawslash</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The blade bites deeply into your (.+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>limb damage compass slash</name>
								<script>if target:title() == matches[2] then
 set_class("blademaster")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Whispering a prayer to the \w+ winds, (\w+) draws \w+ \w+ and unleashes a slash towards your (.+)\.$.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>limb damage centerslash</name>
								<script>if target:title() == matches[2] then
 set_class("blademaster")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^In a single motion, (\w+) draws \w+ \w+ from its scabbard and looses a vicious rising slash at your (.+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>limb damage legslash</name>
								<script>if target:title() == matches[3] then
 set_class("blademaster")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^With a smooth lunge to the (left|right), (\w+) draws \w+ \w+ from its scabbard and delivers a powerful slash across your legs\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>limb damage armslash</name>
								<script>if target:title() == matches[3] then
 set_class("blademaster")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Spinning to the (left|right) as s?he draws \w+ \w+ from its sheath, (\w+) delivers a precise slash across your arms\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>slash</name>
								<script>if target:title() == matches[2] then
 set_class("blademaster")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) unleashes a vicious slash towards you before resheathing (\w+) blade, \w+ \w+\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>multislash</name>
								<script>if target:title() == matches[2] then
 set_class("blademaster")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^With masterful technique, (\w+) draws .+ from its scabbard and unleashes three precise strikes towards you\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>armpit</name>
								<script>if target:title() == matches[2] then
 set_class("blademaster")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^With a swift, snaking strike, (\w+) thrusts upwards at your armpit\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>chin</name>
								<script>if target:title() == matches[2] then
 set_class("blademaster")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^As (\w+) draws .+ from its scabbard, s?he drives the pommel into your chin\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>neck</name>
								<script>if target:title() == matches[2] then
 set_class("blademaster")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^With fluid motions of her iron fingers, (\w+) strikes precisely at your neck\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>throat</name>
								<script>if target:title() == matches[2] then
  set_class("blademaster")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^With iron fingers, (\w+) aims a darting strike at your throat\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>retalitory strike</name>
								<script>if target:title() == matches[2] then
 set_class("blademaster")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) pivots on (\w+) heel as (\w+) draws (\w+) blade from its scabbard and unleashes a retaliatory strike at you\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>depthswalker attacks</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Doom</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Boosted Doom w Aeon</name>
									<script>--if target:title() == multimatches[1][2] then
 set_class("depthswalker")
--end

boxDisplay("ALERT "..multimatches[1][2].." is using DOOM on you", "red:white")
boxDisplay("ALERT: &lt;red&gt;DOOM &lt;orange&gt;hitting in 2 seconds!!","red:white")
tempTimer( 1, [[boxDisplay("ALERT: &lt;red&gt;DOOM &lt;orange&gt;hitting in three (1) seconds!!","red:white")]] )</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>3</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) grows very still, his unblinking gaze locking to your own\.$</string>
										<string>^(\w+) grows older before your eyes\.$</string>
										<string>^You know on an instinctive level that if (\w+) is allowed to continue, it shall be your end.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Doom w Aeon</name>
									<script>set_class("depthswalker")

boxDisplay(multimatches[1][2].." is using DOOM on you","red:white")
boxDisplay("ALERT: &lt;white&gt;DOOM &lt;orange&gt;hitting in 4 seconds!","red:white")
tempTimer( 1, [[boxDisplay("ALERT: &lt;white&gt;DOOM &lt;orange&gt;hitting in three (3) seconds!","red:white")]] )
tempTimer( 2, [[boxDisplay("ALERT: &lt;white&gt;DOOM &lt;orange&gt;hitting in two (2) seconds!","red:white")]] )
tempTimer( 3, [[boxDisplay("ALERT: &lt;white&gt;DOOM &lt;orange&gt;hitting in one (1) seconds!","red:white")]] )</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>1</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) grows very still, his unblinking gaze locking to your own\.$</string>
										<string>^You know on an instinctive level that if (\w+) is allowed to continue, it shall be your end\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Doomed - Hit</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>1</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#aa0000</mFgColor>
									<mBgColor>#000000</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^A spiderweb of cracks begins to race across your form. As you open your mouth to scream, grey lightpours forth along with a unearthly keening shriek. The cracks widen, the ineffable glow building until in a single brilliant flash your life is no more\.$</string>
										<string>^You have been slain by (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Boosted Doom w/o Aeon</name>
									<script>set_class("depthswalker")

boxDisplay(multimatches[1][2].." is using DOOM on you", "red:white")
boxDisplay("ALERT: &lt;white&gt;DOOM &lt;orange&gt;hitting in 4 seconds!!")
tempTimer( 1, [[boxDisplay("ALERT: &lt;white&gt;DOOM &lt;orange&gt;hitting in three (3) seconds!", "red:white")]] )
tempTimer( 2, [[boxDisplay("ALERT: &lt;white&gt;DOOM &lt;orange&gt;hitting in two (2) seconds!", "red:white")]] )
tempTimer( 3, [[boxDisplay("ALERT: &lt;white&gt;DOOM &lt;orange&gt;hitting in one (1) seconds!", "red:white")]] )</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>1</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) grows very still, his unblinking gaze locking to your own\.$</string>
										<string>^(\w+) grows older before your eyes\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Doom w/o Aeon</name>
									<script>set_class("depthswalker")

boxDisplay(matches[2].." is using DOOM on you","red:white")
boxDisplay("ALERT: &lt;white&gt;DOOM &lt;orange&gt;hitting in 7 seconds!","red:white")
tempTimer( 4, [[boxDisplay("ALERT: &lt;white&gt;DOOM &lt;orange&gt;hitting in three (3) seconds!","red:white"")]] )
tempTimer( 5, [[boxDisplay("ALERT: &lt;white&gt;DOOM &lt;orange&gt;hitting in two (2) seconds!","red:white")]] )
tempTimer( 6, [[boxDisplay("ALERT: &lt;white&gt;DOOM &lt;orange&gt;hitting in one (1) seconds!","red:white")]] )</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) grows very still, his unblinking gaze locking to your own\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Shadow Attune</name>
								<script>set_class("depthswalker")
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) reaches past you, plunging .* into your shadow\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Shadow Reap</name>
								<script>set_class("depthswalker")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) delivers a lightning-fast strike to you with .*\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Shadow Reaped - Shadow Stolen</name>
								<script>boxDisplay("ALERT: &lt;white&gt;"..multimatches[1][2].." has stolen &lt;orange&gt;your shadow","red:white")
set_class("depthswalker")
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>2</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) delivers a lightning-fast strike to you with .*\.$</string>
									<string>1</string>
									<string>^As the scythe comes away, the writhing figure of your shadow clings to the blade\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>5</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>dragon attacks</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>enmeshment</name>
								<script>if target:title() == matches[2] then
 set_class("dragon")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) turns to fix (\w+) gaze upon you, and you feel your heart increase its palpitations as a low keening echoes from (\w+) throat\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>dragon curse</name>
								<script>if target:title() == matches[2] then
 set_class("dragon")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A heavy burden descends upon your soul as (\w+) lays the ancient Dragoncurse upon you\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>disrupt</name>
								<script>if target:title() == matches[2] then
 set_class("dragon")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+)('|'s) nostrils flare wildly with a great rush of air as (\w+) sinuous body contracts and (\w+) mouth opens wide to emit a rippling, unbroken roar that reverberates through your body\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>blue breathrain</name>
								<script>if target:title() == matches[2] then
 set_class("dragon")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^High above, (\w+) opens (\w+) glistening, tooth-lined maw wide and rains a great tempest of ice down upon you, from which there is no escape or reprieve\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>gust</name>
								<script>if target:title() == matches[2] then
 set_class("dragon")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Drawing an enormous breath, (\w+) exhales, expelling a gale of wind with such force that you are knocked over\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>def strip</name>
								<script>if target:title() == matches[2] then
 set_class("dragon")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+)('|'s) eyes narrow as (\w+) massive jaws yawn open and (\w+) expels a sluggish cloud of \w+\. The nebulous haze clings to you for a moment, and you feel your (.+) defence vanish\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>def strip (dragon two at once)</name>
								<script>if target:title() == matches[2] then
 set_class("dragon")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+)('|'s) eyes narrow as (\w+) massive jaws yawn open and s?he expels a sluggish cloud of \w+\. The nebulous haze clings to you for a moment, and you feel your (.+) and (.+) defences vanish\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>lightning breathstream</name>
								<script>if target:title() == matches[2] then
 set_class("dragon")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A snaking stream of lightning from (\w+)('|'s) maw forks into the room, blasting into you mercilessly\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>ice breathstream</name>
								<script>if target:title() == matches[2] then
 set_class("dragon")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A snaking stream of ice from (\w+)('|'s) maw forks into the room, blasting into you mercilessly\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>epilepsy breathrain</name>
								<script>if target:title() == matches[2] then
 set_class("dragon")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^High above, (\w+) opens (\w+) glistening, tooth-lined maw wide and rains a great tempest of lightning down upon you, from which there is no escape or reprieve\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>ice blast</name>
								<script>if target:title() == matches[3] then
 set_class("dragon")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Opening (\w+) massive maw, (\w+) throws (\w+) head forward and blasts wave after wave of deadly, all-consuming cold at you\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>limb damage</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) lunges forward with long, flashing claws extended, tearing down to the bones of your .+?\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>tailsweep</name>
								<script>if target:title() == matches[2] then
 set_class("dragon")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You are knocked forcefully off your feet by the impact of (\w+)('|'s) huge tail\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>bite</name>
								<script>if target:title() == matches[2] then
 set_class("dragon")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) snaps (\w+) massive jaws close around you, flinging you effortlessly into the air before catching you with a second powerful bite\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>breathstream highlight</name>
								<script>selectString(line, 1) setBold(true) setItalics(true) bg("medium_violet_red") fg("cyan") resetFormat() deselect()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#00ffff</mFgColor>
								<mBgColor>#aa0000</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Focusing your breath into a concentrated stream, you direct a blast of ice towards .*</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>summon ice</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#55ffff</mFgColor>
								<mBgColor>#000000</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Flaring your wings and head back, you begin summoning forth the icy cold of the pure, endless void into your belly.</string>
									<string>Your ice summoning is complete.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>druid attacks</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>staff swing</name>
								<script>if target:title() == matches[2] then
 set_class("druid")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) swings (\w+) quarterstaff with all (\w+) might, generating a great wind\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>staff swing, targetted</name>
								<script>if target:title() == matches[2] then
 set_class("druid")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) viciously smashes (\w+) quarterstaff into your legs, sending you sprawling\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Reclamation</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Reclaim</name>
									<script>if target:title() == matches[2] then
 set_class("druid")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>(\w+) places one hand to the ground, \w+ eyes fluttering closed as a look of rapture crosses \w+ face\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Expand</name>
									<script>if target:title() == matches[2] then
 set_class("druid")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) places one hand to the ground, a look of rapture crossing \w+ features\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Lash</name>
									<script>if target:title() == matches[2] then
 set_class("druid")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) places one hand to the ground, mouth forming soundless words\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Sleepspores</name>
									<script>--^A cloying, sweet-smelling scent begins to fill the air\.$
if target:title() == multimatches[1][2] then
 set_class("druid")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>1</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) frowns in concentration as the vines about you begin to stir\.$</string>
										<string>^A cloying, sweet-smelling scent begins to fill the air\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Poisonspores</name>
									<script>if target:title() == multimatches[1][2] then
 set_class("druid")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>1</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) frowns in concentration as the vines about you begin to stir\.$</string>
										<string>^A sharp, acrid scent begins to fill the air\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Constrict</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^The vines surrounding you suddenly lash out, whipping about you and entangling you\.$</string>
										<string>^&lt;Free&gt;You twist and turn as you attempt to escape from your entanglement\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Pollen</name>
									<script>if target:title() == multimatches[1][2] then
 set_class("druid")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>1</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) frowns in concentration as the vines about you begin to stir\.$</string>
										<string>^A thick pollen begins to fill the air around you\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Refresh</name>
									<script>--^A sharp, refreshing scent comes to you on the breeze\.$
if target:title() == multimatches[1][2] then
 set_class("druid")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>1</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) frowns in concentration as the vines about you begin to stir\.$</string>
										<string>^A sharp, refreshing scent comes to you on the breeze\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Wrath</name>
									<script>--^The vines all about you suddenly surge forward, tearing free of the ground as they viciously rip at you with their lethal thorns\.$
if target:title() == multimatches[1][2] then
 set_class("druid")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>1</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^A look of resigned acceptance crosses the face of (\w+)\.$</string>
										<string>^The vines all about you suddenly surge forward, tearing free of the ground as .+ viciously rip at you with .+ lethal thorns\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Wyvern</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Wyvern Morph</name>
									<script>if target:title() == matches[2] then
 set_class("druid")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) is surrounded by a shining corona of blinding light and the shimmering image of the Wyvern momentarily overlaps \w+\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Sting</name>
									<script>if target:title() == matches[2] then
 set_class("druid")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^With \w+ deadly tail, (\w+) strikes out at you and stings you\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Summon Fire</name>
									<script>if target:title() == matches[2] then
 set_class("druid")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) takes a deep breath, \w+ face slightly flushed\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Ignite</name>
									<script>if target:title() == matches[2] then
 set_class("druid")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) draws back and lets out a thunderous roar\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Flame</name>
									<script>if target:title() == matches[2] then
 set_class("druid")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) exhales a scorching blast of flame in your direction\!$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Incinerate</name>
									<script>if target:title() == matches[2] then
 set_class("druid")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) inhales deeply, then lets out an earth-shaking roar as a jet of white-hot fire shoots from \w+ nostrils directly at you\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Inferno</name>
									<script>if target:title() == matches[2] then
 set_class("druid")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) unleashes a reckless burst of white-hot flames, creating a roaring inferno about (\w+) person\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Maul</name>
									<script>if target:title() == matches[2] then
 set_class("druid")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) springs forwards onto you and mauls you viciously\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Shred</name>
									<script>if target:title() == matches[2] then
 set_class("druid")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You scream in pain as (\w+) rakes \w+ enormous claws across you\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>wreathe</name>
									<script>if target:title() == matches[2] then
 set_class("druid")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>1</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^The fire on the hands of (\w+) jumps to you, setting you ablaze\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>blaze</name>
									<script>if target:title() == matches[2] then
 set_class("druid")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>1</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^As (\w+) strikes you, you stumble back from the searing heat, tripping to the ground\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Hydra</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Hydra Morph</name>
									<script>if target:title() == matches[2] then
 set_class("druid")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) is surrounded by a shining corona of blinding light and the shimmering image of the Hydra momentarily overlaps \w+\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Bite</name>
									<script>if target:title() == matches[2] then
 set_class("druid")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) sinks \w+ vicious fangs deep into your body, ravaging your flesh\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Hydra Flame</name>
									<script>if target:title() == matches[2] then
 set_class("druid")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Opening \w+ great maw, (\w+) assaults you with a scorching pillar of flame\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Hydra Freeze</name>
									<script>if target:title() == matches[2] then
  set_class("druid")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Opening \w+ great maw, (\w+) envelopes you with a glacial plume of freezing air\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Hydra Snap</name>
									<script>if target:title() == matches[2] then
 set_class("druid")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Quicker than you can follow, one of (\w+)'s serpentine heads darts forward to snap at your flesh\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Hydra Roar</name>
									<script>if target:title() == matches[2] then
  set_class("druid")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^A mighty, bestial roar from (\w+) sends you from your feet with its sheer force\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Hydra Sting</name>
									<script>if target:title() == matches[2] then
 set_class("druid")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^With \w+ deadly tail, (\w+) strikes out at you and stings you\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Hydra Negate</name>
									<script>if target:title() == matches[2] then
 set_class("druid")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) directs \w+ searing gaze towards you\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Shatter</name>
									<script>if target:title() == matches[2] then
 set_class("druid")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+)'s many heads lash out around you, shattering your protective shield\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>jester attacks</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>bop</name>
								<script>if target:title() == matches[2] then
 set_class("jester")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) reaches out and bops you on the nose with (\w+) blackjack\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>fashioning of you (1) jester</name>
								<script>cecho(" &lt;red&gt;SOMEONE'S FASHIONING YOU")
if target:title() == matches[2] then
 set_class("jester")
end

fashions = fashions or 0
fashions = fashions + 1

if fashions == 25 then
  
  cecho("JESTER HAS YOU PREPPED - RUN")

end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^With an appraising glance at you, (\w+) shapes the arms and legs of a rough puppet\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>fashioning of you (2) jester</name>
								<script>cecho(" &lt;red&gt;SOMEONE'S FASHIONING YOU")
if target:title() == matches[2] then
 set_class("jester")
end

fashions = fashions or 0
fashions = fashions + 1

if fashions == 25 then
  
  cecho("JESTER HAS YOU PREPPED - RUN")

end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) glances at you while adding some facial detail to a puppet\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>fashioning of you (3) jester</name>
								<script>cecho(" &lt;red&gt;SOMEONE'S FASHIONING YOU")
if target:title() == matches[2] then
 set_class("jester")
end

fashions = fashions or 0
fashions = fashions + 1

if fashions == 25 then
  
  cecho("JESTER HAS YOU PREPPED - RUN")

end

</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) looks closely at your hands and alters a puppet\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>fashioning of you (4) jester</name>
								<script>cecho(" &lt;red&gt;SOMEONE'S FASHIONING YOU")
if target:title() == matches[2] then
 set_class("jester")
end
fashions = fashions or 0
fashions = fashions + 1

if fashions == 25 then
  
  cecho("JESTER HAS YOU PREPPED - RUN")

end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) looks at your eyes and makes some alterations to (\w+) puppet\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>fashioning of you (5) jester</name>
								<script>cecho(" &lt;red&gt;SOMEONE'S FASHIONING YOU")
if target:title() == matches[2] then
 set_class("jester")
end
fashions = fashions or 0
fashions = fashions + 1

if fashions == 25 then
  
  cecho("JESTER HAS YOU PREPPED - RUN")

end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) looks at your eyes and makes some alterations to (\w+) puppet\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Juggling Start</name>
								<script>
if target:title() == matches[2] then
 set_class("jester")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) begins to juggle (.+)\, (.+)\, and (.+) with \w+ free hand\.$</string>
									<string>^(\w+) begins to juggle (.+) and (.+) with \w+ free hand\.$</string>
									<string>^(\w+) cocks back \w+ arm and throws (.+) at you\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Juggling Hit</name>
								<script>if target:title() == matches[2] then
 set_class("jester")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) cocks back \w+ arm and throws (.+) at you\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>knight attacks</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>dual blunt</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>assault head - mangled</name>
									<script>if target:title() == matches[2] then
 	set_class("")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>10</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) falls upon you with both of (\w+) weapons whirling, viciously assaulting your head\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>serious concussion</name>
										<script>if #gmcp.Room.Players &lt; 3 then 
 	set_class("")
end


</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>Your skull splits and caves in as your head takes serious damage.</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>3</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>mangled head</name>
										<script>setTriggerStayOpen("assault head - mangled", 0)
</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string></string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>7</integer>
										</regexCodePropertyList>
									</Trigger>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>assault head - damaged</name>
									<script>if target:title() == matches[2] then
 	set_class("")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>2</conditonLineDelta>
									<mStayOpen>3</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) falls upon you with both of (\w+) weapons whirling, viciously assaulting your head\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>mild head trauma</name>
										<script>if #gmcp.Room.Players &lt; 3 then 
 	set_class("")
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>Your head is greatly damaged from the beating.</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>3</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>damaged head</name>
										<script>if #gmcp.Room.Players &lt; 3 then 
 	set_class("")
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>Your skull splits and caves in as your head takes serious damage.</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>3</integer>
										</regexCodePropertyList>
									</Trigger>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>expend head</name>
									<script>if target:title() == matches[2] then
 	set_class("")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>1</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^([^\.]+) crunches into the side of your head, stunning you\!$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>assault torso</name>
									<script>if target:title() == matches[2] then
 	set_class("")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) falls upon you with both of (\w+) weapons whirling, viciously assaulting your torso\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>assault torso trauma</name>
									<script>if target:title() == matches[2] then
 	set_class("")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) falls upon you with both of (\w+) weapons whirling, viciously assaulting your (.+?)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>torso</name>
										<script>if #gmcp.Room.Players &lt; 3 then 
 	set_class("")
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>torso</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>3</integer>
										</regexCodePropertyList>
									</Trigger>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>expend torso</name>
									<script>if #gmcp.Room.Players &lt; 3 then 
 	set_class("")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You feel the beginnings of the aura of rebounding surrounding you shatter under the blow.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>numbedleftarm +</name>
									<script>if #gmcp.Room.Players &lt; 3 then 
 	set_class("")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>1</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Your left arm goes abruptly numb as .+ crunches home\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>numbedrightarm +</name>
									<script>if #gmcp.Room.Players &lt; 3 then 
 	set_class("")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>1</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Your right arm goes abruptly numb as .+ crunches home\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>expend legs</name>
									<script>if #gmcp.Room.Players &lt; 3 then 
 	set_class("")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>The power of the blow sweeps your feet out from under you, and you tumble to the ground.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>expend arms</name>
									<script>if #gmcp.Room.Players &lt; 3 then 
 	set_class("")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Your (right|left) arm goes abruptly numb as ([^\.]+) crunches home\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>fracture shield</name>
									<script>if target:title() == matches[2] then
 	set_class("")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) delivers a single, powerful blow to the magical shield surrounding you, shattering it\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>fracture rebounding</name>
									<script>if target:title() == matches[2] then
 	set_class("")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) delivers a single, powerful blow to the aura of rebounding surrounding you, shattering it\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>dual cutting</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>blackout</name>
									<script>if target:title() == matches[2] then
 set_class("")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Stars explode in front of your eyes as (\w+) brings the flat of .+ down on top of your head\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>lunge</name>
									<script>if target:title() == multimatches[1][2] then
  set_class("")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>1</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) charges in, sword flashing at the ready\.$</string>
										<string>^You writhe and scream as s?he drives the cruel blade deep into your side\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Doubleslash</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList />
									<regexCodePropertyList />
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Doubleslash 1</name>
										<script>local weapons = {"Soulpiercer", "Eagle's Scream","rapier","Scimitar of Eagles"}

for i in pairs(weapons) do
 if not string.find(matches[3], weapons[i]) then
  if target:title() == matches[2] then
   set_class("")
  end
 end
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>1</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^(\w+) viciously \w+ ([^\.]+) into you\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Doubleslash 2</name>
										<script>local weapons = {"Soulpiercer", "Eagle's Scream","rapier"}

for i in pairs(weapons) do
 if not string.find(matches[3], weapons[i]) then
  if target:title() == matches[2] then
   set_class("")
  end
 end
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>1</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^(\w+) slashes into you with a ([^\.]+)\!$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Doubleslash 3</name>
										<script>local weapons = {"Soulpiercer", "Eagle's Scream","rapier","Scimitar of Eagles"}

for i in pairs(weapons) do
 if not string.find(matches[3], weapons[i]) then
  if target:title() == matches[2] then
   set_class("")
  end
 end
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>1</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^(\w+) swings a ([^\.]+) at you with all (\w+) might\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Doubleslash 4</name>
										<script>local weapons = {"Soulpiercer", "Eagle's Scream", "rapier", "Scimitar of Eagles"}
for i in pairs(weapons) do
  if not string.find(matches[3], weapons[i]) then
    if target:title() == matches[2] then
      set_class("")
    end
  end
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>1</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^Lightning-quick, (\w+) \w+ you with a ([^\.]+)\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
								</TriggerGroup>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>sword and shield</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>club</name>
									<script>if target:title() == matches[2] then
 set_class("")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) brings (\w+) shield crashing down onto your sternum, stunning you!</string>
										<string>^(\w+) spins in a quick circle, using the momentum to savagely strike your chin with the edge of .+?\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>shield strike high</name>
									<script>if target:title() == matches[2] then
 set_class("")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) spins in a quick circle, using the momentum to savagely strike your chin with the edge of .+?\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>smash high (mental)</name>
									<script>if target:title() == matches[2] then
 set_class("")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) swings (\w+) shield around, smashing your temple with a backhanded blow\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>smash mid</name>
									<script>if #gmcp.Room.Players &lt; 3 then 
 set_class("")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your muscles lock in painful contractions in reaction to the blow.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>smash low (clumsy)</name>
									<script>if #gmcp.Room.Players &lt; 3 then 
 set_class("")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You stumble clumsily off balance as the shield slams into your legs.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>drive (asthma)</name>
									<script>if target:title() == matches[2] then
 set_class("")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) drives the edge of (\w+) shield into your throat, cutting off your air supply\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>trip (prone)</name>
									<script>if target:title() == matches[2] then
 set_class("")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) ducks low and smashes (\w+) shield into your knees, causing .+ to buckle underneath you\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>shieldstrike mid (sensi)</name>
									<script>if target:title() == matches[2] then
 set_class("")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) draws .+ back, then lunges forward with a savage strike to your ribs\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>shieldstrike low (prone)</name>
									<script>if target:title() == matches[2] then
 set_class("")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) lunges downward, slamming the edge of .+ into your shins\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>two hander</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>overhand</name>
									<script>if target:title() == matches[2] then
 set_class("")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) brings .+ down upon you with a brutal overhand blow\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>underhand</name>
									<script>if target:title() == matches[2] then
 set_class("")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) explodes upward from a low crouch, driving .+ toward your torso\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>hew</name>
									<script>if target:title() == matches[2] then
 set_class("")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) unleashes a terrible blow at your (right|left) (arm|leg) with .+\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>pulverise</name>
									<script>if target:title() == matches[2] then
 set_class("")
end
</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) comes around with a terrible swing of .+ toward your (left|right) (arm|leg)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>carve</name>
									<script>if target:title() == matches[2] then
 set_class("")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) brings .+ down in a single diagonal stroke, carving cleanly through your (aura of rebounding|magical shield)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>splinter</name>
									<script>if target:title() == matches[2] then
 set_class("")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) whirls .+ over (\w+) head, before bringing it down upon your (aura of rebounding|magical shield), shattering it instantly\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Upset (prone)</name>
									<script>if target:title() == matches[2] then
  set_class("")
end
</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) drops into a low crouch, sweeping .+ beneath your guard and tangling it with your legs\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>devastate 1</name>
									<script>if target:title() == matches[2] then
  set_class("")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) draws back .+, then unleashes a precise blow that smashes into your (legs|arms) with bone cracking force\.$</string>
										<string>^(\w+) launches a devastating slash at your already injured (arms|legs), (\w+) blade cleaving to the bone\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>devastate 2</name>
									<script>if target:title() == matches[2] then
 set_class("")
end
</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) aims a devastating blow with .+ at your already injured (legs|arms)\.$</string>
										<string>^(\w+) whips .+ in a savage arc, cleaving at your (arms|legs)\.$</string>
										<string>^(\w+) brings .+ whirling about to cleave deeply into your already damaged (arms|legs)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>devastate 3</name>
									<script>if target:title() == matches[2] then
 set_class("")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) unleashes a bone crushing blow with .+ at your (legs|arms), pulverising meat and bone in a single strike\.$</string>
										<string>^With calculated precision, (\w+) unleashes a mighty blow at your (arms|legs), shattering bone and pulping flesh\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>skullfractures -</name>
									<script>if #gmcp.Room.Players &lt; 3 then 
 set_class("")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>The pain in your head lessens somewhat.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>torntendons -</name>
									<script>if #gmcp.Room.Players &lt; 3 then 
 set_class("")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>The agonising pain in your lower legs recedes somewhat.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>wristfractures -</name>
									<script>if #gmcp.Room.Players &lt; 3 then 
 set_class("")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>The dull ache in your arms subsides somewhat.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>cracked ribs -</name>
									<script>
if target:title() == matches[2] then
 set_class("")
end


</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>It becomes somewhat easier to draw breath.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>cracked ribs cured +</name>
									<script>
if target:title() == matches[2] then
 set_class("")
end
</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You can breathe easily once again.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>skullfractures cured +</name>
									<script>if #gmcp.Room.Players &lt; 3 then 
 set_class("")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>The pounding in your head disappears.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>wristfractures cured +</name>
									<script>if #gmcp.Room.Players &lt; 3 then 
 set_class("")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You feel bones snapping back into place in your arms.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>torntendons cured +</name>
									<script>if #gmcp.Room.Players &lt; 3 then 
 set_class("")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>The burning in your lower legs fades away.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>battlefury focus precision</name>
									<script>if target:title() == matches[2] then
  set_class("")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) shifts into a more aggressive stance\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>battlefury focus speed</name>
									<script>if target:title() == matches[2] then
 set_class("")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^An expression of calculated focus crosses the face of (\w+), and (\w+) shifts (\w+) feet slightly wider apart\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Apply elixir</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>1</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You take some elixir</string>
										<string>1</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>2</integer>
										<integer>5</integer>
									</regexCodePropertyList>
									<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>skullfractures apply</name>
										<script>sethealthaffs=1</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>The pain in your head lessens somewhat.</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>3</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>skullfractures cured</name>
										<script>mystackableaffs.skullfractures = 0
--sethealthaffs=1</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>The pounding in your head disappears.</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>3</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>crackedribs apply</name>
										<script>sethealthaffs=1</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>It becomes somewhat easier to draw breath.</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>3</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>crackedribs cured</name>
										<script>mystackableaffs.crackedribs = 0
--sethealthaffs=1</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>You can breathe easily once again.</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>3</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>wristfractures apply</name>
										<script>sethealthaffs=1</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>The dull ache in your arms subsides somewhat.</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>3</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>wristfractures cured</name>
										<script>mystackableaffs.wristfractures = 0
sethealthaffs=1</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>You feel bones snapping back into place in your arms.</string>
											<string>^(\w+) launches a devastating slash at your already injured arms</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>3</integer>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>torntendons apply</name>
										<script>sethealthaffs=1</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>The agonising pain in your lower legs recedes somewhat.</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>3</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>torntendons cured</name>
										<script>mystackableaffs.torntendons = 0
sethealthaffs=1</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>The burning in your lower legs fades away.</string>
											<string>^(\w+) launches a devastating slash at your already injured legs</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>3</integer>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
								</Trigger>
								<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>battlefury precision</name>
									<script>hisbattlefury = "precision"
sethealthaffs=1
</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) shifts into a more aggressive stance.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>battlefury speed</name>
									<script>hisbattlefury = "speed"
sethealthaffs=1</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^An expression of calculated focus crosses the face of (\w+), and (\w+) shifts (\w+) feet slightly wider apart.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Hew/pulverise arms</name>
									<script>sethealthaffs=1</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>A sharp spike of pain lances down your left arm as the blade impacts your wrist.</string>
										<string>A sharp spike of pain lances down your right arm as the blade impacts your wrist.</string>
										<string>You feel something snap in your left arm as the hammer smashes home.</string>
										<string>You feel something snap in your right arm as the hammer smashes home.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
										<integer>3</integer>
										<integer>3</integer>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Hew/pulverise legs</name>
									<script>sethealthaffs=1</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>As the blade bites into your lower left leg, it traces a line of agonising pain.</string>
										<string>As the blade bites into your lower right leg, it traces a line of agonising pain.</string>
										<string>Your leg almost gives out as the hammer crunches brutally into your ankle.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
										<integer>3</integer>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Overhand aff</name>
									<script>sethealthaffs=1</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>As the blade slams into the side of your head, you feel the unmistakable sensation of bones cracking.</string>
										<string>You feel bones grating together as the hammer catches you a savage blow to the head.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Underhand aff</name>
									<script>sethealthaffs=1</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Lances of pain radiate from your chest as the blade smashes into your ribs.</string>
										<string>The breath is savagely driven from your lungs as the hammer crunches into your side.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>healthaffsabove</name>
									<script>if matches[2]~=healthaffs then
  sethealthaffs=1
else
  sethealthaffs=0
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Will cure health based afflictions above (\d+)%.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>devastate limbs</name>
									<script>if matches[3] =="legs" then
  torntendons_cured()
elseif matches[3]=="arms" then
  wristfractures_cured()
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) launches a devastating slash at your already injured (\w+), (\w+) blade cleaving to the bone.</string>
										<string>^With calculated precision, (\w+) unleashes a mighty blow at your (\w+), shattering bone and pulping flesh.$</string>
										<string>^(\w+) whips a .+ in a savage arc, cleaving at your (\w+).$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>elixir balance</name>
									<script>sethealthaffs=1</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You may drink another health or mana elixir.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>magi attacks</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>smash</name>
								<script>if #gmcp.Room.Players &lt; 3 then 
 set_class("magi")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^With efficient, precise motions a crystalline golem latches onto your (left|right) (arm|leg), before giving a vicious twist\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>dehydrate +</name>
								<script>if #gmcp.Room.Players &lt; 3 then 
 set_class("magi")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#550000</mFgColor>
								<mBgColor>#ff0000</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(You feel your skin crack and dry as a crystalline golem points a single appendage at you.)$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>hypothermia +</name>
								<script>if #gmcp.Room.Players &lt; 3 then 
 set_class("magi")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#00ffff</mFgColor>
								<mBgColor>#0000ff</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(As a crystalline golem blasts your already frozen form with icy water, you feel the scant remnants of stored body heat stolen away.)$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>burning stack cure</name>
								<script>if #gmcp.Room.Players &lt; 3 and failsafe then 
  set_class("magi")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>The fires consuming you diminish somewhat.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>burning stack</name>
								<script>if #gmcp.Room.Players &lt; 3 and failsafe then 
  set_class("magi")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>A dim red glow emanates from the heart of a crystalline golem moments before flames spontaneously ignite all across your body.</string>
									<string>The firestorm roars all about you, searing your flesh.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>burning out</name>
								<script>if #gmcp.Room.Players &lt; 3 and failsafe then 
 set_class("magi")
end

if table.contains(myaffs, "ablaze") then
  removeElement(myaffs, "ablaze")
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>The raging fire about your skin goes out.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>scorch</name>
								<script>if #gmcp.Room.Players &lt; 3 then 
 set_class("magi")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>A dim red glow emanates from the heart of a crystalline golem moments before flames spontaneously ignite all across your body.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>scalded +</name>
								<script>if #gmcp.Room.Players &lt; 3 then 
  set_class("magi")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Horrifying pain overcomes you as a crystalline golem sprays a stream of super-heated steam directly into your face, scalding your throat and searing your skin.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>pummel</name>
								<script>if #gmcp.Room.Players &lt; 3 then 
  set_class("magi")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>With brutal efficiency, a crystalline golem rains savage blows down upon your frozen body.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>timeflux +</name>
								<script>if #gmcp.Room.Players &lt; 3 then 
 set_class("magi")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>As a crystalline golem begins to pulse with a strange inner glow, you feel suddenly sluggish and unsteady.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>cata</name>
								<script>cecho("&lt;red&gt; GETTING CATA - MOVE 4 ROOMS AWAY")
if #gmcp.Room.Players &lt; 3 then 
 set_class("magi")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) points (\w+) staff at you, and a bolt of lightning cascades out and roars, screaming, into your body\.$ </string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>silence</name>
								<script>if #gmcp.Room.Players &lt; 3 then 
 set_class("magi")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#55ffff</mFgColor>
								<mBgColor>#ff0000</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(Silence)</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>reverb</name>
								<script>if #gmcp.Room.Players &lt; 3 then 
 set_class("magi")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#aa007f</mFgColor>
								<mBgColor>#55ff7f</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(Reverberation)</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>fumes</name>
								<script>if #gmcp.Room.Players &lt; 3 and failsafe then 
 set_class("magi")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff00ff</mFgColor>
								<mBgColor>#aa0000</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string> A stinking noxious cloud floats here.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>monk attacks</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>kai cripple</name>
								<script>if target:title() == matches[2] then
 set_class("monk")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Blue light crackles forth from (\w+)('|'s) palms, striking you down and snapping your puny limbs\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>choke name</name>
								<script>if target:title() == matches[2] then
  set_class("monk")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^As the force subsides, you struggle to shake the smirking visage of (\w+) from your mind\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>enfeeble</name>
								<script>if target:title() == matches[2] then
 set_class("monk")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You feel your body and mind ripped apart as you are enfeebled by (\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>JPK</name>
								<script>if target:title() == matches[2] then
 set_class("monk")
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) slams into you, knocking you off your feet and stunning you!$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>prone</name>
								<script>if target:title() == matches[2] then
  set_class("monk")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) dodges nimbly to the side and trips you to the floor\.$</string>
									<string>^(\w+) knocks your legs out from under you and sends you sprawling to the floor\.$</string>
									<string>^(\w+) moves in and delivers a precision strike to your neck as you attack\.$</string>
									<string>^(\w+) violently grabs your already damaged \w+ \w+, wrenches you off balance, then throws you violently to the ground\.$</string>
									<string>^(\w+) steps into the attack, grabs your arm, and throws you violently to the ground\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>limb damage</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) connects to the (.+)\!$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>roundhouse</name>
								<script>if target:title() == matches[2] then
  set_class("monk")
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) twists (\w+) torso and sends a roundhouse towards you\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>guarding</name>
								<script>if target:title() == matches[2] then
  set_class("monk")
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) moves into your attack, knocking your blow aside before viciously countering with a strike to your head\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>deadening</name>
								<script>if target:title() == matches[2] then
  set_class("monk")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You feel a deadening pall overcome your mind, put there by (\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>disrupt</name>
								<script>if target:title() == matches[2] then
 set_class("monk")
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You feel (\w+)('|'s) mind attacking yours from all sides, and you lose your mental equilibrium\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>mind batter</name>
								<script>if target:title() == matches[2] then
 set_class("monk")
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You reel as your mind is viciously battered by a mental assault from (\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>undeaf jab</name>
								<script>if target:title() == matches[2] then
 set_class("monk")
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) expertly jabs .+ fingers into the nerve cluster behind one of your ears\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>occultist attacks</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>vision/speak unnamable</name>
								<script>if target:title() == matches[2] or #gmcp.Room.Players &lt; 3 then
  set_class("occultist")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) glows with an emerald hue and snaps .* fingers at you. Unable to resist the insistent intent to get your attention, your eyes flicker open and head snaps up\.*</string>
									<string>^(\w+) speaks something in an unknown and impossible language. Unable to process the alien images these words induce, your thoughts become jumbled\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>track occultist backup</name>
								<script>if target:title() == matches[2] then
 set_class("occultist")
elseif matches[2] == nil then
 set_class("occultist")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>A bloodleech leaps at you,</string>
									<string>^(\w+) glows with an emerald hue and snaps .* fingers at you\.$</string>
									<string>Unable to resist the insistent intent to get your attention, your eyes flicker open and head snaps up.</string>
									<string>The muttering emanating from the sycophant increases to a sudden crescendo, and your head begins to spin.</string>
									<string>Your mind feels suddenly vacant as a flaming manticore levels its gaze at you.</string>
									<string>^(\w+) gestures sharply in your direction, and a mass of green slime flows up and over you, coating your skin\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>2</integer>
									<integer>1</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>track occultist</name>
								<script>if target:title() == matches[2] or #gmcp.Room.Players &lt; 3 then
  set_class("occultist")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) glows with an emerald hue and snaps .* fingers at you\.$</string>
									<string>^(\w+) gestures sharply in your direction, and a mass of green slime flows up and over you, coating your skin\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>instill</name>
								<script>if target:title() == matches[2] or #gmcp.Room.Players &lt; 3 then
 set_class("occultist")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) makes a quick, sharp gesture toward you\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>pinchaura</name>
								<script>if target:title() == matches[2] or #gmcp.Room.Players &lt; 3 then
 set_class("occultist")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) makes a sudden, quick gesture in front of you, almost hitting your nose\. (\w+) hand glows with a vibrant violet light before snapping back to (\w+) side\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>madness</name>
								<script>if target:title() == matches[2] or #gmcp.Room.Players &lt; 3 then
 set_class("occultist")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) passes (\w+) hand in front of you\. You feel an invisible claw brush the back of your skull\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>truename</name>
								<script>if target:title() == matches[2] or #gmcp.Room.Players &lt; 3 then
 set_class("occultist")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) draws back with a knowing smirk and utters some alien word that vibrates deep within your bones\. Your mind swirls and body convulses in excruciating pain as your very spirit cries out in agony\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>cadmus</name>
								<script>if target:title() == matches[2] then
 set_class("occultist")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>A bubonis scampers forward and clamps its fangs down upon your ankle, pumping some vile substance into your bloodstream.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>hecate</name>
								<script>if target:title() == matches[2] then
 set_class("occultist")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>A withered crone totters toward you before brushing a single finger against your brow. Your mind explodes into a frenzy of maddened whispering at the contact.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>lovers</name>
								<script>if target:title() == matches[2] or #gmcp.Room.Players &lt; 3 then
 --set_class("occultist")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) throws a Lovers tarot at you and as it strikes true, you fall hopelessly in love with (\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>justice</name>
								<script>if target:title() == matches[2] or #gmcp.Room.Players &lt; 3 then
 --set_class("occultist")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) bows (\w+) head and mutters something, then flings a tarot card at you\. A set of scales appears above your head and one side of the scale quickly descends\. You have a bad feeling about this\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>aeon tarot</name>
								<script>if target:title() == matches[2] or #gmcp.Room.Players &lt; 3 then
 --set_class("occultist")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) stands a tarot on (\w+) open palm, and blows it lightly at you\. Suddenly your movement through the time stream is slowed\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>unnamable</name>
								<script>if target:title() == matches[2] then
 set_class("occultist")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>A sudden sense of wrongness overwhelms you.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Abomination - Start</name>
								<script>if target:title() == matches[2] then
 set_class("occultist")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You feel suddenly exposed, although you are unable to discern quite what has changed.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>priest attacks</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>bedevil</name>
								<script>if target:title() == matches[2] then
 set_class("priest")
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^With a grand gesture of righteous fury, (\w+) bedevils you with (\w+) afflictions\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>def strip</name>
								<script>if target:title() == matches[3] then
 set_class("priest")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Your (.+) defence has been stripped by (\w+)('|'s) guardian angel\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>ablaze</name>
								<script>if target:title() == matches[2] then
 set_class("priest")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+)('|'s) guardian angel's eyes glow like embers as searing heat pours over you, causing you to burst into flames\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>smash</name>
								<script>if target:title() == matches[2] then
 set_class("priest")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) utters a prayer and smites your (left|right) (arm|leg) with</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>sentinel attacks</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>ensnare</name>
								<script>if target:title() == matches[2] or #gmcp.Room.Players &lt; 3 then
 set_class("sentinel")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) flourishes .+? in front of your eyes, mesmerising you\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>slice limb</name>
								<script>if target:title() == matches[2] or #gmcp.Room.Players &lt; 3 then
 set_class("sentinel")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) draws a .+ in an expert lateral slice across your (\w+) (\w+).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>thrust</name>
								<script>if target:title() == matches[2] or #gmcp.Room.Players &lt; 3 then
 set_class("sentinel")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) deftly thrusts .+? into you</string>
									<string>^(\w+) thrusts .+? towards you\.$</string>
									<string>^(\w+) takes a step forward, bringing .+? in for a second quick jab\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>can't ensnare</name>
								<script>boxDisplay(matches[2].." Petrifying you, G.T.F.O and Defup Blindness", "red")
if target==(matches[2]) or #gmcp.Room.Players &lt; 3 then
  set_class("sentinel")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) expertly flourishes .+ in front of your face.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>lacerate|scythe</name>
								<script>if target:title() == matches[2] or #gmcp.Room.Players &lt; 3 then
 set_class("sentinel")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) viciously lacerates you with .+?\.$</string>
									<string>^(\w+) whips .+? in a swift motion toward you, scything through your (.+?) defence\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>rattle</name>
								<script>if target:title() == matches[2] or #gmcp.Room.Players &lt; 3 then
 set_class("sentinel")
end </script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Your world becomes nothing but stars as the haft of .+? slams into the side of your head, courtesy of (\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>unconcious</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your legs collapse from under you and consciousness leaves you as you pass out.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>truss</name>
								<script>if target:title() == matches[2] or #gmcp.Room.Players &lt; 3 then
 set_class("sentinel")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) quickly trusses you up\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>skullbash</name>
								<script>if target:title() == matches[2] or #gmcp.Room.Players &lt; 3 then
 set_class("sentinel")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Agony radiates out from the point of impact as (\w+) brings the haft of .+? down upon your head with crushing force\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>gouge</name>
								<script>if target:title() == matches[2] or #gmcp.Room.Players &lt; 3 then
 set_class("sentinel")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) savagely gouges into you with .+?\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>drag</name>
								<script>set_class("sentinel")
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You scrabble futilely at the ground as</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>2</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>wretch</name>
								<script>if target:title() == matches[2] or #gmcp.Room.Players &lt; 3 then
  set_class("sentinel")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Terrible pain radiates from the weapon impaling you as (\w+) gives it a violent twist\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>doublestrike</name>
								<script>if target:title() == matches[2] or #gmcp.Room.Players &lt; 3 then
 set_class("sentinel")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) lays open your flesh with an expert lateral slice with .+?\.$</string>
									<string>^Turning with the motion of \w+ strike, (\w+) comes back around to slam the haft of (\w+) weapon into your temple\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>extirpate</name>
								<script>if target:title() == matches[2] or #gmcp.Room.Players &lt; 3 then
  set_class("sentinel")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) locks (\w+) unnatural gaze to yours, and a terrible pressure begins to build behind your eyes\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>trip</name>
								<script>if target:title() == matches[2] or #gmcp.Room.Players &lt; 3 then
 set_class("sentinel")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) swiftly sweeps your feet out from beneath you with .+ before driving the point of the weapon into your (\w+) leg\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>pounce</name>
								<script>if target:title() == matches[2] or #gmcp.Room.Players &lt; 3 then
 set_class("sentinel")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) pounces on you from an unseen hiding place, knocking you to the ground and tearing at you with teeth and claws\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>thornspray</name>
								<script>if target:title() == matches[2] or #gmcp.Room.Players &lt; 3 then
  set_class("sentinel")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) chants and the room is engulfed in flying thorns, striking you from all directions\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>petrified</name>
								<script>set_class("sentinel")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You have been turned into stone and may not do that.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>handaxe pull</name>
								<script>set_class("sentinel")
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>A large handaxe comes flying into the room, arcs toward you, and carries you away with it!</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>lemming def strip</name>
								<script>set_class("sentinel")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A small brown lemming scurries around you furiously, stripping your (.+) defence\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>tangled trap</name>
								<script>set_class("sentinel")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You spring a trap!! A loop of rope entwines around you, pulling you off your feet and looping around your neck.</string>
									<string>You gasp and choke as you your entanglement impedes your breathing.</string>
									<string>You spring a trap!! A loop of rope entwines around you, pulling you off your feet.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>noose trap</name>
								<script>set_class("sentinel")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You kick and struggle as the life is slowly squeezed out of you.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>woodlore</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>dismounted and prone</name>
									<script>if target:title() == matches[2] or #gmcp.Room.Players &lt; 3 then
 set_class("sentinel")
 mounted=false
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^([A-Z][a-z]+) deftly hooks an? .+ behind your foot and sends you tumbling off an? .+ before driving the point of the weapon into your (\w+) leg\.$</string>
										<string>^([A-Z][a-z]+) swiftly sweeps your feet out from beneath you with an? .+ before driving the point of the weapon into your (\w+) leg\.$</string>
										<string>^([A-Z][a-z]+) pounces on you from an unseen hiding place\, knocking you to the ground and tearing at you with teeth and claws\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>serpent attacks</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>flays</name>
								<script>if target:title() == matches[2] then
 set_class("serpent")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) flays away your aura of rebounding defence\.$</string>
									<string>^(\w+) flays away your speed defence\.$</string>
									<string>^(\w+) flays the sileris coating from you\.$</string>
									<string>^(\w+) flays the quicksilver coating from you\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>snake bite</name>
								<script>if #gmcp.Room.Players &lt; 3 then 
 set_class("serpent")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A (.+?) opens its mouth wide and strikes you in the leg\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>bite</name>
								<script>if target:title() == matches[2] then
	set_class("serpent")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) sinks (\w+) fangs into your body and you wince in pain\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>backstab</name>
								<script>if target:title() == matches[2] then
 set_class("serpent")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) leaps from the shadows and plunges a dagger into your unsuspecting back!$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>bound</name>
								<script>if target:title() == matches[2] then
 set_class("serpent")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) quickly binds up your hands and feet, leaving you helpless\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>shot</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>An arrow flies</string>
									<string>It strikes you, gouging a deep and bloody wound.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>2</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>dispel</name>
								<script>if target:title() == matches[2] then
 set_class("serpent")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) points a finger at you and you feel anti-magic sweep over you\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>doublestab first hit</name>
								<script>if target:title() == matches[2] then
  set_class("serpent")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) quickly pricks you with (\w+) dirk\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>doublestab second hit</name>
								<script>if target:title() == matches[2] then
  set_class("serpent")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Striking like a snake, (\w+) follows the first attack with another.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>shikudo attacks</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Forms</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Tykonos</name>
									<script>if target:title() == matches[2] then
 set_class("shikudo")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) rapidly spins \w+ weapon in a circular pattern, almost too fast for the eye to see, before dropping into a ready stance\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Willow</name>
									<script>if target:title() == matches[2] then
 set_class("shikudo")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) twirls \w+ staff, a look of serene calm overcoming \w+\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Rain</name>
									<script>if target:title() == matches[2] then
 set_class("shikudo")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) drops into a lower stance, \w+ weapon snapping up into an aggressive guard\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Oak</name>
									<script>if target:title() == matches[2] then
 set_class("shikudo")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) rises onto the balls of \w+ feet, a look of grim certainty overcoming \w+ face\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Gaital</name>
									<script>if target:title() == matches[2] then
 set_class("shikudo")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^The eyes of (\w+) fall closed, a look of tranquility coming over \w+\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Maelstrom</name>
									<script>if target:title() == matches[2] then
 set_class("shikudo")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Blue light wreathes itself about (\w+) and \w+ staff\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Shatter</name>
								<script>if target:title() == matches[2] then
  set_class("shikudo")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The end of (\w+)'s staff smashes into your shield, causing it to explode in a shower of translucent shards\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>shaman attacks</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>curse</name>
								<script>if target:title() == matches[2] then
 set_class("shaman")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) points an imperious finger at you\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>tzantza</name>
								<script>if target:title() == matches[2] then
  set_class("shaman")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+)('|'s) eyes flutter and close as s?he begins to rock back and forth, chanting ominously under (\w+) breath\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>arius</name>
								<script>if target:title() == matches[2] then
 set_class("shaman")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The eyes of (\w+) go out of focus for a moment as (\w+) mouth falls wide, a terrible, unearthly sound rippling forth\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>snare</name>
								<script>if target:title() == matches[2] then
 set_class("shaman")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) grows very still for a moment, before (\w+) eyes snap wide open and you feel something icy wrap about your limbs, binding you in place\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>fashioning of you (1) shaman</name>
								<script>cecho("&lt;red&gt;SOMEONE'S FASHIONING YOU")
if target:title() == matches[2] then
 set_class("shaman")
end

fashions = fashions + 1

if fashions == 25 then
  
  cecho("SHAMAN HAS YOU PREPPED - RUN")

end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^With an appraising glance at you, (\w+) shapes the arms and legs of a rough doll\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>fashioning of you (2) shaman</name>
								<script>cecho("&lt;red&gt;SOMEONE'S FASHIONING YOU")
if target:title() == matches[2] then
 set_class("shaman")
end


fashions = fashions + 1

if fashions == 25 then
  
  cecho("SHAMAN HAS YOU PREPPED - RUN")

end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) glances at you while adding some facial detail to a doll\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>fashioning of you (3) shaman</name>
								<script>cecho("&lt;red&gt;SOMEONE'S FASHIONING YOU")
if target:title() == matches[2] then
 set_class("shaman")
end


fashions = fashions + 1

if fashions == 25 then
  
  cecho("SHAMAN HAS YOU PREPPED - RUN")

end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) looks closely at your hands and alters a Vodun doll\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>fashioning of you (4) shaman</name>
								<script>cecho("&lt;red&gt;SOMEONE'S FASHIONING YOU")
if target:title() == matches[2] then
 set_class("shaman")
end


fashions = fashions + 1

if fashions == 25 then
  
  cecho("SHAMAN HAS YOU PREPPED - RUN")

end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) looks at your eyes and makes some alterations to (\w+) doll\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>fashioning of you (5) shaman</name>
								<script>cecho("&lt;red&gt;SOMEONE'S FASHIONING YOU")
if target:title() == matches[2] then
 set_class("shaman")
end


fashions = fashions + 1

if fashions == 25 then
  
  cecho("SHAMAN HAS YOU PREPPED - RUN")

end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^With one hand ominously pointed towards you, (\w+) rubs a finger over the heart of a Vodun doll\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>def strip</name>
								<script>if #gmcp.Room.Players &lt; 3 then 
 set_class("shaman")
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You feel your (.+) defence get picked off you somehow\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>def strip</name>
								<script>if #gmcp.Room.Players &lt; 3 then 
 set_class("shaman")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Your (.+) defence is destroyed by an unseen force\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>burning</name>
								<script>if #gmcp.Room.Players &lt; 3 then 
 set_class("shaman")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You feel an evil eye glaring down at you, and suddenly you explode into searing flame!</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>asp</name>
								<script>if target:title() == multimatches[1][2] then
  set_class("shaman")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) points an imperious finger at you\.$</string>
									<string>The knowledge that you've been cursed floods your mind.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>sylvan attacks</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>bolt</name>
								<script>if target:title() == matches[2] then
  set_class("sylvan")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) raises (\w+) hands above (\w+) head, gaze focused intently upon you\. Moments later, a single lightning bolt streaks down from above, slamming into you with an explosion of brilliant power\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>blackout</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>The power of the lightning makes your vision black out.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>electrify</name>
								<script>if target:title() == matches[2] then
 set_class("sylvan")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Sweat breaking out on the forehead of (\w+) is your only warning before a bolt of lightning leaps down from on high, slamming into you and electrifying every nerve in a synchronised wave of agony\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>razorwind</name>
								<script>if target:title() == matches[2] then
 set_class("sylvan")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) thrusts one hand in your direction and a vicious wind is summoned forth, viciously lacerating you\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>cyclone (dizzy)</name>
								<script>if target:title() == matches[2] then
  set_class("sylvan")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^With casual indifference, (\w+) summons forth a terrible cyclone of wind, which picks you up like a leaf and whips you uncontrollably into a spin\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>cyclone (impatience)</name>
								<script>if target:title() == matches[2] then
  set_class("sylvan")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) summons forth a terrible cyclone of wind, picking you up and whipping you violently against all available surfaces until your head spins and your body aches\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>hailstone</name>
								<script>if target:title() == matches[2] then
 set_class("sylvan")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) negligently waves (\w+) hand in your direction, conjuring forth a hailstone which strikes you sharply in the side of the head\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>shockwave</name>
								<script>if target:title() == matches[4] then
 set_class("sylvan")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Drawing (\w+) up to (\w+) full height, (\w+) throws (\w+) arms wide\. The clouds above roil, then bolt after bolt of incandescent lightning falls upon you\. The world becomes nothing but light and pain\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>windwhip</name>
								<script>if target:title() == matches[2] then
 set_class("sylvan")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) gestures sharply in your direction with one hand, and invisible whips viciously lash at you\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>shear</name>
								<script>if target:title() == matches[2] then
 set_class("sylvan")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) summons a blade of condensed air and shears cleanly through the magical shield surrounding you\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>static</name>
								<script>if target:title() == matches[2] then
 set_class("sylvan")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Your body locks in paralysis as a burst of arcane power floods your system, directed by (\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>thunderclap (lost def)</name>
								<script>if target:title() == matches[2] then
 set_class("sylvan")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Your ears are abruptly filled with the shockingly loud clap of nearby thunder, summoned forth by (\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>thunderclap (lost sensitivity)</name>
								<script>if target:title() == matches[2] then
 set_class("sylvan")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^More a physical blow than a simple sound, the shocking thunderclap summoned forth by (\w+) leaves you reeling\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>feedback</name>
								<script>if target:title() == matches[2] then
 set_class("sylvan")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You feel a slight tingle across your skin as (\w+) glances at you, but it soon fades\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>flash (lost blind)</name>
								<script>if target:title() == matches[2] then
 set_class("sylvan")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) clicks (\w+) fingers and a brilliant flash of light bursts forth, restoring your vision\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>flash (transfixed)</name>
								<script>if target:title() == matches[2] then
 set_class("sylvan")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) clicks (\w+) fingers at you and a brilliant flash of light bursts forth, transfixing you with its brilliance\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>waterlord attacks</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>bloodshift</name>
								<script>if target:title() == matches[2] then
 set_class("waterlord")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You feel a horrible burning begin to spread throughout your entire body as the amorphous form of (\w+) becomes as still as a frozen pond\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>blade shield up</name>
								<script>if target:title() == matches[2] then
 set_class("waterlord")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) conjures a blade of ice and drive it straight through the magical shield surrounding you, your protection exploding in a shower of prismatic shards\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>choke</name>
								<script>if target:title() == matches[2] then
 set_class("waterlord")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You double over and hack up water beneath the pitiless gaze of (\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>drench</name>
								<script>if target:title() == matches[2] then
 set_class("waterlord")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A sudden deluge of shockingly cold water drenches you, robbing you of strength by the will of (\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>roil</name>
								<script>if target:title() == matches[2] then
 set_class("waterlord")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A wave of nausea rolls over you as (\w+) casually waves a hand in your direction\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>perspire</name>
								<script>if target:title() == matches[2] then
 set_class("waterlord")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^As a particularly noticeable ripple crosses the surface of (\w+)'s form, you feel sweat breakout across your entire body, coating your skin in a slick substance\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>downpour</name>
								<script>if target:title() == matches[2] then
 set_class("waterlord")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) gives you a contemptuous glare as (\w+) raises (\w+) hands skyward, (\w+) amorphous form rippling\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>torrent</name>
								<script>if target:title() == matches[2] then
 set_class("waterlord")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) sends a concentrated torrent of water at you, though you manage to get your arms up intime to protect yourself from the worst of the onslaught\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>flood</name>
								<script>if target:title() == matches[2] then
 set_class("waterlord")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The amorphous form of (\w+) trembles for a moment, then water bursts up from the ground, rapidly flooding the location\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>rise</name>
								<script>if target:title() == matches[2] then
 set_class("waterlord")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The amorphous form of (\w+) churns as the water level abruptly begins to rise, soon filling the location\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>coldfate</name>
								<script>if target:title() == matches[2] then
 set_class("waterlord")
end
-- cant smoke, drown</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^As the inscrutable gaze of (\w+) fals upon you, the world suddenly seems a much colder, darker place\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>wreck</name>
								<script>if target:title() == matches[2] then
 set_class("waterlord")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) summons forth a spinning cyclone of water, trapping you within and repeatedly dashing you against the unforgiving ground\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>burnstacks</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>burning out</name>
								<script>mystackableaffs.burning=0

if table.contains(myaffs, "ablaze") then
  removeElement(myaffs, "ablaze")
end


</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>The raging fire about your skin goes out.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>burning 1 (diag)</name>
								<script>if not table.contains(myaffs, "ablaze") then
  table.insert(myaffs, "ablaze")
end
mystackableaffs.burning=1</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>ablaze.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>0</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>burning 2 (diag)</name>
								<script>mystackableaffs.burning=2</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>you are severely burned.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>burning 3 (diag)</name>
								<script>mystackableaffs.burning=3</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>you are extremely burned.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>burning 4 (diag)</name>
								<script>mystackableaffs.burning=4</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>your flesh is blackened and charred.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>burning stacks 1</name>
								<script>--mystackableaffs.burning=1</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>A dim red glow emanates from the heart of a crystalline golem moments before flames spontaneously ignite all across your body.</string>
									<string>A fiery efreeti spins into you, causing you to burst into flame.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>burning stacks 2</name>
								<script>mystackableaffs.burning=2</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>The fires consuming your flesh begin to crackle with greater intensity.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>burning stacks 3</name>
								<script>mystackableaffs.burning=3</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Your vision begins to fade with the all-consuming agony of the fires that are consuming you.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>burning stacks 4</name>
								<script>mystackableaffs.burning=4</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Your skin begins to char from the bones as the fires feast upon you.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>burning stacks 5</name>
								<script>mystackableaffs.burning=5</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Your skin runs like wax as it melts from your bones.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>ablaze</name>
								<script>if not table.contains(myaffs, "ablaze") then
  table.insert(myaffs, "ablaze")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Flames lick around you - you are on fire!</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>air lord</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>pressure</name>
								<script>if target:title() == matches[2] then
 set_class("airlord")
end

local templist = {"manaleech", "disloyalty", "deadening", "tension"}
tempcounter = 1

for i = 1, #templist, 1 do
if table.contains(myaffs, templist[i]) then
tempcounter = tempcounter + 1
end
end

if tempcounter &gt; 3 then
tempcounter = 3
end


mystackableaffs.pressure = mystackableaffs.pressure + tempcounter
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^As the dark intent of (\w+) falls upon you, you feel the air surrounding you begin to thrum with tension.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>tension</name>
								<script>if target:title() == matches[2] then
 set_class("airlord")
end

mystackableaffs.pressure = mystackableaffs.pressure + 1
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You feel the air suddenly growing thick around you, your breaths becoming cloying.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>pressure gone</name>
								<script>if target:title() == matches[2] then
 set_class("airlord")
end

mystackableaffs.pressure = 0
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>The oppressive pressure weighing down on you lifts.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>pressure down</name>
								<script>if target:title() == matches[2] then
 set_class("airlord")
end

mystackableaffs.pressure = mystackableaffs.pressure - 1</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>As the pressure around you normalises somewhat, your breath is torn from your lungs.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>earthlord</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>head</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Jhulavdra reaches out and presses a single stone digit to your head, and a sudden tingling overtakes the limb.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>0</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>pipes</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>pipe refill</name>
							<script>refilled_pipe(multimatches[2][2])

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You fill your pipe</string>
								<string>^You fill your pipe with (.+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>smoked pipes</name>
							<script>puff_count(matches[2])
refill_pipes()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You take a long drag of (.+) off your pipe\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="yes" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>pipelist start</name>
							<script>
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>99</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#808000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Status  Pipe         Contents                       Puffs Months</string>
								<string>FG8BG2</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
								<integer>6</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>end (pipelist)</name>
								<script>setTriggerStayOpen("pipelist start", 0)
parse_plist_end()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string></string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>7</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>non empty</name>
								<script>if not pipes then pipes = { refill = 3 } end
parse_plist(matches[2],matches[3],matches[4],matches[5])

</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string> *(artf|out|lit) +pipe(\d+) +(slippery elm|a skullcap flower|a valerian leaf|a pinch of realgar crystals|a pinch of ground cinnabar|a pinch of ground malachite|empty) +(\d+) +(n/a|\d+)</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>retardation</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>retard one</name>
							<script>if not table.contains(myaffs, "retardation") and not table.contains(myaffs, "aeon") then

retard_check_count = retard_check_count or 0
retard_check_count = retard_check_count + 1

if retard_check_count == 3 then
	retard_mode(true)
end

retard_check = retard_check or 0

if retard_check &lt; os.clock() then
	retard_check = os.clock() + 1.5
		send("!")
    send("!")
		send("!")
		
 		--what ! does, is resend the last command sent, so with this, your command will still go through despite of retardation
   
	
			retard_check_count = 0		

end

end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You move sluggishly into action.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>retardation down</name>
							<script>retard_mode(false)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You feel less sluggish all of a sudden.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>retard multi</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>2</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You move sluggishly into action.</string>
								<string>You move sluggishly into action.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>muffle</name>
							<script>retard_mode(false)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You clap your hands and the retardation vibration is dampened.</string>
								<string>You call upon the elements to muffle your crystalline vibrations.</string>
								<string>Turning to a crystalline golem you direct him to project a disruptive tone at a retardation vibration.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>survival</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>swim</name>
							<script>send("queue prepend eqbal swim " .. matches[2]:lower(), false)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^There's water ahead of you. You'll have to SWIM (\w+) to make it through\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>underwater choking</name>
							<script>--if transmutation then
  send("outr calcite")
  send("eat calcite")
--else
  send("outr pear")
  send("eat pear")
--end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You choke as you inhale water.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>endure stop</name>
							<script>endure=false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You cease focussing on driving off attempts to paralyse you.</string>
								<string>You are not currently enduring attempts to paralyse you.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>endure start</name>
							<script>endure=true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You begin focussing on driving off attempts to paralyse you.</string>
								<string>You are already enduring attempts to paralyse you.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>elixirs</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>immunity</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>As the antivenom ravages your system, you feel very unwell.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>immunity sip balance</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your system is able to absorb antidotes once again.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Hobbling</name>
						<script>send("curing predict crippledleftleg")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You slowly hobble</string>
							<string>The shot in your leg slows you as you hobble away.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>predict legs broken</name>
						<script>send("curing predict leftlegbroken")
send("curing predict rightlegbroken")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You slowly hobble (\w+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Pinchaura</name>
						<script>selectString(line,1)
fg("firebrick")
deselect()
tempTimer(2.6, [[send("sip speed")]])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) makes a sudden, quick gesture in front of you, almost hitting your nose. \w+ hand glows with a vibrant violet light before snapping back to \w+ side.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Insomnia</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   ak.currentmana = ak.currentmana - 100
   affstrack.score.insomnia = 0
   ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>([\w'\-]+) clenches [\w'\-]+ fists and grits [\w'\-]+ teeth.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Writhed Bound</name>
						<script>if ak.ai() then return end
--send("outr rope")
if IsTargetted(matches[2]) then
   affstrack.score.bound = 0
   ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>([\w'\-]+) has writhed free of [\w'\-]+ entanglement by ropes.</string>
							<string>^Gritting [\w'\-]+ glistening teeth into a rictus grin, ([\w'\-]+) emits a low rumble as [\w'\-]+ flexes [\w'\-]+ rippling muscles, bursting the bindings that hold [\w'\-]+\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Slime</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   affstrack.score.slime = 0
   ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) finally rids [\w'\-]+ of the slime covering [\w'\-]+\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Pre Apply</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Pre Apply Legs</name>
							<script>mypreapply = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You have inserted the "restoration to legs" cure to the queue.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Pre Apply False</name>
							<script>mypreapply = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The topical remedy dissolves into your skin with no effect.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Force Predict</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Haemo Predict</name>
							<script>if failedClotCount == nil then
  failedClotCount = 1
end
  failedClotCount = failedClotCount + 1
  
  if failedClotCount &gt;=3 then
    send("curing predict haemophilia")
    failedClotCount = 0
  end
  
if not DEBUG_MODE then deleteFull() end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Something interferes with your ability to clot.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Lust</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Lust attempt</name>
							<script>local city = NDB.db[matches[2]:title()].city or "NA"
local color = Settings.NDB.Config[city:lower()].color
  if table.contains(Legacy.Curing.Lust.whiteList, city) then
    --nothing
  elseif table.contains(Legacy.Curing.Lust.whiteList, matches[2]:title()) then
    --nothing
  else
    bigEcho("WE HAVE BEEN LUSTED BY &lt;"..color.."&gt;"..matches[2]:upper().."&lt;gold&gt; REJECTING THEM WHEN WE REGAIN BALANCE!!", "red", "gold")
    sendAll("cq all", "queue addclear freestand reject "..matches[2])
  end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) quickly flings a tarot card at you, and you feel unreasonable lust for (\w+)\.$</string>
								<string>^As your gaze falls upon the depiction, an insatiable lust for the glorious (\w+) comes over you\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>reject lust</name>
							<script>if not table.contains(allylist, matches[2]) then
  send("clearqueue eqbal")
  send("queue addclear eqbal reject "..matches[2])
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) quickly flings a tarot card at you, and you feel unreasonable lust for (\w+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>arena</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>You died</name>
							<script>raiseEvent("characterDeath")
send("def")
send("curingset switch set1")
resetCuringList()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You have been slain by </string>
								<string>You are OUT of the combat free-for-all!</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>won arena</name>
							<script>--raiseEvent("arenaEvent")
arenaEvent()
send("def")
send("curingset switch set1")
resetCuringList()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You have been victorious and leave the Arena in triumph!</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>lost arena</name>
							<script>--raiseEvent("arenaEvent")
arenaEvent()
send("def")
send("curingset switch set1")
resetCuringList()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>2</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You have been defeated and are thrown out of the Arena.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>tattoos</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Tattoo Catch</name>
						<script>local bodyPart = matches[2]
local tattooName = matches[3]
local chargeValue = matches[4]

-- Ensure the tattoos table exists for the given body part
tattoos[bodyPart] = tattoos[bodyPart] or {}

-- Store the tattoo and its charges
tattoos[bodyPart][tattooName] = {
    charges = tonumber(chargeValue) or chargeValue -- Store as a number if possible, otherwise as a string
}
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(Head|Torso|Left arm|Right arm|Left leg|Right leg|Back)\s+(a \w+ tattoo|&lt;empty&gt;)\s+(art|\d+|---|n/a)\s+(Y|N|---)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Inking start</name>
						<script>inking = true
send("curing off")
currentTat = matches[2]</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You gather together the inks that are needed in order to create the (\w+) tattoo\.$</string>
							<string>^You hold up a (\w+) tattoo stencil, checking to ensure that the surface of the ink is immaculate\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Inking stop</name>
						<script>onInkingComplete()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^As the (\w+) tattoo's shape is codified on the .+ of yourself, the last of the ink leaves the air and you pause for a moment to admire your handiwork\.$</string>
							<string>That person has no space for a new tattoo.</string>
							<string>You may only ink up to one starburst on yourself at a time.</string>
							<string>As the inking process is ruined, the ink dissipates into the surrounding air.</string>
							<string>You blow the last tiny flecks of parchment away with a sharp breath</string>
							<string>^As the .+ tattoo's shape is codified on the .+ of \w+, the last of the ink leaves the air and you pause for a moment to admire your handiwork\.$</string>
							<string>^You do not possess the ink that is required to create a \w+ tattoo\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>2</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>vial topper</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Refill vialsssss</name>
						<script>local vialnum = matches[2]
local vialtype = matches[4]
local vialamount = tonumber(matches[6])
if vialamount &lt; 200 then
  send("refill "..vialnum.." with "..vialtype.." from rift")
end
if matches[3] == "the venom" then
  table.remove(crucialVenoms, table.index_of(crucialVenoms, vialtype))
else
  table.remove(crucialVials, table.index_of(crucialVials, vialtype))
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Diamond vial(\d+)\s+(an elixir of|a salve of|a|an|the venom) (\w+) (salve\s+|\s+)(\d+)\s+---$</string>
							<string>^Amethyst vial(\d+)\s+(an elixir of|a salve of|a|an|the venom) (\w+) (salve\s+|\s+)(\d+)\s+---$</string>
							<string>^A glass skull vial(\d+)\s+(an elixir of|a salve of|a|an|the venom) (\w+) (salve\s+|\s+)(\d+)\s+---$</string>
							<string>^Vial(\d+)\s+(an elixir of|a salve of|a|an|the venom) (\w+) (salve\s+|\s+)(\d+)\s+---$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Vial count</name>
						<script>vialcounter = vialcounter + 1
if vialcounter &gt;= 2 then
  disableTrigger("Refill vials")
  if crucialVenoms and next(crucialVenoms) then
    for k, v in pairs(crucialVenoms) do
      cecho("\n&lt;grey&gt;Missing the venom: "..v)
    end
    crucialVenoms = {}
  else
    for k, v in pairs(crucialVials) do
      cecho("\n&lt;grey&gt;Missing the vial: "..v)
    end
    crucialVials = {}
  end
  disableTrigger("Vial count")
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>-------------------------------------------------------------------------------</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Refill vials</name>
						<script>local vials = {"Diamond vial","Amethyst vial","A glass skull vial","Vial"}

for _, vial in ipairs(vials) do

  local vialnum = matches[3]
  local vialtype = matches[5]
  local vialamount = tonumber(matches[7])
  if vialamount &lt; 200 then
    send("refill "..vialnum.." with "..vialtype.." from rift")
  end
  if matches[4] == "the venom" then
    table.remove(crucialVenoms, table.index_of(crucialVenoms, vialtype))
    break
  else
    table.remove(crucialVials, table.index_of(crucialVials, vialtype))
    break
  end
  
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(.*?)(\d+)\s+(an elixir of|a salve of|a|an|the venom)\s*(\w+)\s*(salve\s*|\s*)(\d+)\s+(\d+|---)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>raiding</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>tank</name>
						<script>selectString(line, 1)
setBold(true)
setItalics(true)
fg("orange")
resetFormat()
deselect()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Great waves of heat radiate from a metal tank, a torrent of flames raging within.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>target called</name>
						<script>if matches[2] == raidleader then
  setTarget(matches[3]:title())
end

</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\(Party\)\: (\w+) says, \"Target\: (\w+)\.\"$</string>
							<string>^\(Party\)\: (\w+) says, \"Target (\w+)\.\"$</string>
							<string>^\(Party\)\: (\w+) says, \"TARGET\: (\w+)\.\"$</string>
							<string>^\(Party\)\: (\w+) says, \"TARGET (\w+)\.\"$</string>
							<string>^\(Party\)\: (\w+) says, \"Target\: (\w+)\.\"$</string>
							<string>^\(Party\)\: (\w+) says\, \"Target changed to (\w+)\.\"$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>party aff calls</name>
						<script>local aff = matches[4]
local aff2 = matches[5]
local aff3 = matches[6]
local aff4 = matches[7]

if target:title() == matches[3] then
  if aff4 ~= nil then
    if (aff ~= "paralysis" and aff ~= "impatience") then 
      probabilityTable[string.lower(aff)] = 1
    end
    if (aff2 ~= "paralysis" and aff2 ~= "impatience") then
       probabilityTable[string.lower(aff2)] = 1
    end
    if (aff3 ~= "paralysis" and aff3 ~= "impatience") then
      probabilityTable[string.lower(aff3)] = 1 
    end
    if (aff4 ~= "paralysis" and aff4 ~= "impatience") then 
      probabilityTable[string.lower(aff4)] = 1
    end
  elseif aff3 ~= nil then
    if (aff ~= "paralysis" and aff ~= "impatience") then 
      probabilityTable[string.lower(aff)] = 1
    end
    if (aff2 ~= "paralysis" and aff2 ~= "impatience") then
      probabilityTable[string.lower(aff2)] = 1
    end
    if (aff3 ~= "paralysis" and aff3 ~= "impatience") then
      probabilityTable[string.lower(aff3)] = 1 
    end
  elseif aff2 ~= nil then
    if (aff ~= "paralysis" and aff ~= "impatience") then 
      probabilityTable[string.lower(aff)] = 1
    end
    if (aff2 ~= "paralysis" and aff2 ~= "impatience") then
      probabilityTable[string.lower(aff2)] = 1
    end
  elseif (aff ~= "paralysis" and aff ~= "impatience") then
    probabilityTable[string.lower(aff)] = 1 
  end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\(Party\)\: (\w+) says, \"(\w+) hit with (\w+)\.\"$</string>
							<string>^\(Party\)\: (\w+) says, \"(\w+) afflicted with (\w+)\.\"$</string>
							<string>^\(Party\)\: (\w+) says, \"(\w+) hit with (\w+) (\w+)\.\"$</string>
							<string>^\(Party\)\: (\w+) says, \"(\w+) afflicted with (\w+) (\w+)\.\"$</string>
							<string>^\(Party\)\: (\w+) says, \"(\w+) hit with (\w+) (\w+) (\w+)\.\"$</string>
							<string>^\(Party\)\: (\w+) says, \"(\w+) afflicted with (\w+) (\w+) (\w+)\.\"$</string>
							<string>^\(Party\)\: (\w+) says, \"(\w+) hit with (\w+) (\w+) (\w+) (\w+)\.\"$</string>
							<string>^\(Party\)\: (\w+) says, \"(\w+) afflicted with (\w+) (\w+) (\w+) (\w+)\.\"$</string>
							<string>^\(Party\)\: (\w+) says, \"(\w+)\: (\w+)\.\"$</string>
							<string>^\(Party\)\: (\w+) says, \"(\w+)\: (\w+) (\w+)\.\"$</string>
							<string>^\(Party\)\: (\w+) says, \"(\w+)\: (\w+) (\w+) (\w+)\.\"$</string>
							<string>^\(Party\)\: (\w+) says, \"(\w+)\: (\w+) (\w+) (\w+) (\w+)\.\"$</string>
							<string>^\(Party\)\: (\w+) says, \"Afflicted (\w+)\: (\w+)\.\"$</string>
							<string>^\(Party\)\: (\w+) says, \"Afflicted (\w+)\: (\w+) (\w+)\.\"$</string>
							<string>^\(Party\)\: (\w+) says, \"Afflicted (\w+)\: (\w+) (\w+) (\w+)\.\"$</string>
							<string>^\(Party\)\: (\w+) says, \"Afflicted (\w+)\: (\w+) (\w+) (\w+) (\w+)\.\"$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>tank percent</name>
						<script>send("pt tank at " .. gmcp.Room.Info.name .. " is at " .. matches[2] .. "%")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A metal tank radiating waves of heat is (\d+)% of the way charged towards its next extreme\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>travel</name>
						<script>send("pt TRAVELLED TO " .. matches[2] .. " AT: " .. gmcp.Room.Info.name)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You think of your true love, (\w+), and travel to (\w+).$</string>
							<string>^Reaching out to the darkness surrounding (\w+), you cross the distance in a single step.$</string>
							<string>^Focusing upon a bone phylactery, you link the shadow contained within to that of (\w+) and cross the distance in a single step.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>bursted</name>
						<script>if inaparty() then
  send("pt I bursted.") 
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Your starburst tattoo flares as the world is momentarily tinted red\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>meteor.launched.party.call</name>
						<script>if inaparty() then
  send("pt meteor launched at " ..target)
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You pull back your bow and release a meteor arrow high into the sky\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>meteor.strike.party.call</name>
						<script>if target:title() == matches[2] and inaparty() then
    send("pt Stripped shield from "..target..".")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^In your mind's eye, you see (\w+) crushed by your meteor\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>boomerang</name>
						<script>send("pt BOOMERANGED " .. matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You throw your boomerang out and a few moments later, it returns, dragging (\w+) with it.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>scry for</name>
						<script>mmp.Pathing(matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^An image of .+? appears reflected within the bowl, shifting with the rippling water to display (.+)\.$</string>
							<string>^Tapping into the unfathomable depths of your power, you sense that .+? is at (.+), in .+\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>scry party echo</name>
						<script>send(
  "pt " ..
  multimatches[1][2] ..
  " is at " ..
  multimatches[2][3] ..
  " (" ..
  (mmp.cleanAreaName(multimatches[2][2]) or "unknown area") ..
  ")"
)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You dip your fingers into the cool water of the bowl, willing it to reveal the location of (.+).$</string>
							<string>^An image of (.+) appears reflected within the bowl, shifting with the rippling water to display (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>target order</name>
						<script>if matches[2] == raidleader then
  newtargetlist = string.split(matches[3], ", ")
  for i = 1, #newtargetlist[1], 1 do
    if not (table.contains(enemylist, newtargetlist[i])) then
      table.insert(enemylist, newtargetlist[i])
    end
  end
end
for _, v in pairs(enemylist) do
  send("enemy " .. v)
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\(Party\): (\w+) says, "Target order (.*)\."$</string>
							<string>^\(Party\): (\w+) says, "My targets: (.*)\."$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>targets</name>
						<script>local enemies = matches[3]:split(",")
--enemylist = string.split(matches[3], " ")
for _, v in pairs(enemies) do
  if not table.contains(enemylist, v) then
    send("enemy " .. v)
    table.insert(enemylist, v)
  end
      -- Define the base directory for the C: drive
    local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
    local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"
    
    -- Save `cityenemylist.lua` in `C:/Users/YourUsername/Documents/Achaean System/Tables/`
    --ensureFileExists(tablesDir, "enemylist.lua", "save", enemylist)
  
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\(Party\)\: ([A-Z][a-z]+) says, "Enemies: (.*)."$</string>
							<string>^\(Party\)\: ([A-Z][a-z]+) says, "\d+ .+ visible: (.*)."$</string>
							<string>^\(Party\)\: ([A-Z][a-z]+) says, "My enemies: (.*)."$</string>
							<string>^\(Party\)\: ([A-Z][a-z]+) says, "My enemies are: (.*)."$</string>
							<string>^\(Party\): (\w+) says, "Targets: (.*)\."$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>party accept</name>
						<script>if table.contains(NDB.cityList, matches[2]) or matches[2] == raidleader then
  if not hunting then
    send("party accept", false)
    send("party members", false)
    for _, v in pairs(enemylist) do
      if table.contains(allylist, v) then
        send("unenemy " .. v)
      end
    end
  end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) has invited you to join a party. PARTY ACCEPT to accept the invitation.$</string>
							<string>^(\w+) has invited you to join a party. PARTY ACCEPT to accept the invitation and leave your current</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>shooting</name>
						<script>send("pt LoS at " ..matches[2].. " - Direct Hit") </script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You draw your bow back and let fly an arrow in the direction of (\w+)\.$</string>
							<string>Your arrow strikes true!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>unenemy all</name>
						<script>send("unenemy " .. matches[2])
send("ally " .. matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) is currently an enemy. You must unenemy (\w+) before you can make (\w+) an ally\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>tumbleweed proc</name>
						<script>selectString(line, 1)
setBold(true)
bg("black")
fg("orange")
resetFormat()
if target:title() == matches[2] then
  affstrack.score.prone = 100
  rebounding = false
  shielded = false
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) gets tangled in a creeping vine, and goes sprawling\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>exterminate end</name>
						<script>if systemPaused then
  systemPaused = false
  cecho("\n&lt;red&gt;System Paused")
  send("pt extermination ended at " .. gmcp.Room.Info.name)
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Finally being in tune with the life essence of the surrounding area, you let loose your dark power in a rush. It quickly consumes the plant life and returns the energy to you.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>beckoned</name>
						<script>myEcho("red", "beckoned!!")
myEcho("red", "beckoned!!")
myEcho("red", "beckoned!!")
myEcho("red", "beckoned!!")
myEcho("red", "beckoned!!")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your eyes glaze, and you wander off.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>earring'd</name>
						<script>--send("pt Travelled to "..matches[2])
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You think of your true love, (\w+), and travel to h(im|er).$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>anti-follow</name>
						<script>if not table.contains(allylist, matches[2]) or target == matches[2] then
  send("queue addclear eqbal lose " .. matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You begin to follow (\w+).$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>party afflictions</name>
						<script>local ignore = {"breach"}
--if raidleader==matches[2] and not matches[3]==target then  -- and raid leader also in room???
--expandAlias("t "..matches[3])
--end
if matches[4] then
  if matches[3] == target then
    if not table.contains({ignore}, matches[4]) then
      if matches[4] == "sicken" then
        if not prob("paralysis") == 100 then
          affstrack.score.paralysis = 100
        elseif prob("paralysis") == 100 and not prob("manaleech") == 100 then
          affstrack.score.manaleech = 100
        elseif
          prob("paralysis") == 100 and prob("manaleech") == 100 and not prob("slickness") == 100
        then
          affstrack.score.slickness = 100
        end
      else
        ProTrackingConfirmed(matches[4])
      end
    end
  end
end
if matches[5] then
  if matches[3] == target then
    if not table.contains({ignore}, matches[5]) then
      if matches[4] == "sicken" then
        if not prob("paralysis") == 100 then
          affstrack.score.paralysis = 100
        elseif prob("paralysis") == 100 and not prob("manaleech") == 100 then
          affstrack.score.manaleech = 100
        elseif
          prob("paralysis") == 100 and prob("manaleech") == 100 and not prob("slickness") == 100
        then
          affstrack.score.slickness = 100
        end
      else
        ProTrackingConfirmed(matches[5])
      end
    end
  end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\(Party\)\: ([A-Z][a-z]+) says, \"Afflicting (\w+)\: (\w+) ?(\w+)?</string>
							<string>^\(Party\)\: ([A-Z][a-z]+) says, \"CURSED (\w+) WITH (\w+) ?(\w+)?</string>
							<string>^\(Party\)\: ([A-Z][a-z]+) says, \"Stared (\w+)\: (\w+) ?(\w+)?</string>
							<string>^\(Party\)\: ([A-Z][a-z]+) says, \"Stared (\w+)\: (\w+) ?(\w+)?</string>
							<string>^\(Party\)\: ([A-Z][a-z]+) says, \"(\w+) has\: (\w+) ?(\w+)?</string>
							<string>^\(Party\)\: ([A-Z][a-z]+) says, \"(\w+) has\: (\w+) ?(\w+)?</string>
							<string>^\(Party\)\: ([A-Z][a-z]+) says, \"(\w+)\: (\w+) ?(\w+)?</string>
							<string>^\(Party\)\: ([A-Z][a-z]+) says, \"(\w+) hit with (\w+) ?(\w+)?</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>highlight phased</name>
						<script>if string.find(getCurrentLine(), target) then
  --echo"THIS works GOOD. Leaving for later"
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\(Phased\)(.*))$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>allys</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>exits trigger</name>
							<script>if systemLoaded then

  moveconfirm()
  targetfleedir = ""
  fleerequested = false
  fleecd = os.clock() + 3
  jumprequested = false
  if hunting and autohunting then
    huntNext()
  end

  if gmcp.Room and gmcp.Room.Players then
    for i = 1, #gmcp.Room.Players, 1 do
      --if its not your own name
      if
        not (table.contains({gmcp.Char.Status.name}, gmcp.Char.Status.name) == true) and
        table.contains(NDB.cityList, gmcp.Room.Players[i].name)
      then
        if not (table.contains(allylist, gmcp.Room.Players[i].name)) then
          table.insert(allylist, gmcp.Room.Players[i].name)
          send("ally " .. gmcp.Room.Players[i].name)
        end
      end
      --if its not your own name
      if
        not (table.contains({gmcp.Char.Status.name}, gmcp.Char.Status.name) == true) and
        not table.contains(NDB.cityList, gmcp.Room.Players[i].name)
      then
        if not (table.contains(enemylist, gmcp.Room.Players[i].name)) and table.contains(NDB.cityEnemies,gmcp.Room.Players[i].name)  then
          table.insert(enemylist, gmcp.Room.Players[i].name)
          send("enemy " .. gmcp.Room.Players[i].name)
        end
      end
    end
   end 
    
end

      -- Define the base directory for the C: drive
    local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
    local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"
    
    -- Save `cityenemylist.lua` in `C:/Users/YourUsername/Documents/Achaean System/Tables/`
    --ensureFileExists(tablesDir, "allylist.lua", "save", allylist)
    --ensureFileExists(tablesDir, "enemylist.lua", "save", enemylist)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You see exits</string>
								<string>You see a single exit</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>2</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>party member left / joined</name>
							<script>send("party members", false)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(\w+) has (left|joined) your party</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>maximum allies/enemies</name>
							<script>send("unally all"..cmdsep.."unenemy all")
if not DEBUG_MODE then deleteFull() end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You have reached your maximum of 20 allies/enemies.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>uanlly ally</name>
							<script>      -- Define the base directory for the C: drive
    local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
    local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"

    -- Save `cityenemylist.lua` in `C:/Users/YourUsername/Documents/Achaean System/Tables/`
    --ensureFileExists(tablesDir, "allylist.lua", "save", allylist)


if not DEBUG_MODE then deleteFull() end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You declare that (\w+) will no longer be one of your allies.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>add ally name</name>
							<script>if not DEBUG_MODE then deleteFull() end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) is now one of your allies.$</string>
								<string>is already an ally</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>enemys</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>enemies</name>
							<script>enemylist = {}
captureenemy=1
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>21</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You have no enemies.</string>
								<string>You have the following enemies:</string>
								<string>^In a moment of forgiveness, you declare that you have no enemies\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
								<integer>1</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>enemy table update</name>
								<script>if
  matches[2] ~= "You have the following enemies:" and
  not string.starts(matches[2], "You have currently used") and
  not string.starts(matches[2], "You have no enemies.") and
  not string.starts(matches[2], "In a moment of forgiveness, you declare that you have no enemies.") and
  not isPrompt()
then
  if table.contains(allylist, matches[2]) then
    if not (target == matches[2]) then
      send("unenemy " .. matches[2])
    end
  end
  if
    not (table.contains(enemylist, matches[2])) and
    not (table.contains(NDB.cityList, matches[2])) and
    captureenemy == 1
  then
    table.insert(enemylist, matches[2])
  end
end
      -- Define the base directory for the C: drive
    local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
    local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"
    
    -- Save `enemylist.lua` in `C:/Users/YourUsername/Documents/Achaean System/Tables/`
     ensureFileExists(tablesDir, "enemylist.lua", "save", enemylist)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(.*)</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>close gate</name>
								<script>captureenemy=0</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string></string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>7</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>enemy table clear</name>
							<script>captureenemy = 0

      -- Define the base directory for the C: drive
    local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
    local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"
    
    -- Save `cityenemylist.lua` in `C:/Users/YourUsername/Documents/Achaean System/Tables/`
    ensureFileExists(tablesDir, "enemylist.lua", "save", enemylist)
    
setTriggerStayOpen("enemy table update", 0)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You have currently used \d+ enemy slot|s of your \d+ maximum.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>flying overhead</name>
							<script>--add breathrain line
failsafe = false
if table.contains(NDB.cityEnemies, matches[2]:title()) or target == matches[2] then
  setTarget(matches[3]:title())
  send("clearqueue eqbal")
  send("queue add eqbal stand")
  send("pt " .. matches[2] .. " In the skies!")
  --tempTrigger(target, [[selectString("]] .. matches[2] .. [[", 1) fg("red") resetFormat()]])
  if gmcp.Char.Status.race:find("Dragon") then
    send("clearqueue eqbal")
    send("queue add eqbal becalm")
  elseif gmcp.Char.Status.class == "Magi" then
    send("clearqueue eqbal")
    send("queue add eqbal cast geyser at " .. matches[2])
  else
    send("clearqueue eqbal")
    send("queue add eqbal touch tentacle " .. matches[2])
  end
  --expandAlias("f")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) flits into view directly overhead.$</string>
								<string>^(\w+) sucks in (\w+) breath, and with a mighty blast of air exhales while uttering a word of magic. Suddenly, (\w+) is lifted into the skies by an unseen force.$</string>
								<string>^(\w+) is quickly carried up into the skies.$</string>
								<string>^(\w+)  begins to flap (\w+) wings powerfully, and rises quickly up into the firmament.$</string>
								<string>^(\w+) looks upwards and rises gracefully into the shady boughs.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>person left area</name>
							<script>if table.contains(enemylist, matches[2]) then
  removeElement(enemylist, matches[2])
  send("unenemy " .. matches[2])
end
if table.contains(allylist, matches[2]) or gmcp.Room.Players[i].name == target then
  removeElement(allylist, matches[2])
  send("unally " .. matches[2])
end

      -- Define the base directory for the C: drive
    local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
    local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"
    
    -- Save `cityenemylist.lua` in `C:/Users/YourUsername/Documents/Achaean System/Tables/`
   -- ensureFileExists(tablesDir, "allylist.lua", "save", allylist)
   -- ensureFileExists(tablesDir, "enemylist.lua", "save", enemylist)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\(Party\): \w+ says, \"\(mindnet\)\: (\w+) left the area\."</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>person entered area</name>
							<script>if not table.contains(NDB.cityList, matches[2]) then
  if not table.contains(enemylist, matches[2]) then
    table.insert(enemylist, matches[2])
    send("enemy " .. matches[2])
  end
end
if table.contains(NDB.cityList, matches[2]) and not target == matches[2] then
  if matches[2] ~= gmcp.Char.Status.name then
    if not (table.contains(allylist, matches[2])) then
      table.insert(allylist, matches[2])
      send("ally " .. matches[2])
    end
  end
end

      -- Define the base directory for the C: drive
    local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
    local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"
    
    -- Save `cityenemylist.lua` in `C:/Users/YourUsername/Documents/Achaean System/Tables/`
  --  ensureFileExists(tablesDir, "allylist.lua", "save", allylist)
  --  ensureFileExists(tablesDir, "enemylist.lua", "save", enemylist)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\(Party\): \w+ says, \"\(mindnet\)\: (\w+) entered the area\."</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>unally enemy</name>
							<script>if not table.contains(NDB.cityList, matches[2]) then
  if table.contains(allylist, matches[2]) then
    removeElement(allylist, v)
    send("unally " .. matches[2])
  end
  if not table.contains(enemylist) then
    table.insert(enemylist, matches[2])
    send("enemy " .. matches[2])
  end
end
      -- Define the base directory for the C: drive
    local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
    local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"
    
    -- Save `cityenemylist.lua` in `C:/Users/YourUsername/Documents/Achaean System/Tables/`
  --  ensureFileExists(tablesDir, "allylist.lua", "save", allylist)
  --  ensureFileExists(tablesDir, "enemylist.lua", "save", enemylist)
    
if not DEBUG_MODE then deleteFull() end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) is currently an ally. You must unally (\w+) before you can make (\w+) an enemy\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>unemy enemy</name>
							<script>if not DEBUG_MODE then deleteFull() end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You declare that (\w+) will no longer be one of your enemies\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>already an enemy</name>
							<script>-- check if enemy and not on enemy list
if not table.contains(NDB.cityList, matches[2]) then
  if not table.contains(enemylist, matches[2]) then
    table.insert(enemylist, matches[2])
  end
end
      -- Define the base directory for the C: drive
    local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
    local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"
    
    -- Save `enemylist.lua` in `C:/Users/YourUsername/Documents/Achaean System/Tables/`
    --ensureFileExists(tablesDir, "enemylist.lua", "save", enemylist)
    
if not DEBUG_MODE then deleteFull() end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) is already an enemy\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>enemies call</name>
							<script>--if pton==1 then
local enemies = {}
if matches[3]:find(",") then
  enemies = string.split(matches[3], ", ")
else
  enemies = string.split(matches[3], " ")
end
for _, v in pairs(enemies) do
  if not table.contains(enemylist, v) then
    send("enemy " .. v)
    table.insert(enemylist, v)
  end
end
      -- Define the base directory for the C: drive
    local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
    local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"
    
    -- Save `enemylist.lua` in `C:/Users/YourUsername/Documents/Achaean System/Tables/`
  --  ensureFileExists(tablesDir, "enemylist.lua", "save", enemylist)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\(Party\)\: (\w+) says, "Enemies\: (.+)\."$</string>
								<string>^\(Party\)\: (\w+) says, "My enemies\: (.+)\."$</string>
								<string>^\(Party\)\: (\w+) says, "Enemies - (.+)\."$</string>
								<string>^\(Party\)\: (\w+) says, "Enemies are\: (.+)\."$</string>
								<string>^\(Party\)\: (\w+) says, "My enemies are (.+)\."$</string>
								<string>^\(Party\)\: (\w+) says, "My enemies are: (.+)\."$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>one or your enemies</name>
							<script>if not table.contains(NDB.cityList, matches[2]) then
  if not table.contains(enemylist, matches[2]) then
    table.insert(enemylist, matches[2])
    send("enemy " .. matches[2])
  end
end
      -- Define the base directory for the C: drive
    local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
    local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"
    
    -- Save `enemylist.lua` in `C:/Users/YourUsername/Documents/Achaean System/Tables/`
  --  ensureFileExists(tablesDir, "enemylist.lua", "save", enemylist)
    
if not DEBUG_MODE then deleteFull() end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) is now one of your enemies.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>enemy dua'd</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) is swiftly carried into the skies and out of sight by a pair of eagle's wings.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>add enemy name</name>
							<script>if not DEBUG_MODE then deleteFull() end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) is now one of your enemies\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>partycalls</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>breathrain incoming</name>
							<script>send("pt Warning: BREATH RAIN INCOMING ")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A massive shadow begins to circle in the skies above.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>monk (Choke)</name>
							<script>send("curing prio def heldbreath 23", false)
send("pt SOMEONE CHOKING ME. ")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You gasp and clutch at your throat as an unseen force crushes the breath of life out of you.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>monk (Choke Name)</name>
								<script>send("pt " .. multimatches[1][2] .. " CHOKING ME. ")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^As the force subsides, you struggle to shake the smirking visage of (\w+) from your mind\.$</string>
									<string></string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>7</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>totem propped</name>
							<script>send("pt PROPPING TOTEM at " .. gmcp.Room.Info.name)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You strain to hold a tall totem pole in an upright position for your enemies to see.</string>
								<string></string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>7</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>cease propping</name>
							<script>send("pt CEASED TOTEM PROPPING at " .. gmcp.Room.Info.name)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You cease to prop up a tall totem pole.</string>
								<string>You cease to wield a runic totem.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>radiance</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>mindlock</name>
								<script>cecho("&lt;white:red&gt;" .. matches[2] .. " has mindlock'd you!")
send("pt " .. matches[2] .. " has mindlock'd me")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You feel the probing mind of (\w+) lock with yours\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>radiance</name>
								<script>cecho("&lt;white:red&gt;" .. " Someone started radiancing you (1/7)")
send("pt Warning: BEING RADIANCED (1/7) ")
send("concentrate"..cmdsep.."jump"..cmdsep.."jump"..cmdsep.."jump"..cmdsep.."jump"..cmdsep.."jump")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>A shiver runs down your spine, and you feel an instinctive urge to run as far and fast as you can.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>radiance 2</name>
								<script>lastradiancer = multimatches[2][2]:title()
tempTimer(28, [[lastradiancer = nil]])
cecho("&lt;white:red&gt;" .. " " .. lastradiancer .. " started radiancing you (2/7)")
send("pt Warning: " .. lastradiancer .. " RADIANCING ME (2/7) ")
send("concentrate"..cmdsep.."jump"..cmdsep.."jump"..cmdsep.."jump"..cmdsep.."jump"..cmdsep.."jump")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>99</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>A shimmering image of the face of</string>
									<string>^A shimmering image of the face of (\w+) appears fleetingly before you, frowning in concentration\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>2</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>radiance 3</name>
								<script>if not lastradiancer then
  return
end
cecho("&lt;white:red&gt;" .. lastradiancer .. " still radiancing you! (3/7)")
send("pt Warning: " .. lastradiancer .. " STILL RADIANCING ME (3/7) ")
send("concentrate"..cmdsep.."jump"..cmdsep.."jump"..cmdsep.."jump"..cmdsep.."jump"..cmdsep.."jump")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>99</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Sparks of multicoloured light begin to dance in your mind.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>radiance 4</name>
								<script>if not lastradiancer then
  return
end
cecho("&lt;white:red&gt;" .. lastradiancer .. " still radiancing you! (4/7)")
send("pt Warning: " .. lastradiancer .. " STILL RADIANCING ME (4/7) ")
send("concentrate"..cmdsep.."jump"..cmdsep.."jump"..cmdsep.."jump"..cmdsep.."jump"..cmdsep.."jump")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>An odd sensation of warmth begins to fill your body.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>radiance 5</name>
								<script>if not lastradiancer then
  return
end
cecho("&lt;white:red&gt;" .. lastradiancer .. " still radiancing you! (5/7)")
send("pt Warning: " .. lastradiancer .. " STILL RADIANCING ME (5/7) ")
send("concentrate"..cmdsep.."jump"..cmdsep.."jump"..cmdsep.."jump"..cmdsep.."jump"..cmdsep.."jump")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>99</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Arcs of white light begin to flash across your vision, radiant and bright.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>radiance 6</name>
								<script>if not lastradiancer then
  return
end
cecho("&lt;white:red&gt;" .. lastradiancer .. " still radiancing you! (6/7)")
send("pt Warning: " .. lastradiancer .. " STILL RADIANCING ME (6/7) ")
send("concentrate"..cmdsep.."jump"..cmdsep.."jump"..cmdsep.."jump"..cmdsep.."jump"..cmdsep.."jump")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>99</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Your heart thumps as you realise that you have but seconds left to escape whatever fate awaits you.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>mindlock broke</name>
								<script>cecho("&lt;white:red&gt;" .. matches[2] .. "'s mindlock broke")
send("pt " .. matches[2] .. "'s mindlock broke")
send("concentrate")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Your mind surges as it recognises the intrusive presence of (\w+), forcibly ejecting (\w+) from your head\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>deliverance</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>deliverance starting</name>
								<script>cecho("&lt;white:red&gt; Warning: " .. multimatches[1][2]:title() .. " IS STARTING DELIVERANCE ")
send("pt Warning: " .. multimatches[1][2]:title() .. " IS STARTING DELIVERANCE ")
failsafe = false
requestallstop = 1
enableTimer("requestallstop")
cecho("\n&lt;red&gt;Fail Safe")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^([A-Z][a-z]+) bows (\w+) head in silent prayer\.$</string>
									<string>return isPrompt</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>4</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>deliverance kill</name>
								<script>cecho("&lt;red&gt; Warning: " .. multimatches[1][2]:title() .. " HAS DELIVERANCE UP; DONT HIT ")
send("pt Warning: " .. multimatches[1][2]:title() .. " HAS DELIVERANCE UP; DONT HIT ")
failsafe = false
requestallstop = 1
enableTimer("requestallstop")
cecho("\n&lt;red&gt;Fail Safe")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) turns to face \w+, eyes glowing ominously\. Two radiant arcs of white lightning dart forth from .+, enveloping \w+ who screams and slowly dies as s?he is burned alive\.$</string>
									<string></string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>7</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>deliverance QL</name>
								<script>local person = multimatches[2][2]:trim()
if selectString(person, 1) &gt; 0 then
  fg("red")
  setBold(true)
  deselect()
  resetFormat()
end
cecho("&lt;white:red&gt;  Warning: " .. person:title() .. " HAS DELIVERANCE UP; DONT HIT ")
send("pt Warning: " .. person:title() .. " HAS DELIVERANCE UP; DONT HIT ")
failsafe = false
requestallstop = 1
enableTimer("requestallstop")
cecho("\n&lt;red&gt;Fail Safe")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>glowing white nimbus</string>
									<string>([^\.]+) is here(?:\.|, sleeping soundly\.|, shrouded\.) (\w+) is surrounded by a glowing white nimbus\.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>0</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>deliverance up</name>
								<script>cecho("&lt;white:red&gt;  Warning: " .. multimatches[1][2]:title() .. " HAS DELIVERANCE UP; DONT HIT ")
send("pt Warning: " .. multimatches[1][2]:title() .. " HAS DELIVERANCE UP; DONT HIT ")
failsafe = false
requestallstop = 1
enableTimer("requestallstop")
cecho("\n&lt;red&gt;Fail Safe")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^([A-Z][a-z]+) slowly raises (\w+) head and you see (\w+) eyes glowing bright white\.$</string>
									<string></string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>7</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>traps</name>
							<script>send("pt Trap set off by " .. multimatches[2][3] .. " at " .. multimatches[2][2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your alarm at</string>
								<string>^Your alarm at \'(.+)\' has been set off by (\w+)\!$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>litany</name>
							<script>cecho("&lt;white:purple&gt;LITANY INCOMING!!")
send("pt LITANY INCOMING FROM " .. matches[2] .. "! WATCH FOR FORCED TUMBLE!")
enableTimer("litany")
enableTimer("litany failsafe")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The ominously haunting sound of (\w+) suddenly fills your head, threatening to drown out all other sound.$</string>
								<string>^The mouth of (\w+) falls open as an ominous sound pours forth, majestic and terrible to behold.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>litany ended</name>
							<script>disableTimer("litany")
disableTimer("litany failsafe")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You obey.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>webbed</name>
							<script>send("pt " .. matches[2] .. " WEBBED")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Sticky strands of webbing spray out to cover (\w+) as you touch the web tattoo.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>grove summon</name>
							<script>boxDisplay("GROVE SUMMON! MOVE!", "green")
send("pt Warning: GROVE SUMMONED ")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The forest leaves rustle about you menacingly as the undergrowth appears to close in on you.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>enmeshed</name>
							<script>send("pt " .. matches[3] .. " ENMESHED ")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#55ff00</mFgColor>
							<mBgColor>#ffffff</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(Abruptly the keening ends, and a blossom of ethereal tendrils bursts from (\w+)'s chest, ensnaring (\w+) in a web of undulating bonds.)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>begin enmesh</name>
							<script>send("pt Enmesh began on " .. matches[2])
tempTimer(3.0, [[cecho("&lt;white:red&gt; 2 SECONDS: ENMESHMENT]])
tempTimer(4.0, [[cecho("&lt;white:red&gt; 1 SECONDS: ENMESHMENT]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Fixing your gaze upon (\w+)\, you begin a low keening, exercising your mastery of the Veil to bind your foe\.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>breathstreamed</name>
							<script>send("pt " .. matches[2] .. " breathstreamed! Shield down!")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Focusing your breath into a concentrated stream, you direct a blast of lightning towards (\w+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>firelashed icewall</name>
							<script>send("pt Icewall " .. matches[2] .. " has been FIRELASHED")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The icewall to the (\w+) suddenly melts as a lash of fire strikes the opposite side of it.$</string>
								<string>^The icewall to the (\w+) quickly melts as (\w+) sends a lash of fire to scourge it.$</string>
								<string>^You send a lash of fire to strike the icewall to the (\w+), and it quickly melts\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>secured Lock</name>
							<script>send("pt " .. matches[2] .. " secured mindlock on " .. matches[3])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You sense that (\w+) has secured a mindlock on (\w+).</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>sensing mindlock</name>
							<script>send("pt " .. matches[2] .. " attempting mindlock on " .. matches[3])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You sense that (\w+) is attempting to mindlock (\w+).</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>mindlock release</name>
							<script>send("pt " .. matches[2] .. " released mindlock on " .. matches[3])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You sense that (\w+) has released a mindlock on (\w+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>world burn</name>
							<script>cecho("&lt;red:orange&gt;worldburn from " .. multimatches[2][2] .. "+" .. multimatches[2][3])
send("pt WORLDBURN FROM " .. multimatches[2][2]:title() .. "+" .. multimatches[2][3]:title())</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your soul burns as, at the behest of</string>
								<string>^Your soul burns as, at the behest of (\w+), the power of (\w+) sears it\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>summon</name>
							<script>cecho("&lt;white:red&gt;" .. string.format("%s vodun/puppet summoned you!", multimatches[2][2]))
send(
  "pt " ..
  multimatches[2][2]:title() ..
  " SUMMONED ME TO  (" ..
  (mmp.cleanAreaName(multimatches[2][2]) or "unknown area") ..
  ")",
  false
)
send("tell " .. raidleader .. " SUMMONED ME ")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You mindlessly obey the summoning of</string>
								<string>^You mindlessly obey the summoning of (\w+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>shrine travel</name>
							<script>cecho("\n&lt;yellow&gt;ENEMIES INCOMING!!!")
cecho("\n&lt;yellow&gt;ENEMIES INCOMING!!!")
cecho("\n&lt;yellow&gt;ENEMIES INCOMING!!!")
cecho("\n&lt;yellow&gt;ENEMIES INCOMING!!!")
cecho("\n&lt;yellow&gt;ENEMIES INCOMING!!!")
cecho("\n&lt;yellow&gt;ENEMIES INCOMING!!!")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A shrine of (\w+) begins to glow from within...$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>accept arena</name>
							<script>send("get gold from pack"..cmdsep.."accept " .. matches[2])
myaffs = {}
initializeVitals()
initializeCureBalance()
initializeMyStackableAffs()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) throws down the gauntlet and issues a formal challenge to face (\w+) in single combat. ACCEPT (\w+) in order to do so\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>force stop mapper walking</name>
							<script>expandAlias("mstop")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A shimmering orb covers the city, preventing you from rising to the skies.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>icewall</name>
							<script>cecho("\n&lt;yellow&gt;ICEWALL TO THE " .. matches[4] .. "!!!")
cecho("\n&lt;yellow&gt;ICEWALL TO THE " .. matches[4] .. "!!!")
cecho("\n&lt;yellow&gt;ICEWALL TO THE " .. matches[4] .. "!!!")
cecho("\n&lt;yellow&gt;ICEWALL TO THE " .. matches[4] .. "!!!")
cecho("\n&lt;yellow&gt;ICEWALL TO THE " .. matches[4] .. "!!!")
cecho("\n&lt;yellow&gt;ICEWALL TO THE " .. matches[4] .. "!!!")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) raises (\w+) hands dramatically and summons an icewall to the (\w+).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>evade</name>
							<script>if matches[2] == target:title() then
  cecho("\n&lt;yellow&gt;EVADED TO THE " .. matches[4] .. "!!!")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#aa007f</mFgColor>
							<mBgColor>#000000</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The outline of (\w+) fades away to the (\w+).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>speed stripped</name>
							<script>cecho("\n&lt;yellow&gt;SPEED STRIPPED SPEED STRIPPED")
send("sip speed"..cmdsep.."touch shield")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>As the gaze of (\w+) falls upon you, you feel your speed enhancements torn away.</string>
								<string>(\w+) blows an Aeon tarot at you, destroying your speed defence.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>scrying</name>
							<script>scrytarget = string.title(matches[2])
send("pt " .. scrytarget .. " has been scried at " .. matches[3])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You create a pool of water in the air in front of you, and look through it, sensing (\w+) at (.*).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>monoport</name>
							<script>send("pt MONOLITH STOPPED PORTAL")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A monolith sigil prevents the portal from working.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>emperor</name>
							<script>if not table.contains(allylist, matches[2]) then
  send("lose " .. matches[2])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^As (\w+) throws the Emperor tarot at you, you are filled with adoration for (\w+) and begin to follow (\w+).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>hoist</name>
							<script>if not table.contains(NDB.cityList, matches[2]) then
  send("lose " .. matches[2])
  send("writhe")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) swoops down from the skies towards you, and before you can resist has lifted you off your feet and carries you, kicking uselessly, in firm talons into the sky above.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>my shield</name>
							<script>requestshield = false
cecho("\n&lt;yellow&gt;Can't touch dis!")
cecho("\n&lt;yellow&gt;Can't touch dis!")
cecho("\n&lt;yellow&gt;Can't touch dis!")
cecho("\n&lt;yellow&gt;Can't touch dis!")
cecho("\n&lt;yellow&gt;Can't touch dis!")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You touch the tattoo and a nearly invisible magical shield forms around you.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>tumbleweed</name>
							<script>selectString(matches[1], 1)
setItalics(true)
fg("green")
resetFormat()
deselect()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A tumbleweed drifts about nearby.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Parted Water</name>
							<script>cecho("\n&lt;yellow&gt;WATER GONE!")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The waters to the (\w+) part, and a dry path forms there.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>crucible</name>
							<script>selectString(matches[1], 1)
setItalics(true)
fg("purple")
resetFormat()
deselect()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Heatless black flame burns soundlessly within a black and gold crucible. </string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>preempt</name>
							<script>selectCurrentLine()
setItalics(true)
fg("white")
replace("" .. matches[2] .. " IS FOLLOWING YOU! GALLOP AWAY!")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A knowing smile crosses the face of (\w+) as (\w+) stares at you.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>run or die</name>
							<script>if target:title() == matches[2] then
  cecho("\n&lt;yellow&gt;RUN or DIE")
  cecho("\n&lt;yellow&gt;RUN or DIE")
  cecho("\n&lt;yellow&gt;RUN or DIE")
  cecho("\n&lt;yellow&gt;RUN or DIE")
  cecho("\n&lt;yellow&gt;RUN or DIE")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A terrible sense of unease comes over you as (\w+) turns to you, the air warpingbetween (\w+) hands\.$</string>
								<string>^The very air warps about (w\+) as (\w+) flames burn ever brighter\.$  </string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>lodes</name>
							<script>if not DEBUG_MODE then deleteLine() end
cecho("&lt;white&gt;" .. string.upper(matches[3]) .. ": &lt;red&gt;" .. string.upper(matches[2]))</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You determine that there is a (\w+) lode of (.*) here.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>lodes2</name>
							<script>if not DEBUG_MODE then deleteLine() end
cecho(
  "&lt;white&gt;" ..
  string.upper(matches[3]) ..
  ": &lt;red&gt;" ..
  string.upper(matches[2]) ..
  " " ..
  matches[4] ..
  "%"
)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You determine that there is a (\w+) lode of (.*) here. Approximately (\d+)% has been mined.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>flying</name>
							<script>selectString(line, 1)
setBold(true)
bg("black")
fg("red")
resetFormat()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You are already soaring through the sky, free as a bird.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>sycophant cape</name>
							<script>if not DEBUG_MODE then deleteLine() end
cecho("\n&lt;yellow&gt;Deathcape!")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You feel a surge of energy course through your body as a sycophantic shoulder cape feeds upon the lifeforce of your fallen foe.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>talisman pieces</name>
							<script>selectCurrentLine()
setBold(true)
bg("black")
fg("purple")
resetFormat()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#000000</mFgColor>
							<mBgColor>#ff5500</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(You have found a .* talisman piece\!)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>oyster</name>
							<script>send("get pearl from " .. matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^oyster(\d+) \s+ a living bivalve oyster$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>soa highlight</name>
							<script>selectString(line, 1)
setBold(true)
bg("black")
fg("purple")
resetFormat()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your shield completely absorbs the damage.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>tattoo fading</name>
							<script>selectString(line, 1)
setBold(true)
setUnderline(true)
resetFormat()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#000000</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^An? \w+ tattoo fades from view and disappears\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>room attacks</name>
							<script>cecho("&lt;blue&gt;\nROOM ATTACK SUCCESSFUL")
cecho("&lt;blue&gt;\nROOM ATTACK SUCCESSFUL")
cecho("&lt;blue&gt;\nROOM ATTACK SUCCESSFUL")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#0055ff</mFgColor>
							<mBgColor>#00ffff</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(You drain the heat from the air around your enemies, causing .+ to experience the cold of the abyss itself.)$</string>
								<string>^(Summoning the elemental powers of air and water, you bring a hailstorm down upon those around you.)</string>
								<string>^(Drawing a mighty breath to fill your lungs, you crane your neck backwards and send a screaming volley of psi-infused vapour into the air.)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>DRAGON-breath</name>
							<script>if not table.contains(NDB.cityList, matches[3]) then
  cecho("&lt;red&gt;DRAGON BREATH AOE!! RUN RUN RUN!!!")
  cecho("&lt;red&gt;DRAGON BREATH AOE!! RUN RUN RUN!!!")
  cecho("&lt;red&gt;DRAGON BREATH AOE!! RUN RUN RUN!!!")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#55ff00</mFgColor>
							<mBgColor>#ff0000</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^((\w+)'s powerful chest expands as (\w+) takes a mighty breath,)</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>impaled</name>
							<script>if matches[2] == target:title() then
  cecho("\n&lt;yellow&gt;IMPALED IMPALED IMPALED")
  cecho("\n&lt;yellow&gt;IMPALED IMPALED IMPALED")
  cecho("\n&lt;yellow&gt;IMPALED IMPALED IMPALED")
  cecho("\n&lt;yellow&gt;IMPALED IMPALED IMPALED")
  cecho("\n&lt;yellow&gt;IMPALED IMPALED IMPALED")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) draws his blade back and plunges it deep into your helpless body impaling it to the hilt.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>deteriorate wear off</name>
							<script>selectString(matches[1], 1)
setItalics(true)
fg("blue")
resetFormat()
deselect()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) shakes (\w+) head, and (\w+) eyes come back into focus.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>torso not broken!</name>
							<script>cecho("\n&lt;yellow&gt;NOT BROKEN NOT BROKEN")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The torso of (\w+) is not sufficiently damaged for you to perform that attack against it.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>beguile</name>
							<script>send("outr calamine"..cmdsep.."eat calamine")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The enchanting melody continues, muddling your thoughts and pulling at you from the (\w+).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Prism</name>
							<script>cecho("&lt;red&gt;PRISM PRISM PRISM!!! LEAVE ROOM NOW!!")
cecho("&lt;red&gt;PRISM PRISM PRISM!!! LEAVE ROOM NOW!!")
cecho("&lt;red&gt;PRISM PRISM PRISM!!! LEAVE ROOM NOW!!")
send("pt PRISM INCOMING! PREPARE FOR ENTRY! PROP/RETARD")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#55ff00</mFgColor>
							<mBgColor>#ffffff</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(A beam of prismatic light suddenly shoots into the room\.)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>sigils</name>
							<script>cecho("\n&lt;yellow&gt;sigil here")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#aa007f</mFgColor>
							<mBgColor>#00ffff</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(Your magics around the (earth|fire|water|air) channel have been destroyed by the knife sigil\.)$</string>
								<string>(A sigil in the shape of a knife lies here.)</string>
								<string>^((\w+) drops a cube sigil.)$</string>
								<string>( Resting on the ground is a cube-shaped silver sigil.)</string>
								<string>^((\w+) drops a knife sigil.)$</string>
								<string>(There are (.*) (cube sigils|monolith sigils) in (.*) groups here.)</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>font</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff007f</mFgColor>
							<mBgColor>#55ff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The city's font has been empowered.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>displace</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>displace start</name>
								<script>local currentroom = gmcp.Room.Info.name
cecho(
  "&lt;white:red&gt;" ..
  "Warning: ALCHEMIST STARTED DISPLACE ON ME (1/7) at " ..
  currentroom ..
  "; 9s B4 Displacement "
)
cecho("&lt;white:red&gt;" .. "MOVE ROOMS, or OR HINDER THE ALCHEMIT. 9s LEFT")
send("pt Warning: ALCHEMIST STARTED DISPLACE (1/4) at " .. currentroom .. "; 9s to FORCE ACTION ")
send("pt BEING DISPLACED MOVE ROOMS ")
tempTimer(
  9 + 1,
  function()
    local i = table.index_of(displacerooms, currentroom)
    if i then
      table.remove(displacerooms, i)
      send("pt should be safe to move party back into now.")
      cecho("\n&lt;white:red&gt;" .. currentroom .. " should be safe to move party back into now.")
    end
  end
)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You feel a sudden jerk, and the air immediately surrounding you comes alight with pale, etheric fire as a strange hissing noise fills the air.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>displace finish</name>
								<script>if type(displacerooms) == 'table' then
  local room = table.remove(displacerooms, 1)
end
cecho("&lt;white:red&gt;" .. string.format("%s displaced you", multimatches[2][2]))
cend("pt Warning: " .. multimatches[2][2] .. "  DISPLACED ME! (4/4) ")
cend("pt DISPLACED ME ")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You feel a strong tug in the pit of your stomach.</string>
									<string>^You feel a strong tug in the pit of your stomach\. Your surroundings dissolve into the featureless swirl of the ether, resolving once more into a recognisable landscape as you land before (\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>2</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>displace fail</name>
								<script>cecho(
  "&lt;white:red&gt;" .. multimatches[2][2] .. " cancelled/stopped displacing you - safe to move back in"
)
send("pt Warning: " .. multimatches[2][2] .. "  STOPPED DISPLACING ME-SAFE TO MOVE BACK IN! (4/4) ")
send("pt DISPLACE FAILED, SAFE TO RETURN ")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>The etheric light around you abruptly fades, and you feel a sudden release of tension as the hissing noise ceases entirely.</string>
									<string>^The etheric light around you abruptly fades, and you feel a sudden release of tension as the hissing noise ceases entirely\. Through a rapidly closing fold in the ether, you catch a glimpse of the face of (\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>2</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>judgement</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>judgement one</name>
								<script>cecho("&lt;white:red&gt;" .. string.format("%s started judging you (1/4)!", matches[2]))
send("pt Warning: " .. lastradiancer .. " STILL RADIANCING ME (1/4) ")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) raises (\w+) .+ mace over you to pass judgement on your sins, and it begins to crackle with righteous fire\.$</string>
									<string>^(\w+) raises .+ mace over you to pass judgement on your sins, and it begins to crackle with righteous fire\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>judgement two</name>
								<script>cecho("&lt;white:red&gt;" .. string.format("%s started judging you (2/4)!", matches[2]))
send("pt Warning: " .. lastradiancer .. " STILL RADIANCING ME (2/4) ")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^([A-Z][a-z]+) swings the crackling mace about h(is|er) head, gathering momentum as s?he bears down on you\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>judgement three</name>
								<script>cecho("&lt;white:red&gt;" .. string.format("%s started judging you (3/4)!", matches[2]))
send("pt Warning: " .. lastradiancer .. " STILL RADIANCING ME (3/4) ")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+)'s mace begins to make a high-pitched keening sound as it rapidly spins over (\w+) head\. You have only moments left to escape before you are judged!$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>dragon</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>prone bite</name>
								<script>send("pt PRONE BITE ON " .. target)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#aa007f</mFgColor>
								<mBgColor>#ff0000</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>(catching him once more in your teeth.)$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>curse hit</name>
								<script>send("pt " .. string.upper(matches[2]) .. " ON " .. target .. " IN " .. matches[4] .. " SECONDS")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You summon your ancient power and direct the curse of (\w+) to strike down (\w+) in (.*) seconds.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>stream</name>
								<script>send("pt BREATHSTREAMED: " .. matches[2])</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Focusing your breath into a concentrated stream, you direct a blast of psi towards (\w+).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>archery</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>no arrows left</name>
								<script>cecho("&lt;purple&gt;- &lt;orange&gt;You have no arrows left. &lt;purple&gt;-")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You have no (\w+) arrows in your quiver\.$</string>
									<string></string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>7</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>firing meteor</name>
								<script>--send("pt Meteor hitting target in 10")
--tempTimer(13.1, [[metTimer = nil]])
--metTimer = tempTimer(9.0, [[send("partytell Meteor hitting target in 1") ]])
--metTimer1 = tempTimer(8.0, [[send("partytell Meteor hitting target in 2") ]])
--metTimer2 = tempTimer(7.0, [[send("partytell Meteor hitting target in 3") ]])


</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You pull back your bow and release a meteor arrow high into the sky\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>report shot</name>
								<script>send("pt Arrow Connect: " .. tostring(target) .. " " .. mmp.anytolong(direction):title())</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Your arrow strikes true!</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>aim target is here</name>
								<script>send("Warning: " .. matches[2]:title() .. " ENTERED THE ROOM ")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>(^The Dragon (\w+) thunders in from the (\w+)\.$|(\w+) arrives from the (\w+)\.$|(\w+) enters from the (\w+)\.$|(\w+) sprints in from the(\w+)\.$|(\w+) drifts in from an unseen gateway|(\w+) suddenly appears, having travelled down the beam of prismatic light|(\w+) is pulled back into phase with reality!|(\w+) descends down the gangplank from the ship|With a flap of .* majestic .* wings, (\w+) enters a|(\w+) descends from above\.$|You are too close to your target, aiming is not possible\.$)</string>
									<string>^Your aim is no longer fixed on (\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>target lost</name>
								<script>cecho("&lt;purple&gt;- &lt;orange&gt;Target is lost. Weapons reset. &lt;purple&gt;-")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You pull an arrow from your quiver and nock it to your bow\.$</string>
									<string>(^Ahh, I am truly sorry, but I do not see anyone by that name here\.$|^I do not recognise anything called that here\.$|^You cannot see that being here\.$|^You detect nothing here by that name\.$|^Nothing can be seen here by that name\.$)</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>meteored target</name>
								<script>send("pt " .. matches[2] .. " meteored!")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^In your mind's eye, you see (.*) crushed by your meteor.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>meteored shield</name>
								<script>send("pt " .. matches[2] .. " meteored! Shield down!")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^In your mind's eye, you see your meteor shatter (\w+)'s shield.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>aim initialized</name>
								<script>cecho("&lt;white:purple&gt;- &lt;orange&gt;Aiming at " .. target .. " to the " .. aim.dir .. "&lt;purple&gt;-")
send("pt Aiming at " .. target .. " to the " .. dir)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You pull an arrow from your quiver and nock it to your bow\.$</string>
									<string>^You draw in a deep breath and begin to focus your aim on (\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>reported direction</name>
								<script>target = matches[4]</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(.*) (\w+) says, "(\w+) shot to the (\w+)\!"$</string>
									<string></string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>7</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>arrows</name>
								<script>send("pt: Shot " ..matches[2])</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You draw your bow back and let fly an arrow in the direction of (\w+)\.$</string>
									<string>Your arrow strikes true!</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>magi</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>scalded</name>
								<script>if matches[2] == target:title() then
  cecho("\nred:gold" .. matches[2] .. " SCALDED ")
  send("pt " .. matches[2] .. " SCALDED: NO PARRY")
  scaldtimer = os.clock() + 15
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Leaning down over the incapacitated form of (\w+), a crystalline golem sprays a stream of super-heated steam directly into (\w+) face.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>impurity</name>
								<script>send(matches[2] .. " hit with " .. string.upper(golemaff))</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You direct a crystalline golem to introduce impurities into the blood of (\w+).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>dampen</name>
								<script>send("pt " .. string.upper(matches[2]) .. " IS DAMPENED!!!")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You clap your hands and the (\w+) vibration is dampened.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>holocaust2</name>
								<script>send("pt HOLOCAUST DROPPED AT: " .. gmcp.Room.Info.name .. " FOR " .. matches[2] .. " SECONDS")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You fashion a holocaust globe out of pure elemental fire, and set the magical timer on it for (.*) seconds.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>ret embed</name>
								<script>send("pt RETARDATION EMBEDDED AT: " .. gmcp.Room.Info.name)
retembed = 0
send("pt FOCUSING VIBES AT: " .. gmcp.Room.Info.name)
focembed = 0
send("pt DROPPING SILENCE AT: " .. gmcp.Room.Info.name)
silembed = 0</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#aa007f</mFgColor>
								<mBgColor>#ffffff</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(With a forceful gesture, you command the crystals to embed .+ into the ground.)$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>misc</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>classlead show</name>
								<script>send("classlead show "..matches[2])</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\(Classleads\)\: classlead \#(\d+) has been Approved by the administration\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>doppie look</name>
								<script>mmp.gotoRoom(mmp.roomChaser(multimatches[3][2]))
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>3</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You look through the mind of (.*)\:$</string>
									<string>1</string>
									<string>^(.*)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>5</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>blocking</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName>autochange blocking</packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>blocking</name>
							<script>if target:title() == matches[2] and blocking then
  send("queue prepend eqbal block " .. matches[4])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Your enhanced senses inform you that (\w+) has entered (.*), to the (\w+).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>not blocking</name>
							<script>blocking = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You stop blocking.</string>
								<string>You are not blocking.</string>
								<string>There is no exit to block that way.</string>
								<string>You were not blocking.</string>
								<string>You cease blocking the exit.</string>
								<string>You begin to flap your wings powerfully, and rise quickly up into the firmament.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>unblock</name>
							<script>--if matches[2] == raidleader then
send("queue prepend eqbal unblock", false)
--end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\(Party\)\: ([A-Z][a-z]+) says\, \"Unblock.\"$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>block direction</name>
							<script>disableTrigger("blocking")
tempTimer(1.0, [[enableTrigger("blocking")]])
send("pt BLOCKING " .. multimatches[2][2])
blocking = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>4</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You move over to block the</string>
								<string>^You move over to block the (\w+) exit.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>trample-</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName>trample-compress</packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>trample gate</name>
							<script>mounted=0
tramplenames = {}</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>99</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#0000ff</mFgColor>
							<mBgColor>#ff0000</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\w+ whips .* into a fury, bucking and racing dangerously in a circle, trampling the ground in a frenzy\.$</string>
								<string>You whip a noble hippogriff into a fury, bucking and racing dangerously in a circle, trampling the ground in a frenzy.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>3</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Broken limbs</name>
								<script>if not DEBUG_MODE then deleteLine() end

if not table.contains(tramplenames, matches[4]) then
	table.insert(tramplenames, matches[4])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>breaks the (\w+) (\w+) of (\w+)\.$</string>
									<string>crushes the (\w+) (\w+) of (\w+)\.$</string>
									<string>pulverises the (\w+) (\w+) of (\w+)\.$</string>
									<string>smashes the (\w+) (\w+) of (\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Close gate</name>
								<script>setTriggerStayOpen("trample gate", 0)

secho(string.format("%d people trampled: %s", #tramplenames, table.concat(tramplenames, ", ")))
tramplenames = nil</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>return isPrompt()</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>4</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Locate</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Locate Logic</name>
							<script>mmp.locateAndEcho(matches[3], matches[2])
if locateon == true then send("tell " ..locateperson.." "..matches[2].." is at "..matches[3])
end
locateon = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You see that (\w+) is at (.+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>LocateTell</name>
							<script>locateon = true
locateperson = matches[2]

send("farsee " ..matches[3])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(\w+) tells you, "Locate (\w+)\"$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>LocateTell2</name>
							<script>locateon = true
locateperson = matches[2]
send("farsee " ..matches[3])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(\w+) .* "Locate (\w+)"$</string>
								<string>(\w+)'s .* "Locate (\w+)"$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>guards</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>highlight guards</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#000000</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Archers</name>
								<script>if highlightGuards == true then
	local pos = selectString(matches[1], 1)
	setFgColor(34, 139, 34)
	setBold(true)
	moveCursor("main", pos+#matches[1]-1, getLineNumber())
	cinsertText(" &lt;royal_blue&gt;(&lt;a_white&gt;Archer&lt;royal_blue&gt;)")
	deselect()
	resetFormat()
	moveCursorEnd()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>A Shadow Amazon stands ready to defend Ashtan, whip in one hand and darkbow in the other.</string>
									<string>There are \d+ Shadow Amazons here\.</string>
									<string>Mounted atop a woodland bear, a forest archer keenly scans the sprawling canopy.</string>
									<string>There are \d+ forest archers here\.</string>
									<string>A fierce virago carefully scans the area for signs of trouble.</string>
									<string>There are \d+ fierce viragos here\.</string>
									<string>Mounted atop a sleek snow panther, a mountain archer coolly scans the distant peaks.</string>
									<string>There are \d+ mountain archers here\.</string>
									<string>There are \d+ Naga assassins here\.</string>
									<string>There are \d+ Riverwall bow-maidens here\.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>0</integer>
									<integer>1</integer>
									<integer>0</integer>
									<integer>1</integer>
									<integer>0</integer>
									<integer>1</integer>
									<integer>0</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Constables</name>
								<script>if highlightGuards == true then
	local pos = selectString(matches[1], 1)
	setFgColor(255, 250, 250)
	setBold(true)
	moveCursor("main", pos+#matches[1]-1, getLineNumber())
	cinsertText(" &lt;:blue&gt;(&lt;white&gt;Constable (CFH)&lt;:blue&gt;)")
	deselect()
	resetFormat()
	moveCursorEnd()
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Leaning upon a sharpened quarterstaff, an earthen elementalist casts her eyes across the treetops.</string>
									<string>There are \d+ earthen elementalists here\. </string>
									<string>There are \d+ Ashtani corsairs here\. </string>
									<string>There are \d+ runic knights here\.</string>
									<string>There are \d+ Brighthold watchmen here\.</string>
									<string>There are \d+ infernal wraiths here.</string>
									<string>Holding his lantern aloft, a Brighthold watchman closely surveys the area for signs of unrest.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>0</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>0</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Soldiers</name>
								<script>if highlightGuards == true then
	local pos = selectString(matches[1], 1)
	setFgColor(255, 127, 80)
	setBold(true)
	moveCursor("main", pos+#matches[1]-1, getLineNumber())
	cinsertText(" &lt;royal_blue&gt;(&lt;a_white&gt;Soldier (Prone)&lt;royal_blue&gt;)")
	deselect()
	resetFormat()
	moveCursorEnd()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Handaxes at the ready, a woodland ranger stands quietly.</string>
									<string>There are \d+ woodland rangers here\.</string>
									<string>Possessed of a preternatural stillness, a venerable monk exudes an aura of quiet tranquillity.</string>
									<string>There are \d+ venerable monks here\.</string>
									<string>Gripping a broadsword, a Shornwall defender crouches slightly in anticipation.</string>
									<string>There are \d+ Shornwall defenders here\.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>0</integer>
									<integer>1</integer>
									<integer>0</integer>
									<integer>1</integer>
									<integer>0</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Warriors</name>
								<script>if highlightGuards == true then
	local pos = selectString(matches[1], 1)
	setFgColor(153, 0, 0)
	setBold(true)
	moveCursor("main", pos+#matches[1]-1, getLineNumber())
	cinsertText(" &lt;royal_blue&gt;(&lt;a_white&gt;Warrior (Limbs)&lt;royal_blue&gt;)")
	deselect()
	resetFormat()
	moveCursorEnd()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>A sentry of the Vanguard maintains his vigil, a flame-blackened bardiche planted beside him.</string>
									<string>There are \d+ sentries of the Vanguard here\.</string>
									<string>With silent vigil, a gnarled treekin roots to the ground.</string>
									<string>With silent vigil, a gnarled treekin roots to the treetop vantage.</string>
									<string>There are \d+ gnarled treekins here\.</string>
									<string>Reserved and watchful, an imperial guardsman paces here, his expression impassive.</string>
									<string>There are \d+ imperial guardsmen here\.</string>
									<string>An attentive Duskmere brawler stands ready with his halberd, his keen eyes missing nothing.</string>
									<string>There are \d+ Duskmere brawlers here\.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>0</integer>
									<integer>1</integer>
									<integer>0</integer>
									<integer>0</integer>
									<integer>1</integer>
									<integer>0</integer>
									<integer>1</integer>
									<integer>0</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Captain</name>
								<script>if highlightGuards == true then
	local pos = selectString(matches[1], 1)
	setFgColor(255, 215, 0)
	setBold(true)
	moveCursor("main", pos+#matches[1]-1, getLineNumber())
	cinsertText(" &lt;royal_blue&gt;(&lt;a_white&gt;Captain (Blackout)&lt;royal_blue&gt;)")
	deselect()
	resetFormat()
	moveCursorEnd()
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Encased in gold-plated armour, a knight of the Illuminati stands motionless in silent vigil.</string>
									<string>There are \d+ knights of the Illuminati here\.</string>
									<string> A Briar Knight casts a cool gaze over the village.</string>
									<string>There are \d+ Briar Knights here\.</string>
									<string>Rapier glinting in the light, a dashing young troubadour fences with an imagined foe.</string>
									<string>There are \d+ dashing troubadours here\.</string>
									<string>Poised for action, a Blackstone swordsman observes the surrounds. </string>
									<string>There are \d+ Blackstone swordsmen here\.</string>
									<string>There are \d+ knights of the Maldaathi here\.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>0</integer>
									<integer>1</integer>
									<integer>0</integer>
									<integer>1</integer>
									<integer>0</integer>
									<integer>1</integer>
									<integer>0</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Istani</name>
								<script>if highlightGuards == true then
	local pos = selectString(matches[1], 1)
	setFgColor(148, 0, 211)
	setBold(true)
	moveCursor("main", pos+#matches[1]-1, getLineNumber())
	cinsertText(" &lt;royal_blue&gt;(&lt;a_white&gt;Istani (*&gt;&gt;AOE!&lt;&lt;*)&lt;royal_blue&gt;)")
	deselect()
	resetFormat()
	moveCursorEnd()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Casually sending electricity to dance between the fingers of her iron gauntlet, a smirking War Witch of Ashtan stands guard.</string>
									<string>There are \d+ War Witches here\.</string>
									<string>Suffused with the power of Nature, a veiled dryad lingers in the shadows.</string>
									<string>There are \d+ veiled enchantresses here\.</string>
									<string>Bathed in a faint blue glow, an ice mage lingers here, swinging a frozen talisman.</string>
									<string>Bathed in a faint blue glow, Alcine, the ice mage lingers here, swinging a frozen talisman.</string>
									<string>There are \d+ ice mages here\.</string>
									<string>Lambent energy pulses around the skeletal frame of a Naxian mistweaver.</string>
									<string>There are \d+ Naxian mistweavers here\.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>0</integer>
									<integer>1</integer>
									<integer>0</integer>
									<integer>1</integer>
									<integer>0</integer>
									<integer>0</integer>
									<integer>1</integer>
									<integer>0</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Guardians</name>
								<script>if highlightGuards == true then
	local pos = selectString(matches[1], 1)
	setFgColor(255, 0, 255)
	setBold(true)
	moveCursor("main", pos+#matches[1]-1, getLineNumber())
	cinsertText(" &lt;royal_blue&gt;(&lt;a_white&gt;!*!*!*!*!Guardian*!*!*!*!*!&lt;royal_blue&gt;)")
	deselect()
	resetFormat()
	moveCursorEnd()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Ever-vigilant, the Zarathustran eagle monitors the area for threats.</string>
									<string>Watching over the village, the Guardian of Thorns lingers here upon glimmering emerald wings.</string>
									<string>Wings folded majestically over his back, Blu, the Guardian Dragon of Cyrene breathes clouds of icy mist into the air.</string>
									<string>A look of disgust plastered across his face, Mhaldorus intently surveys his surroundings.</string>
									<string>A dense mist of silver ripples in the air around the immense form of Ilona'neron, the Colossus. </string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>0</integer>
									<integer>0</integer>
									<integer>0</integer>
									<integer>0</integer>
									<integer>0</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>list guards</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>solo guards</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>archers</name>
									<script>if listGuards then
for i = 1, #matches, 2 do
selectString(matches[1], 1)
replace("")
cecho(" &lt;DarkSlateGray&gt;(&lt;firebrick&gt;1&lt;DarkSlateGray&gt;) &lt;firebrick&gt;ARCHER &lt;DarkSlateGray&gt;(&lt;firebrick&gt;Flying&lt;DarkSlateGray&gt;)")
--cecho("\n&lt;firebrick&gt;(1) ARCHER (Flying)")
end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>A Shadow Amazon stands ready to defend Ashtan, whip in one hand and darkbow in the other.</string>
										<string>Mounted atop a woodland bear, a forest archer keenly scans the sprawling canopy.</string>
										<string>A fierce virago carefully scans the area for signs of trouble.</string>
										<string>Mounted atop a sleek snow panther, a mountain archer coolly scans the distant peaks.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>constables</name>
									<script>if listGuards then
for i = 1, #matches, 2 do
selectString(matches[1], 1)
replace("")
cecho(" &lt;DarkSlateGray&gt;(&lt;yellow&gt;1&lt;DarkSlateGray&gt;) &lt;yellow&gt;CONSTABLE &lt;DarkSlateGray&gt;(&lt;yellow&gt;CFH&lt;DarkSlateGray&gt;)")
end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Leaning upon a sharpened quarterstaff, an earthen elementalist casts her eyes across the treetops.</string>
										<string>Holding his lantern aloft, a Brighthold watchman closely surveys the area for signs of unrest.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>soldiers</name>
									<script>if listGuards then
for i = 1, #matches, 2 do
selectString(matches[1], 1)
replace("")
cecho(" &lt;DarkSlateGray&gt;(&lt;orange&gt;1&lt;DarkSlateGray&gt;) &lt;orange&gt;SOLDIER &lt;DarkSlateGray&gt;(&lt;orange&gt;Prone&lt;DarkSlateGray&gt;)")
end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Handaxes at the ready, a woodland ranger stands quietly.</string>
										<string>Possessed of a preternatural stillness, a venerable monk exudes an aura of quiet tranquillity.</string>
										<string>Gripping a broadsword, a Shornwall defender crouches slightly in anticipation.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>warriors</name>
									<script>if listGuards then
for i = 1, #matches, 2 do
selectString(matches[1], 1)
replace("")
cecho(" &lt;DarkSlateGray&gt;(&lt;cyan&gt;1&lt;DarkSlateGray&gt;) &lt;cyan&gt;WARRIOR &lt;DarkSlateGray&gt;(&lt;cyan&gt;Limbs&lt;DarkSlateGray&gt;)")
end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>A sentry of the Vanguard maintains his vigil, a flame-blackened bardiche planted beside him.</string>
										<string>With silent vigil, a gnarled treekin roots to the ground.</string>
										<string>With silent vigil, a gnarled treekin roots to the treetop vantage.</string>
										<string>Reserved and watchful, an imperial guardsman paces here, his expression impassive.</string>
										<string>An attentive Duskmere brawler stands ready with his halberd, his keen eyes missing nothing.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>captain</name>
									<script>if listGuards then
for i = 1, #matches, 2 do
selectString(matches[1], 1)
replace("")
cecho(" &lt;DarkSlateGray&gt;(&lt;green&gt;1&lt;DarkSlateGray&gt;) &lt;green&gt;CAPTAIN &lt;DarkSlateGray&gt;(&lt;green&gt;Blackout&lt;DarkSlateGray&gt;)")
end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Encased in gold-plated armour, a knight of the Illuminati stands motionless in silent vigil.</string>
										<string> A Briar Knight casts a cool gaze over the village.</string>
										<string>Rapier glinting in the light, a dashing young troubadour fences with an imagined foe.</string>
										<string>Poised for action, a Blackstone swordsman observes the surrounds. </string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>istani</name>
									<script>if listGuards then
for i = 1, #matches, 2 do
selectString(matches[1], 1)
replace("")
cecho(" &lt;DarkSlateGray&gt;(&lt;purple&gt;1&lt;DarkSlateGray&gt;) &lt;purple&gt;ISTANI &lt;DarkSlateGray&gt;(&lt;purple&gt;AOE&lt;DarkSlateGray&gt;)")
end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Casually sending electricity to dance between the fingers of her iron gauntlet, a smirking War Witch of Ashtan stands guard.</string>
										<string>Suffused with the power of Nature, a veiled dryad lingers in the shadows.</string>
										<string>Bathed in a faint blue glow, an ice mage lingers here, swinging a frozen talisman.</string>
										<string>Bathed in a faint blue glow, Alcine, the ice mage lingers here, swinging a frozen talisman.</string>
										<string>Lambent energy pulses around the skeletal frame of a Naxian mistweaver.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>guardians</name>
									<script>if listGuards then
for i = 1, #matches, 2 do
selectString(matches[1], 1)
replace("")
cecho(" &lt;DarkSlateGray&gt;(&lt;white&gt;1&lt;DarkSlateGray&gt;) &lt;white&gt;GUARDIAN &lt;DarkSlateGray&gt;(&lt;white&gt;Boosts Guards&lt;DarkSlateGray&gt;)")
end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Ever-vigilant, the Zarathustran eagle monitors the area for threats.</string>
										<string>Watching over the village, the Guardian of Thorns lingers here upon glimmering emerald wings.</string>
										<string>Wings folded majestically over his back, Blu, the Guardian Dragon of Cyrene breathes clouds of icy mist into the air.</string>
										<string>A look of disgust plastered across his face, Mhaldorus intently surveys his surroundings.</string>
										<string>A dense mist of silver ripples in the air around the immense form of Ilona'neron, the Colossus. </string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>guard stacks</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>archers</name>
									<script>if listGuards then
for i = 1, #matches, 2 do
selectString(matches[1], 1)
replace("")
cecho(" &lt;DarkSlateGray&gt;(&lt;firebrick&gt;"..matches[2].."&lt;DarkSlateGray&gt;) &lt;firebrick&gt;ARCHER &lt;DarkSlateGray&gt;(&lt;firebrick&gt;Flying&lt;DarkSlateGray&gt;)")
end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>There are (\d+) Shadow Amazons here\.</string>
										<string>There are (\d+) forest archers here\.</string>
										<string>There are (\d+) fierce viragos here\.</string>
										<string>There are (\d+) mountain archers here\.</string>
										<string>There are (\d+) Naga assassins here\.</string>
										<string>There are (\d+) Riverwall bow-maidens here\.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>constables</name>
									<script>if listGuards then
for i = 1, #matches, 2 do
selectString(matches[1], 1)
replace("")
cecho(" &lt;DarkSlateGray&gt;(&lt;yellow&gt;"..matches[2].."&lt;DarkSlateGray&gt;) &lt;yellow&gt;CONSTABLE &lt;DarkSlateGray&gt;(&lt;yellow&gt;CFH&lt;DarkSlateGray&gt;)")
end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>There are (\d+) earthen elementalists here\. </string>
										<string>There are (\d+) Ashtani corsairs here\. </string>
										<string>There are (\d+) runic knights here\.</string>
										<string>There are (\d+) Brighthold watchmen here\.</string>
										<string>There are (\d+) infernal wraiths here.</string>
										<string>There are (\d+) earthen elementalists here.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>soldiers</name>
									<script>if listGuards then
for i = 1, #matches, 2 do
selectString(matches[1], 1)
replace("")
cecho(" &lt;DarkSlateGray&gt;(&lt;orange&gt;"..matches[2].."&lt;DarkSlateGray&gt;) &lt;orange&gt;SOLDIER &lt;DarkSlateGray&gt;(&lt;orange&gt;Prone&lt;DarkSlateGray&gt;)")
end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>There are (\d+) woodland rangers here\.</string>
										<string>There are (\d+) venerable monks here\.</string>
										<string>There are (\d+) Shornwall defenders here\.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>warriors</name>
									<script>if listGuards then
for i = 1, #matches, 2 do
selectString(matches[1], 1)
replace("")
cecho(" &lt;DarkSlateGray&gt;(&lt;cyan&gt;"..matches[2].."&lt;DarkSlateGray&gt;) &lt;cyan&gt;WARRIOR &lt;DarkSlateGray&gt;(&lt;cyan&gt;Limbs&lt;DarkSlateGray&gt;)")
end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>There are (\d+) sentries of the Vanguard here\.</string>
										<string>There are (\d+) gnarled treekins here\.</string>
										<string>There are (\d+) imperial guardsmen here\.</string>
										<string>There are (\d+) Duskmere brawlers here\.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>captains</name>
									<script>if listGuards then
for i = 1, #matches, 2 do
selectString(matches[1], 1)
replace("")
cecho(" &lt;DarkSlateGray&gt;(&lt;green&gt;"..matches[2].."&lt;DarkSlateGray&gt;) &lt;green&gt;CAPTAIN &lt;DarkSlateGray&gt;(&lt;green&gt;Blackout&lt;DarkSlateGray&gt;)")
end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>There are (\d+) knights of the Illuminati here\.</string>
										<string>There are (\d+) Briar Knights here\.</string>
										<string>There are (\d+) dashing troubadours here\.</string>
										<string>There are (\d+) Blackstone swordsmen here\.</string>
										<string>There are (\d+) knights of the Maldaathi here\.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>istani</name>
									<script>if listGuards then
for i = 1, #matches, 2 do
selectString(matches[1], 1)
replace("")
cecho(" &lt;DarkSlateGray&gt;(&lt;purple&gt;"..matches[2].."&lt;DarkSlateGray&gt;) &lt;purple&gt;ISTANI &lt;DarkSlateGray&gt;(&lt;purple&gt;AOE&lt;DarkSlateGray&gt;)")
end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>There are (\d+) War Witches here\.</string>
										<string>There are (\d+) veiled enchantresses here\.</string>
										<string>There are (\d+) ice mages here\.</string>
										<string>There are (\d+) Naxian mistweavers here\.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
						</TriggerGroup>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>antitheft</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>inventory</name>
						<script>if gagInventory then
 if not DEBUG_MODE then deleteFull() end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>4</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>--------------------------------------------------------------------------------</string>
							<string>You are holding:</string>
							<string>You are wearing:</string>
							<string>--------------------------------------------------------------------------------</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>line capture</name>
							<script>if gagInventory and DEBUG_MODE then
  if not DEBUG_MODE then deleteFull() end
  gagInventory = false
  cecho("\n&lt;green&gt;Inventory Updated.")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string></string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>7</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>unwield</name>
						<script>local ignore =
  {
    "an elegantly curved scimitar of relucent silver",
    "a durable, steel scimitar",
    "a Wyvern's Lash",
    "a crimson shield",
    "Thoth's fang",
    "a serrated dirk",
    "a crimson-hued daegger",
    "a Shield of Absorption",
    "Paincatcher",
    "a throwing axe",
    "Bloodletter",
    "a soulspear",
    "a concussion bomb",
    "Relentless Stars",
  }
if not (table.contains(ignore, matches[3])) then
  send("queue addclear eqbal unwield " .. matches[4])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You (begin|start) to wield (.*) in your (\w+) hand\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>unwield both hands</name>
						<script>local ignore = {"a Lupine bow", "the Dragon Bow"}
if not (table.contains(ignore, matches[2])) then
  send("queue addclear eqbal unwield " .. matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You start to wield (.*) in your hands\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>snake snaps</name>
						<script>cecho("\n&lt;yellow&gt;You were snapped by " .. matches[2])

if matches[2] == "Nageek" then
  expandAlias("fl")
  send("follow nageek"..cmdsep.."renounce grace")
end


--[[if not (failsafe) then
  if matches[2] ~= target then
    for _, v in pairs(inv) do
      if string.match(v.name, '(%a+) gold sovereigns') then
        send("put coins in pack")
      end
      if string.match(v.name, 'an? (%a+) sigil') then
        send("put sigil in pack")
      end
      if string.match(v.name, '(%a+) sigils') then
        send("put group sigils in pack")
      end
      if string.match(v.name, '(%a+)? key') then
        send("put key in pack")
      end
      if string.match(v.name, '(%a+) letter') then
        send("put letter in pack")
      end
      if string.match(v.name, '(%a+) wyrmskin pack') then
        send("wear pack")
      end
      if string.match(v.name, '(%a+) suit of scale mail') then
        send("wear armour")
      end
      if string.match(v.name, 'an? (%a+) flake') then
        send("inr all")
      end
      if string.match(v.name, '(%a+) flakes') then
        send("inr all")
      end
      if string.match(v.name, '(%a+) shard') then
        send("put shard in pack")
      end
    end
  end
  if not (selfishness) then
    send("curing prio def selfishness 25")
    send("queue addclear eqbal say duanathara"..cmdsep.."walkto eleusis")
  end
end]]</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) snaps (\w+) fingers in front of you\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>bell trigger</name>
						<script>send("queue prepend eqbal wield eye"..cmdsep.."throw eye"..cmdsep.."search")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>A sudden chiming fills your ears, a warning that someone is spying upon you.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>put gold in pack</name>
						<script>send("inr all"..cmdsep.."put gold in pack")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You accept (\w+)'s challenge, and enter the portal, ready to do battle.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>put gold in pack</name>
						<script>if tonumber(matches[2])&gt;0 then
	send("queue addclear eqbal put gold in pack")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\|\s*Holding\:\s*(\d+)\s</string>
							<string>^You get (\d+) gold sovereigns from .*\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>seafaring</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>ship echos</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>weapon fire</name>
							<script>selectCurrentLine()
replace("")
cecho("&lt;red&gt;[SHIP WEAPON]: &lt;green&gt;" .. matches[2] .. "&lt;cyan&gt; FIRING:&lt;magenta&gt; " .. matches[4])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) calls out "Fire!" and releases the mechanism on (a|an) (\w+).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>clear rigging</name>
							<script>--send("pt Clear the rigging!")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your riggings are too entangled and must be cleared before you can use your sails again.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>ship turn</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#55ff00</mFgColor>
							<mBgColor>#0000ff</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(The ship completes her turn and now faces (.*))</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Weapon Hit Seamonster</name>
							<script>local ammo = matches[2]
local weapon = ""
if ammo == "A heavy wooden shaft" then
  weapon = "Ballista"
elseif ammo == "A rotating disc" then
  weapon = "Thrower"
elseif ammo == "A tangle of ropes and cloth" then
  weapon = "Onager"
end
selectCurrentLine()
replace("")
cecho(
  "&lt;red&gt;[SHIP WEAPON]: &lt;green&gt;** " ..
  matches[3] ..
  " **&lt;blue&gt; fired a&lt;cyan&gt; " ..
  weapon ..
  "&lt;blue&gt; at&lt;magenta&gt; == " ..
  matches[4] ..
  " =="
)
if monsterTimer then
  killTimer(monsterTimer)
end
monsterTimer = tempTimer(600, [[cecho("&lt;red&gt;\n\n 10 minutes is up.\n\n")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(.+) streaks from "(.+)" toward (.+), burying itself deeply in its side.$</string>
								<string>^(.+) glides away from "(.+)" at (.+), wreaking havoc across its body.$</string>
								<string>^(.+) rises from "(.+)", crashing heavily into (.+).$</string>
								<string>^(.+) streaks from "(.+)" toward "(.+)", burying itself deeply in her hull.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>starshot</name>
							<script>selectCurrentLine()
replace("")
cecho(
  "\n&lt;red&gt;[SHIP WEAPON]: &lt;green&gt;** " ..
  matches[2] ..
  " **&lt;blue&gt; fired &lt;cyan&gt;Starshot&lt;blue&gt; at&lt;magenta&gt; == " ..
  matches[3] ..
  " =="
)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A mass of sharp pieces of metal and wood fly out from "(.+)" and rain destruction on (.+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>chainshot</name>
							<script>selectCurrentLine()
replace("")
cecho(
  "\n&lt;red&gt;[SHIP WEAPON]: &lt;green&gt;** " ..
  matches[2] ..
  " **&lt;blue&gt; fired &lt;cyan&gt;Chainshot&lt;blue&gt; at&lt;magenta&gt; == " ..
  matches[3] ..
  " =="
)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Lengths of barbed and spiked chain whirl into the air from "(.+)", snarling the riggingof "(.+)" and rendering its sails useless.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>wardisc</name>
							<script>selectCurrentLine()
replace("")
cecho(
  "\n&lt;red&gt;[SHIP WEAPON]: &lt;green&gt;** " ..
  matches[2] ..
  " **&lt;blue&gt; fired &lt;cyan&gt;Wardisc&lt;blue&gt; at&lt;magenta&gt; == " ..
  matches[3] ..
  " =="
)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A rotating disc glides away from "(.+)" at "(.+)", wreaking havocacross her deck.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>starshot - figurehead bound</name>
							<script>selectCurrentLine()
replace("")
cecho(
  "\n&lt;red&gt;[FIGUREHEAD BOUND]: &lt;red&gt;** " ..
  matches[2] ..
  " **&lt;blue&gt; fired &lt;cyan&gt;starshot&lt;blue&gt; and&lt;red&gt; == BOUND OUR FIGUREHEAD =="
)
--send("pt Figurehead bound by Jinsun's starshot!")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Star-shot fired by (.+) falls on your ship's deck, metal fragments embedding .+ around thefigurehead.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>ship prompt</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^= Sl Furl - hp 99%,Hl: 99%,Wd SE@24kts,Cr/Sp (\d)\@(\d+),Sea (.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>ship weapons</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>curing on</name>
							<script>send("maintain hull")
send("ship repair hull")
firing = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You call out "Fire!"</string>
								<string>the crewmen swarm over the remnants</string>
								<string>^Fire at what?</string>
								<string>You cease the process of aiming the ship's weapon.</string>
								<string>You've lost sight of your target and stop aiming</string>
								<string>the crewmen swarm over the remnants</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>3</integer>
								<integer>2</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>pop ballista</name>
							<script>--if table.contains(gmcp.Char.Items.List.items, "a ballista") then
  if not firing then
    systemPaused=true
    send("load ballista with dart"..cmdsep.."fire ballista at seamonster")
  elseif not firing and dipped then
   systemPaused=true
    send("load ballista with dart dipped"..cmdsep.."fire ballista")
  end
--end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^With a 'CLICK,' a ballista's mechanisms snap into place</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>pop thrower</name>
							<script>if table.contains(gmcp.Char.Items.List.items, "an Arcanian arm thrower") and throwers then
  if not firing and not dipped and monsterup then
    systemPaused=true
    send("load thrower with disc"..cmdsep.."fire thrower at seamonster")
  elseif not firing and dipped then
     systemPaused=true
    send("load thrower with disc dipped"..cmdsep.."fire thrower")
  end
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>With a 'CLICK,' an Arcanian arm thrower's mechanisms snap into place, and the weapon is once again ready to fire.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>pop onager</name>
							<script>if table.contains(gmcp.Char.Items.List.items, "an onager") and onagers and not nofire then
  if not firing and not dipped and monsterup then
    systemPaused=true
    send("load onager with spidershot"..cmdsep.."fire onager at seamonster")
  end
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>With a 'CLICK,' an onager's mechanisms snap into place, and the weapon is once again ready to fire.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>firing</name>
							<script>firing = true
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You begin the painstaking process of aiming</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>firing off</name>
							<script>firing = false

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You have recovered balance on all limbs.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>wind boost</name>
							<script>send("queue addclear eqbal touch figurehead")
figureheadpower = figureheadpower - 150
echo("\nFigurehead at: " .. figureheadpower .. "\n")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A ray of amethyst light cascades from the ship's figurehead and towards the masts and sails (.*)</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>monster is dead</name>
							<script>send("ship info")
firing = false
monsterup = false
nofire = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>the crewmen swarm over the remnants</string>
								<string>You've lost sight of your target and stop aiming</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>2</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>weapon out of range</name>
							<script>if shipDelay then
  killTimer("shipDelay")
end
if matches[2] == "a ballista" then
  shipDelay = tempTimer(1, [[expandAlias("loadb")]])
elseif matches[2] == "an Arcanian arm thrower" then
  shipDelay = tempTimer(1, [[expandAlias("loadt")]])
elseif matches[2] == "an onager" then
  shipDelay = tempTimer(1, [[expandAlias("loado")]])
end
targetrange = targetrange or 0
targetrange = targetrange + 1
if targetrange == 5 then
  targetrange = 0
  nofire = true
  tempTimer(10, [[nofire = false]])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The target is out of range of (.+).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>thrower out of range</name>
							<script>tempTimer(1, [[expandAlias("loadtd")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The target is out of range of an arcanian arm thrower.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>onager out of range</name>
							<script>tempTimer(1, [[expandAlias("loado")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The target is out of range of an onager.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>monster timer</name>
							<script>cecho("\n&lt;cyan&gt;Monster Timer Started!")
--monsterTimer = tempTimer(600, [[send("pt 10 minutes is up")]])
if ballistas then
  expandAlias("loadb")
elseif throwers then
  expandAlias("loadtd")
elseif onagers then
  expandAlias("loado")
end
monsterup = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A wave crashes over the ship as a massive form emerges from the depths.</string>
								<string>^.+ something shifts in the dark water.$</string>
								<string>A swell rocks your vessel as something rises from the depths.</string>
								<string>A fearfilled silence weighs heavily upon the waves as something shifts in the dark water.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>1</integer>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>stop firing</name>
							<script>if firing then
  send("stop")
  nofire = true
  firing = false
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>==[CAPTAIN'S ANNOUNCEMENT: Stop firing. Another ship hungered.]==</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>bouncing weapons</name>
							<script>weapon_fired = matches[2]
if bouncing then
  if weapon_fired == "a ballista" then
    expandAlias("loadt")
  else
    expandAlias("loadb")
  end
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You call out \"Fire!\" and release the mechanism on (.+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>ship utility</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>repair ship on boarding</name>
							<script>send("ship repair all", false)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You stride up the lowered boarding plank.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>strongbox deposit</name>
							<script>strongboxcurrent = matches[2]
if tonumber(strongboxcurrent) &lt; 20000 then
  strongboxmax = 20000 - strongboxcurrent
  send(
    "open 223217`get 435524 from 223217`open 435524`get gold from 435524`close 435524`put 435524 in 223217"
  )
  send("ship strongbox deposit " .. strongboxmax .. "")
  send(
    "open 223217`get 435524 from 223217`open 435524`put gold in 435524`close 435524`put 435524 in 223217"
  )
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You check the ship's strongbox and see that it has (\d+) gold within,</string>
								<string>You check the ship's strongbox and see that it is empty.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>strongbox withdrawl</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You check the ship's strongbox and see that it has (\d+) gold within,</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>cleared rigging</name>
							<script>send("swing down")
expandAlias("sa Rigging cleared")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>As you remove the final remnants of the chain-shot from the ship, the sails are once again able to be unfurled.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>auto-clear rigging</name>
							<script>expandAlias("climbr")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(Party): Jaeide says, "Clear the rigging!"</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>theft</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>theft complete</name>
						<script>systemPaused=false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>With masterful dexterity, you liberate</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>messages</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>unread messages (old)</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>100</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string> [Msg#]  [From]       [Date]      [Summary]</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>stop (unread msgs)</name>
							<script>setTriggerStayOpen("unread messages", 0)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>*******************************************************************************</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>a message</name>
							<script>selectString(matches[2], 1)
setUnderline(true)
setLink([[send("msg read ]] .. matches[2] .. [[", false)]], "Read msg #" .. matches[2])
resetFormat()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^p? +(\d+)</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>messages list (new layout)</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>900</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>+-Unread Message Summary-</string>
							<string>+-Message Summary for all Folders and Inbox</string>
							<string>+-Message Summary-</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>2</integer>
							<integer>2</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>delete messages</name>
							<script>if selectString(matches[2], 1) &gt; -1 then
  echoLink("D", [[send("msg delete ]] .. matches[2] .. [[", false)]], "msg delete #" .. matches[2])
  resetFormat()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>\| +(\d+)</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>read messages</name>
							<script>if selectString(matches[2], 1) &gt; -1 then
  setUnderline(true)
  setLink([[send("msg read ]] .. matches[2] .. [[", false)]], "read msg #" .. matches[2])
  resetFormat()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>\| +(\d+)</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>stop (unread messages)</name>
							<script>setTriggerStayOpen("messages list (new layout)", 0)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string></string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>7</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>messages</name>
						<script>selectString(multimatches[2][2], 1)
cecho("[ YOU GOT MAIL!! ]")
setUnderline(true)
setLink(
  [[send("msg read ]] .. multimatches[2][2] .. [[", false)]], "read msg #" .. multimatches[2][2]
)
resetFormat()
send("msg read " .. multimatches[2][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You just received message</string>
							<string>^You just received message #(\d+) from (\w+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>have unread messages</name>
						<script>selectString("You have new messages", 1)
setUnderline(true)
setLink([[send("messages unread", false)]], "Read new messages")
resetFormat()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>*** You have new messages ***</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>read more search messages</name>
						<script>selectString(multimatches[2][2], 1)
setLink("send'" .. multimatches[2][2] .. "'", "See " .. multimatches[2][2])
setUnderline(true)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Use MSG SEARCH FROM</string>
							<string>^Use (MSG SEARCH FROM \w+ \d+)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>read more messages</name>
						<script>selectString(multimatches[2][2], 1)
setLink("send'msg list " .. multimatches[2][2] .. "'", "See msg list * " .. multimatches[2][2])
setUnderline(true)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Use MSG LIST</string>
							<string>^Use MSG LIST (\d+) to see more of your message summary\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>read more messages</name>
						<script>selectString(multimatches[2][2], 1)
setLink("send'msg list " .. multimatches[2][2] .. "'", "See msg list * " .. multimatches[2][2])
setUnderline(true)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Use MSG LIST</string>
							<string>^Use MSG LIST * (\d+) to see more of your message summary\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>cleck to read next nsum</name>
						<script>selectString(multimatches[2][2], 1)
setUnderline(true)
setLink([[send("]] .. multimatches[2][2] .. [[", false)]], "Read next summary")
resetFormat()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Enter NSUMMARY</string>
							<string>^Enter (NSUMMARY .+?) to continue\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>click to read article on nsum</name>
						<script>readingsection = multimatches[2][2]</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>2</conditonLineDelta>
						<mStayOpen>999</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>***</string>
							<string>\[ (.+) NEWS SUMMARY \]</string>
							<string>-----</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
							<integer>2</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>stop (click to read article)</name>
							<script>setTriggerStayOpen("click to read article on nsum", 0)
readingsection = nil</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string></string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>7</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>each article</name>
							<script>if not readingsection then
  return
end
selectString(matches[2], 1)
setUnderline(true)
setLink(
  [[send("readnews ]] .. readingsection .. [[ ]] .. matches[2] .. [[")]],
  "Click to read " .. readingsection .. " news #" .. matches[2]
)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\d+)</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>bugs list</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>2</conditonLineDelta>
						<mStayOpen>999</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>ID     Cat Stat Text</string>
							<string>2</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>5</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>bug</name>
							<script>selectString(matches[2], 1)
setUnderline(true)
setLink([[send("showbug ]] .. matches[2] .. [[")]], "Click to show bug #" .. matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\d+)</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>stop (bugs list)</name>
							<script>setTriggerStayOpen("bugs list", 0)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>---------------------</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>says</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ffaa00</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\(((.+))\)\:([\s]+)([A-Za-z-]+)(|([\s\w-]+))(says|say), \"</string>
							<string>^\(((.+))\)\:([\s]+)([A-Za-z-]+)(|([\s\w-]+))(says|say) in .+?, \"</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>breathing</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>breathing</name>
						<script>fortify:update("heldbreath", true)
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You inhale deeply and begin holding your breath.</string>
							<string>[Curing]: HOLD BREATH</string>
							<string>You are already holding your breath.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>other breathing</name>
						<script>if matches[2] ~= target then
  if not DEBUG_MODE then deleteLine() end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) suddenly inhales deeply\.$</string>
							<string>^(\w+) exhales loudly\.$</string>
							<string>^(\w+)  inhales and begins holding h(is|er) breath\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>release (breath)</name>
						<script>fortify:update("heldbreath", false)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You cease holding your breath and exhale loudly.</string>
							<string>What do you wish to release?</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>area runes</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>on a person/ground</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>A rune</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>regex</name>
							<script>local t =
  {
    ["like an open eye"] = {rune = "wunjo", effect = "cure blind"},
    ["that looks like a stick man"] = {rune = "inguz", effect = "paralysis"},
    ["shaped like a butterfly"] = {rune = "nairat", effect = "transfix"},
    ["like a closed eye"] =
      {
        rune = "fehu",
        effect =
          function()
            if not fehu or fehu == 3 then
              fehu = 1
              return "strip insomnia"
            elseif fehu == 1 then
              fehu = 2
              return "sleep"
            elseif fehu == 2 then
              fehu = 3
              return "strip kola"
            end
          end,
      },
    ["resembling a bell"] = {rune = "mannaz", effect = "cure deaf"},
    ["that looks like a nail"] = {rune = "sowulu", effect = "damage"},
    ["that looks like something out of your nightmares"] = {rune = "kena", effect = "fear"},
    ["shaped like a viper"] = {rune = "sleizak", effect = "voyria"},
    ["resembling an apple core"] = {rune = "loshre", effect = "anorexia"},
    ["resembling a square box"] = {rune = "pithakhan", effect = "drain mana"},
    ["like a lightning bolt"] = {rune = "uruz", effect = "heal"},
    ["resembling a leech"] = {rune = "nauthiz", effect = "hunger"},
    ["like an upward-pointing arrow"] = {rune = "tiwaz", effect = "defence strip"},
    ["shaped like a mighty oak"] = {rune = "jera", effect = "+1 con and str"},
    ["resembling an elk"] = {rune = "algiz", effect = "10% dmg reduction"},
    ["like a lion"] = {rune = "berkana", effect = "lvl 1 health regen"},
    ["resembling a horse"] = {rune = "raido", effect = "ride home"},
    ["like a flurry of lightning bolts"] = {rune = "isaz", effect = "throws off balance"},
    ["like a rising sun"] = {rune = "dagaz", effect = "heals affs"},
    ["shaped like a yew"] = {rune = "eihwaz", effect = "removes vibes"},
    ["resembling a volcano"] = {rune = "thurisaz", effect = "hits a person"},
  }
for i = 1, #matches, 2 do
  local rune = matches[i + 1]
  local line = matches[i]
  local pos = selectString(line, 1)
  moveCursor("main", pos + #line - 1, getLineNumber())
  if t[rune] then
    cinsertText(
      string.format(
        " &lt;blue&gt;(&lt;grey&gt;%s&lt;white&gt;: %s&lt;blue&gt;)",
        t[rune].rune,
        type(t[rune].effect) == "function" and t[rune].effect() or t[rune].effect
      )
    )
    if rune == "berkana" then
      raiseEvent("gmcp.Char.Vitals")
    end
  else
    --cinsertText(" &lt;blue&gt;(&lt;yellow&gt;unknown!&lt;blue&gt;)")
  end
end
deselect()
resetFormat()
moveCursorEnd()
--prompttrigger("clear fehu", function() fehu = nil end)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A rune (.+?) has been sketched onto (\w+)\.</string>
								<string>A rune (.+?) has been sketched into the ground here\.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>totem</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>A rune</string>
							<string>^A rune (.+) is sketched in slot \d+\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>vendor</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>refill tun</name>
						<script>cecho("&lt;red&gt;((&lt;green&gt;-Refilled " .. matches[2] .. "-&lt;red&gt;))")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You carefully turn .+? and refill .+? with (.+)\.$</string>
							<string>^You pay \d+ gold sovereigns and fill your rift with (\d+) sips of an elixir of health from .+, bringing the total in your rift to (\d+).$</string>
							<string>^You pay \d+ gold sovereigns and fill your rift with (\d+) applications of .+, bringing the total in your rift to (\d+).$</string>
							<string>^You pay \d+ gold sovereigns and fill your rift with (\d+) sips .+, bringing the total in your rift to (\d+).$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>rift full</name>
						<script>cecho("&lt;red&gt;((&lt;green&gt; --RIFT FULL--&lt;red&gt;))")

</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your rift contains as much of that fluid as is currently possible for you.</string>
							<string>Your rift is too full.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>refill rift</name>
						<script>cecho("&lt;red&gt;((&lt;green&gt;-Refilled Rift " .. matches[2] .. "-&lt;red&gt;))")


</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You pay 300 gold sovereigns and fill your rift with 200 sips of an elixir of mana from a copper-banded oak tun, bringing the total in your rift to 1929.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Credits For Sale</name>
						<script>if not DEBUG_MODE then deleteLine() end
creditMarket = {
	available = 0,
	handGold = tonumber(gmcp.Char.Status.gold),
	bankGold = tonumber(gmcp.Char.Status.bank),
	avgPrice = 0,
	totalTB = 0,
	totalSpent = 0
}
cecho("\n&lt;DarkSlateBlue&gt; ~~~~~~~~~~~~~~* &lt;DimGrey&gt;Achaea Credit Market &lt;DarkSlateBlue&gt;*~~~~~~~~~~~~~~")
cecho("\n&lt;DimGrey&gt;"..string.rep(" ", 44-string.len(creditMarket.handGold)).."Balance: &lt;gold&gt;"..creditMarket.handGold)
cecho("\n&lt;DarkSlateBlue&gt; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>99</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Credits currently available for purchase:</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Capture Credits</name>
							<script>if not DEBUG_MODE then deleteLine() end
local amt, price = tonumber(matches[2]), tonumber(matches[3])
creditMarket.available = creditMarket.available + amt

cecho("\n&lt;LightSkyBlue&gt; "..utf8.char(187).." &lt;DimGrey&gt;"..amt..string.rep(" ", 4-string.len(amt)).." @ "..price.."g")

local canBuy = 0

for cr=1, amt do creditMarket.avgPrice = creditMarket.avgPrice + price end


while creditMarket.handGold &gt; price do
	if canBuy &lt; amt then
		canBuy = canBuy + 1
		creditMarket.handGold = creditMarket.handGold - price
		creditMarket.totalSpent = creditMarket.totalSpent + price
	else
		break
	end
end

creditMarket.totalTB = creditMarket.totalTB + canBuy

cecho(string.rep(" ", 6-string.len(price)).."&lt;DarkGreen&gt;- &lt;DimGrey&gt;Can buy"..string.rep(" ", 3-string.len(canBuy)).."&lt;gold&gt;"..canBuy.."&lt;DimGrey&gt; with ")
cecho("&lt;goldenrod&gt;"..string.rep(" ", 8-string.len(creditMarket.handGold))..creditMarket.handGold.." &lt;DimGrey&gt;gold left.")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\s+(\d+) credits? at (\d+) gold per credit.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Stop Capturing Credits</name>
							<script>if not DEBUG_MODE then deleteLine() end
cecho("\n &lt;DarkSlateBlue&gt;"..string.rep("~", 52))
cecho("\n&lt;DimGrey&gt; Can buy a total of &lt;gold&gt;"..creditMarket.totalTB.."&lt;DimGrey&gt;cr for &lt;gold&gt;"..creditMarket.totalSpent.."&lt;DimGrey&gt; gold.")
cecho("\n &lt;DarkSlateBlue&gt;"..string.rep("~", 52))
echo("\n"..line)
setTriggerStayOpen("Credits for Sale", 0)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Total credits for sale: (.+).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>comms</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>deleteChatPrompt</name>
						<script>if not DEBUG_MODE then deleteFull() end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You tell (\w+)\, \"(.*)\"$</string>
							<string>^tells you\, \"(.+)\"$</string>
							<string>^\(Eleusis\)\: (.+)$</string>
							<string>^\(The Saiha\)\: (.+)</string>
							<string>^\(Market\)\: (\w+) says\, \"(.*)\"$</string>
							<string>^([A-Z][a-z]+) tells you</string>
							<string>^You happily tell (.+)\, \"(.+)\"</string>
							<string>^(\w+) laughingly tells you\, \"(.+)\"</string>
							<string>^(\w+) tells you in Eleusian\, \"(.+)\"</string>
							<string>^(\w+)'s voice sizzles as (\w+) tells you\, \"(.+)\"</string>
							<string>^(\w+) happily tells you\, \"(.+)\"</string>
							<string>^You tell (\w+) in Eleusian\, \"(.+)\"</string>
							<string>^You jokingly tell (\w+)\, \"(.+)\"</string>
							<string>^(\w+)'s voice quietly thrums in your mind as \w+ tells you\, \"(.+)\"$</string>
							<string>^(\w+)'s voice (.+) as \w+ tells you\, \"(.+)\"$</string>
							<string>^\(Party\): You say\, \"(.+)\"$</string>
							<string>^\(Party\): (\w+) says\, \"(.+)\"</string>
							<string>^With sharp, crackling tones, you tell (\w+)\, \"(.*)\"$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>a friend in the house</name>
						<script>selectString(line, 1)
setBold(true)
bg("white")
fg("red")
resetFormat()
deselect()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>@@ .+ has entered the realms. @@</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>clickable URL's</name>
						<script>-- credit to: http://forums.mudlet.org/viewtopic.php?f=6&amp;t=1818#p9641
for i, v in ipairs(matches) do
  if selectString(matches[i], 1) ~= -1 then
    setLink([[openUrl("]] .. matches[i] .. [[")]], matches[i])
    setUnderline(true)
  end
end
deselect()
resetFormat()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>\b(?:(?:(?:[Hh]ttps?|ftp|telnet)://[\w\d:#@%/;$()~_?\+\-=&amp;]+|www|ftp)(?:\.[\w\d:#@%/;$()~_?\+\-=&amp;]+)+|[\w\d._%+\-]+@[\w\d.\-]+\.[\w]{2,4})\b</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>says</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff5500</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\(((.+))\)\:([\s]+)([A-Za-z-]+)(|([\s\w-]+))(says|say), \"</string>
							<string>^\(((.+))\)\:([\s]+)([A-Za-z-]+)(|([\s\w-]+))(says|say) in .+?, \"</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>MXP Links</name>
						<script>local link = matches[2]
if string.ends(link, [[.]]) then
  link = string.cut(link, string.len(link) - 1)
end
selectString(link, 1)
setUnderline(true)
setLink([[openUrl( "]] .. link .. [[" )]], "Open URL: " .. link)
deselect()
resetFormat()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>((?:[hH][tT][tT][pP][sS]?://|[wW]{3})[-\w\d\.]+\.\w{2,4}[-\.\?!\w\d/\\=%~&amp;:#_,]*)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>flags</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>CTF flag planted</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#550000</mFgColor>
						<mBgColor>#55ffff</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>A flag emblazoned with the Owl stands here, waving in the breeze.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>uproot warning</name>
						<script>cecho("&lt;white:black&gt;" .. matches[2] .. " uprooting!")
cecho("&lt;white:black&gt;" .. matches[2] .. " uprooting!")
cecho("&lt;white:black&gt;" .. matches[2] .. " uprooting!")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) begins uprooting a flag\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>plant warning</name>
						<script>cecho("&lt;white:black&gt;" .. matches[2] .. " planting!")
cecho("&lt;white:black&gt;" .. matches[2] .. " planting!")
cecho("&lt;white:black&gt;" .. matches[2] .. " planting!")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) begins planting a flag!$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>flag uprooted</name>
						<script>cecho("&lt;white:black&gt;" .. matches[2] .. " dropped flag! Retrieve it!!")
cecho("&lt;purple:black&gt;" .. matches[2] .. " dropped flag! Retrieve it!!")
cecho("&lt;white:black&gt;" .. matches[2] .. " dropped flag! Retrieve it!!")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A flag emblazoned with the Owl falls from (\w+)'s person\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>someone got flag</name>
						<script>cecho("&lt;white:black&gt;" .. matches[2] .. " uprooted flag!!")
cecho("&lt;white:black&gt;" .. matches[2] .. " uprooted flag!!")
cecho("&lt;white:black&gt;" .. matches[2] .. " uprooted flag!!")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^The flag has been UPROOTED by (\w+)!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>stopped uprooting</name>
						<script>cecho("&lt;white:black&gt;" .. matches[2] .. " stopped uprooting !!")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) stops uprooting the flag\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>flag planted</name>
						<script>cecho("&lt;red:green&gt;" .. matches[2] .. " FLAG PLANTED!!")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You have planted the flag!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>KoTH flag</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#55557f</mFgColor>
						<mBgColor>#55ffff</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>A magnificent flag, emblazoned with a shining crown, is lying here.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>KoTH start</name>
						<script>mmp.pdb.Hill = matches[2]
echo(string.rep(" ", 50 - #line))
echo("gotop hill")
send("gotop hill")
raiseEvent("mmapper updated pdb")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^The HILL is at: (.+)!$</string>
							<string>^The HILL has moved! It is now at: (.+)!$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>KoTH</name>
						<script>mmp.pdb_lastupdate = {}</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Current event: King of the Hill</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Hill</name>
							<script>mmp.pdb.Hill = matches[2]
echo(string.rep(" ", 60 - #line))
echo("gotop hill")
send("gotop hill")
raiseEvent("mmapper updated pdb")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The HILL for this game is: (.+)</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Flag</name>
							<script>mmp.pdb.Flag = matches[2]
echo(string.rep(" ", 60 - #line))
echo("gotop flag")
send("gotop flag")
raiseEvent("mmapper updated pdb")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Flag Location: (.+?)\.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>city bounty list</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName>City Bounty List v2</packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>city bounty list</name>
						<script>cecho("  &lt;blue&gt;Reset bounty list")
city_bounties = {}</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>99</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Bounty#    Target          Reason                             Claimed   Reward</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>capture name + amount</name>
							<script>if matches[5] ~= "Y" then
  city_bounties[matches[3]] = {matches[6], matches[2]}
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\d+)\s+(\w+)\s+(.+)(Y|N)\s+(\d+)</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>close bounty list</name>
							<script>setTriggerStayOpen("city bounty list", 0)
cecho("&lt;blue&gt;   Bounty retrieval completed.")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>return isPrompt()</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>list tracked bounties</name>
						<script>people_online = {}
for token in multimatches[1][2]:gmatch("%w+") do
  table.insert(people_online, token)
end
table.insert(people_online, multimatches[1][3])
if city_bounties then
  cecho("\n&lt;gold&gt;- Bounties online -")
  for i, v in pairs(city_bounties) do
    local gcr
    local getClass = "None"
    --grabPlayerClass(i)
    if tonumber(city_bounties[i][1]) &lt; 100 then
      gcr = "&lt;red&gt;c"
    else
      gcr = "&lt;goldenrod&gt;g"
    end
    if table.contains(people_online, i) then
      cecho(
        "\n   &lt;white&gt;(&lt;purple&gt;" ..
        city_bounties[i][2] ..
        "&lt;white&gt;) " ..
        string.rep(" ", 3 - string.len(city_bounties[i][2])) ..
        "- &lt;red&gt;" ..
        i ..
        "&lt;white&gt;" ..
        string.rep(".", 12 - string.len(i)) ..
        " &lt;orange&gt;bounty at &lt;green&gt;" ..
        city_bounties[i][1] ..
        gcr
      )
      cecho(
        string.rep(" ", 7 - string.len(city_bounties[i][1])) ..
        "&lt;NavajoWhite&gt;- (" ..
        (getClass) ..
        ")"
      )
    end
  end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(.+) and (\w+).$</string>
							<string>^Plus another \d+ whose presence you cannot fully sense</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>wilderness</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>GMCP Map Catchers</name>
						<script>--GUI.wilderness:clear()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>return gmcp.Room</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>4</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>GMCP Rooms</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>return gmcp.Room.Info.num &lt; 2121028</string>
								<string>return gmcp.Room.Info.num &gt; 0</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>4</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>GMCP Wilderness</name>
							<script>--GUI.mapwindow:activateTab("Wilderness")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>25</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>return gmcp.Room.Info.num &gt; 2121028</string>
								<string>return gmcp.Room.Info.coords==""</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>4</integer>
								<integer>4</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Catch All</name>
								<script>local window = "wilderness"

--selectString(line, 1)
--setBgColor(getBgColor()) -- preserve the background color in the replacement
--setFgColor(getFgColor()) -- preserve the foreground color in the replacement
--replace(" "..line) 

if flying then
  GUI.wilderness:setFontSize(10)
else
  GUI.wilderness:setFontSize(16)
end

selectCurrentLine()
copy()
appendBuffer(window)
if not DEBUG_MODE then deleteLine() end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^[ wnmjSIMXWYx',;#=@~%!\.\^\|\*\?\+\(]+$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>GMCP Oceans</name>
							<script>--GUI.mapwindow:activateTab("Ocean")
--GUI.ocean:clear()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>27</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>return gmcp.Room.Info.environment=='Vessel'</string>
								<string>return gmcp.Room.Info.num==-2</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>4</integer>
								<integer>4</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Catch All</name>
								<script>local window = "ocean"
GUI.ocean:setFontSize(10)

selectCurrentLine()
copy()
appendBuffer(window)
if not DEBUG_MODE then deleteLine() end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^[ wnmjSIMXWYx',;#=@~%!\.\^\|\*\?\+\(]+$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Ship Room Detected</name>
						<script>clearWindow("wilderness") </script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The ship moves</string>
							<string>The ship drifts</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>2</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>activate mainland tab</name>
						<script>GUI.mapwindow:activateTab("Mainland")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You disembark the ship via the lowered gangplank.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>activate wilderness tab</name>
						<script>GUI.mapwindow:activateTab("Wilderness")
GUI.wilderness:setFontSize(16)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You find what you were looking for, and prepare to pass into the wilderness.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>activate ocean tab</name>
						<script>GUI.mapwindow:activateTab("Ocean")
GUI.ocean:setFontSize(10)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You stride up the lowered boarding plank.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>flying</name>
						<script>clearWindow("wilderness") 
flying = true
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You begin to flap your wings powerfully, and rise quickly up into the firmament.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>landing</name>
						<script>clearWindow("wilderness") 
flying = false

</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You begin to descend, the wind whistling past you as the earth draws ever closer. You land easily, back on the ground again.</string>
							<string>You are not flying, my friend.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>instakills</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>radianced!!</name>
						<script>boxDisplay(" BIENG RADIANCED ", "red:white")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>A shiver runs down your spine, and you feel an instinctive urge to run as far and fast as you can.</string>
							<string>A shimmering image of the face of (\w+) appears fleetingly before you, frowning in concentration.</string>
							<string>Sparks of multicoloured light begin to dance in your mind.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>1</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>behead</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>behead start</name>
							<script>boxDisplay(matches[2] .. " beheading started", "red:white")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([A-Z][a-z]+) raises (\w+) \w+ over (\w+) head and begins to swing it in a wide circle, gaining speed as (\w+) goes\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>behead two</name>
							<script>boxDisplay(matches[2] .. " beheading someone", "red:white")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([A-Z][a-z]+) masterfully adds heavier, darker tones to (\w+) song, which rises and falls with a melancholy rhythm\.$</string>
								<string>^([A-Z][a-z]+) moves into the deeply mournful yet glorious tones of a funeral mass, directing the performance\.$</string>
								<string>^([A-Z][a-z]+) raises an? .+ over you to pass judgement on your sins, and it begins to crackle with righteous fire\.$</string>
								<string>^([A-Z][a-z]+) raises (\w+) .+ over (\w+) head and begins to swing it in a wide circle, gaining speed as s?he goes\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>beheading you</name>
							<script>boxDisplay(matches[2] .. " beheading you", "red:white")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([A-Z][a-z]+) begins to bear down on you with (\w+) .+\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>devour</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>devour start</name>
							<script>boxDisplay(matches[2] .. " devouring someone", "red:white")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A deathly calm descends upon your surroundings as (\w+) draws (\w+) up regally, eyes gleaming with murderous intent\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>devour two</name>
							<script>boxDisplay(multimatches[2][2] .. " devouring you", "red:white")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^In a single, sinuous motion, (\w+) manoeuvres (\w+) imposing form to encircle your feet, fixing you with a penetrating gaze as (\w+) tremendous jaws open wide\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>devour someone else</name>
							<script>boxDisplay(matches[2] .. " devouring someone", "red:white")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^In a single, sinuous motion, (\w+) manoeuvres (\w+) imposing form to encircle (\w+)'s feet, fixing (\w+) with a penetrating gaze as (\w+) tremendous jaws open wide\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>deathstrike</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>death strike</name>
							<script>boxDisplay(multimatches[2][2] .. " deathstriking you", "red:white")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Fists clenched,</string>
								<string>^Fists clenched, (\w+) focuses on you with a deadly look in (\w+) eyes\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>deathstrike two</name>
							<script>boxDisplay(multimatches[2][2] .. " is still deathstriking you", "red:white")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Leaping forwards with lightning speed, </string>
								<string>^Leaping forwards with lightning speed, (\w+) strikes you in the chest with a single, powerful blow\. Its rhythm interrupted by (\w+) precise attack, your heartbeat begins to fluctuate erratically, a painful pressure building in your arteries\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>eliminate</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>eliminate start</name>
							<script>boxDisplay(multimatches[2][2] .. " eliminating you", "red:white")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>With a daegger in hand,</string>
								<string>^With a daegger in hand, (\w+) begins to close in on you\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>eliminate two</name>
							<script>boxDisplay(multimatches[2][2] .. " is still eliminating you", "red:white")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The blade on the daegger splits into a semblance of teeth as</string>
								<string>^The blade on the daegger splits into a semblance of teeth as (\w+) prepares for the final strike\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>holocaust</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>holo</name>
							<script>boxDisplay("Made Holobomb", "red:white")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) fashions a holocaust globe out of pure elemental fire and arms it\.$</string>
								<string>^(\w+) fashions a sphere of crackling electricity and arms it\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>holocaust fell down</name>
							<script>boxDisplay("holobomb landed", "red:white")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#000000</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A holocaust globe comes falling down from above to land with a 'THUMP.'</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>death tarot</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>death start</name>
							<script>boxDisplay(matches[2] .. ": started death tarot", "red:white")
tempTimer(4, [[	
						boxDisplay("DEATH-TAROT [4 - SECS] ","red:white")
					]])
tempTimer(5, [[	
						boxDisplay("DEATH-TAROT [3 - SECS] ","red:white")
					]])
tempTimer(6, [[	
						boxDisplay("DEATH-TAROT [2 - SECS] ","red:white")
					]])
tempTimer(7, [[
						boxDisplay("DEATH-TAROT [1 - SECS] ","red:white")
					]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) flings a tarot card at you and upon impact, it disappears\. An ominous silence overtakes your surroundings\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>death rub</name>
							<script>boxDisplay(matches[2] .. ": MAKING DEATH-TAROT", "red:white")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) rubs a tarot card on your arm\. You feel slightly nauseated and drained\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>execute</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>execute</name>
							<script>boxDisplay(multimatches[2][2] .. "executing you", "red:white")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^With a pop of (\w+) knuckles, (\w+) buries (\w+) foot under your back and flips you overonto your stomach\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>execute two</name>
							<script>boxDisplay(multimatches[2][2] .. "is still executing you", "red:white")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Holding your head up</string>
								<string>^Holding your head up, (\w+) snaps (\w+) wrist, sending (\w+) whip to wrap around your neck\. (\w+) casually places (\w+) foot upon the small of your back and jerks the whip viciously backwards so that it bites deeply into your throat\. Blood streams down from your shattered windpipe as you gasp uselessly for air\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>funeral mass</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>funeral mass start</name>
							<script>boxDisplay(matches[2] .. " funeral mass", "red:white")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) moves into the deeply mournful yet glorious tones of a funeral mass, directing the performance towards (\w+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>funeral mass continuation</name>
							<script>boxDisplay(matches[2] .. " still funeral massing you ", "red:white")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) masterfully adds heavier, darker tones to (\w+) song, which rises and falls with a melancholy rhythm\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>heartseed</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>heartseed</name>
							<script>boxDisplay(matches[2] .. "!!heartseeding you!!", "red:white")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Lunging forward with one palm outstretched,</string>
								<string>^Lunging forward with one palm outstretched, (\w+) aims a blow at your heart\. A warm pulse accompanies (\w+) attack, leaving a dull ache in your chest\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>heartseed two</name>
							<script>boxDisplay("!!HAVE HEARTSEED!!", "red:white")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The sickening sensation of something writhing and growing within your chest overwhelms you, radiating throughout your body from your palpitating heart.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>jack-in-the-box</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>jack-in-the-box start</name>
							<script>if matches[3] ~= gmcp.Char.Name.name then
  return
end
boxDisplay(matches[2] .. " Jack-in-the-Box You", "red:white")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) sets a jack\-in\-the\-box on the ground and quickly winds it while whispering, '(\w+)\.' The cheerful music of a lute begins to emanate from it\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>jack-in-the-box two</name>
							<script>if multimatches[2][2] ~= gmcp.Char.Name.name then
  return
end
boxDisplay(matches[2] .. " Jack-in-the-Box You", "red:white")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The music of the jack-in-the-box becomes faster and more frantic and a loud voice from within yells, </string>
								<string>^The music of the jack\-in\-the\-box becomes faster and more frantic and a loud voice from within yells, "(\w+), I'm a-cooomiiiiing!"$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>reave</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>reave started</name>
							<script>boxDisplay(matches[2] .. " REAVING YOU", "red:white")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A sudden nausea and lightheadedness takes hold of your body, and you struggle to hold on to consciousness under (\w+)'s assault\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>shatter</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>shatter start</name>
							<script>boxDisplay(matches[2] .. " Shattering You", "red:white")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) pulls back a.+, readying (\w+) for a deadly strike\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>aoe</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>fulmination on ground</name>
						<script>selectString(line, 1)
setBold(true)
setItalics(true)
bg("black")
fg("red")
resetFormat()
deselect()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>A sphere of crackling electricity has coalesced.</string>
							<string>There are \d+ fulminations sphere here\.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>holocaust on ground</name>
						<script>boxDisplay("holobomb Landed", "red:white")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>(A holocaust globe is here\.)</string>
							<string>(There are \d+ holocaust globes here\.)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>ice</name>
						<script>boxDisplay(matches[2], "cyan:white")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>(The ground is slick with ice\.)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Walls</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Icewall Detected</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ffffff</mFgColor>
							<mBgColor>#0000de</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>An icewall is here, blocking passage to the (\w+)\.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Ice Wall Direction</name>
								<script>if not table.contains(Legacy.Room.Walls.Ice, Legacy.Room.directionTable[matches[2]:lower()]) then
  table.insert(Legacy.Room.Walls.Ice, Legacy.Room.directionTable[matches[2]:lower()])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ffffff</mFgColor>
								<mBgColor>#0000de</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>(\w+)</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Firewall Detected</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ffffff</mFgColor>
							<mBgColor>#630000</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A scorching wall of fire stands here, blocking passage to the (\w+)\.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Fire Wall Direction</name>
								<script>if not table.contains(Legacy.Room.Walls.Fire, Legacy.Room.directionTable[matches[2]:lower()]) then
  table.insert(Legacy.Room.Walls.Fire, Legacy.Room.directionTable[matches[2]:lower()])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ffffff</mFgColor>
								<mBgColor>#5e0000</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>(\w+)</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Thornwall Detected</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A large wall of thorns stands here, barring passage to the (\w+)\.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Thornwall Northeast</name>
								<script>if not table.contains(Legacy.Room.Walls.Thorn, Legacy.Room.directionTable[matches[2]:lower()]) then
  table.insert(Legacy.Room.Walls.Thorn, Legacy.Room.directionTable[matches[2]:lower()])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>(\w+)</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Stonewall Detected</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A large wall of stone stands here, blocking passage to the (\w+)\.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Stone Wall Direction</name>
								<script>if not table.contains(Legacy.Room.Walls.Stone, Legacy.Room.directionTable[matches[2]:lower()]) then
  table.insert(Legacy.Room.Walls.Stone, Legacy.Room.directionTable[matches[2]:lower()])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ffffff</mFgColor>
								<mBgColor>#2f2f2f</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>(\w+)</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
					</TriggerGroup>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>show icewalls</name>
						<script>selectString(line, 1)
fg("cyan")
setBgColor(0, 0, 127)
selectString(multimatches[2][2], 1)
setFgColor(255, 255, 255)
resetFormat()
deselect()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>An icewall suddenly forms to the</string>
							<string>(\w+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>highlight icewalls</name>
						<script>for i = 1, #matches, 2 do
  selectString(matches[i], 1)
  setFgColor(85, 170, 255)
  selectString(matches[i + 1], 1)
  fg("white")
  resetFormat()
  deselect()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>An icewall is here, blocking passage to the (\w+)\.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>highlight firewalls</name>
						<script>for i = 1, #matches, 2 do
  selectString(matches[i], 1)
  setFgColor(255, 51, 102)
  selectString(matches[i + 1], 1)
  fg("white")
  resetFormat()
  deselect()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>A scorching wall of fire stands here, blocking passage to the (\w+)\.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>highlight stonewall</name>
						<script>for i = 1, #matches, 2 do
  selectString(matches[i], 1)
  setFgColor(150, 151, 150)
  selectString(matches[i + 1], 1)
  fg("white")
  resetFormat()
  deselect()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>A large wall of stone stands here, blocking passage to the (\w+)\.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>icewall</name>
						<script>boxDisplay("icewall to the " .. matches[4] .. "!!!", "cyan:white")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) raises (\w+) hands dramatically and summons an icewall to the (\w+).$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>vinewreathe</name>
						<script>boxDisplay("vinewreathed!!!", "red:white")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Uttering a quiet recitation, (\w+) gestures towards you. A mass of writhing vines burst forth from the ground, grabbing hold of your form.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>fumes</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#fa00bc</mFgColor>
						<mBgColor>#aa0000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string> A stinking noxious cloud floats here.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>shrine travel</name>
						<script>boxDisplay("enemies incoming", "purple:white")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A shrine of (\w+) begins to glow from within...$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>dragon-breath</name>
						<script>boxDisplay("dragon breath; AOE! (gtfo)", "red:white")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#55ff00</mFgColor>
						<mBgColor>#ff0000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^((\w+)'s powerful chest expands as (\w+) takes a mighty breath,)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>room attacks</name>
						<script>boxDisplay("room attack successful", "red:white")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#0055ff</mFgColor>
						<mBgColor>#00ffff</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(You drain the heat from the air around your enemies, causing them to experience the cold of the abyss itself.)$</string>
							<string>^(Summoning the elemental powers of air and water, you bring a hailstorm down upon those around you.)</string>
							<string>^(Drawing a mighty breath to fill your lungs, you crane your neck backwards and send a screaming volley of psi-infused vapour into the air.)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>grovesummon</name>
						<script>boxDisplay("grove summon! move!", "red:white")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#00ff00</mFgColor>
						<mBgColor>#ffffff</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(The forest leaves rustle about you menacingly as the undergrowth appears to close in on you.)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>portals</name>
						<script>boxDisplay(tostring(matches[2]), "purple:white")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#0000ff</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The beginnings of (a fiery portal) appear before you\.</string>
							<string>(A fiery portal) opens in the air before you\.</string>
							<string>(A gateway of light) blazes into existence before your eyes\.</string>
							<string>Gray feathers begin to swirl into the shape of (an arched portal) before you\.</string>
							<string>With a final burst, the feathers swirl into the shape of (an archway and a portal) opens within\.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>portals</name>
						<script>boxDisplay(tostring(matches[2]) .. " Opening Portal", "purple:white")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) draws a circle in the air with (\w+) wand, and a fiery outline appears\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>shackle</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>remove shackle</name>
						<script>shackleworn = 0
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You remove a shackle of Garash\.$</string>
							<string>What do you wish to remove?</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>wear shackle</name>
						<script>shackleworn = 1
if mmp.settings.dash then
  expandAlias("mconfig dash no")
end
--def_list.free.mass.keepup=false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#00aa00</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You are now wearing a shackle of Garash\.$</string>
							<string>You are much too heavy to sprint or dash anywhere.</string>
							<string>You are much too heavy to allow your mount to gallop.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>wear shackle</name>
						<script>if not mistralform then
	send("wear shackle")
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#00aa00</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You have recovered your wind and are breathing normally once again\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>remove shackle</name>
						<script>if not mistralform then
	send("remove shackle")
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You are gasping for breath\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>meteors</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>meteor in sky</name>
						<script>boxDisplay("Meteor in sky", "red:white")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>99</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>In the sky high above, you hear a high-pitched keening sound, and are appalled to see a flaming meteor streaking towards the ground.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>meteor launch</name>
						<script>if not DEBUG_MODE then deleteLine() end
boxDisplay(matches[2] .. " launched a meteor", "red:white")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) pulls back (\w+) bow and releases a meteor arrow high into the sky\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>bombs</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>bombs</name>
						<script>send("combine bomb"..cmdsep.."combine bomb"..cmdsep.."put group bomb in pack"..cmdsep.."put group bomb in pack"..cmdsep.."put bomb in pack")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([A-Z][a-z]+) gives \w+ \w+ bombs to you\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>bombs 2</name>
						<script>send("combine bomb"..cmdsep.."combine bomb"..cmdsep.."put group bomb in pack"..cmdsep.."put group bomb in pack"..cmdsep.."put bomb in pack")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([A-Z][a-z]+) gives a?n? \w+ bomb to you\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>bombs group</name>
						<script>send("combine bomb"..cmdsep.."combine bomb"..cmdsep.."put group bomb in pack"..cmdsep.."put group bomb in pack"..cmdsep.."put bomb in pack")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([A-Z][a-z]+) gives a group of \d+ \w+ bombs? to you\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>talisman</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Talisman List</name>
						<script>talisman.more = 0
talisman.reset()
--talisman.settings.color = "red"</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>2</conditonLineDelta>
						<mStayOpen>999</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Num   Name                              Level Set        Keyword    </string>
							<string>----------------------------------------------------------------------------------</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>3</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Talisman Item</name>
							<script>talisman.add(matches[5], matches[4], tonumber(matches[3]), matches[2])
if not DEBUG_MODE then deleteLine() end
-- 1 a Blue Dragon's claw                   5     Dragon     bluedragonclaw</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(P|Q|B|F|R)?\s*(\d+) .+\s+(\d+)\s+(?:\w+\s+)?(\w+)</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Talisman More</name>
							<script>talisman.more = 1
deleteLineP()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>[Type MORE if you wish to continue reading.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Talisman Prompt</name>
							<script>if talisman.more==1 then
	send("more")
	talisman.more = 2
elseif talisman.more==0 then
	setTriggerStayOpen("Talisman List", 0)
	cecho("Talisman list complete")
--  disableTrigger("TalismanV6")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string></string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>7</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Talisman Continued</name>
							<script>talisman.more = 0
deleteLineP()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>[File continued via MORE]</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Talisman Found</name>
						<script>--talisman.highlight()
local talismankey = talisman.getkey(multimatches[2][2])
if talismankey then
	local initcount = talisman.getcount(talismankey)
	talisman.announce(talismankey, tonumber(multimatches[2][3]))
	talisman.add(talismankey, tonumber(multimatches[2][3]), 1)
	if layout then
		layout.chatAppend(string.format("&lt;CadetBlue&gt;%s (%d)(%s)\n", line, talisman.getcount(talismankey), (Denizen or "?")), true)
	end
elseif layout then
	layout.chatAppend(string.format("&lt;CadetBlue&gt;%s (unknown?)\n", line))
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You have found </string>
							<string>^You have found (.+) \(level (\d+)\) talisman piece!$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Talisman Trade In</name>
						<script>talisman.highlight()
local talismankey = talisman.getkey(multimatches[2][4])
if talismankey then
	talisman.announce(talismankey, tonumber(multimatches[2][3]))
	talisman.add(talismankey, tonumber(multimatches[2][3]), 1)
end
if layout then
	layout.chatAppend("&lt;CadetBlue&gt;"..line.."\n")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>has traded the level</string>
							<string>^(\w+) has traded the level (\d+) piece '(.+)' to you\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Talisman Trade Out</name>
						<script>-- NOTE: this trigger does not remove pieces.. We assume you used the trade alias, which removed them
-- This means you should not manually trade or it will lose track of pieces.
talisman.highlight()
local talismankey = talisman.getkey(multimatches[2][3])
if talismankey then
	talisman.announce(talismankey, 0)
end
if layout then
	layout.chatAppend("&lt;CadetBlue&gt;"..line.."\n", true)
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You trade the level </string>
							<string>^You trade the level (\d+) piece (.+) to (\w+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Talisman Cache Opened</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>10</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>As you open a supreme talisman cache a bright light shines from within.</string>
							<string>As you open an interlocked cache a bright light shines from within.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>End of Cache</name>
							<script>setTriggerStayOpen("Talisman List", 0)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>return isPrompt()</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>7</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New Talisman Piece</name>
							<script>local talismankey = talisman.getkey(matches[2])
talisman.add(talismankey, 1, 1)
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You have been awarded with (.+) talisman piece\!$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>casino</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>BEGIN BLACKJACK</name>
						<script>bet = initialbet
enableTrigger("BLACKJACK")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You take a seat at the blackjack table and prepare to gamble.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>END BLACKJACK</name>
						<script>disableTrigger("BLACKJACK")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You leave the blackjack table.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>BLACKJACK</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>BET</name>
							<script>dealer = matches[2]
expandAlias("ggold")
send("bet "..bet.." gold")
expandAlias("sgold")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(.*) says, "Place your bets! Place your bets!"$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>WON</name>
							<script>bet = bet * 2</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You won! (.*) hands you (\d+) gold sovereigns, and you collect your bet.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>LOST</name>
							<script>bet = initialbet</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Your hand lost to (.*) who collects your bet.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>player hand dealt</name>
							<script>local hand = {matches[2], matches[3]}
player_hand = hand
player_total = compute_player_total(hand)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Hugo\, the Ace\'s blackjack dealer deals you (?:a|an) (.+) and (?:a|an) (.+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>dealer's up card</name>
							<script>dealer_card_description = matches[2]
dealer_card = get_card_value(dealer_card_description)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^He deals himself two cards. The up card is (?:a|an) (.+).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>HIT STAND DOUBLE</name>
							<script>local action = determine_action_hit_stand_double(dealer_card, player_total, player_hand)
tempTimer(1.2, [[send(action)]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(.*) asks you\, "Do you want to hit, stand, or double\?"$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>HIT STAND</name>
							<script>local action = determine_action_hit_stand(dealer_card, player_total, player_hand)
tempTimer(1.2, [[send(action)]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(.*) asks you\, "Do you want to hit or stand?"</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>insurance</name>
							<script>local insurance_decision = determine_insurance(dealer_card)
tempTimer(1.2, [[send(insurance_decision)]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Would you like to purchase insurance for half the cost of your bet?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>HIT</name>
							<script>local new_card = matches[2]
table.insert(player_hand, new_card)
player_total = tonumber(matches[3])

if player_total &lt; 21 then
-- Determine the next action based on the updated hand
local action = determine_action(dealer_card, player_total, player_hand)
stempTimer(1.2, [[send(action)]]) -- Output: hit, stand, double, or split
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You tap your cards and are dealt (.+), for a total of (\d+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>You won!</name>
							<script>expandAlias("sgold")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You won!</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>mining</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>legion list</name>
						<script>legiondb = {}</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>55</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>ID         Type       Name                 Level Strength   Status     Specialisation </string>
							<string>--------------------------------------------------------------------------------------</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>3</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>line capture</name>
							<script>if not table.contains(legiondb, id) then
  legiondb[matches[2]] =
    {
      ["type"] = matches[3],
      ["level"] = matches[4],
      ["strength"] = matches[5],
      ["status"] = matches[6],
    }
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\d+)\s+(\w+)\s+.+\s+(\d+)\s+(\d+)\s+(\w+)</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>mine list</name>
						<script>minedb = {}</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>10</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>ID           Room                           Size       Commodity                </string>
							<string>--------------------------------------------------------------------------------</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>3</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>line capture</name>
							<script>room = string.trim(string.gsub(matches[3], "%s ", ""))
--print("\n["..room.."]")
if not table.contains(minedb, id) then
  minedb[matches[2]] = {["room"] = string.gsub(room, "%s ", ""), ["ore"] = matches[5]}
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\d+)\s+(.*)\s+(small|medium|large)\s+(.+)</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>end</name>
							<script>for k, v in pairs(minedb) do
  expandAlias("rf " .. v.room)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>--------------------------------------------------------------------------------</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>prospecting</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Lode found</name>
							<script>lodesize = matches[2]
lodetype = matches[3]
if lodesize == "small" or lodesize == "medium" or lodesize == "tiny" then
  send("clan mmc tell " .. lodesize .. " " .. lodetype .. " at " .. gmcp.Room.Info.name)
else
  mmp.stop()
  --Mudlet mapper command
  prospecting = 0
  killTimer(tostring(prospectingtimer))
  send("clan mmc tell " .. lodesize .. " " .. lodetype .. " at " .. gmcp.Room.Info.name)
end
lodetable[gmcp.Room.Info.num] = {lodesize, lodetype, gmcp.Room.Info.name, gmcp.Room.Info.area}</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ffff00</mFgColor>
							<mBgColor>#ff55ff</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You determine that there is a (\w+) lode of (.*) here.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Mine found</name>
							<script>loderoom = {}
minesize = matches[2]
minetype = matches[3]
minelode = matches[4]
mineprogress = matches[5] * 1
--minetable[loderoom] = {minetype, minelode, mineprogress}</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^There is a (\w+) (.*) mine here on a (\w+) lode that you'd guess is approximately (\w+)% mined out\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Stronghold found</name>
							<script>strongholdowner = matches[2]
strongholdtable[gmcp.Room.Info.num] = {strongholdowner, gmcp.Room.Info.name, gmcp.Room.Info.area}</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>This stronghold is controlled by (\w+).</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Mine sign</name>
							<script>mineowner = matches[2]
if minetable[minetype] == nil then
  minetable[minetype] = {}
end
loderoom[gmcp.Room.Info.num] =
  {osminesize, mineowner, minelode, mineprogress, gmcp.Room.Info.name, gmcp.Room.Info.area}
table.insert(minetable[minetype], loderoom)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>This (?:.*) mine is owned by (\w+).</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Mudlet Mapper</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>polished skull</name>
						<script>mmp.locateAndEcho(matches[2]) 
local rooms = mmp.searchRoom(matches[2])
for id, _ in pairs(rooms) do
  --if room is not a locked area, and room ID is not the current room
  if not mmp.locked[id] and not (mmp.currentroom == id) then
    mmp.gotoRoom(id)
  end
  return
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^An image of (.*) appears in your mind\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>hindered</name>
						<script>nextAction=""

hindered = true
leaprequested = true
local direction = captureDirection()
if direction and direction ~= false then
  handleMovement()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>A wall blocks your way.</string>
							<string>The hands of the grave grasp at your ankles and throw you off balance.</string>
							<string>A large pile of rubble blocks an entrance to the outside.</string>
							<string>A pile of dirt and rubble blocks the passage.</string>
							<string>^(\w+) stops you from moving that way\.$</string>
							<string>^With astonishing quickness, a diminutive homunculus resembling (\w+) moves to block your egress\.$</string>
							<string>^A tentacle from (\w+)'s body lashes out at you, wrapping around your body and holding you firm\.$</string>
							<string>You slip and fall on a banana peel!</string>
							<string>^Your .+ foot explodes in white hot pain as an arrow slams into it.$</string>
							<string>You slip and fall on the ice as you try to leave.</string>
							<string>Your movements are trailed by profusions of wild growth.</string>
							<string>You falter as you are tripped by a lashing vine.</string>
							<string>You struggle to move, the very air rebelling against your passage.</string>
							<string>You slip and fall on the ice as you try to leave.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>3</integer>
							<integer>1</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>event open door</name>
						<script>sendAll("setalias qod stand"..cmdsep.."unlock door "..matches[2]..""..cmdsep.."open door "..matches[2],"queue addclear eqbal qod")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^There is a door in the way, to the (\w+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>combat</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>mount /vault</name>
					<script>if target:title() == matches[2] then
  --actionBalance()
  selectString(line, 1)
  setUnderline(true)
  setBold(true)
  bg("black")
  fg("orange")
  resetFormat()
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(\w+) (?:climbs onto|vaults onto the back of|easily vaults onto the back of) (.+)\.$</string>
						<string>^([a-zA-Z-,' ]+) is riding on ([a-zA-Z-,' ]+)\.$</string>
						<string>^(\w+), riding (.+), leaves to the .+\.$</string>
						<string>^(\w+), riding (.+), arrives from the .+\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>mounted</name>
					<script>mounted = true
if mmp.autowalking then
  expandAlias("mstop")
end
if mmp.settings.dash then
  expandAlias("mconfig dash no")
end
if table.contains(mydefs, "density") then
  if mmp.settings.gallop then
    expandAlias("mconfig gallop no")
  end
else
  if not mmp.settings.gallop then
    expandAlias("mconfig gallop yes")
  end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You easily vault onto .+.$</string>
						<string>You cannot do that while mounted.</string>
						<string>You climb up on a blood steed.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>whistled</name>
					<script>mymount=""</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You put your fingers in your mouth and let out a high-pitched whistle, then hope for the best.</string>
						<string>A massive war beetle trots in with head high.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>dismount</name>
					<script>mounted = false
if mmp.autowalking then
  expandAlias("mstop")
end
if mmp.settings.gallop then
  expandAlias("mconfig gallop no")
end
if not mmp.settings.dash then
  expandAlias("mconfig dash yes")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You step down off of .+.$</string>
						<string>^You need to be riding a proper mount to gallop\.$</string>
						<string>^You are not currently riding anything\.$</string>
						<string>^You have no mount on which to jump\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>alchemist counterstrike/barrier</name>
					<script>--just returns portion of damage
selectString(line, 1)
setBold(true)
fg("red")
bg("firebrick")
resetFormat()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^The reflective barrier surrounding .+  reflects part of your attack back at you\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>opponent tumbling</name>
					<script>if target:title() == matches[2] then
  targettumbling = true
  requestbrazier = true
  brazierpoint = os.clock() + 3
  --if gmcp.Char.Status.class ~= "Bard" then
    --requestnoise = true
  --end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(\w+) begins to tumble towards the (\w+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>earthlord chest broken</name>
					<script>requestdiagnose=true</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You feel your ribs twisting and cracking under some great strain.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>requestdiagnose</name>
					<script>requestdiagnose=false</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You are:</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>no target</name>
					<script>--target=nil
highlightline(selectString(line, 1))
target = "none"
send("settarget none")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You must specify a valid target.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>assess 2</name>
					<script>local hishealth = tonumber(matches[3])
local hismaxhealth = tonumber(matches[4])
hishealthpercent = hishealth / hismaxhealth</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(\w+) health is at (\w+) out of (\w+).$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>land</name>
					<script>send("land")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You cannot fly indoors.</string>
						<string>You need your feet firmly on the ground for that.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>tree timer</name>
					<script>if target:title() == matches[2] then
  
  if treeTimer0 then return end
  if treeTimer4 then return end
  if treeTimer9 then return end
  if treeTimer then return end
  
  treeTimer0 = tempTimer(0,[[cecho("&lt;orange&gt;\n[TREE]: &lt;yellow&gt;tree down on &lt;red&gt;"..target.." &lt;yellow&gt;for &lt;white&gt;14 seconds...\n") treeTimer0 = nil]])
  treeTimer4 = tempTimer(4,[[cecho("&lt;orange&gt;\n[TREE]: &lt;yellow&gt;tree down on &lt;red&gt;"..target.." &lt;yellow&gt;for &lt;white&gt;10 seconds...\n") treeTimer4 = nil]])
  treeTimer9 = tempTimer(9,[[cecho("&lt;orange&gt;\n[TREE]: &lt;yellow&gt;tree down on &lt;red&gt;"..target.." &lt;yellow&gt;for &lt;white&gt;5 seconds...\n") treeTimer9 = nil]])
  treeTimer = tempTimer(14, [[cecho("&lt;orange&gt;\n[TREE]: &lt;red&gt;"..target.." &lt;yellow&gt;can now use tree!!!\n") treeTimer = nil]])
end

</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(\w+) touches a tree of life tattoo\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>antiparry</name>
					<script>antiparry = false
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(\w+) manages to free (\w+) of the bonds clinging to her limbs.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>writhed</name>
					<script>--if failsafe then return end
if matches[2] and target == matches[2] then
   impaled = false
elseif not matches[2] then
   impaled = false
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^With a look of agony on [\w'\-]+ face\, ([\w'\-]+) manages to writhe \w+ free of the weapon which impaled [\w'\-]+\.$</string>
						<string>^With a vicious snarl you carve a merciless swathe through the steaming guts of ([\w'\-]+)\, who gurgles and chokes as you withdraw your dripping blade\, glistening with gore\.$</string>
						<string>^With a vicious snarl [\w'\-]+ carves a merciless swathe through the steaming guts of ([\w'\-]+)\, who gurgles and chokes as [\w'\-]+ withdraws [\w'\-]+ dripping blade\, glistening with gore\.$</string>
						<string>^With a snarl of contempt\, you allow ([\w'\-]+) to slide free of your weapon\.$</string>
						<string>You have no victim impaled to be able to perform a disembowelment.</string>
						<string>^As ([\w'\-]+) wrenches away from you\, your blade rips through his innards in a violentfashion\, leaving a pool of viscera where your foe once lay\.$</string>
						<string>^([\w'\-]+) tumbles out to the .*\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>3</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>impale</name>
					<script>--if failsafe then return end
if matches[2] and target == matches[2] then
   impaled = true
elseif not matches[2] then
   impaled = true
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You draw your blade back and plunge it deep into the body of ([\w'\-]+) impaling [\w'\-]+ to the hilt\.$</string>
						<string>You cannot do that while your weapon remains deep in your victim's gut.</string>
						<string>^(\w+) is already impaled upon the sword of \w+ and you can see no room for your own blade\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>3</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>fail impale</name>
					<script>if target:title() == matches[2] then
  probabilityTable["prone"] = 0
  probabilityTable["paralysis"] = 0
 -- probabilityTable["transfixed"] = 0 
 -- probabilityTable["frozen"] = 0
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You thrust your blade towards ([\w'\-]+) but \w+ dodges easily out of the way\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>slain target</name>
					<script>updateWhoHere()
if failsafe then
  boxDisplay("SLAIN " .. target:upper(), "green")
end
if not table.contains(NDB.cityList, matches[2]) then
  if enemyclass["serpent"].enabled or illusion or target == "Penwize" then
    return
  end
  if failsafe then
    failsafe = flip(failsafe)
    boxDisplay("Fail Safe", "red")
    --if gmcp.Char.Status.class=="Apostate" then requestallstop=1 enableTimer("requestallstop")  end
  end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You have slain (.*).</string>
						<string>^Unable to withstand the arrow piercing \w+ chest, (\d+) stumbles to the ground, collapsing in a pool </string>
						<string>^(.*) has been slain by \w+.$</string>
						<string>^A starburst tattoo flares and bathes (\w+) in red light.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>mass down</name>
					<script>if target:title() == matches[2] then
  --mass = false
end
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>A great weight seems to have been lifted from ([\w'\-]+).</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>transfix cured</name>
					<script>if target:title() == matches[2] then
   --transfixed = 0
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) has writhed free of ([\w'\-]+) state of transfixation\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>aeon gained</name>
					<script>if target:title() == matches[2] then
 -- probabilityTable["aeon"] = 100
end
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(\w+) slashes \w+ hand at (\w+)\, who suddenly appears to be moving in slow motion\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>behead</name>
					<script>systemPaused = true </script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You raise your</string>
						<string>^You raise your ([\w'\-]+) over your head and begin to swing it in a wide circle\, gaining speed as you go\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>behead Fail</name>
					<script>systemPaused = false </script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You cease the whirling of your weapon over your head.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>New Trigger</name>
					<script>targetfleedir = ""
wallblocked = false
moverequested = false


if aspect == "cheesyfashions" then


if affstrack.score.confusion == 0 then

send("puppet confusion")



end



end



moveconfirm()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You see exits</string>
						<string>You see a single exit</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>2</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>tracker</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player eats</name>
						<script>local ignore =
  {
    "irid moss",
    "azurite mote",
    "potash crystal",
    "ball of myrrh",
    "kola nut",
    "quartz grain",
    "black cohosh root",
    "gypsum crystal",
    "echinacea root", 
    "bisemutum chip",
    "skullcap flower",
    "dolomite grain",
    "ball of myrrh gum",
    "antimony flake",
    "ginger root",
  }
  

if not (table.contains(ignore, matches[3])) then
  if target:title() == matches[2] then
    startEnemyBalanceAction("herb")
    probabilityTable["anorexia"] = 0
    updateProbabilityTable(matches[3], probabilityTable)
 
       --enable timer to check probability of paralysis
       if (matches[3] == "bloodroot leaf") or (matches[3] == "magnesium chip") then
           --if probabilityTable["paralysis"] &gt;= .5 and probabilityTable["slickness"] &gt;= .5 then
            --  enableTimer("paralysis check timer")
           --end
       end
 
   
       if (matches[3] == "a goldenseal root") or (matches[3] == "a plumbum flake") then
        --
       end
    
  end
end

--[[if not IsTargetted(multimatches[1][2]) then return end
if string.find(multimatches[3][1],"The light behind the eyes of") then
  OppLostAff("unweavingmind")
  return
elseif string.find(multimatches[3][1],"suddenly seems much more vital") then
  OppLostAff("unweavingbody")
  return
elseif string.find(multimatches[3][1],"straightens, as if some great burden had been lifted from") then
  OppLostAff("guilt")
  return
elseif string.find(multimatches[3][1],"gives a sigh of relief.") then
  OppLostAff("retribution")
  return
elseif string.find(multimatches[3][1],"Lucidity returns to the eyes of") then
  OppLostAff("shadowmadness")
  return
elseif string.find(multimatches[3][1],"ceases secreting slime.") then
  OppLostAff("rebbies")
  return
elseif string.find(multimatches[3][1],"violent trembling") then
  OppLostAff("whisperingmadness")
  return
elseif string.find(multimatches[3][1],"nervous trembling") then
  OppLostAff("mycalium")  
  return
else--]]

</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) eats (?:a|an|some) (.*).$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Shrugging/WaterLord/EarthLord</name>
						<script>if target:title() == matches[2] then
  startEnemyBalanceAction("shrugging")
  probabilityTable["weariness"] = 0
  updateProbabilityTable("shrugging", probabilityTable)
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) hunches \w+ shoulders and lets out a soft hiss.</string>
							<string>^The amorphous form of ([\w'\-]+) trembles\, some of the liquid composing it falling away from the greater whole\.$</string>
							<string>^Magma erupts forth from beneath the plates that cover ([\w'\-]+)\.$</string>
							<string>^Something pulses from within the chest of (\w+)\, and \w+ seems more vital\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player fitness</name>
						<script>if target:title() == matches[2] then
  startEnemyBalanceAction("fitness")
  probabilityTable["weariness"] = 0
  probabilityTable["asthma"] = 0
  --affDisplay()
  --track enemy fitness balance time.
  --MAX_ENEMY_FITNESS_TIME = 3
  --hisfitnessbal_start_time = os.clock()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) draws a deep, measured breath.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player applied</name>
						<script>if target:title() == matches[2] then
  startEnemyBalanceAction("salve")
  probabilityTable["slickness"] = 0
  if matches[4] == "skin" then
    if probabilityTable["anorexia"] &gt; 0 then
      updateProbabilityTable("epidermal", probabilityTable)
    elseif probabilityTable["ablaze"] &gt; 0 then
      updateProbabilityTable("mending", probabilityTable)
    end
  elseif matches[4] == "head" then
    --if probabilityTable["stupidity"] &gt; 0 and probabilityTable["crippledhead"] &gt; 0 then
    -- probabilityTable["stupidity"] = 0
    -- probabilityTable["crippledhead"] = 0
    --end
  elseif matches[4] == "body" then
    if probabilityTable["anorexia"] &gt; 0 then
      updateProbabilityTable("epidermal", probabilityTable)
    elseif probabilityTable["ablaze"] &gt; 0 then
      updateProbabilityTable("mending", probabilityTable)
    elseif probabilityTable["selarnia"] &gt; 0 then
      updateProbabilityTable("mending", probabilityTable)
    end
  elseif matches[4] == "arms" then
    if probabilityTable["crippledarms"] &gt; 0 then
      updateProbabilityTable("arms", probabilityTable)
    end
  elseif matches[4] == "legs" then
    if probabilityTable["crippledlegs"] &gt; 0 then
      updateProbabilityTable("legs", probabilityTable)
    end
  end
  --affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#0000ff</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) takes some balm from a vial and rubs it on (\w+) (\w+).$</string>
							<string>^(\w+) takes some salve from a vial and rubs it on (\w+) (\w+).$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player focused</name>
						<script>if target:title() == matches[3] then
  startEnemyBalanceAction("focus")
  probabilityTable["impatience"] = 0
  updateProbabilityTable("focus", probabilityTable)
  
  
    if hypnostatus == "snapped" then
      hypnocount = -1
      hypnostatus = "reset"
      combat_reset()      
    end
  
  --track enemy focus balance time.
  --MAX_ENEMY_FOCUS_TIME = 2.6
  --hisfocusbal_start_time = os.clock()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#aa0000</mFgColor>
						<mBgColor>#00ff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(A look of extreme focus crosses the face of ([\w'\-]+).)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player smoked</name>
						<script>if target:title() == matches[2] then
  isLockGuaranteed = false
  startEnemyBalanceAction("smoke")
  probabilityTable["asthma"] = 0
  updateProbabilityTable("smoke", probabilityTable)
end

--if string.find(multimatches[3][1],"seems suddenly unburdened, clarity reasserting itself upon") then
  --OppLostAff("unweavingspirit")
--end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) takes a long drag off \w+ (.*)\.$</string>
							<string>^A great gurgling sound is heard as ([\w'\-]+) takes a long drag from .*</string>
							<string>^([\w'\-]+) takes a long\, smooth drag from [\w'\-]+ pipe\.$</string>
							<string>^([\w'\-]+) takes a few short puffs from [\w'\-]+ pipe\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player touched tree</name>
						<script>if target:title() == matches[3] then
  startEnemyBalanceAction("tree")
  probabilityTable["paralysis"] = 0
  if probabilityTable["slickness"] &gt;= 0.5 then
    probabilityTable["slickness"] = 1
  end
  updateProbabilityTable("tree", probabilityTable)
end

--[[if not IsTargetted(multimatches[1][2]) then return end
if string.find(multimatches[3][1],"straightens, as if some great burden had been lifted from") then
  OppLostAff("guilt")
  return
elseif string.find(multimatches[3][1],"seems suddenly unburdened, clarity reasserting itself upon") then
  OppLostAff("unweavingspirit")
  ak.psion.unweaving.spirit = 0
  return
elseif string.find(multimatches[3][1],"gives a sigh of relief.") then
  OppLostAff("retribution")
  return
elseif string.find(multimatches[3][1],"Lucidity returns to the eyes of") then
  OppLostAff("shadowmadness")
  return
elseif string.find(multimatches[3][1],"ceases secreting slime.") then
  OppLostAff("rebbies")
  return
elseif string.find(multimatches[3][1],"nervous trembling") then
  OppLostAff("mycalium")  
  return
else]]</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#005500</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^((\w+) touches a tree of life tattoo.)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player disciplined</name>
						<script>if target:title() == matches[2] then
  probabilityTable["clumsiness"] = 0
  updateProbabilityTable("passive", probabilityTable)
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) bares (\w+) teeth in a rictus of fury, drawing (\w+) up to (\w+) full height.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player dragonheal</name>
						<script>if target:title() == matches[2] then
  probabilityTable["weariness"] = 0
  --probabilityTable["recklessness"]=0
  updateProbabilityTable("dragonheal", probabilityTable)
  updateProbabilityTable("dragonheal", probabilityTable)
  updateProbabilityTable("dragonheal", probabilityTable)
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>(\w+) lets out a great keening, casting the impurities from (\w+) form.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player passive</name>
						<script>if target:title() == matches[2] then
  if probabilityTable["voyria"] == 1 then
    probabilityTable["voyria"] = 0
    --affDisplay()
  else
    updateProbabilityTable("passive", probabilityTable)
  end
end

--[[if not IsTargetted(multimatches[1][2]) then return end

if string.find(multimatches[3][1],"The light behind the eyes of") then
  OppLostAff("unweavingmind")
  return
elseif string.find(multimatches[3][1],"suddenly seems much more vital") then
  OppLostAff("unweavingbody")
  return
elseif string.find(multimatches[3][1],"straightens, as if some great burden had been lifted from") then
  OppLostAff("guilt")
  return
elseif string.find(multimatches[3][1],"gives a sigh of relief.") then
  OppLostAff("retribution")
  return
elseif string.find(multimatches[3][1],"Lucidity returns to the eyes of") then
  OppLostAff("shadowmadness")
  return
elseif string.find(multimatches[3][1],"ceases secreting slime.") then
  OppLostAff("rebbies")
  return
elseif string.find(multimatches[3][1],"violent trembling") then
  OppLostAff("whisperingmadness")
  return
elseif string.find(multimatches[3][1],"nervous trembling") then
  OppLostAff("mycalium")  
  return
else]]</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A rune like a rising sun upon the ground flares, bathing (\w+) with healing magic.</string>
							<string>^A song can be heard on the edge of hearing as the air distorts about (\w+)\.$</string>
							<string>^A demonic crimson glow emanates from ([\w'\-]+)\.$</string>
							<string>^As (\w+) massages key pressure points, a look of relief comes over (\w+)'s face as (\w+) ailments ease\.$</string>
							<string>^(?:\w+) surrounds (\w+) with a translucent achromatic aura.$</string>
							<string>^The amorphous form of (\w+) trembles, some of the liquid composing it falling away from the greaterwhole.$</string>
							<string>^The water that (\w+) stands upon rises up to become a part of (\w+)\.$</string>
							<string>^The fiery outer layers of (\w+) fall away, turning to dust as .+ drift to the ground. Though (\w+) seems diminished for an instant, (\w+) fires soon rage with fury once more\.$</string>
							<string>^A gentle glow surrounds (\w+)\.$</string>
							<string>^([\w'\-]+) invokes the power of the elements and a soft white nimbus momentarily surrounds ([\w'\-]+)\.$</string>
							<string>^Divine essence flares around ([\w'\-]+)\.$</string>
							<string>^A look of relief comes over ([\w'\-]+) as [\w'\-]+ grows less pale\.$</string>
							<string>^([\w'\-]+) stands suddenly upright\, rooted to the earth\.$ </string>
							<string>^A soft chiming emanates from ([\w'\-]+).$</string>
							<string>^The tempestuous form of ([\w'\-]+) is cleansed by a purifying breeze\.$</string>
							<string>^The winds that compose ([\w'\-]+) fall still\, [\w'\-]+ tempestuous form dispersing into nothing\.$</string>
							<string>^([\w'\-]+) is surrounded in a cool\, refreshing mist\.$</string>
							<string>^The guardian angel of ([\w'\-]+) shimmers and \w+ gives a sigh of relief.$</string>
							<string>^A flickering nimbus outlines ([\w'\-]+) for an instant\, before fading from sight\.$</string>
							<string>^A pale mist begins to rise from the skin of ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player active x 2</name>
						<script>if target:title() == matches[2] then
  probabilityTable["paralysis"] = 0
  updateProbabilityTable("passive", probabilityTable)
  updateProbabilityTable("passive", probabilityTable)
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Perspiration suddenly breaks out on (\w+)'s forehead.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player active x 1</name>
						<script>if target:title() == matches[2] then
  probabilityTable["paralysis"] = 0
  if probabilityTable["voyria"] == 1 then
    probabilityTable["voyria"] = 0
    --affDisplay()
  else
    updateProbabilityTable("passive", probabilityTable)
  end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) sketches out a symbol in the air with (\w+) finger in the shape of a bisected circle.</string>
							<string>^As (\w+) massages key pressure points, a look of relief comes over (\w+)'s face as (\w+) ailments ease.</string>
							<string>^([\w'\-]+) sketches out a symbol in the air with \w+ finger in the shape of a bisected circle.</string>
							<string>^([\w'\-]+) calls upon the powers of (.*) and projects \w+ spiritual essence inwardly\.$</string>
							<string>^The globe of light illuminates ([\w'\-]+) with its brilliance\.$</string>
							<string>^A gentle glow surrounds ([\w'\-]+)\.</string>
							<string>^A song can be heard on the edge of hearing as the air distorts about ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player self fool</name>
						<script>if target:title() == matches[2] then
  probabilityTable["paralysis"] = 0
  updateProbabilityTable("passive", probabilityTable)
  updateProbabilityTable("passive", probabilityTable)
  updateProbabilityTable("passive", probabilityTable)
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>(\w+) presses a tarot to (?:her|his|faes) forehead, producing a wan smile.</string>
							<string>^[\w'\-]+ presses a tarot to ([\w'\-]+)\'s forehead, producing a wan smile\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player cure all</name>
						<script>if target:title() == matches[2] then
  resetEnemyAffs()
  selectString(matches[1], 1)
  setFgColor(255, 150, 0)
  --affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Throwing back \w+ head, (\w+) shouts out in defiance as blazing flames consume \w+ for a single, glorious instant before dying away.</string>
							<string>^The face of (\w+) contorts in abject agony as a Baalzadeen makes a sharp, hooking motion in .+ direction\.$ </string>
							<string>^The room is consumed in an explosion of light, out of which ([\w'\-]+) emerges refreshed and renewed\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>psion squint</name>
						<script>if target:title() == matches[2] then
  probabilityTable["confusion"] = 0
  if probabilityTable["voyria"] == 1 then
    probabilityTable["voyria"] = 0
    --affDisplay()
  else
    updateProbabilityTable("passive", probabilityTable)
  end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A slight tightening of the eyes is the only sign (\w+) makes that (?:he|she|fae) has made a great effort of will\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player accelerates</name>
						<script>if target:title() == matches[2] then
  probabilityTable["recklessness"] = 0
  if probabilityTable["voyria"] == 1 then
    probabilityTable["voyria"] = 0
    --affDisplay()
  else
    updateProbabilityTable("passive", probabilityTable)
  end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) grows older before your eyes\.$</string>
							<string>^A look of relief comes over (\w+) as .+ grows less pale\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player bloodboil</name>
						<script>if target:title() == matches[2] then
  probabilityTable["stupidity"] = 0
  if probabilityTable["voyria"] == 1 then
    probabilityTable["voyria"] = 0
    --affDisplay()
  else
    updateProbabilityTable("passive", probabilityTable)
  end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Perspiration suddenly breaks out on (\w+)'s forehead\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player stupidity</name>
						<script>if target:title() == matches[2] then
  probabilityTable["stupidity"] = 1
  --affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^"The voices! The voices! Get them out of my head!!" (\w+) moans, holding .+ head\.$</string>
							<string>^(\w+) attempts to do a standing backflip, but merely stumbles over .+ own feet\.$</string>
							<string>^Tears fill (\w+)'s eyes and begin to slowly run down .+ face\.$</string>
							<string>^(\w+) wails like an old woman\.$</string>
							<string>^(\w+) gives up a round of applause\.$</string>
							<string>^(\w+) grunts a bit and then lets out a loud "OINK!"$</string>
							<string>^(\w+) waggles .+ eyebrows comically\.$</string>
							<string>^(\w+) falls to .+ knees in worship\.$</string>
							<string>^(\w+) gets down on one knee and serenades the world\.$</string>
							<string>^(\w+) breaks down and sobs uncontrollably\.$</string>
							<string>^(\w+) pulls down .+ pants and moons the world\.$</string>
							<string>^(\w+) twitches spasmodically\.$</string>
							<string>^You cast a net of stupidity over (\w+)'s mind\.$</string>
							<string>^(\w+) moans, holding \w+ head\.$</string>
							<string>^(\w+) picks (\w+) nose absently\.$</string>
							<string>^(\w+) makes a strangled meowing noise and quickly shuts up, blushing\.$</string>
							<string>^(\w+) flaps (\w+) arms madly\.$</string>
							<string>^(\w+) stumbles and pokes (\w+) in the eye\.$</string>
							<string>^Tears fill (\w+)'s eyes and begin to slowly run down (\w+) face\.$</string>
							<string>^A glazed look descends over the features of (\w+).</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player darkshade</name>
						<script>if target:title() == matches[2] then
  probabilityTable["darkshade"] = 1
  --affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) stiffens suddenly, \w+ features a masque frozen in agony\.$</string>
							<string>^(\w+) lets out a piercing scream, as if wounded by the very sunlight\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player prone</name>
						<script>if target:title() == matches[2] then
  probabilityTable["prone"] = 1
  -- probabilityTable["sleep"]=1
  --affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Sweeping out with a blade hand, \w+l strikes at the back of (\w+)'s knee\.$</string>
							<string>^Drawing an enormous breath\, \w+ exhales\, expelling a gale of wind with such force that (\w+) is knocked over\.$</string>
							<string>^(\w+) is knocked forcefully off (?:her|his|faes) feet by the impact of \w+\'s huge tail\.$</string>
							<string>^(\w+) is knocked off (?:her|his|faes) feet by the heaving ground\.$</string>
							<string>^\w+ throws (?:her|his|faes) palms forward, releasing a stream of deadly blue light to cripple (\w+)\.$</string>
							<string>^Drawing an enormous breath, you exhale, expelling a gale of wind with such force that (\w+) is </string>
							<string>(\w+) is knocked forcefully off (?:her|his|faes) feet by the impact of your huge tail\.$</string>
							<string>^.+? tangles itself in the legs of (\w+), sending \w+ sprawling to the ground\.$</string>
							<string>^(\w+) leaps up in what is apparently an attempt at a graceful swan dive. \w+ smacks headfirst into the ground\.$</string>
							<string>^(\w+) sits down\.$</string>
							<string>^(\w+) is already sprawled upon the ground\.$</string>
							<string>^(\w+) has already fallen to the ground\.$</string>
							<string>^(\w+) drops to one knee\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>prone</name>
						<script>if target:title() == matches[2] then
  probabilityTable["prone"] = 1
  -- probabilityTable["sleep"]=1
  --affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Sweeping out with a blade hand, [\w'\-]+l strikes at the back of ([\w'\-]+)'s knee\.$</string>
							<string>^Drawing an enormous breath\, [\w'\-]+ exhales\, expelling a gale of wind with such force that ([\w'\-]+) is knocked over\.$</string>
							<string>^([\w'\-]+) is knocked forcefully off \w+ feet by the impact of [\w'\-]+\'s huge tail\.$</string>
							<string>^([\w'\-]+)\'s eyes close suddenly as \w+ falls asleep\.$</string>
							<string>^([\w'\-]+) is knocked off \w+ feet by the heaving ground\.$</string>
							<string>^[\w'\-]+ throws \w+ palms forward, releasing a stream of deadly blue light to cripple ([\w'\-]+)\.$</string>
							<string>^Drawing an enormous breath, you exhale, expelling a gale of wind with such force that ([\w'\-]+) is </string>
							<string>([\w'\-]+) is knocked forcefully off \w+ feet by the impact of your huge tail\.$</string>
							<string>^You hear two loud snaps and see ([\w'\-]+) fall to the ground\.$</string>
							<string>^You knock the legs out from under ([\w'\-]+) and send \w+ sprawling\.$</string>
							<string>^You duck low and smash your shield into the knees of ([\w'\-]+)\, causing them to buckle underneath \w+\.$</string>
							<string>^Stepping forward, you grab the useless .* of ([\w'\-]+), wrench \w+ violently forward, and throw \w+ to the ground\.$</string>
							<string>^You lunge downward, slamming the edge of .+ into the shins of ([\w'\-]+)\.</string>
							<string>^You swiftly sweep ([\w'\-]+) feet out from beneath</string>
							<string>^An .* tangles itself in the legs of ([\w'\-]+)\, sending \w+ sprawling to the ground\.$</string>
							<string>^A .* tangles itself in the legs of ([\w'\-]+)\, sending \w+ sprawling to the ground\.$</string>
							<string>^Dropping into a low crouch\, you expertly tangle .* with the legs of ([\w'\-]+)\, sending [\w'\-]+ sprawling\.$</string>
							<string>^The staff sweeps the legs out from under ([\w'\-]+)\, sending [\w'\-]+ sprawling\.$</string>
							<string>^The instep of your foot smashes into the [\w'\-]+ underarm of ([\w'\-]+)\, throwing [\w'\-]+ from [\w'\-]+ feet and sending [\w'\-]+ spinning to the ground\.$</string>
							<string>^[\w'\-]+ drops low\, tangling .+ with the legs of ([\w'\-]+) and sending [\w'\-]+ sprawling\.$</string>
							<string>^[\w'\-]+ drops to the floor and sweeps [\w'\-]+ legs round at ([\w'\-]+)\.$</string>
							<string>^([\w'\-]+) slips on a thin layer of fluid\, [\w'\-]+ feet flying out from under [\w'\-]+\.$</string>
							<string>^Water thunders down upon ([\w'\-]+)\, driving [\w'\-]+ relentlessly to [\w'\-]+ knees\.$</string>
							<string>^The [\w'\-]+ leg of ([\w'\-]+) buckles under the impact\, and [\w'\-]+ goes sprawling\.$</string>
							<string> ^[\w'\-]+ lunges downward, slamming theedge of .* into the shins of ([\w'\-]+)\.$</string>
							<string>^Sweeping out with a blade hand\, [\w'\-]+ strikes at the back of ([\w'\-]+)\'s knee\.$</string>
							<string>^As your blow cuts deeply into the leg of ([\w'\-]+)\, you drive savagely forward\, taking [\w'\-]+ clean off [\w'\-]+ feet\.$</string>
							<string>^You strike a savage blow with your quarterstaff at (\w+)\'s damaged leg\, bringing \w+ crashing to the ground\.$</string>
							<string>^(\w+) is flung violently from \w+ feet\.$</string>
							<string>^([\w'\-]+) has already fallen to the ground\.$</string>
							<string>^You deftly hook .* behind ([\w'\-]+)'s foot and send [\w'\-]+ tumbling off (.*) before driving the point of the weapon into [\w'\-]+ (right leg|left leg).$</string>
							<string>^(\w+) is swept off \w+ feet by the blast\.$</string>
							<string>^A mighty, bestial roarfrom \w+ leaves (\w+) looking dazed\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player nausea</name>
						<script>if target:title() == matches[2] then
  probabilityTable["nausea"] = 1
  --affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) doubles over\, vomiting violently\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player peace</name>
						<script>if target:title() == matches[2] then
  probabilityTable["peace"] = 1
  --affDisplay()
end
--^You lash out at (\w+) with .*, flaying \w+ flesh.$</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#7cf7ff</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+)\'s eyes are filled with compassion and peace.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player voyria</name>
						<script>if target:title() == matches[2] then
  probabilityTable["voyria"] = 1
  --affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Blood begins to slowly drip from (\w+)'s nose.$</string>
							<string>^(\w+) coughs suddenly, expelling black fluid with bits of what looks to be tissue suspended in it\.$</string>
							<string>^(\w+) trembles slightly as a yellow jaundice begins to creep through (?:his|her|faes) now-pale features\.$</string>
							<string>^You watch in horror as blood begins to seep from every pore in (\w+)'s body\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player epilepsy</name>
						<script>if target:title() == matches[2] then
  probabilityTable["epilepsy"] = 1
  --affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) begins to jerk and shake violently, foaming at the mouth.$</string>
							<string>^([\w'\-]+) begins to jerk and shake violently\, foaming at the mouth\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player sips</name>
						<script>if target:title() == matches[2] then
  if probabilityTable["voyria"] &gt; 0 then
    cecho("\n&lt;green&gt;Assuming voyria is cured")
    probabilityTable["voyria"] = 0
    --affDisplay()
  else
    updateProbabilityTable("epidermal", probabilityTable)
  end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) empties out (.*) into (\w+) mouth.</string>
							<string>^(\w+) takes a drink from (.*)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player stands</name>
						<script>selectCurrentLine()
setUnderline(true)
setBold(true)
bg("yellow")
fg("brown")
resetFormat()
if target:title() == matches[2] then
  probabilityTable["sleep"] = 0
  probabilityTable["prone"] = 0
  --affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) stands up\.$</string>
							<string>^([\w'\-]+) rolls smoothly back to [\w'\-]+ feet\.$</string>
							<string>^([\w'\-]+) backs away and out of your reach\.$</string>
							<string>^([\w'\-]+) pushes off the ground, coming back up into a guard position\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player dizziness</name>
						<script>if target:title() == matches[2] then
  probabilityTable["prone"] = 1
  probabilityTable["dizziness"] = 1
  --affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) staggers and falls to the ground\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player clumsiness</name>
						<script>if target:title() == matches[2] then
  probabilityTable["clumsiness"] = 1
  --affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) shakes (\w+) head dizzily.$</string>
							<string>^([\w'\-]+) misses you with [\w'\-]+ dirk by a hair\.$</string>
							<string>^([\w'\-]+) points [\w'\-]+ finger at you\, but nothing seems to happen\.$</string>
							<string>^A frustrated frown crosses the face of (\w+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player paranoia</name>
						<script>if target:title() == matches[2] then
  probabilityTable["paranoia"] = 1
  --affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) narrows (\w+) eyes at you unnervingly.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player loneliness</name>
						<script>if target:title() == matches[2] then
  probabilityTable["loneliness"] = 1
  --affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) glances nervously around the room.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player claustrophobia</name>
						<script>if target:title() == matches[2] then
  probabilityTable["claustrophobia"] = 1
  --affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) begins to pant in terror.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player slickness</name>
						<script>if target:title() == matches[2] then
  probabilityTable["slickness"] = 1
  --affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^The protective coating covering the skin of (\w+) sloughs off\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player pacifism</name>
						<script>if target:title() == matches[2] then
  probabilityTable["pacified"] = 1
  --affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) smiles, a look of radiant peace spread across (\w+) features.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player hypersomnia</name>
						<script>if target:title() == matches[2] then
  probabilityTable["hypersomnia"] = 1
  --affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) suddenly appears tired all of a sudden.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player dementia</name>
						<script>if target:title() == matches[2] then
  probabilityTable["dementia"] = 1
  --affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) stares about (\w+) frenziedly, wild-eyed.$</string>
							<string>^([\w'\-]+) stares about [\w'\-]+ frenziedly\, wild\-eyed\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>snake bite</name>
						<script>if target:title() == matches[2] then
  probabilityTable["scytherus"] = 1
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^An .* sinks its fangs into the neck of ([\w'\-]+)\, injecting a potent dose of toxin\.$</string>
							<string>^A .* sinks its fangs into the neck of ([\w'\-]+)\, injecting a potent dose of toxin\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player agoraphobia</name>
						<script>if target:title() == matches[2] then
  probabilityTable["agoraphobia"] = 1
  --affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) is gripped with fear, staring out with terrified eyes.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player masochism</name>
						<script>if target:title() == matches[2] then
  probabilityTable["masochism"] = 1
  --affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) drives a clenched fist into [\w'\-]+ gut\.$</string>
							<string>^([\w'\-]+) uses [\w'\-]+ right foot to stomp on [\w'\-]+ left as hard as possible\.$</string>
							<string>^([\w'\-]+) smiles as [\w'\-]+ rams [\w'\-]+ fist into [\w'\-]+ jaw\.$</string>
							<string>^With the heel of [\w'\-]+ palm\, ([\w'\-]+) smacks [\w'\-]+ upside the head\.$</string>
							<string>^([\w'\-]+) uses [\w'\-]+ [\w'\-]+ foot to stomp on [\w'\-]+ [\w'\-]+ as hard as possible\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player epilepsy</name>
						<script>if target:title() == matches[2] then
  probabilityTable["epilepsy"] = 1
  --affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) suddenly appears jittery and scattered, all mental equilibrium lost.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player confusion</name>
						<script>if target:title() == matches[2] then
  probabilityTable["confusion"] = 1
  --affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) looks about bemusedly.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player impatience</name>
						<script>if target:title() == matches[2] then
  probabilityTable["impatience"] = 1
  --hypnostatus = "reset"
  --affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#000000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) shuffles (?:his|her|faes) feet in boredom.$</string>
							<string>^([\w'\-]+) suddenly starts scratching at an itch like mad\.$</string>
							<string>^You glare at ([\w'\-]+)\, cursing ([\w'\-]+) with mental maladies\.$</string>
							<string>^.+ eyes gleaming\, [\w'\-]+ smiles and quickly sings a jaunty limerick at ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player not paralyzed</name>
						<script>if target:title() == matches[2] then
  probabilityTable["paralysis"] = 0
  --affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) begins to wield .+\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player held breath</name>
						<script>if target:title() == matches[2] then
  probabilityTable["asthma"] = 0
  --affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) inhales and begins holding \w+ breath\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player eyes bulging</name>
						<script>if target:title() == matches[2] then
  probabilityTable["paralysis"] = 1
  probabilityTable["manaleech"] = 1
  probabilityTable["slickness"] = 1
  --affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) doubles over, eyes bulging\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player insomnia</name>
						<script>if target:title() == matches[2] then
  probabilityTable["insomnia"] = 0
  --affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) clenches (?:his|her|faes) fists and grits (?:his|her|faes) teeth.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player deafness up</name>
						<script>if target:title() == matches[2] then
  if def_apply_timer then
    killTimer(tostring(def_apply_timer))
    def_apply_timer = nil
  end
  def_apply_timer = tempTimer(3.98, [[probabilityTable["deafness"]=0   ]])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A brief look of concentration crosses the face of (\w+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player paralysis</name>
						<script>if target:title() == matches[2] then
  probabilityTable["paralysis"] = 1
  if probabilityTable["slickness"] &lt;= .5 then
    probabilityTable["slickness"] = 0
  end
  --affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Horror overcomes ([\w'\-]+)'s face as ([\w'\-]+) body stiffens into paralysis\.$</string>
							<string>^([\w'\-]+) stiffens suddenly\, \w+ features a masque frozen in agony\.$</string>
							<string>^([\w'\-]+)'s body stiffens rapidly with paralysis\.$</string>
							<string>^The body of ([\w'\-]+) locks in paralysis as [\w'\-]+ directs a short burst of arcane power in [\w'\-]+ direction\.$</string>
							<string>^Lunging to the side\, [\w'\-]+ brings [\w'\-]+ shield around to smash into the spine of ([\w'\-]+)\.$</string>
							<string>^[\w'\-]+ recites an epic tale of the heroism of Nicator to ([\w'\-]+)\.$</string>
							<string>^Horror overcomes the face of ([\w'\-]+) as [\w'\-]+ body locks in paralysis\.$</string>
							<string>^([\w'\-]+)\'s limbs suddenly lock up\.$</string>
							<string>^You reach out with your mind and paralyse (\w+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player awake</name>
						<script>if target:title() == matches[2] then
 -- probabilityTable["sleep"] = 0
 -- affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) wakes up with a gasp of pain\.$</string>
							<string>^([\w'\-]+) opens \w+ eyes and stretches languidly, a smile on \w+ face\.$</string>
							<string>^([\w'\-]+) opens \w+ eyes and yawns mightily\.$</string>
							<string>^([\w'\-]+) awakens with a start\.$</string>
							<string>^([\w'\-]+) opens [\w'\-]+ eyes and yawns mightily\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>player sleep</name>
						<script>if target:title() == matches[2] then
  probabilityTable["prone"] = 1
  probabilityTable["sleep"] = 1
  --affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+)'s eyes close suddenly as (?:he|she|fae) falls asleep\.$</string>
							<string>^(\w+)'s legs collapse under (?:him|her|faes) as (?:he|she|fae) suddenly passes out.$</string>
							<string>^Being unconscious, (\w+) falls over\.$</string>
							<string>^(\w+) tosses back and forth in restless slumber\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>tempestuous form</name>
						<script>if target:title() == matches[2] then
  if probabilityTable["voyria"] == 1 then
    probabilityTable["voyria"] = 0
  else
    updateProbabilityTable("passive", probabilityTable)
  end
  --affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^The tempestuous form of (\w+) is cleansed by a purifying breeze\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>hit by pets</name>
						<script>if target:title() == matches[2] then
  shielded = false
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A vacant look crosses (\w+)'s face.$</string>
							<string>^.*as it darts forward to bite (\w+).$</string>
							<string>^.*opens its mouth wide and strikes (\w+) in the leg.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>might</name>
						<script>if target:title() == matches[2] then
  probabilityTable["paralysis"] = 0
  probabilityTable["haemophilia"] = 0
  probabilityTable["weariness"] = 0
  probabilityTable["clumsiness"] = 0  
 -- affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) lets out a mighty roar\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>mickey</name>
						<script>if target:title() == matches[2] then
  probabilityTable["nausea"] = 1
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) pops a mickey into \w+ mouth\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>psion expunge</name>
						<script>if target:title() == matches[2] then
  probabilityTable["confusion"] = 0
  probabilityTable["impatience"] = 0
  --affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A slight tightening of the eyes is the only sign (\w+) makes that \w+ has made a great effort of will\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>deafness</name>
						<script>if target:title() == matches[2] then
  probabilityTable["deafness"] = 1
   -- affDisplay()
end

</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^The side of ([\w'\-]+)\'s head is lightly struck by [\w'\-]+\'s rapier\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>paranoia</name>
						<script>if target:title() == matches[2] then
  probabilityTable["paranoia"] = 1
    --affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The raven dives at </string>
							<string>^The raven dives at ([\w'\-]+) and pulls up short\, making \w+ uneasy\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Expert Diagnose True</name>
						<script>probabilityTable[matches[3]] = 1
  --affDisplay()
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Casting a discerning eye over ([\w'\-]+), you determine that \w+ shows the symptoms of ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Expert Diagnose False</name>
						<script>probabilityTable[matches[3]] = 0
  --affDisplay()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Casting a discerning eye over ([\w'\-]+), you can see no symptoms of ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Infestation</name>
						<script>if target:title() == matches[2] then
  probabilityTable[multimatches[2][3]] = 1
    --affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You sense through your malignant connection to your infestation that </string>
							<string>^You sense through your malignant connection to your infestation that ([\w'\-]+) has been cursed with ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Attended</name>
						<script>if target:title() == matches[2] then
  probabilityTable["deafness"] = 1
  probabilityTable["blindess"] = 1
  --affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^[\w'\-]+ glows with an emerald hue and snaps [\w'\-]+ fingers at ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bcry</name>
						<script>if target:title() == matches[2] then
  probabilityTable["sensitivity"] = 1
    --affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#55ffff</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) falls to [\w'\-]+ knees and clutches [\w'\-]+ ears as the shaft of sound strikes ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Frozen Disrupt</name>
						<script>if target:title() == matches[2] then
  --probabilityTable["frozen"] = 1  havnt added frozen to aff table yet.
  probabilityTable["paranoia"] = 1
    --affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) shivers particularly intensely\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Blindness</name>
						<script>if target:title() == matches[2] then  
   probabilityTable["blindness"] = 1
   tempTimer(6,[[probabilityTable["blindness"] = 0)]])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) blinks slowly\, and begins to tremble\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Psion Epseth</name>
						<script>if target:title() == matches[2] then
   smashlimb = matches[2]..matches[3]
   if probabilityTable[smashlimb] &lt; 100 then
      probabilityTable[smashlimb] = 1
   end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^[\w'\-]+ ducks low\, \w+ blade slicing into the ([\w'\-]+) ([\w'\-]+) of ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Relapsed</name>
						<script>if target:title() == matches[2] then
  probabilityTable["scytherus"] = 1
    --affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) screams out in agony\, struck by the effects of a vicious venom\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Beez</name>
						<script>if target:title() == multimatches[2][2] then
  probabilityTable["paralysis"] = 1
    --affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The angry swarm of bees descends upon </string>
							<string>^The bees sting (\w+) into paralysis\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Concentrate</name>
						<script>if target:title() == matches[2] then
  if probabilityTable["confusion"] == 1 then
    probabilityTable["disrupt"] = 0
  end
    --affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+)\'s eyes lose their focus suddenly\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Not Asthmatic</name>
						<script>if target:title() == matches[2] then  
   probabilityTable["asthma"] = 0
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You attempt to squeeze the life out of the effigy in your hands, but find the torso too tight.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>expunge</name>
						<script>if target:title() == matches[2] then
  probabilityTable["impatience"] = 0
  --affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A slight tightening of the eyes is the only sign (\w+) makes that \w+ has made a greateffort of will.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Writhed Fire Bullshit</name>
						<script>if target:title() == matches[2] then 
   --probabilityTable["aflame"] = 1 
   --probabilityTable["bound"] = 0
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) has writhed free of \w+ conflagrant weave\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Tension</name>
						<script>if target:title() == matches[2] then  
  -- probabilityTable["tension"] = 0
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) sucks in a great gasp of air\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Dwinnu</name>
						<script>if target:title() == matches[2] then  
   --probabilityTable["bound"] = 0
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>\'DWINNU\! DWINNU\' chants ([\w'\-]+) urgently as [\w'\-]+ bonds turn to dust and fall off\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bucket2</name>
						<script>if target:title() == matches[2] then  
   --probabilityTable["aflame"] = 0
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) saturates \w+ with water\, putting out the fire that raged\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Maintained Flushings</name>
						<script>if target:title() == matches[2] then  
   --probabilityTable["flushings"] = 1
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Blood begins to run from the pores of (\w+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Rage</name>
						<script>
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+)'s eyes flash with rage\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Peace</name>
						<script>if target:title() == matches[2] then  
  -- probabilityTable["pacifism"] = 1

end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+)\'s eyes are filled with compassion and peace\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Agith'tai</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
  OppGainedAff(gmcp.Char.Afflictions.Add.name)
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Your mental defences lash out against ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Nairat</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   affstrack.score.bound = 100
   ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Ethereal bonds flash forth to bind ([\w'\-]+) as [\w'\-]+ gaze falls upon a nairat rune\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>TimeLoop</name>
						<script>if target:title() == matches[2] then
 -- probabilityTable["timeloop"] = 1
   -- affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Grey fog begins to rise from the suddenly panicked-looking</string>
							<string>^Grey fog begins to rise from the suddenly panicked\-looking ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Dustbomb</name>
						<script>--probabilityTable["blackout"] = 1
--tempTimer(4,[[probabilityTable["blackout"] = 0]])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You lob a dust bomb at the ground and watch it explode.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Hamstring Lost</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	OppLostAff("hamstring")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) seems able to move more freely all of a sudden\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Flame Diminish</name>
						<script>if IsTargetted(multimatches[2][2]) and affstrack.score.aflame &gt; 1 then
   if affstrack.score.aflame ~= 100 or affstrack.score.aflame ~= 200 or affstrack.score.aflame ~= 300 or affstrack.score.aflame ~= 400 or affstrack.score.aflame ~= 500 or affstrack.score.aflame ~= 600 then 
      affstrack.score.aflame = math.floor(affstrack.score.aflame / 100)
      affstrack.score.aflame = affstrack.score.aflame * 100
   end
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The fires consuming</string>
							<string>^The fires consuming ([\w'\-]+) diminish somewhat\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>You haven't got a weapon to do that with.</name>
						<script>send("wield dirk shield")
if autohunting then
  huntNext()
  
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You haven't got a weapon to do that with.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Obviously(i)</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Artificing</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Smash</name>
								<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(matches[4]) then
   smashlimb = matches[2]..matches[3]
   if affstrack.score[smashlimb] &lt; 100 then
      OppGainedAff(smashlimb)
   end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The crackle of snapping bone can be heard as a crystalline golem viciously twists the ([\w'\-]+) ([\w'\-]+) of ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Timeflux Wear Off</name>
								<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(matches[2]) then
   if fluxtimer then 
      killTimer(fluxtimer)
      fluxtimer = nil 
   end
   OppLostAff("timeflux")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^([\w'\-]+) appears far less sluggish all of a sudden\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Failed Hypothermia</name>
								<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(matches[2]) then
   if affstrack.score.frozen &gt; 200 then
      affstrack.score.frozen = 200
   end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A crystalline golem blasts ([\w'\-]+) with an icy stream of water\, but it does little more than irritate [\w'\-]+\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Scalded</name>
								<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(matches[2]) then
   OppGainedAff("scalded")
   if ak.scaldTimer then killTimer(ak.scaldTimer) end
   ak.scaldTimer = tempTimer(17,[[
   	affstrack.score.scalded = 0
   	ak.scoreup(]]..matches[2]..[[)
   ]])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Leaning down over the incapacitated form of ([\w'\-]+)\, a crystalline golem sprays a stream of super\-heated steam directly into [\w'\-]+ face\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Hypothermia</name>
								<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(multimatches[2][2]) then
   affstrack.score.frozen = 300
   affstrack.score.hypothermia = 100
   ak.scoreup(multimatches[2][2])
end
--affstrack.score.frozen = (affstrack.score.frozen * 2)-100</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>As a crystalline golem blasts </string>
									<string>^As a crystalline golem blasts ([\w'\-]+) with icy water, [\w'\-]+ begins to shake and tremble uncontrollably\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>2</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Dehydrate</name>
								<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(matches[2]) then
   affstrack.score.prone = 100
   if affstrack.score.aflame &lt; 100 then
      affstrack.score.aflame = 100
   end
   if dehydratetimer then 
      killTimer(dehydratetimer)
      dehydratetimer = nil 
   end
   OppGainedAff("dehydrate")
   dehydratetimer = tempTimer(45, [[OppLostAff("dehydrate")]])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^([\w'\-]+) winces in evident discomfort as a crystalline golem points a single appendage at [\w'\-]+\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Conflagrate</name>
								<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(matches[2]) then
   if affstrack.score.aflame &lt; 200 then
      affstrack.score.aflame = 200
   end
   OppGainedAff("conflagrate")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The conflagration about ([\w'\-]+) continues to rage, searing flesh from bone\.$</string>
									<string>You bend your will upon (\w+)\, and command that \w+ burn\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>TimeFlux</name>
								<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(matches[2]) then
if fluxtimer then killTimer(fluxtimer);fluxtimer = nil end
OppGainedAff("timeflux")
fluxtimer = tempTimer(65, [[OppLostAff("timeflux")]])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^As a crystalline golem begins to pulse with a strange inner glow, ([\w'\-]+) sways unsteadily\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Air Elemental</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Disloyalty</name>
								<script>if ak.ai() then return end
if IsTargetted(matches[4]) then
   affstrack.score.disloyalty = 100
	 ak.scoreup(matches[4])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A howling wind sweeps over ([\w'\-]+)\, ripping flesh from bone and leaving [\w'\-]+ face a bloody ruin\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Sentinel Pets</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Badger(Addiction)</name>
								<script>if IsTargetted(matches[2]) then 
   OppGainedAff("addiction")
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A grumpy badger carves great gouges in the flesh of ([\w'\-]+) with its claws\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Butterfly Blind Strip</name>
								<script>if IsTargetted(matches[2]) then 
   OppGainedAff("blind")
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A gossamer butterfly goes into a frenzy of motion in front of the eyes of ([\w'\-]+)\, and [\w'\-]+ blinks rapidly\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Butterfly Dizziness</name>
								<script>if IsTargetted(matches[2]) then 
   OppGainedAff("dizziness")
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A gossamer butterfly goes into a frenzy of motion in front of the eyes of ([\w'\-]+)\, and [\w'\-]+ sways unsteadily\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Fox HealthLeech</name>
								<script>if IsTargetted(matches[2]) then 
   OppGainedAff("healthleech")
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A cunning red fox leaps upon ([\w'\-]+)\, sinking its teeth into [\w'\-]+ skin\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Wolf Hallucinations</name>
								<script>if IsTargetted(matches[2]) then 
   OppGainedAff("hallucinations")
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A grey wolf lets out a baying howl at ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Butterfly Transfix</name>
								<script>if IsTargetted(matches[2]) then 
   OppGainedAff("transfixed")
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A gossamer butterfly goes into a frenzy of movement before the eyes of ([\w'\-]+)\, mesmerising [\w'\-]+\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Raven</name>
								<script>if IsTargetted(matches[2]) then 
 if affstrack.score.deaf == 100 then
	OppGainedAff("prefarar")
 else 
	OppGainedAff("deaf")
 end
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^An ebony raven dives down upon ([\w'\-]+)\, pecking at [\w'\-]+ face and eyes\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Passive attacks</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Lemming passive</name>
									<script>if IsTargetted(matches[2]) then 
   OppGainedAff("vertigo")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^The lemming races between the legs of (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Raven passive</name>
									<script>if IsTargetted(matches[2]) then 
   OppGainedAff("paranoia")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^The raven dives at (\w+) and pulls up short, making (.*) uneasy\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>butterfly</name>
									<script>if IsTargetted(matches[2]) then 
   OppGainedAff("blind")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^A huge gossamer butterfly flutters wildly about ([\w'\-]+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Butterfly Blind</name>
								<script>if IsTargetted(matches[2]) then 
   OppGainedAff("blind")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A gossamer butterfly goes into a frenzy of motion in front of the eyes of ([\w'\-]+)\, and [\w'\-]+ sways unsteadily\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>badger Asthma</name>
								<script>if IsTargetted(matches[2]) then 
   OppGainedAff("asthma")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A grumpy badger lunges at (\w+), claws raking across \w+ throat\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>shielded</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Shielded</name>
						<script>if target:title() == matches[2] then
  shielded = true
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A nearly invisible magical shield forms around ([\w'\-]+).$</string>
							<string>^A dizzying beam of energy strikes you as your attack rebounds off of ([\w'\-]+)\'s shield\.$</string>
							<string>^The magical shield surrounding ([\w'\-]+) makes that impossible\.$</string>
							<string>^A shimmering barrier of crystal forms about ([\w'\-]+)\.$</string>
							<string>^A guardian angel surrounds ([\w'\-]+) with a protective shield\.$</string>
							<string>^A gentle hum arises from (\w+)\'s angel, as it raises a shield to protect \w+\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Shield Down</name>
						<script>--if ak.ai() then return end
if matches[2] then
  if target:title() == matches[2] then
   shielded = false
  end
else
   shielded = false
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You try to flay a non-existent shield from ([\w'\-]+)\.$</string>
							<string>^You flay away ([\w'\-]+)'s shield defence\.$</string>
							<string>^Calling upon Garash, you unleash a crushing blow at the magical shield surrounding ([\w'\-]+)\, shattering it\.$</string>
							<string>^Your cantata shatters the defences surrounding ([\w'\-]+)\.$</string>
							<string>([\w'\-]+)'s aura of weapons rebounding disappears.</string>
							<string>^You whip .* through the air in front of ([\w'\-]+)\, to no effect\.$</string>
							<string>^You command your gremlin to shatter the defences surrounding ([\w'\-]+)\.$</string>
							<string>^([\w'\-]+) has no shield for your gremlin to shatter\, occultist\.$</string>
							<string>^As the kick strikes the magical shield surrounding ([\w'\-]+)\, it shatters into glimmering fragments\.$</string>
							<string>^[\w'\-]+\'s cantata shatters the defences surrounding ([\w'\-]+)\.$</string>
							<string>^The othala rune on the ground suddenly erupts in a great gout of boiling magma\, the concussive blast smashing into the magical shield surrounding ([\w'\-]+) and rendering it asunder\.$</string>
							<string>^Lunging forward\, you bring .* in a savage diagonal blow\, carving through ([\w'\-]+)\'s shield\.$</string>
							<string>^Continuing your assault\, you whip .* in a vicious rising slash at ([\w'\-]+)\.$</string>
							<string>^You lunge toward ([\w'\-]+) with .*\, but finding no resistance\, you stumble hopelessly off balance\.$</string>
							<string>^[\w'\-]+\'s cantata shatters the defences surrounding ([\w'\-]+)\.$</string>
							<string>^The end of your staff smashes the magical shield surrounding ([\w'\-]+) in an explosion of translucent shards\.$</string>
							<string>^Your shadow leaps for ([\w'\-]+), hammering [\w'\-]+ shield in a silent frenzy that causes it to explode in a shower of prismatic shards\.$</string>
							<string>^([\w'\-]+) is not surrounded by a magical shield\.$</string>
							<string>^Following the momentum of your initial strike, you come back around with a crushing blow that makes the magical shield surrounding ([\w'\-]+) explode into myriad shards\.$</string>
							<string>^Bleeding off the momentum from your initial blow, you come around again, slicing cleanly through ([\w'\-]+)\'s magical shield\.$</string>
							<string>^You prepare yourself to flick your tail at ([\w'\-]+) before realising that doing so would not actually do anything\.$</string>
							<string>^You flick your tail at ([\w'\-]+)\, dismissively brushing aside the paltry shield protecting [\w'\-]+\.$</string>
							<string>^[\w'\-]+ dismissively flicks [\w'\-]+ tail at ([\w'\-]+)\, annihilating the magical shield surrounding [\w'\-]+ with casual ease\.$</string>
							<string>^You raze ([\w'\-]+)\'s magical shield with .+\.$</string>
							<string>^You conjure a blade of ice and send it to lacerate the flesh of ([\w'\-]+)\.$</string>
							<string>^You conjure a blade of ice and drive it straight through the magical shield surrounding ([\w'\-]+)\, causing it to explode in a shower of prismatic shards\.$</string>
							<string>^You lurch forward at ([\w'\-]+)\, swinging .* in a wildly innacurate blow\.$</string>
							<string>^You deliver a single\, powerful blow against the magical shield surrounding ([\w'\-]+)\, fracturing it\.$</string>
							<string>^You twist your torso and send a roundhouse towards ([\w'\-]+)\.$</string>
							<string>^A miriad image of [\w'\-]+ brings a translucent battleaxe down in a powerful overhanded blow upon([\w'\-]+)\.$</string>
							<string>^[\w'\-]+ brings a translucent battleaxe down in a powerful overhanded blow upon([\w'\-]+)\.$</string>
							<string>^Bracing your feet\, you drive .+ towards ([\w'\-]+)\.$</string>
							<string>^Your blow scythes through the air in front of ([\w'\-]+)\, missing entirely\.$</string>
							<string>^Your blow cleaves through the magical shield surrounding ([\w'\-]+), continuing on to drive him from \w+ feet\.$</string>
							<string>^You find no magical shield surrounding ([\w'\-]+), and your power is unable to take hold\.$</string>
							<string>^A savage slash of your knife trails crimson fire as you carve the logograph of the fissure into the air before (\w+)\.$</string>
							<string>^You cast a spell of erosion at (\w+)\.$</string>
							<string>^In your mind\'s eye\, you see your meteor shatter (\w+)\'s shield\.$</string>
							<string>^A violent cracking sound from the air in front of (\w+) heralds \w+ magical shield exploding into a shower of translucent shards\.$</string>
							<string>You touch your tattoo and summon the hammer but find nothing to strike.</string>
							<string>^You touch your tattoo and a massive, translucent hammer rises up and shatters the magical shield surrounding (\w+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>3</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Shield Illusion</name>
						<script>if target:title() == multimatches[2][2] then
   shielded = false
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>** Illusion **</string>
							<string>^A nearly invisible magical shield forms around ([\w'\-]+).$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Shield Illusion 2</name>
						<script>if target:title() == multimatches[2][2] then
   shielded = false   
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A nearly invisible magical shield forms around ([\w'\-]+).$</string>
							<string>** Illusion **</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Lemming shield pop</name>
						<script>local defstrip = matches[2]
--echo(defstrip)
if IsTargetted(matches[3]) then
  if ak.ai() then return end
  if defstrip == "magical shield defence" then
    ak.defs.shield = false
    ak.scoreup(matches[3])
  elseif defstrip == "aura of rebounding defence" then
    ak.defs.reRebounding = true
    ak.defs.rebounding = false
    ak.scoreup(matches[3])
  else
    ak.defs.reRebounding = true
    ak.defs.rebounding = false
    ak.defs.shield = false
    ak.scoreup(matches[3])
  end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A small brown lemming rips apart the (.+) of ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>affllictions</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>3rd Person Shikudo</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Livestrike (asthma)</name>
							<script>if target:title() == matches[2] then
  tarAffed("asthma")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The breath of (\w+) leaves \w+ in an explosive gasp as the end of the staff smashes home.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Hiraku (ano/stutt)</name>
							<script>if target:title() == matches[2] then
  probabilityTable["anorexia"]=1 
  probabilityTable["stuttering"]=1
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The staff smashes into the face of (\w+) with a sickening crunch.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Hiru (dizzy)</name>
							<script>if target:title() == matches[2] then
  probabilityTable["dizziness"]=1
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The staff connects to the side of (\w+)'s head with a resounding crack.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Ruku torso (slickness)</name>
							<script>if target:title() == matches[2] then
  probabilityTable["slickness"]=1
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) staggers as the staff cracks across \w+ ribs, sweat breaking out upon \w+ forehead.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Jinzuku (addiction)</name>
							<script>if target:title() == matches[2] then
  probabilityTable["addiction"]=1
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The end of the staff drives viciously into the kidneys of (\w+).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Needle</name>
							<script>if target:title() == matches[2] then
  probabilityTable["crushedthroat"]=1
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The end of the staff smashes into the exposed throat of (\w+), crushing cartilage.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Kuro (weariness/lethargy)</name>
							<script>if isTargeted(matches[3]) then
  if probabilityTable["weariness"]==1 then
    probabilityTable["lethargy"]=1
  else
    probabilityTable["weariness"]=1
  end
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The staff cracks across the (\w+) thigh of (.+).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Impatience</name>
						<script>if target:title() == matches[2] then
	probabilityTable["impatience"] = 1
	selectString(line, 1)
	fg("goldenrod")
	resetFormat()
	if myclass()=="depthswalker" then
		if matches[1]:find("in boredom") then
			probabilityTable["hypochondria"] = 1
			probabilityTable["nausea"] = 1
			probabilityTable["addiction"] = 1
			probabilityTable["lethargy"] = 1
		end
	end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) shuffles \w+ feet in boredom.$</string>
							<string>^A puzzled expression crosses the face of (\w+).$</string>
							<string>^\w+ eyes gleaming, \w+ smiles and quickly sings a jaunty limerick at (\w+).$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Epilepsy</name>
						<script>if target:title() == matches[2] then
	probabilityTable["epilepsy"]=1
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) begins to shake uncontrollably.$</string>
							<string>^\w+ sings an irritating, mind-numbing ditty at (\w+)\.$</string>
							<string>^(\w+) begins to jerk and shake violently, foaming at the mouth\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Clumsiness</name>
						<script>if target:title() == matches[2] then
	probabilityTable["clumsiness"]=1
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) stumbles clumsily as the blow lands.$</string>
							<string>(?:\w+) smashes the edge of (?:.*) into the kneecaps of (\w+), causing (?:\w+) to stumble.</string>
							<string>^(\w+) barely clips you with .+ as \w+ fumbles her attack.$</string>
							<string>^(\w+) misses you with \w+ dirk by a hair.$</string>
							<string>^(\w+) stumbles, \w+ attack going wide.$</string>
							<string>^\w+ severs the muscles in the \w+ arm of (\w+) with a precise blow of \w+ a translucent sword\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Dizziness</name>
						<script>if target:title() == matches[2] then
	probabilityTable["dizziness"]=1
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) begins to sway unsteadily.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Confusion</name>
						<script>if target:title() == matches[2] then
	probabilityTable["confusion"]=1
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) begins to thrash at the water enveloping (\w+).$</string>
							<string>^(\w+) looks about bemusedly\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Stupidity</name>
						<script>if target:title() == matches[2] then
	probabilityTable["stupidity"]=1
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) makes a strangled meowing noise and quickly shuts up, blushing\.$</string>
							<string>^(\w+) picks (\w+) nose absently\.$</string>
							<string>^(\w+) breaks down and sobs uncontrollably\.$</string>
							<string>^(\w+) gets down on one knee and serenades the world\.$</string>
							<string>^(\w+) falls to \w+ knees in worship\.$</string>
							<string>^(\w+) hugs \w+ compassionately\.$</string>
							<string>^(\w+) grunts a bit and then lets out a loud \"OINK\!\"$</string>
							<string>^(\w+) waggles \w+ eyebrows comically\.$</string>
							<string>^(\w+) wails like an old woman\.$</string>
							<string>^(\w+) moans, holding his head\.$</string>
							<string>^You cast a net of stupidity over (\w+)'s mind\.$</string>
							<string>^(\w+) twitches spasmodically\.$</string>
							<string>^With a gravity, \w+ sings the Passion of Imithia at (\w+).$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Paralysis</name>
						<script>if target:title() == matches[2] then
	probabilityTable["paralysis"]=1
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Horror overcomes (\w+)'s face as \w+ body stiffens into paralysis.$</string>
							<string>^(\w+) stiffens suddenly, \w+ features a masque frozen in agony.$</string>
							<string>^(\w+)'s body stiffens rapidly with paralysis\.$</string>
							<string>^(?:\w+) recites an epic tale of the heroism of Nicator to (\w+)\.$</string>
							<string>^Lunging to the side, (?:\w+) brings (?:\w+) shield around to smash into the spine of (\w+).</string>
							<string>^The body of (\w+) locks in paralysis as \w+ directs a short burst of arcane power in \w+ direction.$</string>
							<string>^The bees sting (\w+) into paralysis.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Darkshade</name>
						<script>if target:title() == matches[2] then
	probabilityTable["darkshade"]=1
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) stiffens suddenly, his features a masque frozen in agony\.$</string>
							<string>^(\w+) lets out a piercing scream, as if wounded by the very sunlight\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Nausea</name>
						<script>if target:title() == matches[2] then
	probabilityTable["nausea"]=1
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) doubles over\, vomiting violently\.$</string>
							<string>(?:\w+)'s poem of gluttony and decay makes (\w+) green in the cheeks\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Hypersomnia</name>
						<script>if target:title() == matches[2] then
	probabilityTable["hypersomnia"]=1
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) suddenly appears tired all of a sudden.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Got slickness</name>
						<script>if target:title() == matches[2] then
	probabilityTable["slickness"]=1
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^The protective coating covering the skin of (\w+) sloughs off.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Clumsiness - Missed Attacks</name>
						<script>if target:title() == matches[2] then
	probabilityTable["clumsiness"]=1
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A frustrated frown crosses the face of (\w+).$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Party Afflictions</name>
						<script>if target:title() == matches[3] then
  probabilityTable[matches[4]] = 1
elseif target:title() == matches[4] then
  probabilityTable[matches[3]] = 1
end

if target:title() == matches[2] then
  probabilityTable[matches[3]] = 1
end

if target:title() == matches[2] then
  probabilityTable[matches[3]] = 1
  probabilityTable[matches[4]] = 1
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\(Party\)\: (\w+) says\, "(\w+) hit with (\w+)."$</string>
							<string>^\(Party\)\: (\w+) says, "(\w+) has (\w+)."$</string>
							<string>^\(Party\)\: (\w+) says, "(\w+) has been hit with (\w+)."$</string>
							<string>^\(Party\)\: (\w+) says, "Rended (\w+)'s .+ with (\w+)."$</string>
							<string>^\(Party\): (\w+) says, "(\w+) wracked: (\w+)."$</string>
							<string>^\(Party\): (\w+) says, "Afflicted (\w+): (\w+)."$</string>
							<string>^\(Party\)\: Serin says, "(\w+) has (\w+)."$</string>
							<string>^\(Party\): (\w+) says, "(\w+): (\w+) (\w+)."$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Nodeaf</name>
						<script>probabilityTable["deafness"] = 0
tunesmith = "pesante"</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The songblessing unleashes a stunning percussive blast.</string>
							<string>The songblessing upon the rapier sings out with a piercing high note.</string>
							<string>The songblessing unleashes a strident note.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Double Party Affs</name>
						<script>if isTargeted(matches[3]) then
  probabilityTable[matches[4]] = 1
  probabilityTable[matches[5]] = 1
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\(Party\): (\w+) says, "(\w+) wracked: (\w+) (\w+)."$</string>
							<string>^\(Party\): (\w+) says, "(\w+) truewracked: (\w+) (\w+)."$</string>
							<string>^\(Party\)\: (\w+) says\, "(\w+) hit with (\w+) and (\w+)."$</string>
							<string>^\(Party\): (\w+) says, "(\w+): (\w+) (\w+)."$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Proned</name>
						<script>if target:title() == matches[2] then
	probabilityTable["prone"] = 1
	shielded = false
	selectString(line,1)
	setBold(true)
	fg("violet")
	resetFormat()
end

</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A guardian angel extends a hand in the direction of (\w+), and \w+ is suddenly sent sprawling to the ground by an invisible force.$</string>
							<string>^The shadow of (\w+) springs into action, violently lashing out at its corporial twin and driving \w+ to \w+ knees.$</string>
							<string>^(\w+) closes \w+ eyes, curls up into a ball and falls asleep.$</string>
							<string>^\w+ raises \w+ trunk into the air and trumpets mightily, knocking (\w+) to the ground.$</string>
							<string>^\w+ tramples over (\w+) with \w+ enormous body.$</string>
							<string>^With a synchronous, guttural rasp, \w+'s many serpentine heads breathe forth wisps of rapidly condensing smoke that entangle (\w+) in a tangible web.$</string>
							<string>^A mighty, bestial roar from \w+ leaves (\w+) looking dazed.$</string>
							<string>^The staff sweeps the legs out from under (\w+), sending \w+ sprawling.$</string>
							<string>^(\w+) slips on a thin layer of fluid, \w+ feet flying out from under \w+.$</string>
							<string>^Water thunders down upon (\w+), driving \w+ relentlessly to \w+ knees.$</string>
							<string>^Drawing an enormous breath, you exhale, expelling a gale of wind with such force that (\w+) is knocked over.$</string>
							<string>^The shadow of (\w+) springs into action, violently lashing out at its corporeal twin and driving \w+ to \w+ knees.</string>
							<string>^A gust of wind strikes (\w+), throwing (\w+) to the ground.$</string>
							<string>^(\w+) is flung violently from \w+ feet.$</string>
							<string>^You lunge downward, slamming the edge of .+ into the shins of (\w+).$</string>
							<string>^The power of your blow sweeps the legs out from under (\w+).$</string>
							<string>^Sweeping out with a blade hand, you strike at the back of (\w+)'s knee.$</string>
							<string>^You knock the legs out from under (\w+) and send \w+ sprawling.$</string>
							<string>^\w+ delivers a series of lashes to (\w+) with a translucent lash.$</string>
							<string>^(\w+)'s eyes close suddenly as \w+ falls asleep.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Dizziness Prone</name>
						<script>if target:title() == matches[2] then
	probabilityTable["dizziness"] = 1
	probabilityTable["prone"] = 1
	selectString(line,1)
	setBold(true)
	fg("purple")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) staggers and falls to the ground.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Justice</name>
						<script>if target:title() == matches[2] then
	probabilityTable["justice"] = 1
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Justice is dealt out and (\w+)'s attack rebounds onto \w+.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Masochism</name>
						<script>if target:title() == matches[2] then
	probabilityTable["masochism"]=1
end

--if gmcp.Char.Status.class == "Apostate" then
  --if bloodworm() == true then
   -- killTimer(tostring(wormTimer))
    --wormTimer = tempTimer(7.5, [[wormtick()]])
   
  --end
--end




function wormtick()
  if bloodworm() == true then
    if tAffs.masochism and not tAffs.deafness then
      tarAffed("dizziness")
    else
      killTimer(tostring(wormTimer))
	    wormTimer = tempTimer(7.5, [[wormtick()]])
    end
  end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^The face of (\w+) contorts in horrified revulsion.$</string>
							<string>^(\w+) smiles as \w+ rams her fist into \w+ jaw.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Dementia</name>
						<script>if target:title() == matches[2] then
  probabilityTable["dementia"] = 1
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) stares about \w+ frenziedly, wild-eyed.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Voyria</name>
						<script>if target:title() == matches[2] then
	probabilityTable["voyria"]=1
end

</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) suddenly looks very ill.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Siren Seduce</name>
						<script>if target:title() == matches[2] then
	probabilityTable["lovers"]=1
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^With a sultry glance and an angelic voice, you seduce (\w+). A look of love fills \w+ eyes, and \w+ is yours.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>PARTY AFFS DIFFERENT</name>
						<script>if isTargeted(matches[4]) then
	  probabilityTable[matches[3]] = 1
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\(Party\): (\w+) says, " (\w+) on (\w+)."$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Addiction</name>
						<script>if target:title() == matches[2] then
	 probabilityTable["addiction"] = 1
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A humbug clutches to the throat of (\w+)\, its grotesque body undulating\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Weariness</name>
						<script>if target:title() == matches[2] then
	probabilityTable["weariness"]=1
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\w+ lashes out with lightning speed, \w+ blade driving into (\w+) just beneath \w+ \w+ shoulder\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Unconscious</name>
						<script>if target:title() == matches[2] then
	--probabilityTable["unconsciousness"]=1
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+)'s legs collapse under \w+ as \w+ suddenly passes out.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Impaled</name>
						<script>selectString(line,1)
fg("black")
bg("DodgerBlue")
if myclass()=="runewarden" or myclass()=="paladin" or myclass()=="infernal" or myclass()=="unnamable" then
  send("fury on")
end

probabilityTable["impaled"] = 1</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You draw your blade back and plunge it deep into the body of (\w+) impaling \w+ to the hilt.$</string>
							<string>You cannot do that while your weapon remains deep in your victim's gut.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>no impale</name>
						<script>probabilityTable["impaled"] = 0</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^With a look of agony on \w+ face, (\w+) manages to writhe \w+ free of the weapon which impaled \w+.$</string>
							<string>^With a vicious snarl you carve a merciless swathe through the steaming guts of (\w+), who gurgles and chokes as you withdraw your dripping blade, glistening with gore.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Dragoncurse Hit</name>
						<script>if target:title() == matches[2] and dragoncurse then
	--tarAffed(dragoncurse)
	dragoncurse = nil
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) convulses under the influence of some invisible force.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Mycalium</name>
						<script>if target:title() == matches[2] then
	 --probabilityTable["mycalium"]=1
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) violently quakes and shudders, \w+ eyes rolling in their sockets.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>third person</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>sileris up update</name>
						<script>if target:title() == matches[2] then
  --sileris = true
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A supple purple shell of sileris berry juice has formed around (\w+)\.$ </string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>serpent flay sileris</name>
						<script>if target:title() == matches[2] then
  -- sileris = false
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) seems to jolt to a halt suddenly as [\w'\-]+ flays h(?:im|er)\.$</string>
							<string>^The protective coating covering the skin of (\w+) sloughs off\.\.$</string>
							<string>^The protective coating covering the skin of (\w+) sloughs off\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>speed stripped</name>
						<script>if target:title() == matches[2] then
   --speed = false
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You stand an Aeon tarot on your palm, and blow it lightly at ([\w'\-]+)\.$</string>
							<string>^[\w'\-]+ razes ([\w'\-]+)\'s speed defence with .*\.$</string>
							<string>^([\w'\-]+) suddenly seems less dexterous\, [\w'\-]+ reactions becoming noticeably slower\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>impaled</name>
						<script>--if failsafe then return end
if target:title() == matches[2] then
   impaled = true
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) draws back [\w'\-]+ blade and impales ([\w'\-]+) to the hilt\.$</string>
							<string>^(\w+) shifts the sword impaling (\w+)\'s abdomen\, and blood streams freely from the grave wound\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>rebounding down</name>
						<script>if target:title() == matches[3] then
  rebounding = false
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) seems to jolt to a halt suddenly as (\w+) flays (\w+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>blademaster</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>chasing</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>who direction</name>
							<script>lookdirection = matches[2]</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>1</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You see the following people to the (\w+)\:$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>capture</name>
								<script>local enemies = {}
if matches[2]:find(",") then
  enemies = string.split(matches[2], ", ")
else
  enemies = string.split(matches[2], " ")
end


  if table.contains(enemies, target:title()) then
      send("squint "..lookdirection) 
  --else
     -- if not(targetHere()) then
     --  if lookdirection == chasedirection then
     --     expandAlias("chase")
     --  end
     -- end
  end


</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(.+)$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>catch room names</name>
							<script>squinted = true
room_count = 0
room_count_set=0
chase_target_locked=false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>99</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ffaa00</mFgColor>
							<mBgColor>#000000</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(Narrowing your eyes, you squint off toward the (\w+)).</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="yes" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>room count</name>
								<script>room_count = room_count + 1</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#808000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>FG8BG2</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>6</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>target catch</name>
								<script>chase_target_locked = chase_target_locked or false
if string.find(getCurrentLine(), target) and not(chase_target_locked) then
	chase_target_locked=true
	room_count_set=room_count
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(.+)</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>see no further</name>
								<script>if chase_target_locked then

	if myclass()=="Air Elemental Lord" and flying then
		send("queue addclear eqbal glide "..target_direction.." "..room_count_set)
	else
	   	if shackleworn then
    		send("queue addclear eqbal remove shackle"..cmdsep.."dash "..target_direction.." "..room_count_set)
    	else
    		send("queue addclear eqbal dash "..lookdirection.." "..room_count_set)
    	end

  end

setTriggerStayOpen("catch room names", 0)

else

      --if not(targetHere()) then
      --  expandAlias("capture enemy")
      --end

end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You can see no further.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>discern</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>0</name>
							<script>can_bstar = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You observe that (\w+) is not bleeding at all\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>1-200</name>
							<script>can_bstar = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You observe a small amount of blood trickling from minor wounds on .*\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>201-400</name>
							<script>can_bstar = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You observe thin red rivulets of blood dripping from .*\.$</string>
								<string>^You observe sluggish bleeding from Carrabba's wounds.*\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>400-500</name>
							<script>can_bstar = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You observe free-flowing blood streaming from (\w+)'s wounds\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>500-700</name>
							<script>can_bstar = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You observe great gouts of blood spurting from (\w+)'s many wounds\.$</string>
								<string>^You observe that the wounds of (\w+) are bleeding most severely\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>cant_bstar</name>
							<script>can_bstar = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You discern that your target is not sufficiently weakened to unleash your wrath.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>heavy_torrents</name>
							<script>cecho("\n&lt;red&gt;@-@-@-@ OMG OMG OMG THE BLEED IS REAL @-@-@-@")
cecho("\n&lt;red&gt;@-@-@-@ OMG OMG OMG THE BLEED IS REAL @-@-@-@")
cecho("\n&lt;red&gt;@-@-@-@ OMG OMG OMG THE BLEED IS REAL @-@-@-@")
can_bstar = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You observe heavy torrents of lifeblood spilling from (\w+)\'s near-fatal wounds\.$</string>
								<string>^You observe great rivers of blood running from the open wounds of (\w+)\.$</string>
								<string>^You observe that (\w+) will shortly bleed to death\.$</string>
								<string>^You observe arterial spray gushing from the open wounds of (\w+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>contemplate</name>
							<script>maxmana = matches[4]
clotmana = maxmana / 30 + 60
totalclot = maxmana / clotmana * 20
--cecho("\n&lt;red&gt; Can clot " ..totalclot.." Bleeding Total")
currentmana = matches[3]
currentclot = currentmana / clotmana *20
--cecho("\n&lt;green&gt; Can currently clot " ..currentclot.." Bleeding Total")

requestcontemplate=0
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+)'s mana stands at (\d+)\/(\d+).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>predict</name>
							<script>limbdamage[target:title()][matches[2]] = {health = 100, hits = calculateRemainingStrikes(100, compass_conv[stance])}</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(.*?)\:(\s+)Perfect health$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>twoarts</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New Trigger</name>
							<script>firelashgroundrequested = true
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The ground is slick with ice. </string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>wallsummon</name>
							<script>myfleedir = matches[2]

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You raise your hands dramatically and summon an icewall to the (.*).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>engage on</name>
							<script>engaged = true
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You move in to engage (\w+).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>engage off</name>
							<script>engaged = false
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You lash out at (\w+) as (\w+) turns to flee.$</string>
								<string>You drop back and ease the engagement.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>alleviate</name>
							<script>havebalance = false
alleviaterequested = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Applying your knowledge of anatomy, you massage pressure points with your fingers, and a flood of relief courses through your body.</string>
								<string>There are no pesky afflictions keeping you from your destiny, Warrior.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>touch shield</name>
							<script>shieldrequested = false

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You touch the tattoo and a nearly invisible magical shield forms around you.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>target flying</name>
							<script>targetflying = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) flits into view directly overhead.$</string>
								<string>^(\w+) is quickly carried up into the skies.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>immunity</name>
							<script>inimmunity = true
immunityrequested = false
send("curing off")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You close your eyes and grit your teeth, feeling the heat of the blood pumping through your veins.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>immunity off</name>
							<script>inimmunity = false
send("curing on")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You cease concentrating on immunity.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>mounted check</name>
							<script>if string.find(matches[3], target) then
targetmounted = true
end

if target:title() == matches[2] then
  --actionBalance()
  selectString(line, 1)
  setUnderline(false)
  setBold(true)
  bg("black")
  fg("white")
  resetFormat()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(.*)\. (.*) riding on (.*). (.*)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>mounted check</name>
							<script>if matches[2] == target:title() then
targetmounted = true
end

if target:title() == matches[2] then
  --actionBalance()
  selectString(line, 1)
  setUnderline(false)
  setBold(true)
  bg("black")
  fg("white")
  resetFormat()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) easily vaults onto (.*).$</string>
								<string>^(\w+) (?:climbs onto|vaults onto the back of|easily vaults onto the back of) (.+)\.$</string>
								<string>^(\w+), riding (.+), leaves to the .+\.$</string>
								<string>^(\w+), riding (.+), arrives from the .+\.$</string>
								<string>^([a-zA-Z-,' ]+) is riding on ([a-zA-Z-,' ]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>dismounted</name>
							<script>targetmounted = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^With preternatural grace, you dart to the side of (\w+)'s mount. Grabbing (\w+) ankle from the stirrup, you execute a precise twist, sending (\w+) tumbling from the saddle.$</string>
								<string>Crawling on your belly like a worm is hardly befitting behaviour. Your target is not mounted!</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>brokenfail</name>
							<script>brokenstarrequested = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You discern that your target is not sufficiently weakened to unleash your wrath.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>immunity counter</name>
							<script>if immunitycounterrequested then

AI.stance = "counter"

immunitycounterrequested = false
end




</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You have recovered equilibrium.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>impaled</name>
							<script>impaled = true
send("curing on")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You draw your blade back and plunge it deep into the body of (\w+) impaling (him|her) to the hilt.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>target writhed</name>
							<script>if matches[2] == target:title() then

impaled = false

impalerequested = false

end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^With a look of agony on \w+ face, (\w+) manages to writhe (\w+) free of the weapon which impaled (him|her).$</string>
								<string>^With a snarl of contempt, you allow (\w+) to slide free of your weapon.$</string>
								<string>^With a vicious snarl you carve a merciless swathe through the steaming guts of (\w+), who gurgles and chokes as you withdraw your dripping blade, glistening with gore.$</string>
								<string>^As (\w+) wrenches away from you, your blade rips through (\w+) innards in a violent fashion, leaving a pool of viscera where your foe once lay.$</string>
								<string>You have no victim impaled to be able to perform a disembowelment.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>not engaged</name>
							<script>engaged = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You drop back and ease the engagement.</string>
								<string>^You lash out at (\w+) as (he|she) turns to flee.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>not shielded or rebounding</name>
							<script>shielded = false
rebounding = false
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You whip (.*) through the air in front of (\w+), to no effect.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>engaged</name>
							<script>engaged = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You move in to engage (\w+).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>tumbling started</name>
							<script>tumblerequested = false
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You begin to tumble agilely to the (\w+).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>evade out</name>
							<script>nextAction=""
hindered = false
evaderequested = false
leaprequested = false
disableTimer("evade requested")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You slip away to the .+ and successfully evade your pursuers.$</string>
								<string>You can't evade in that direction.</string>
								<string>You bunch your powerful muscles and launch yourself in a majestic leap northwards.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>3</integer>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>impale failed</name>
							<script>affstrack.score.prone = 0
affstrack.score.paralysis = 0
impaled = false
impalerequested = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You thrust your blade towards (\w+) but (he|she) dodges easily out of the way.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>shindo</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>manatrans</name>
							<script>manarequested = false
manual.manarequested = false
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>As Shin energy flows into your mind, your thoughts become clear.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>healthtrans</name>
							<script>healrequested = false
manual.healrequested = false
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>As Shin energy flows through your body, you feel a surge of strength.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>phoneix requested</name>
							<script>phoenixrequested = false
manual.phoenixrequested = false
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Focusing upon your internal heat, you will it to increase in intensity. Warmth suffuses your senses, growing ever hotter until the sensation nears agony. Screaming in defiance, you throw your head back as you are consumed by flames, the mystical fire burning away all but the pure elements of your physical form.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Prone Stuff</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>ImpaleSlash</name>
							<script>if matches[3] == target then
	OppGainedAff("impaleslash")
   if impaleslashtimer then killTimer(impaleslashtimer);impaleslashtimer = nil end
   impaleslashtimer = tempTimer(30, [[OppLostAff("impaleslash")]])
end


impaleslashrequested = false

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(.*) steady in your grip, you drag its razor edge across arteries within (\w+)'s abdomen\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>CHASING</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>falcon report</name>
							<script>mmp.locateAndEcho(matches[2])
local rooms = mmp.searchRoom(matches[2]);
for id, _ in pairs(rooms) do
  --if room is not a locked area, and room ID is not the current room
  if not mmp.locked[id] and not (mmp.currentroom == id) then
    mmp.gotoRoom(id)
  end
  return
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You get a feel of flying above (.+) from your falcon\.$</string>
								<string>^You get a feel of (.+) from your falcon.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>leaves</name>
							<script>if matches[2] == target:title() then
  if failsafe then
    squinted = false
    requestchase = true
    chasedirection = matches[3]
  end
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+), riding .+, leaves to the (\w+)\.$</string>
								<string>^.+ (\w+) as \w+ leaves to the (\w+)\.$</string>
								<string>^(\w+) leaves to the (\w+).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>still chasing ?</name>
							<script>if requestchase then
  if targetHere() then
    requestchase = false
    boxDisplay("FOUND TARGET","red:white")
    failsafe = true
  else
    expandAlias("chase")
  end
end

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You look off to the (\w+) and dash speedily away.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>hasty</name>
							<script>if requestchase and not(targetHere()) then
  expandAlias("capture enemy")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Now now, don't be so hasty!</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>LEFT FOLLOW</name>
							<script>if type(target) ~= "string" then
	return false
end

if isTargeted(matches[3]) then
	selectString(line,1)
	fg("black") bg("LightSkyBlue")
	resetFormat()
	dir_left = matches[4]

	if not string.find(matches[1], "tumble") then
		tAffs.paralysis = false
	end

	boxDisplay(target.." HAS LEFT TO THE "..dir_left, "black:green")

	if not chasing_Targets then cecho("&lt;red&gt;           -= Target chasing is currently disabled =-") return end

	sendAll("cq all"..cmdsep.."queue addclear free "..dir_left)

	if tChaseTimer then
		killTimer(tostring(tChaseTimer))
 	end
 	tChaseTimer = tempTimer(2.5, [[tChaseTimer = nil]])

	if tarTumble then tarTumble = nil end
	if tumbleTimer then killTimer(tumbleTimer) end

	targetIshere = false
	enableTimer("TargetOutOfRoom")
	
	if repeatOffence and not doRepeat and chasing_Targets then
		enableTrigger("Repeat Offence")
	end
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) leaves, following (\w+) to the (\w+).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Target Left</name>
							<script>if type(target) ~= "string" then
	return false
end

if target:title() == matches[2] then
	selectString(line,1)
	fg("black") bg("LightSkyBlue")
	resetFormat()
	dir_left = matches[3]
  engaged = false

	if not string.find(matches[1], "tumble") then
		tAffs.paralysis = false
	end

	boxDisplay(target.." HAS LEFT TO THE "..dir_left, "black:green")

	if not chasing_Targets then cecho("&lt;red&gt;           -= Target chasing is currently disabled =-") return end
  
  if gmcp.Char.Status.class == "Infernal" then
  send("queue addclear free lunge "..target..""..cmdsep.."tyranny")
elseif jumping and jumping == true then
	sendAll("cq all", "queue addclear free mountjump "..dir_left)
  elseif not jumping or jumping == false then

	sendAll("cq all"..cmdsep.."queue addclear free "..dir_left)
end
	if tChaseTimer then
		killTimer(tostring(tChaseTimer))
 	end
 	tChaseTimer = tempTimer(2.5, [[tChaseTimer = nil]])

	if tarTumble then tarTumble = nil end
	if tumbleTimer then killTimer(tumbleTimer) end

	targetIshere = false
	enableTimer("TargetOutOfRoom")
	
	if repeatOffence and not doRepeat and chasing_Targets then
		enableTrigger("Repeat Offence")
	end
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The outline of (\w+) fades away to the (\w+).$</string>
								<string>^(\w+) leaves to the (\w+).$</string>
								<string>^(\w+) slips away to the (\w+).$</string>
								<string>^(\w+)'s somersault takes \w+ out of the room to the (\w+).$</string>
								<string>^(\w+) tumbles out to the (\w+).$</string>
								<string>^(\w+) gathers \w+ legs under \w+ and backflips out to the (\w+).$</string>
								<string>^(\w+), riding .+ leaves to the (\w+).$</string>
								<string>^(\w+), riding .+ gathers the reins and jumps off to the (\w+).$</string>
								<string>^(\w+) leaps majestically to the (\w+).$</string>
								<string>^(\w+) bounds powerfully to the (\w+).$</string>
								<string>^(\w+) prowls out to the (\w+), moving like a jaguar.$</string>
								<string>^The pop and crackle of lightning follows (\w+) as \w+ leaves to the (\w+).$</string>
								<string>^(\w+) departs to the (\w+), the air vibrating wildly around \w+.$</string>
								<string>^(\w+) slowly hobbles (\w+).$</string>
								<string>^(\w+), riding .+ departs to the (\w+), .+.$</string>
								<string>^(\w+) departs to the (\w+), leaving a fearsome roar in \w+ wake.$</string>
								<string>^(\w+) glances (\w+) and vanishes.$</string>
								<string>^(\w+), riding .+ glances (\w+) and vanishes.$</string>
								<string>^Mystic waters rise about (\w+), the frothing crest of a surging wave carrying \w+ away to the (\w+).$</string>
								<string>^(\w+) departs to the (\w+), the air sizzling around (\w+).$</string>
								<string>^Frosty scales scatter around (\w+) as (she|he) leaves to the (\w+).$</string>
								<string>^Carried atop the wave, (\w+) vanishes to the (\w+).$</string>
								<string>^(\w+) leaves to the (\w+), (.+).$</string>
								<string>^(\w+) launches himself to the (\w+) in a great leap.$</string>
								<string>^(\w+) launches herself to the (\w+) in a great leap.$</string>
								<string>^(\w+)  stomps out to the (\w+) , shaking the ground with each step.$</string>
								<string>^(\w+) glances to the (\w+) and vanishes.$</string>
								<string>^(\w+) moves his huge bulk to the (\w+) with surprising grace.$</string>
								<string>^(\w+) moves her huge bulk to the (\w+) with surprising grace.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>GHOST LEFT</name>
							<script>if type(target) ~= "string" then
	return false
end


	selectString(line,1)
	fg("black") bg("LightSkyBlue")
	resetFormat()
	dir_left = matches[2]

	if not string.find(matches[1], "tumble") then
		tAffs.paralysis = false
	end

	boxDisplay(target.." HAS LEFT TO THE "..dir_left, "black:green")

	if not chasing_Targets then cecho("&lt;red&gt;           -= Target chasing is currently disabled =-") return end
if jumping and jumping == true then
	sendAll("cq all", "queue addclear free mountjump "..dir_left)
  elseif not jumping or jumping == false then

	sendAll("cq all", "queue addclear free "..dir_left)
end
	if tChaseTimer then
		killTimer(tostring(tChaseTimer))
 	end
 	tChaseTimer = tempTimer(2.5, [[tChaseTimer = nil]])

	if tarTumble then tarTumble = nil end
	if tumbleTimer then killTimer(tumbleTimer) end

	targetIshere = false
	enableTimer("TargetOutOfRoom")
	
	if repeatOffence and not doRepeat and chasing_Targets then
		enableTrigger("Repeat Offence")
	end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A ghostly apparition vanishes from sight to the (\w+).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>MIND THROWN</name>
							<script>


	selectString(line,1)
	fg("black") bg("LightSkyBlue")
	resetFormat()
  
  if matches[2] == "southeast" then 
	dir_left = "northwest"
  elseif matches[2] == "southwest" then 
	dir_left = "northeast"
   elseif matches[2] == "northwest" then 
	dir_left = "southeast"
     elseif matches[2] == "northeast" then 
	dir_left = "southwest"
     elseif matches[2] == "north" then 
	dir_left = "south"
       elseif matches[2] == "south" then 
	dir_left = "north"
       elseif matches[2] == "up" then 
	dir_left = "down"
       elseif matches[2] == "down" then 
	dir_left = "up"
       elseif matches[2] == "east" then 
	dir_left = "west"
       elseif matches[2] == "west" then 
	dir_left = "east"
  
  
  end
  
  




	if not string.find(matches[1], "tumble") then
		tAffs.paralysis = false
	end

	boxDisplay(target.." GOING BACK TO "..dir_left, "black:green")

	if not chasing_Targets then cecho("&lt;red&gt;           -= Target chasing is currently disabled =-") return end
if jumping then
	sendAll("cq all", "queue addclear free mountjump "..dir_left)
  else

	sendAll("cq all", "queue addclear free "..dir_left)
end
	if tChaseTimer then
		killTimer(tostring(tChaseTimer))
 	end
 	tChaseTimer = tempTimer(2.5, [[tChaseTimer = nil]])

	if tarTumble then tarTumble = nil end
	if tumbleTimer then killTimer(tumbleTimer) end

	targetIshere = false
	enableTimer("TargetOutOfRoom")
	
	if repeatOffence and not doRepeat and chasing_Targets then
		enableTrigger("Repeat Offence")
	end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You are jolted violently (\w+)wards by powers unseen.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Fly</name>
							<script>if type(target) ~= "string" then
	return false
end

if target:title() == matches[2] then
	selectString(line,1)
	fg("black") bg("blue")
	resetFormat()
	dir_left = "fly"
	tAffs.paralysis = false
	tAffs.vertigo = false
  send("touch tentacle " ..target)

	if tChaseTimer then
		killTimer(tostring(tChaseTimer))
 	end
 	tChaseTimer = tempTimer(2.3, [[tChaseTimer = nil]])

	targetIshere = false
	enableTimer("TargetOutOfRoom")
	
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) is quickly carried up into the skies.$</string>
								<string>^(\w+) crouches down upon \w+ haunces, then with a powerful thrust</string>
								<string>^(\w+) vanishes from sight as \w+ is carried into the sky at incredible speed.$</string>
								<string>^(\w+) sucks in \w+ breath, and with a mighty blast of air exhales while uttering a word of magic. Suddenly, \w+ is lifted into the skies by an unseen force.$</string>
								<string>^(\w+) grabs hold of a nearby branch and swings up and out of sight into the treetops.$</string>
								<string>^(\w+) begins to flap (\w+) wings powerfully, and rises quickly up into the firmament.$</string>
								<string>^(\w+) spreads (\w+) arms wide, a tide of darkness boiling up from the ground and sending (\w+) aloft.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Target no here?</name>
							<script>targetIshere = false
enableTimer("TargetOutOfRoom")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You cannot see that being here.</string>
								<string>Ahh, I am truly sorry, but I do not see anyone by that name here.</string>
								<string>You detect nothing here by that name.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>enemy attacks</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>firelord</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>firewhip</name>
								<script>requestdelete()

cecho("&lt;red&gt;"..matches[2].." USED FIREWHIP!!")


hisattackprocess("firewhip", false, matches[2])

</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A whip of flame coalesces in the hand of (\w+), with which (\w+) viciously lashes you.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>dw</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>New Trigger</name>
								<script>requestdelete()

cecho("\n&lt;green&gt;"..matches[2].." SHADOWREAPED!!")


hisattackprocess("shadowreap", false, matches[2])

</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) delivers a lightning-fast strike to you with (.*).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>twohander</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>hewhammer</name>
								<script>

hisattackprocess("hew", matches[3], matches[2])

</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) unleashes a terrible blow at your (.*) with (.*).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>New Trigger</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>New Trigger</name>
								<script>

hisattackprocess("hew", matches[4], matches[2])


</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) comes around with a terrible swing of (.*) toward your (.*).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>New Trigger</name>
								<script>
hisattackprocess("hew", "torso")


if hisbattlefury == "speed" then

hisattackprocess("hew", "torso")


end

hisattackprocess("hew", "torso")


if hisbattlefury == "speed" then

hisattackprocess("hew", "torso")


end


stackaff("ribs", "add")


if hisbattlefury == "precision" then
stackaff("ribs", "add")



end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>The breath is savagely driven from your lungs as the hammer crunches into your side.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>cracked ribs</name>
								<script>
hisattackprocess("hew", "torso")


if hisbattlefury == "speed" then

hisattackprocess("hew", "torso")


end
stackaff("ribs", "add")


if hisbattlefury == "precision" then
stackaff("ribs", "add")



end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Lances of pain radiate from your chest as the blade smashes into your ribs.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>underhand</name>
								<script>hisattackprocess("underhand", false, matches[2])
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(.*) explodes upward from a low crouch, driving .* toward your torso.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>overhand</name>
								<script>hisattackprocess("overhand", false, matches[2])
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(.*) brings.* down upon you with a brutaloverhand blow.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>cracked skull</name>
								<script>
hisattackprocess("hew", "head")


if hisbattlefury == "speed" then

hisattackprocess("hew", "head")


end
stackaff("ribs", "add")


if hisbattlefury == "precision" then
stackaff("ribs", "add")



end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>As the blade slams into the side of your head, you feel the unmistakable sensation of bones cracking.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>dual blunt</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>New Trigger</name>
								<script>
hisattackprocess("whirl", matches[4], matches[2])
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) skilfully whirls a (.*) toward your (.*).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>dual cut</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>targeted jab</name>
								<script>
hisattackprocess("jab", matches[3], matches[2])
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Lightning-quick, (.*) jabs your (.*) with .*.$</string>
									<string>^(.*) swings .* at your (.*) with all .* might.$</string>
									<string>^(.*) slashes into your (.*) with .*.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>untargeted jab</name>
								<script>
hisattackprocess("jab", false, matches[2])
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(.*) slashes into you with .*$</string>
									<string>^(\w+) swings .* at you with all \w+ might.$</string>
									<string>^Lightning-quick, (\w+) jabs you with .*.$</string>
									<string>^(\w+) viciously jabs .* into you.$</string>
									<string>^(\w+) misses you with .*.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>New trigger</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
							</Trigger>
						</TriggerGroup>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>deadeye</name>
							<script>
hisattackprocess("deadeye", false, matches[2])
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) stares at you, giving you the evil eye.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>serpent</name>
							<script>hisattackprocess("dstab",false, matches[2])
--send("jab rakkaro")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Striking like a snake, (\w+) follows the first attack with another.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>snb</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>slice</name>
								<script>cecho("inside slice")

hisattackprocess("slice", matches[3], matches[2])
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The blade of (\w+) is a blur as \w+ moves forward, slicing into your (.*).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>untargeted slice</name>
								<script>hisattackprocess("slice",false, matches[2])</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The blade of (\w+) is a blur as \w+ moves forward, slicing into you.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>blackoutstun</name>
								<script>send("curing predict paralysis")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Your muscles lock in painful contractions in reaction to the blow.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>got engaged</name>
								<script>foundone = false

for i in ipairs(warningsys.hinders) do

if warningsys.hinders[i].name == "engage" then

foundone = true


end



end

if not(foundone) then

table.insert(warningsys.hinders, {name = "engage", time = os.clock() + 200000, target = matches[2]})


end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(.*) moves in to engage you.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>i disengaged</name>
								<script>
for i in ipairs(warningsys.hinders) do

if warningsys.hinders[i].name == "engage" then
table.remove(warningsys.hinders, i)



end


end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^As you turn away from (.*), (she|he) delivers a vicious blow to your back, a jolt of power throwing you off balance.$</string>
									<string>^(.*) lashes out at you as you turn to flee.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>druid</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>bite</name>
								<script>hisattackprocess("bite",false, matches[2])</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) sinks (\w+) vicious fangs deep into your body, ravaging your flesh.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>air lord</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>zephyr</name>
								<script>hisattackprocess("zephyr",false, matches[2])</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) casts a hand out in your direction, an icy zephyr descending upon you to tear your fortitude away.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>scourge</name>
								<script>hisattackprocess("zephyr",false, matches[2])</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A howling wind sweeps over you, its terrible power scouring flesh from bone and leaving your face a bloody ruin by the will of (\w+).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>constrict</name>
								<script>hisattackprocess("zephyr",false, matches[2])</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) clenches a hand into a fist, a sudden force locking closed about your throat and constricting your airflow.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>pressure</name>
								<script>hisattackprocess("pressure",false, matches[2])</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You feel the air suddenly growing thick around you, your breaths becoming cloying.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>dragon rend</name>
							<script>hisattackprocess("rend", matches[3], matches[2])
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(.*) lunges forward with long, flashing claws extended, tearing down to the bones of your (.*).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>psion</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>hamstringslice</name>
								<script>hisattackprocess("hamstringslice", matches[3], matches[2])</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) ducks low, .* blade slicing into your (.*).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>chainlink</name>
								<script>chainbound = os.clock() + 25

hisattackprocess("lightbind", false, matches[2])

table.insert(warningsys.hinders, {name = "lightbind", time = os.clock() + 25, target = matches[2], nomove = true})

</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Golden chains of light coalesce in the hands of (.*), and .* casts them out to bind you to .*.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>unweave mind</name>
								<script>hisattackprocess("unweavemind", false, matches[2])</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(.*) delivers a series of lashes against you with a translucent lash, and your thoughts scatter like leaves on the wind.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>unweave spirit</name>
								<script>hisattackprocess("unweavemind", false, matches[2])</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(.*) delivers a series of lashes against you with a translucent lash, and the very fabric of your being violently rebels against your mortal flesh.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>unweave body</name>
								<script>hisattackprocess("unweavemind", false, matches[2])</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(.*) delivers a series of lashes against you with a translucent lash, and your muscles grow weak, lethargy overcoming you in a rush.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>backhand</name>
								<script>hisattackprocess("backhand", "head", matches[2])</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Pain explodes through your skull as (.*) brings a translucent mace around in a savage backhanded blow to your face.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>overhand</name>
								<script>hisattackprocess("overhand", "head", matches[2])</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Stars explode in front of your eyes as (.*) smashes a translucent mace into the side of your head.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>deathblow</name>
								<script>hisattackprocess("deathblow", "head", matches[2])</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A sharp pain across your throat and a sudden lack of breath comes moments before you register the retreat of (\w+), bloody dagger in hand.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>puncture</name>
								<script>hisattackprocess("puncture", matches[3].." arm", matches[2])</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A terrible weariness overcomes you as (.*) darts out .* blade and drives the tip into you just beneath your (\w+) shoulder.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>exsanguinate</name>
								<script>hisattackprocess("exsanguinate","torso", matches[2])
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^With a brutal thrust of a translucent sword, (.*) sinks .* weapon into your guts, ripping it free in a spray of crimson.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>New trigger</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Golden chains of light coalesce in the hands of Sela, and she casts them out tobind you to her.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>0</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>alchemist</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>New Trigger</name>
								<script>hisattackprocess("wrack", matches[2])</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) glowers at you with a look of repressed disgust before making a slight gesture toward you.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>instill</name>
							<script>hisattackprocess("instill", matches[2])
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) makes a quick, sharp gesture toward you.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>affliction lines</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>slickness</name>
								<script>gotafflicted("slickness")
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You notice that your sweat glands have begun to rapidly secrete a foul, oily substance.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>dcurse</name>
								<script>gotafflicted(matches[2])</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A sudden sense of panic overtakes you as the draconic curse manifests, afflicting you with (\w+).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>staffstrike</name>
							<script>hisattackprocess("staffstrike", matches[3], matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(.*) calls upon .* and unleashes a forceful blow at your (.*) with .* staff.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>serpent flay</name>
							<script>
hisshieldbreaker = true
hisattackprocess("flay", false, matches[2], matches[2])
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^With fluid grace, (.*) snaps .* wrist, bringing a sinuous lash back to crack viciously into you.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>pinshot</name>
							<script>hisattackprocess("pinshot")
table.insert(warningsys.hinders, {name = "pinshot", time = os.clock() + 21, target = target, nomove = true})
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your left foot explodes in white hot pain as an arrow slams into it.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>waterlord</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>New Trigger</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A sudden deluge of shockingly cold water drenches you, robbing you of strength by the will of (\w+).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>shaman</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>curse</name>
								<script>hisattackprocess("curse", false, matches[2])

</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) points an imperious finger at you.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>New trigger</name>
								<script>
hisattackprocess("jinx", false, matches[2])</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) gestures imperiously at you.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New Trigger</name>
							<script>hisbal = os.clock() + 2</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) delivers a lightning-fast strike to you with (\w+).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>monkarmstrike</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) spins a full rotation, bringing a knotted willow staff around in a blur to crash into your (.*).</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>balances</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>New Trigger</name>
								<script>setbalance(2)
shielded = false
rebounding = false



affstrack.score.paralysis = 0
if affstrack.score.slickness == 50 then
affstrack.score.slickness = 100

end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) delivers a lightning-fast strike to you with (.*).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>New Trigger</name>
								<script>myshrugging = os.clock() + 13</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Focusing inward, you purge your body of afflictions.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>New Trigger</name>
								<script>setbalance(2)



affstrack.score.paralysis = 0
if affstrack.score.slickness == 50 then
affstrack.score.slickness = 100

end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) cocks back (his|her) arm and throws (.*)$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>New Trigger</name>
								<script>setbalance(2.5)
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) calls upon (.*) forceful blow (.*)$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>dry rend</name>
								<script>setbalance(2)
hisattackprocess("rend", false, matches[2])
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Lunging forward with long, flashing claws extended, (\w+) tears into you ruthlessly.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>New Trigger</name>
								<script>setbalance(2.5)
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) lunges forward with long, flashing claws extended, tearing down to the bones of your (\w+).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>New Trigger</name>
								<script>setbalance(1.8)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) stares at you, giving you the evil eye.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>New Trigger</name>
								<script>
affstrack.score.paralysis = 0
if affstrack.score.slickness == 50 then
affstrack.score.slickness = 100

end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Striking like a snake, (\w+) follows the first attack with another.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>New Trigger</name>
								<script>battlecryrequested = false</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You gather your breath and hurl a piercing battlecry towards (\w+).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>limbdamage</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>reset</name>
						<script>hitcount[matches[2]] = 0
percentages[matches[2]] = 0</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^The pain plaguing your (.*) subsides.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>limb healed</name>
						<script>hitcount[matches[2]] = 0
percentages[matches[2]] = 0</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Your (.*) feels stronger and healthier.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>mangled</name>
						<script>percentages[matches[2]] = 100</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Your (.*) is greatly damaged from the beating.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>not parrying</name>
						<script>nowparrying = "none"</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You cease your attempts at parrying.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>now parrying</name>
						<script>requestparry=false
nowparrying = "parry "..matches[2]
parryshortname = matches[2]
if not DEBUG_MODE and failsafe then deleteLine() end
--boxDisplay(matches[2], "yellow:black")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You will now attempt to parry attacks to your (.*)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>claw parry</name>
						<script>requestparry=false
nowparrying = "clawparry "..matches[2]
parryshortname = matches[2]
boxDisplay(matches[2], "yellow:black")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You will now use your razor-sharp talons to parry attacks to your (.*)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>parried attack</name>
						<script>boxDisplay("Parried Attack", "green:black")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You parry the attack with a deft manoeuver.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Blademaster Limb Attacks</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Compassslash</name>
							<script>last_limb = multimatches[1][3]
attackAvoided(multimatches[3][1], last_limb)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Whispering a prayer to the \w+ winds, (\w+) draws \w+ \w+ and unleashes a slash towards your (.+)\.$</string>
								<string>^The blade bites deeply into your (.*)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Drawslash</name>
							<script>last_limb = multimatches[2][2]
attackAvoided(multimatches[3][1], last_limb)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>2</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) unleashes a vicious slash towards you before resheathing \w+ blade, \w+ \w+\.$</string>
								<string>^The blade bites deeply into your (.*)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Legslash</name>
							<script>if multimatches[1][2] == "left" then
  last_limb = "left leg"
elseif multimatches[1][2] == "right" then
  last_limb = "right leg"
end
attackAvoided(multimatches[3][1], last_limb)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^With a smooth lunge to the (\w+), (\w+) draws \w+ \w+ from its scabbard and delivers a powerful slash across your legs\.$</string>
								<string>1</string>
								<string>^(.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Armslash</name>
							<script>if multimatches[1][2] == "left" then
  last_limb = "left arm"
elseif multimatches[1][2] == "right" then
  last_limb = "right arm"
end
attackAvoided(multimatches[3][1], last_limb)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Spinning to the (left|right) as s?he draws \w+ \w+ from its sheath, (\w+) delivers a precise slash across your arms\.$</string>
								<string>1</string>
								<string>^(.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Centreslash</name>
							<script>if multimatches[1][4] == "head" then
  last_limb = "head"
elseif multimatches[1][4] == "torso" then
  last_limb = "torso"
end
attackAvoided(multimatches[3][1], last_limb)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^In a single motion, (\w+) draws \w+ \w+ from its scabbard and looses a vicious (?:rising|falling) slash at your (torso|head)\.$</string>
								<string>1</string>
								<string>^(.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Knight Limb Attacks</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>DSL</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>DSL 1</name>
								<script>last_limb = multimatches[1][4]
attackAvoided(multimatches[3][1], last_limb)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) viciously \w+ ([^\.]+) into your (.*)\.$</string>
									<string>1</string>
									<string>^(.+)$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>5</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>DSL 2</name>
								<script>last_limb = multimatches[1][3]
attackAvoided(multimatches[3][1], last_limb)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) slashes into your (.+) with ([^\.]+)\.$</string>
									<string>1</string>
									<string>^(.+)$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>5</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>DSL 3</name>
								<script>last_limb = multimatches[1][4]
attackAvoided(multimatches[3][1], last_limb)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) swings ([^\.]+) at your (.+) with all \w+ might\.$</string>
									<string>1</string>
									<string>^(.+)$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>5</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>DSL 4</name>
								<script>last_limb = multimatches[1][3]
attackAvoided(multimatches[3][1], last_limb)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Lightning-quick, (\w+) \w+ your (.*) with ([^\.]+)\.$</string>
									<string>1</string>
									<string>^(.+)$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>5</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>TwoHand</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Hew</name>
								<script>last_limb = multimatches[1][3]
attackAvoided(multimatches[3][1], last_limb)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) unleashes a terrible blow at your (.+?) with .+?\.$</string>
									<string>1</string>
									<string>^(.+)$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>5</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Pulverise</name>
								<script>last_limb = multimatches[1][3]
attackAvoided(multimatches[3][1], last_limb)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) comes around with a terrible swing of .+? toward your (.+?)\.$</string>
									<string>1</string>
									<string>^(.+)$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>5</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Underhand</name>
								<script>last_limb = multimatches[1][4]
attackAvoided(multimatches[3][1], last_limb)

</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) explodes upward from a low crouch, driving ([^\.]+) toward your (.+?)\.$</string>
									<string>1</string>
									<string>^(.+)$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>5</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Overhand</name>
								<script>last_limb = "head"
attackAvoided(multimatches[3][1], last_limb)
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) brings ([^\.]+) down upon you with a brutal overhand blow\.$</string>
									<string>1</string>
									<string>^(.+)$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>5</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>SNB</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>slice</name>
								<script>last_limb = multimatches[1][3]
attackAvoided(multimatches[3][1], last_limb)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The blade of (\w+) is a blur as \w+ moves forward, slicing into your (.+?)\.$</string>
									<string>1</string>
									<string>^(.+)$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>5</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>rend</name>
								<script>last_limb = multimatches[1][3]
attackAvoided(multimatches[3][1], last_limb)
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) carves into your (.+?) with a vicious strike, opening a bleeding wound\.$</string>
									<string>1</string>
									<string>^(.+)$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>5</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>DualB</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Whirl</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>whirl 1 - morningstar</name>
									<script>last_limb = multimatches[1][3]
attackAvoided(multimatches[3][1], last_limb)

</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>1</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) whips .+? toward your (.+?)\.$</string>
										<string>1</string>
										<string>^(.+)$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>5</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>whirl 2 - Flail</name>
									<script>last_limb = multimatches[1][3]
attackAvoided(multimatches[3][1], last_limb)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>1</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) skilfully whirls .+? toward your (.+?)\.$</string>
										<string>1</string>
										<string>^(.+)$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>5</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Crush</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Crush 1</name>
									<script>last_limb = multimatches[1][3]
attackAvoided(multimatches[3][1], last_limb)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>1</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) smashes your (.+) with .+$</string>
										<string>1</string>
										<string>^(.+)$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>5</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Crush 2</name>
									<script>last_limb = multimatches[1][3]
attackAvoided(multimatches[3][1], last_limb)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>1</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) brings .* crashing down on your (.*)\.$</string>
										<string>1</string>
										<string>^(.+)$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>5</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Crush 3</name>
									<script>last_limb = multimatches[1][3]
attackAvoided(multimatches[3][1], last_limb)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>1</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^With a steady hand, (\w+) batters your (.*) with a .*</string>
										<string>1</string>
										<string>^(.+)$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>5</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
						</TriggerGroup>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Tekura Limb Attacks</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Tekura Punch 1</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>1</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) launches a powerful uppercut at you.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Punch Hit</name>
								<script>last_limb = matches[2]
attackAvoided(matches[1], last_limb)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ connects to the (.+)!$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Tekura Punch 2</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>1</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) unleashes a powerful hook towards you.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Punch Hit</name>
								<script>last_limb = matches[2]
attackAvoided(matches[1], last_limb)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ connects to the (.+)!$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Tekura Punch 3</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>1</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) forms a spear hand and stabs out at you.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Punch Hit</name>
								<script>last_limb = matches[2]
attackAvoided(matches[1], last_limb)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ connects to the (.+)!$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Tekura Punch 4</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>1</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) balls up one fist and hammerfists you.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Punch Hit</name>
								<script>last_limb = matches[2]
attackAvoided(matches[1], last_limb)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ connects to the (.+)!$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Tekura Kick 1</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>1</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) pumps out at you with a powerful side kick\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Kick Hit</name>
								<script>last_limb = matches[2]
attackAvoided(matches[1], last_limb)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ connects to the (.+)!$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Tekura Kick 2</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>1</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) lets fly at you with a snap kick\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Kick Hit</name>
								<script>last_limb = matches[2]
attackAvoided(matches[1], last_limb)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ connects to the (.+)!$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Tekura Kick 3</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>1</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) hurls \w+ towards you with a lightning-fast moon kick\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Kick Hit</name>
								<script>last_limb = matches[2]
attackAvoided(matches[1], last_limb)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ connects to the (.+)!$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Tekura Kick 4</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>2</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) spins into the air and throws a whirlwind kick towards you\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Kick Hit</name>
								<script>last_limb = multimatches[1][2]
attackAvoided(multimatches[3][1], last_limb)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ connects to the (.+)!$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Axekick</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>5</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) kicks his leg high and scythes downwards at you\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Kick Hit</name>
								<script>last_limb = multimatches[1][2]
attackAvoided(multimatches[3][1], last_limb)
--showMultimatches()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ connects to the (.+)!$</string>
									<string>1</string>
									<string>^(.+)$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>5</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Shikudo Limb Attacks</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Forms</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Tykonos</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) rapidly spins \w+ weapon in a circular pattern, almost too fast for the eye to see, before dropping into a ready stance\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Willow</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) twirls \w+ staff, a look of serene calm overcoming \w+\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Rain</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) drops into a lower stance, \w+ weapon snapping up into an aggressive guard\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Oak</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) rises onto the balls of \w+ feet, a look of grim certainty overcoming \w+ face\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Gaital</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The eyes of (\w+) fall closed, a look of tranquility coming over \w+\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Maelstrom</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Blue light wreathes itself about (\w+) and \w+ staff\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Kicks</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Flashheel</name>
								<script>if multimatches[1][3] == "left" then
	last_limb = "left leg"
elseif multimatches[1][3] == "right" then
	last_limb = "right leg"
end

attackAvoided(multimatches[3][1], last_limb)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Snapping \w+ leg out to its full extent, (\w+) drives a heel into your (\w+) knee\.$</string>
									<string>1</string>
									<string>^(.+)$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>5</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Risingkick</name>
								<script>last_limb = multimatches[1][3]
attackAvoided(multimatches[3][1], last_limb)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) lashes out with a high kick at your (\w+)\.$</string>
									<string>1</string>
									<string>^(.+)$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>5</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Frontkick</name>
								<script>last_limb = multimatches[1][3]
attackAvoided(multimatches[3][1], last_limb)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) lashes out with a straight kick at you\.$</string>
									<string>1</string>
									<string>^(.+)$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>5</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Spinkick 1</name>
								<script>last_limb = "torso"
attackAvoided(multimatches[3][1], last_limb)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Whirling around, (\w+) drives the ball of \w+ foot into your ribs\.$</string>
									<string>1</string>
									<string>^(.+)$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>5</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Spinkick 2</name>
								<script>last_limb = "head"
attackAvoided(multimatches[3][1], last_limb)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Whirling around, (\w+) brings the ball of \w+ foot crashing into the side of your head\.$</string>
									<string>1</string>
									<string>^(.+)$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>5</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Thrust 1</name>
							<script>last_limb = multimatches[1][3]
attackAvoided(multimatches[3][1], last_limb)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Stepping forward, (\w+) drives .+? into your (.+?)\.$</string>
								<string>1</string>
								<string>^(.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Thrust 2</name>
							<script>last_limb = multimatches[1][3]
attackAvoided(multimatches[3][1], last_limb)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Continuing \w+ kata, (\w+) spins .+? in \w+ hands before driving it in a swift thrust towards your (.+?)\.$</string>
								<string>1</string>
								<string>^(.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Dart 1</name>
							<script>last_limb = multimatches[1][3]
attackAvoided(multimatches[3][1], last_limb)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Snapping \w+ arms out in front of \w+, (\w+) delivers a lightning-fast thrust with .+? to your (.*)\.$</string>
								<string>1</string>
								<string>^(.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Dart 2</name>
							<script>last_limb = multimatches[1][3]
attackAvoided(multimatches[3][1], last_limb)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Spinning on one foot (\w+) drives .+? into your (.*) with a lightning-fast thrust\.$</string>
								<string>1</string>
								<string>^(.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Hiraku 1</name>
							<script>last_limb = "head"
attackAvoided(multimatches[3][1], last_limb)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Stepping forward, (\w+) drives .+? at your face\.$</string>
								<string>1</string>
								<string>^(.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Hiraku 2</name>
							<script>last_limb = "head"
attackAvoided(multimatches[3][1], last_limb)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Bracing \w+ back foot, (\w+) lunges forward with .+? at your face\.$</string>
								<string>1</string>
								<string>^(.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Hiru 1</name>
							<script>last_limb = "head"
attackAvoided(multimatches[3][1], last_limb)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) whips .+? in a tight arc, sweeping it at your head\.$</string>
								<string>1</string>
								<string>^(.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Hiru 2</name>
							<script>last_limb = "head"
attackAvoided(multimatches[3][1], last_limb)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Snapping back into a ready stance, (\w+) whips .+? in a wide arc at your head\.$</string>
								<string>1</string>
								<string>^(.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Ruku 1</name>
							<script>last_limb = multimatches[1][3]
attackAvoided(multimatches[3][1], last_limb)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) whips .+? in a controlled arc, bringing the length of the weapon to crash into your (.*)\.$</string>
								<string>1</string>
								<string>^(.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Ruku 2</name>
							<script>last_limb = multimatches[1][3]
attackAvoided(multimatches[3][1], last_limb)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) spins a full rotation, bringing .+? around in a blur to crash into your (.*)\.$</string>
								<string>1</string>
								<string>^(.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Kuro 1</name>
							<script>if multimatches[1][3] == "left" then
	last_limb = "left leg"
elseif multimatches[1][3] == "right" then
	last_limb = "right leg"
end

attackAvoided(multimatches[3][1], last_limb)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Dropping into a lower stance, (\w+) sweeps .+? at your (\w+) thigh\.$</string>
								<string>1</string>
								<string>^(.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Kuro 2</name>
							<script>if multimatches[1][3] == "left" then
	last_limb = "left leg"
elseif multimatches[1][3] == "right" then
	last_limb = "right leg"
end

attackAvoided(multimatches[3][1], last_limb)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Dropping back into a low crouch, (\w+) whips .+? at your (\w+) thigh\.$</string>
								<string>1</string>
								<string>^(.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Livestrike</name>
							<script>last_limb = "torso"
attackAvoided(multimatches[3][1], last_limb)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Lunging off \w+ back foot, (\w+) viciously drives the end of .+? into your solar plexus\.$</string>
								<string>1</string>
								<string>^(.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Nervestrike</name>
							<script>last_limb = "head"
attackAvoided(multimatches[3][1], last_limb)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) whips .+? at the side of your neck\.$</string>
								<string>1</string>
								<string>^(.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Needle 1</name>
							<script>last_limb = "head"
attackAvoided(multimatches[3][1], last_limb)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^With pinpoint precision, (\w+) thrusts .+? at your throat\.$</string>
								<string>1</string>
								<string>^(.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Needle 2</name>
							<script>last_limb = "head"
attackAvoided(multimatches[3][1], last_limb)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Reversing \w+ grip on .+?, (\w+) drives the top of the weapon into your throat\.$</string>
								<string>1</string>
								<string>^(.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Jinzuku 1</name>
							<script>last_limb = "torso"
attackAvoided(multimatches[3][1], last_limb)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Stepping to your side, (\w+) drives .+? at your vulnerable kidneys\.$</string>
								<string>1</string>
								<string>^(.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Jinzuku 2</name>
							<script>last_limb = "torso"
attackAvoided(multimatches[3][1], last_limb)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) flows around you like water, .+? lashing out in a swift thrust at your vulnerable kidneys\.$</string>
								<string>1</string>
								<string>^(.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Swashbuckling Limb Attacks</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Acciaccurato</name>
							<script>last_limb = multimatches[1][3]
attackAvoided(multimatches[3][1], last_limb)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A bell-like tone rings out from (\w+)'s rapier, echoed by the sound of cracking bone as your (.*) snaps painfully.$</string>
								<string>1</string>
								<string>^(.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Vibrato</name>
							<script>last_limb = multimatches[1][3]
attackAvoided(multimatches[3][1], last_limb)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^With a trilling vibrato (\w+) attacks your broken (.+) causing you to scream in pain\.$</string>
								<string>1</string>
								<string>^(.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Tremelo</name>
							<script>last_limb = multimatches[1][3]
attackAvoided(multimatches[3][1], last_limb)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Using a heavy tremolo (\w+) brutally punishes your already shattered (.*)\.$</string>
								<string>1</string>
								<string>^(.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Druid Limb Attacks</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Hydra</name>
							<script>last_limb = multimatches[1][2]
attackAvoided(multimatches[3][1], last_limb)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^They seize your (.*) with a bonecrunching grip!$</string>
								<string>1</string>
								<string>^(.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Maul</name>
							<script>last_limb = multimatches[1][3]
attackAvoided(multimatches[3][1], last_limb)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) springs forwards and mauls your (.+)\.$</string>
								<string>1</string>
								<string>^(.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Armclamp/Legclamp</name>
							<script>last_limb = multimatches[1][3]
attackAvoided(multimatches[3][1], last_limb)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+)'s many serpentine heads lunge towards your (.+)\.$</string>
								<string>1</string>
								<string>^(.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Dragon Limb Attacks</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Rend</name>
							<script>last_limb = multimatches[1][3]
attackAvoided(multimatches[3][1], last_limb)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) lunges forward with long, flashing claws extended, tearing down to the bones of your (.*)\.$</string>
								<string>1</string>
								<string>^(.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Priest Limb Attacks</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Smite</name>
							<script>last_limb = multimatches[1][3]
attackAvoided(multimatches[3][1], last_limb)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) utters a prayer and smites your (.*) with .*$</string>
								<string>1</string>
								<string>^(.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Magi Limb Attacks</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Staffstrike</name>
							<script>last_limb = multimatches[1][3]
attackAvoided(multimatches[3][1], last_limb)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) calls upon \w+ and unleashes a forceful blow at your (.+) with (\w+) staff\.$</string>
								<string>1</string>
								<string>^(.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Sylvan Limb Attacks</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Thornrend</name>
							<script>last_limb = multimatches[1][3]
--attackAvoided(multimatches[3][1], last_limb)
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The thorny vines of the Viridian (\w+) lash out and rip into your (.+)\.$</string>
								<string>1</string>
								<string>^(.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Bile</name>
							<script>last_limb = multimatches[1][3]
--attackAvoided(multimatches[3][1], last_limb)
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^In a furor of gnashing teeth and toxic bile, (\w+) tears at your (.+) with two of his serpentine heads.$</string>
								<string>1</string>
								<string>^(.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Sentinel Limb Attacks</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Throwingaxe</name>
							<script>last_limb = multimatches[1][2]
attackAvoided(multimatches[3][1], last_limb)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^An? .+ comes speeding in from the \w+ towards your (.+)\.$</string>
								<string>1</string>
								<string>^(.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Throwingaxe 2</name>
							<script>last_limb = multimatches[1][4]
attackAvoided(multimatches[3][1], last_limb)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) cocks back (\w+) arm and throws a throwing axe at your (.+)\.$</string>
								<string>1</string>
								<string>^(.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Lacerate</name>
							<script>last_limb = multimatches[1][3]
attackAvoided(multimatches[3][1], last_limb)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) viciously lacerates your (.+?) with .+?\.$</string>
								<string>1</string>
								<string>^(.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Gouge</name>
							<script>last_limb = multimatches[1][3]
attackAvoided(multimatches[3][1], last_limb)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) viciously gouges your (.+?) with .+?\.$</string>
								<string>1</string>
								<string>^(.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Doublestrike</name>
							<script>last_limb = multimatches[1][3]
attackAvoided(multimatches[3][1], last_limb)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) draws .+? in an expert lateral slice across your (.+?)\.$</string>
								<string>1</string>
								<string>^(.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>riding</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>trample</name>
						<script>if target:title() == matches[2] then
local limbcheck = matches[2]..""..matches[3]
--if affstrack.score[limbcheck] &lt; 100 then
   --affstrack.score[limbcheck] = 100
--end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>An alabaster pegasus breaks the ([\w'\-]+) ([\w'\-]+) of ([\w'\-]+)\.</string>
							<string>An alabaster pegasus crushes the ([\w'\-]+) ([\w'\-]+) of ([\w'\-]+)\.</string>
							<string>An alabaster pegasus pulverises the ([\w'\-]+) ([\w'\-]+) of ([\w'\-]+)\.</string>
							<string>An alabaster pegasus smashes the ([\w'\-]+) ([\w'\-]+) of ([\w'\-]+)\.</string>
							<string>^The ([\w'\-]+) ([\w'\-]+) of ([\w'\-]+) is smashed to a bloody pulp\.$</string>
							<string>A steppe eagle breaks the ([\w'\-]+) ([\w'\-]+) of ([\w'\-]+)\.</string>
							<string>A steppe eagle crushes the ([\w'\-]+) ([\w'\-]+) of ([\w'\-]+)\.</string>
							<string>A steppe eagle pulverises the ([\w'\-]+) ([\w'\-]+) of ([\w'\-]+)\.</string>
							<string>A steppe eagle smashes the ([\w'\-]+) ([\w'\-]+) of ([\w'\-]+)\.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>lyre</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Lyred Up</name>
						<script>if target:title() == matches[2] then
	 targetlyred = true
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) strums a few notes on .+\, and a prismatic barrier forms around \w+\.$</string>
							<string>^Your attack is repelled by the prismatic barrier surrounding ([\w'\-]+)\.$</string>
							<string>^(\w+) is surrounded by a sudden rush of feathers\, and a prismatic barrier forms around him\.$</string>
							<string>^With a steady, sweeping motion, (\w+) paints a broad stroke with \w+ quarterstaff, leaving a wall of transparent, prismatic light hanging in mid\-air\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Lyred Down</name>
						<script>if target:title() == matches[2] then
   targetlyred = false

end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+)\'s prismatic barrier dissolves into nothing\.$</string>
							<string>^The breath weapon rips apart ([\w'\-]+)\'s prismatic barrier\.$</string>
							<string>^The othala rune on the ground suddenly erupts in a great gout of boiling magma\, the concussive blast smashing into the prismatic barrier surrounding ([\w'\-]+) and rendering it asunder\.$</string>
							<string>^The prismatic barrier surrounding (\w+) is swept aside in an instant\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>rebounding</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Rebounding Down</name>
						<script>if target:title() == matches[2] then 
  rebounding = false
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#55ffff</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>([\w'\-]+)'s aura of weapons rebounding disappears.</string>
							<string>You flay away ([\w'\-]+)'s aura of rebounding defence.</string>
							<string>You call upon Whiirh to empower your staff and strike ([\w'\-]+), the power of air dispersing [\w'\-]+ aura of rebounding.</string>
							<string>You call upon Whiirh and unleash a forceful blow towards ([\w'\-]+) with your trusty staff.</string>
							<string>You call upon Whiirh and unleash a forceful blow towards ([\w'\-]+)'s .* with your trusty staff.</string>
							<string>^You raze ([\w'\-]+)\'s aura of rebounding with .+\.$</string>
							<string>^You raze ([\w'\-]+)\'s speed defence with .+\.$</string>
							<string>^You whip .+ through the air in front of ([\w'\-]+)\, to no effect\.$</string>
							<string>^You try to flay a non-existent aura of rebounding from ([\w'\-]+)\.$</string>
							<string>^[\w'\-]+ razes ([\w'\-]+)\'s aura of rebounding with .*\.$</string>
							<string>^You flay away ([\w'\-]+)\'s speed defence\.$</string>
							<string>^You whip .* through the air in front of ([\w'\-]+)\, to no effect\.$</string>
							<string>^[\w'\-]+ delivers a terrible stroke with .*\, scything straight through the aura of rebounding surrounding ([\w'\-]+)\.$</string>
							<string>^Lunging forward\, you bring .* in a savage diagonal blow\, carving through ([\w'\-]+)\'s aura of rebounding\.$</string>
							<string>^You lunge toward ([\w'\-]+) with .*\, but finding no resistance\, you stumble hopelessly off balance\.$</string>
							<string>^Continuing your assault\, you whip .* in a vicious rising slash at ([\w'\-]+)\.$</string>
							<string>^You lurch forward at ([\w'\-]+)\, swinging .* in a wildly innacurate blow\.$</string>
							<string>^[\w'\-]+\'s cantata shatters the defences surrounding ([\w'\-]+)\.$</string>
							<string>^[\w'\-]+ calls upon Whiirh and strikes ([\w'\-]+) with [\w'\-]+ staff\, the power of air dispersing [\w'\-]+ aura of rebounding\.$</string>
							<string>^The falcon dives at ([\w'\-]+)\, ripping apart [\w'\-]+ aura of rebounding with its talons\.$</string>
							<string>^[\w'\-]+ lunges toward ([\w'\-]+)\, but stumbles off balance as if expecting some barrier\.$</string>
							<string>^Planting your feet, you whirl .+ over your head before bringing it down with terrible force upon ([\w'\-]+), shattering \w+ aura of rebounding\.$</string>
							<string>^[\w'\-]+ whips .+ through the air in front of ([\w'\-]+)\, to no effect\.$</string>
							<string>^You lurch forward at ([\w'\-]+)\, swinging .* in a wildly innacurate blow\.$</string>
							<string>^You deliver a single\, powerful blow against the aura of rebounding surrounding ([\w'\-]+)\, fracturing it\.$</string>
							<string>^The daegger cuts through (\w+)\'s skullcap\-formed aura\.$</string>
							<string>^Your mace ignites in holy flame\, burning away (\w)\'s protective aura\.$</string>
							<string>^You deliver a single, powerful blow against the aura of rebounding surrounding (\w+)\, fracturing it\.$</string>
							<string>^The aura of rebounding surrounding (\w+) is swept aside in an instant\.$</string>
							<string>^A soulforged scimitar burns with an unholy glow in the hand of \w+ as it carves throughthe aura of rebounding surrounding (\w+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Rebounding Up</name>
						<script>if target:title() == matches[2] then 
  rebounding = true
end

</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You suddenly perceive the vague outline of an aura of rebounding around ([\w'\-]+).</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Rebounding Up3</name>
						<script>if target:title() == matches[2] then 
  rebounding = true
end

</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You would be unable to pierce through the aura of rebounding protecting ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>behead</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Behead (disrupted)</name>
						<script>if aad_behead ~= nil then 
  killTimer(aad_behead) 
  aad_behead = nil
  auto_assist = true 
end

</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You cease the whirling of your weapon over your head.</string>
							<string>It would be folly to start a beheading on one so free to move about.</string>
							<string>^You cease waving your (\w+)\.$</string>
							<string>^Seeing no likely target\, you cease swinging your (\w+) about your head\.$</string>
							<string>^A surge of elation rushes through you as you realise that (\w+)\'s fate is sealed\.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Start behead now (notice)</name>
						<script>if IsTargetted(matches[2]) then
  boxDisplay("start behead now!!!", "yellow:black")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) trembles slightly as a yellow jaundice begins to creep through \w+ now-pale features\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Began behead on target (notice)</name>
						<script>boxDisplay("STARTING BEHEAD ON "..target, "white:purple")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You raise your (\w+) over your head and begin to swing it in a wide circle\, gaining speed as you go\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Behead in 5 seconds on target (notice)</name>
						<script>if IsTargetted(matches[2]) then 
  boxDisplay("BEHEAD IN 5 SECONDS", "white:purple")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You begin to bear down on (\w+), preparing to destroy (her|him|fae)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>sentinel</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Impaled Sentinel</name>
						<script>potentialImpale = matches[2]</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>1</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) comes stampeding in from the \w+\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Hit!</name>
							<script>if target:title() == potentialImpale then
   impaled = true
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>He slams into your readied spear with a scream of pain.</string>
								<string>She slams into your readied spear with a scream of pain.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>serpent</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>gag</name>
						<script>if failsafe or hunting then
 if not DEBUG_MODE then deleteLine() end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You already possess equilibrium.</string>
							<string>I'm sorry, I don't know what</string>
							<string>I cannot fathom the meaning of</string>
							<string>I see no "gold" to take.</string>
							<string>You hold no "gold".</string>
							<string>I see no "body" to take.</string>
							<string>Your queues are already empty.</string>
							<string>Paralysed as you are, your body is not able to pick up anything.</string>
							<string>You are paralysed and are unable to drop anything.</string>
							<string>You are already wielding that.</string>
							<string>Cleared your queues.</string>
							<string>You have nothing queued for balance.</string>
							<string>Your daegger is not in your grasp.</string>
							<string>Your daegger is not levitating before you.</string>
							<string>You purge every drop of venom from your bloodstream.</string>
							<string>You are already wielding a Viper's Coil.</string>
							<string>You are already wielding Thoth's fang.</string>
							<string>You start to wield</string>
							<string>You reach out and touch Thoth's fang.</string>
							<string>You point a finger at</string>
							<string>^(\w+) is not following or leading you.$</string>
							<string>You aren't wearing a Lupine bow.</string>
							<string>You cease to wield a Lupine bow.</string>
							<string>You cease wielding</string>
							<string>You are already wielding</string>
							<string>[System]:</string>
							<string>[Curing]:</string>
							<string>You hold no "treesnake".</string>
							<string>You bleed</string>
							<string>What would you like to draw?</string>
							<string>An emerald tree snake is already hostile towards</string>
							<string>A pale willow backstrap doesn't contain that.</string>
							<string>Your attempt is speeded by the mental imprint you have stored.</string>
							<string>You are not the member of any party.</string>
							<string>I do not recognise anything called that here.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>2</integer>
							<integer>2</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>2</integer>
							<integer>2</integer>
							<integer>2</integer>
							<integer>1</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>2</integer>
							<integer>2</integer>
							<integer>2</integer>
							<integer>2</integer>
							<integer>3</integer>
							<integer>2</integer>
							<integer>3</integer>
							<integer>2</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>raze</name>
						<script>if target:title() == matches[2] then
  if string.find(matches[1], "rebounding") then
    rebounding = false
  else
    shielded = false
  end
end
if target:title() == matches[2] then
  selectString(line, 1)
  setFgColor(0, 170, 255)
  resetFormat()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You raze (\w+)\'s (aura of rebounding|magical shield) with .+\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>rebounding up</name>
						<script>if target:title() == matches[2] then
  rebounding = true
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You suddenly perceive the vague outline of an aura of rebounding around (\w+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>rebounding down</name>
						<script>if target:title() == matches[3] then
  rebounding = false
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^((\w+)'s aura of weapons rebounding disappears\.)$</string>
							<string>^(You raze (\w+)\'s aura of rebounding with (.*)\.)$</string>
							<string>^(You whip .+ through the air in front of (\w+)\, to no effect\.)$</string>
							<string>^(You call upon Whiirh to empower your staff and strike (\w+), the power of air dispersing \w+ aura of rebounding\.)$</string>
							<string>^(You flay away (\w+)'s aura of rebounding defence\.)$</string>
							<string>^(You try to flay a non-existent aura of rebounding from (\w+)\.)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>rebounding down</name>
						<script>if target:title() == matches[2] then
  rebounding = false
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You flay away (\w+)'s aura of rebounding defence\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>rebounding up</name>
						<script>--removeLastTwoAfflictions()
rebounding = true
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The attack rebounds back onto you!</string>
							<string>The attack rebounds onto you!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>shield up</name>
						<script>if target:title() == matches[2] then
  shielded = true

end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A nearly invisible magical shield forms around (\w+).$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>shield up</name>
						<script>--removeLastTwoAfflictions()
if target:title() == matches[2] then
  shielded = true

end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A dizzying beam of energy strikes you as your attack rebounds off of (\w+)'s shield.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>fangbarrier</name>
						<script>sileris=true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You try to bite (\w+), but your fangs are stopped by an odd metallic coating.$</string>
							<string>^A supple metallic shell of quicksilver has formed around (\w+).$</string>
							<string>^A supple purple shell of sileris berry juice has formed around (\w+).$</string>
							<string>^You try to bite (\w+), but your fangs are stopped by an odd waxy coating.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>shield down</name>
						<script>if target:title() == matches[2] then
  shielded = false
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You flay away (\w+)'s shield defence.$</string>
							<string>^You try to flay a non-existent shield from (\w+).$</string>
							<string>^Your shadow leaps for (\w+), hammering (\w+) shield in a silent frenzy that causes it to explode in ashower of prismatic shards.$</string>
							<string>^(\w+) is not surrounded by a magical shield.$</string>
							<string>^You try to flay a non-existent aura of rebounding from (\w+).$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>fangbarrier down</name>
						<script>sileris = false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^The protective coating covering the skin of (\w+) sloughs off.$</string>
							<string>^You flay the metallic coating from (\w+).$</string>
							<string>^You flay the purple, waxy coating from (\w+).$</string>
							<string>^You try to flay a non-existent sileris coating from (\w+).$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>enemy slain</name>
						<script>if failsafe then
  failsafe = false
  systemPaused = false
 -- disableTimer("failsafe")
  hypnocount = -1
  hypnostatus = "reset"
  send("clearqueue all")
  send("order treesnake passive")
  cecho("\n&lt;red&gt;FAIL SAFE")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^.+ stiffens and drops dead as the venom proves too much for .+ system.$</string>
							<string>^A final shudder races over .+ collapses.$</string>
							<string>As you pull your whip back further, you hear a satisfying 'SNAP'</string>
							<string>^.+ falls limply to the ground.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>wield bow</name>
						<script>send("wield bow")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You must be wielding a bow in order to shoot an arrow.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>reset next attack</name>
						<script>nextAction=""
--resetCuringProcess()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You are paralysed and cannot do that.</string>
							<string>Frustratingly, your body won't respond to your call to action.</string>
							<string>You are too stunned to be able to do anything.</string>
							<string>You are no longer stunned.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>bound</name>
						<script>bound = true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You quickly bind up (\w+)'s hands and feet, leaving \w+ helpless.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>slit</name>
						<script>throatslit = true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Blood sprays like a gushing fountain as you viciously slit the throat of the helpless (\w+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>bite</name>
						<script>if matches[2] == "notechis" then
  probabilityTable["haemophilia"] = 1
  --affDisplay()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You sink your fangs into \w+, injecting just the proper amount of (\w+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>hypnosis</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>snap</name>
							<script>hypnocount = 0
hypnopointer = 0
hypnostatus = "snapped"
requestsnap = false
hypnotimer = os.clock() + .8
isLockGuaranteed = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You snap your fingers in front of (\w+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>suggest</name>
							<script>hypnopointer = hypnopointer + 1
hypnocount = hypnopointer</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You issue the suggestion, concealing it deep within</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>status ready</name>
							<script>hypnocount = hypnopointer
hypnostatus = "hypnotised"
if not DEBUG_MODE and failsafe then deleteLine() end
boxDisplay("TARGET SEALED", "black:white", true)
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You draw (\w+) out of (his|her|faes) hypnotic daze\, your suggestions indelibly printed on \w+ mind\.$</string>
								<string>You are already attempting to secure a hypnotic trance upon</string>
								<string>hypnotic trance has already been sealed.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>2</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>status locking</name>
							<script>hypnostatus = "locking"
hypnopointer = 1
if not DEBUG_MODE and failsafe then deleteLine() end
boxDisplay("STARTING HYPNOSIS", "black:white")

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You prepare yourself to hypnotise your victim\, (\w+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>status hynotised (locked)</name>
							<script>hypnostatus = "locked"
if not DEBUG_MODE and failsafe then deleteLine() end
boxDisplay("HYPNOTIZED - BEGIN SUGGESTING!", "black:white")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You fix (\w+) with an entrancing stare\, and smile in satisfaction as you realise that \w+ mind is yours\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>mind faded</name>
							<script>hypnocount = -1
hypnostatus = "reset"
hypnopointer = 0
--^You feel your control over (\w+)'s mind fade.$</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your attempt at hypnosis has failed.</string>
								<string>^You feel your control over (\w+)\'s mind fade\.$</string>
								<string>^(\w+) has noticed your attempt at hypnosis\!$</string>
								<string>^(\w+) is not under your hypnotic spell\.$</string>
								<string>^(\w+) is too perceptive for your hypnotic skill\. You hurriedly cease your attempts before being noticed\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>hyp imprint full</name>
							<script>send("hypnotic imprint forget all")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You may store no more hypnotic imprints as of this time\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>subterfuge</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>firstjab</name>
							<script>appliedAfflictionsStack = {}
local affliction = getAffliction(venomdstab[2])
addAfflictionsToTable({getAffliction(venomdstab[2]), 100}, probabilityTable)

lastaffgiven = affliction

highlightline(selectString(line, 1) &gt; -1, "black", "orange", false, true) 

      moveCursor(0, getLineNumber())
      cinsertText("\n&lt;white&gt;[&lt;green&gt;"..venomdstab[2]:upper().."&lt;white&gt;]: ")
      moveCursorEnd()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You quickly prick (\w+) with your dirk.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>secondstab</name>
							<script>nextAction = ""
startPersonalBalanceAction("balance")
local affliction = getAffliction(venomdstab[1])
addAfflictionsToTable({getAffliction(venomdstab[1]), 100}, probabilityTable)
lastaffgiven = affliction

      moveCursor(0, getLineNumber())
      cinsertText("\n&lt;white&gt;[&lt;green&gt;"..venomdstab[1]:upper().."&lt;white&gt;]: ")
      moveCursorEnd()

--reset venom table
venomdstab = {}

--disableTimer("paralysis check timer")

if not (hypnostatus == "hypnotised") and not (hypnostatus == "snapped") then
  hypnocount = hypnopointer - 1
end

highlightline(selectString(line, 1) &gt; -1, "black", "orange", false, true) 
balanceStart("balance",true)

 </script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Striking like a snake, you prick (\w+) a second time with your dirk.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>dstab (first hit missed)</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You stab your dirk quickly at (\w+) but miss by a hair.$</string>
								<string>1</string>
								<string>^.*$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>venom wipe</name>
							<script>venomdstab = {}
if not DEBUG_MODE and failsafe then deleteLine() end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Being careful not to poison yourself, you wipe off all the venoms from .+\.$</string>
								<string>There are no venoms on that item at present.</string>
								<string>You carefully wipe the venoms from your claws.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>envenom weapon</name>
							<script>venomdstab = venomdstab or {}
table.insert(venomdstab, matches[2])
--tempTimer(1.2, [[venomdstab = {}]])
--for _, v in pairs(venomdstab) do
  --print(v)
--end

if not DEBUG_MODE and failsafe then deleteLine() end  


       
      </script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You rub some ([\w'\-]+) on (.*)\.$</string>
								<string>^You secrete ([\w'\-]+) and deftly bring (.*) to your mouth, letting the venom drip upon it.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>pin shot success</name>
							<script>requestpinshot = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Your arrow slams into the foot of (\w+).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>flay second</name>
							<script>local affliction = getAffliction(venomdstab[2])
addAfflictionsToTable({affliction, 100}, probabilityTable)

lastaffgiven = affliction</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>With your victim exposed, you crack a Wyvern's Lash back for a second assault.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>wield whip</name>
							<script>send("wield lash shield")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You must be wielding a whip in order to garrote someone.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>AK sileris flay success</name>
							<script>if IsTargetted(matches[2]) then
  ak.defs.sileris = false
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You flay the purple, waxy coating from (\w+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>we phased</name>
							<script>if mmp.settings.dash then
  expandAlias("mconfig dash no")
end
if not mmp.settings.lockwormholes then
  expandAlias("mconfig lockwormholes yes")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A short burst of azure light fills your vision and when it is gone, you find yourself phased out of sync with the rest of reality.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>we unphased</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your surroundings shatter into a cloud of glowing stars which dissipate to leave you back where you began.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>pinshot timer</name>
							<script>if target:title() == matches[2] then
  cecho("\n")
  boxDisplay(matches[2].." PINSHOT !!!", "black:orange")
  cecho("\n")
  
  PinshotTimer0 = tempTimer(0,[[cecho("&lt;orange&gt;\n[PINSHOT]: &lt;yellow&gt;hindered movement on &lt;red&gt;"..target.." &lt;yellow&gt;for &lt;white&gt;21 seconds...\n") PinshotTimer0 = nil]])
  PinshotTimer6 = tempTimer(6,[[cecho("&lt;orange&gt;\n[PINSHOT]: &lt;yellow&gt;hindered movement on &lt;red&gt;"..target.." &lt;yellow&gt;for &lt;white&gt;15 seconds...\n") PinshotTimer6 = nil]])
  PinshotTimer11 = tempTimer(11,[[cecho("&lt;orange&gt;\n[PINSHOT]: &lt;yellow&gt;hindered movement on &lt;red&gt;"..target.." &lt;yellow&gt;for &lt;white&gt;10 seconds...\n") PinshotTimer11 = nil]])
  PinshotTimer16 = tempTimer(16,[[cecho("&lt;orange&gt;\n[PINSHOT]: &lt;yellow&gt;hindered movement on &lt;red&gt;"..target.." &lt;yellow&gt;for &lt;white&gt;5 seconds...\n") PinshotTimer16 = nil]])
  PinshotTimer = tempTimer(21,[[cecho("&lt;orange&gt;\n[PINSHOT]: &lt;red&gt;"..target.." &lt;salmon&gt;no longer&lt;yellow&gt; hindered by pinshot!!!\n") PinshotTimer = nil]])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Your arrow slams into the foot of (\w+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>event wield whip</name>
							<script>send("wield lash shield")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You must be wielding a whip in order to (\w+) someone\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>event purge</name>
							<script>if not table.contains(myaffs, "paralysis") then send("purge") end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You must somehow purge the venom from your blood before you may secrete another\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>NOTICE: PINSHOT: FLEEING</name>
							<script>creplace("&lt;yellow&gt;[PINSHOT]: &lt;red&gt; "..matches[2].."&lt;green&gt; attempting to flee!!!&lt;yellow&gt;: ")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) stumbles clumsily as he attempts to leave\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>sileris down</name>
							<script>if IsTargetted(multimatches[2][2]) then
	 if ak.ai() then return end
   ak.defs.sileris = false
   ak.scoreup(multimatches[2][2])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You flay away</string>
								<string>^You flay away ([\w'\-]+)\'s speed defence\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>AK bite sileris fail</name>
							<script>if IsTargetted(matches[2]) then
  ak.defs.sileris = true
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You try to bite (\w+), but your fangs are stopped by an odd metallic coating\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>requestpinsot</name>
							<script>requestpinshot=false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You have no more arrows in your quiver.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>AK bite sileris fail</name>
							<script>if IsTargetted(matches[2]) then
  ak.defs.sileris = true
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You try to bite (\w+), but your fangs are stopped by an odd metallic coating\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>execute</name>
							<script>requestExecute = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^With a pop of your knuckles, you bury your foot under (\w+)'s back and flip your helpless victim onto \w+ stomach\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>not bound</name>
							<script>bound = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) has writhed free of \w+ entanglement by tied ropes\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Illusions</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Illusion Curseward</name>
							<script>curseward = false
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(.*)(.*) Illusion (.*)(.*)$</string>
								<string>^A shimmering curseward appears around (\w+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Instant Kill</name>
							<script>cecho("\n&lt;red&gt;RUN INSTANTKILL")
cecho("\n&lt;red&gt;RUN INSTANTKILL")
cecho("\n&lt;red&gt;RUN INSTANTKILL")
cecho("\n&lt;red&gt;RUN INSTANTKILL")
cecho("\n&lt;red&gt;RUN INSTANTKILL")
cecho("\n&lt;red&gt;RUN INSTANTKILL")
cecho("\n&lt;red&gt;RUN INSTANTKILL")
cecho("\n&lt;red&gt;RUN INSTANTKILL")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^"HEAR YE, HEAR YE!", (\w+) intones, drawing upon you with obvious menace\.$</string>
								<string>^(\w+) raises a deadfall scythe, and it is overtaken with an ominous glow.</string>
								<string>^As (\w+) approaches you, the blade of a deadfall scythe begins to burn with an unnatural blue flame.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Lyre</name>
							<script>local lyreperson = matches[2]

if NDB.players[lyreperson].city ~= "Mhaldor" then
  send("pt " ..lyreperson.. " LYRED")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) strums a few notes on a Lasallian lyre, and a prismatic barrier forms around \w+\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Shield Illusion</name>
							<script>if matches[2] == target:title() then
  shielded = false
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>** Illusion **</string>
								<string>^A nearly invisible magical shield forms around (\w+).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Illusion</name>
							<script>rebounding = false
shielded = false
curseward = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>** Illusion **</string>
								<string>Illusion</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>DW Portal</name>
							<script>cecho("\n&lt;red&gt;DW PORTAL")
cecho("\n&lt;red&gt;DW PORTAL")
cecho("\n&lt;red&gt;DW PORTAL")
cecho("\n&lt;red&gt;DW PORTAL")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The vague outline of a doorway begins to coalesce in the air before you.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>green inhitbit</name>
							<script>send("pt Inhibt delivered to " ..matches[2]..  " It will not heal!")


</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#00ff00</mFgColor>
							<mBgColor>#ffffff</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You spit a thick gob of slime at (.+), coating (\w+) and inhibiting (\w+) ability to heal\.$</string>
								<string>^You spit a thick gob of slime at the (.+), coating (\w+) and inhibiting (\w+) ability to heal.\$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Boomerang</name>
							<script>send("throw boomerang at axios east")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Frosty scales scatter around Axios as he leaves to the east\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>lobbed concussion</name>
						<script>requestconcussion = false
lobbed = true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You lob a concussion bomb at the ground and watch it explode.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>hunting</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>gag</name>
					<script>if hunting then
  if not DEBUG_MODE then deleteLine() end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You must wait a short time before you can use a battlerage ability again.</string>
						<string>There is no door</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>2</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>shielded up</name>
					<script>commandSent = false
if hunting then
  shielded = true
  clearQueue("eqbal")
  send("clearqueue eqbal")
  if autohunting then
    huntNext()
  end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>A dizzying beam of energy strikes you as your attack rebounds off</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>shielded up</name>
					<script>commandSent = false
if hunting then
  shielded = true
  clearQueue("eqbal")
  send("clearqueue eqbal")
  if autohunting then
    huntNext()
  end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>A nearly invisible magical shield forms</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>shielded stripped</name>
					<script>commandSent = false
if hunting then
  shielded = false
  clearQueue("eqbal")
  send("clearqueue eqbal")
  if autohunting then
    huntNext()
  end
end
balanceStart("balance",false)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You flay away</string>
						<string>You try to flay a non-existent shield from</string>
						<string>You flick your tail</string>
						<string>^You whip .+ through the air in front .+, to no effect.$</string>
						<string>^(\w+) breathes a white-hot blast of flame at .+ and burns away (\w+) translucent shield.$</string>
						<string>^Your daegger flings itself .+ translucent shield, piercing through it and causing it to fade.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>2</integer>
						<integer>2</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>rage wasted shield</name>
					<script>commandSent = false
if hunting then
  shielded = false
  clearQueue("eqbal")
  send("clearqueue eqbal")
  if autohunting then
   commandSent = false
    huntNext()
  end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Your rage is wasted .+ is not protected by a shield.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>hunt target</name>
					<script>if partyhunting then
  target = matches[3]
  send("pt Target " .. target)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^\(Party\)\: ([A-Z][a-z]+) says, "Hunt Target: (\d+) (.*)\."$</string>
						<string>^\(Party\)\: ([A-Z][a-z]+) says, "Target: (.+)\."$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>attack actions</name>
					<script>--if hunting and autohunting then
  --huntNext()
--end
commandSent = false
balanceStart("balance",false)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You slip behind</string>
						<string>You sink your fangs</string>
						<string>You lash out</string>
						<string>You swing</string>
						<string>You slash</string>
						<string>Lightning-quick</string>
						<string>You viciously</string>
						<string>With expert precision,</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>2</integer>
						<integer>2</integer>
						<integer>2</integer>
						<integer>2</integer>
						<integer>2</integer>
						<integer>2</integer>
						<integer>2</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>other actions</name>
					<script>commandSent = false
if hunting and autohunting then
  huntNext()
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You stand up.</string>
						<string>The bones in your</string>
						<string>Your nerves suddenly calm down.</string>
						<string>^You have writhed free of your.+s.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>2</integer>
						<integer>3</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>crits</name>
					<script>selectCaptureGroup(2)
setFgColor(80, 80, 80)
resetFormat()
if matches[3] == "CRITICAL" then
  selectCaptureGroup(3)
  setFgColor(170, 255, 0)
  resetFormat()
elseif matches[3] == "CRUSHING CRITICAL" then
  selectCaptureGroup(3)
  setFgColor(130, 180, 0)
  resetFormat()
elseif matches[3] == "OBLITERATING CRITICAL" then
  selectCaptureGroup(3)
  setFgColor(234, 234, 0)
  resetFormat()
elseif matches[3] == "ANNIHILATINGLY POWERFUL CRITICAL" then
  selectCaptureGroup(3)
  setFgColor(235, 155, 0)
  resetFormat()
elseif matches[3] == "WORLD-SHATTERING CRITICAL" then
  selectCaptureGroup(3)
  setFgColor(200, 0, 0)
  resetFormat()
elseif matches[3] == "PLANE-RAZING CRITICAL" then
  selectCaptureGroup(3)
  setFgColor(220, 0, 220)
  resetFormat()
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>transparent</mFgColor>
					<mBgColor>#000000</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(You have scored an? (.*) hit!)</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>hunt step</name>
					<script>commandSent = false
if hunting and autohunting then
  if not DEBUG_MODE or hunting then deleteLine() end
  UIUpdateRoom()
  commandSent = false
  huntNext()
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You detect nothing here by that name.</string>
						<string>You cannot see that being here.</string>
						<string>Nothing can be seen here by that name.</string>
						<string>Ahh, I am truly sorry, but I do not see anyone by that name here.</string>
						<string>I do not recognise anything called that here.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>hunting slain</name>
					<script>commandSent = false
if hunting then
  clearQueue("eqbal")
  send("clearqueue eqbal")
  lasthunttarget = ""
  UIUpdateRoom()
  if autohunting then
    commandSent = false
    huntNext()
  end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(You have slain (.+))$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>bloodletter</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Bloodletter is lying here, apparently forgotten.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Arankesh</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>pull</name>
						<script>send("pull harpoon")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>An ancient harpoon creaks ominously as Aran'Kesh fights against his restraints. PULL to brace it!</string>
							<string>With a click, the rails of an ancient harpoon lock into place holding the drawstring </string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>turn</name>
						<script>send("turn harpoon")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string> Ready your harpoon for another pass!</string>
							<string>Aran'Kesh, the Fleshrender tilts his horrific head back and lets forth a blood-curdling screech</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>push</name>
						<script>send("push harpoon")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Satisfied that an ancient harpoon is aligned properly for a clean shot, you cease turning the</string>
							<string>A cold shadow is cast from above</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Refire</name>
						<script>if kesh_refire then
  killTimer(kesh_refire)
end
kesh_refire = tempTimer(1, [[send("pull harpoon")]])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>It would be foolish to fire an ancient harpoon before your foe is in range.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Sign for Kesh</name>
						<script>send("sign for the 1 foray")
disableTimer("Read board")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^1\:.+arankesh$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Walk to Kesh</name>
						<script>if walktoKesh then
  killTimer(walktoKesh)
end
walktoKesh = tempTimer(2.5, [[expandAlias("goto 39952")]])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The tempestuous gust is so powerful it blows you clean over the mountain!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Sign for MT</name>
						<script>send("sign for the 5 foray")
disableTimer("Read board")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^5\:.+mirrortower$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Twist it</name>
						<script>if not DEBUG_MODE then deleteLine() end
cecho("\n&lt;blue&gt;[&lt;white&gt;Twist it!&lt;blue&gt;]")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Taking hold of the crank attached to an ancient harpoon, you begin to turn the contraption to line it up for a shot.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Awaiting next command</name>
						<script>if not DEBUG_MODE then deleteLine() end
cecho("\n&lt;blue&gt;[&lt;green&gt;Awaiting next command..&lt;blue&gt;]")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Satisfied that an ancient harpoon is aligned properly for a clean shot, you cease turning the device.</string>
							<string>With a click, the rails of an ancient harpoon lock into place holding the drawstring taut and ready for fire.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bop it</name>
						<script>if not DEBUG_MODE then deleteLine() end
cecho("\n&lt;blue&gt;[&lt;white&gt;Bop it!&lt;blue&gt;]")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Taking hold of the drawstring attached to an ancient harpoon, you begin to push the rail backwards to ready the contraption for fire.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Pull it</name>
						<script>if not DEBUG_MODE then deleteLine() end
cecho("\n&lt;blue&gt;[&lt;white&gt;Pull it!&lt;blue&gt;]")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>With a firm pull back on the lever of an ancient harpoon, the locking mechanism is released and a deadly roped dart flies forth and slams into the massive form of Aran'Kesh, the Fleshrender.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Move to mirror</name>
						<script>send(matches[2])
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The deafening silence is broken by the faint sounds of combat discerned from the (.+).</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Touch mirror</name>
						<script>send("touch mirror")
tempTimer(1, [[send("s")]])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Keenly following the sounds of combat have led you to a cracked mirror, curiously rippling and intermittently reflecting signs of a struggle.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Flung into Mirror Room</name>
						<script>tempTimer(2, [[send("listen")]])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You are violently ripped out of your location to the ether and as you regain your bearings, you find yourself in a maze of disorienting mirrors.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Attack</name>
						<script>keneanung.bashing.attackButton()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>A shrill cry pierces the heavens as Aran'Kesh descends rapidly to the ground, ripped from the sky by harpoon fire.</string>
							<string>Coming to rest at the centre of the clearing, the Fleshrender's descent shakes the earth, loosing an avalanche of boulders that bar any retreat.</string>
							<string>A windswept stone bluff.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Blew off Mountain/Stop Gallop</name>
						<script>expandAlias("mconfig gallop no")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The tempestuous gust is so powerful it blows you clean over the mountain!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Auto shield</name>
						<script>send("queue addclear eqbal touch shield")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A massive, translucent hammer rises out of a harrowing thrall of .+'s tattoo and smashes your magical shield.$</string>
							<string>A massive, translucent hammer rises out of Icosse, Mirrored Ire's tattoo and smashes your magical shield.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>HIT OFF</name>
						<script>expandAlias("goto 39952")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The tempestuous gust is so powerful it blows you clean over the mountain!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>battlerage</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>ability regain</name>
						<script>local class = myclass()
	if class == "dragon" then
		class = string.match(gmcp.Char.Status.race, "%a+"):lower() .. " dragon"
	end

bragelist[class][matches[2]:lower()].enabled = true

 if not(DEBUG_MODE) then 
   deleteLine()
 else
   cecho("\n&lt;orange&gt;"..class) 
   cecho("\n&lt;orange&gt;"..matches[2])
 end </script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You can use (\w+) again.$</string>
							<string>^Your (\w+) ability could be used again but you lack the necessary Rage.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>apostate</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>borrow</name>
							<script>--table.remove(bragelist, table.index_of(bragelist, "Burrow"))
bragelist.apos.burrow.enabled = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You point at .* and your daegger flies towards .+, burrowing into .* body and emerging out the other side.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>convulsions</name>
							<script>--table.remove(bragelist, table.index_of(bragelist, "Convulsions"))
bragelist.apos.convulsions.enabled = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You stare at .*, giving .+ the evileye. .+ limbs begin to convulse.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>serpent</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>throatrip</name>
							<script>--table.remove(bragelist, table.index_of(bragelist, "Throatrip"))
bragelist.serpent.throatrip.enabled = false
selectCaptureGroup(2)
setFgColor(170, 255, 0)
resetFormat()
if hunting and autohunting then
  huntNext()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(You leap upon .+ and sink your fangs into (\w+) throat before leaping away, blood gushing from the horrific wound.)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>thrash</name>
							<script>--table.remove(bragelist, table.index_of(bragelist, "Thrash"))
bragelist.serpent.thrash.enabled = false
selectCaptureGroup(2)
setFgColor(170, 255, 0)
resetFormat()
if hunting and autohunting then
  huntNext()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(You crack a Wyvern's Lash over your head before repeatedly lashing .+ with it.)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>excoriate</name>
							<script>--table.remove(bragelist, table.index_of(bragelist, "Excoriate"))
bragelist.serpent.excoriate.enabled = false
selectCaptureGroup(2)
setFgColor(170, 255, 0)
resetFormat()
if hunting and autohunting then
  shielded = false
  clearQueue("eqbal")
  send("clearqueue eqbal")
  huntNext()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(You lash out at .+ with your whip, stripping (\w+).)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>flagellate</name>
							<script>--table.remove(bragelist, table.index_of(bragelist, "Flagellate"))
bragelist.serpent.flagellate.enabled = false
selectCaptureGroup(2)
setFgColor(170, 255, 0)
resetFormat()
if hunting and autohunting then
  huntNext()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(You crack a Wyvern's Lash lightly against .+ flesh, awakening sensitive nerves.)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>runewarden</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>collide</name>
							<script>bragelist.runewarden.collide.enabled = false
selectCaptureGroup(2)
setFgColor(170, 255, 0)
resetFormat()
if hunting and autohunting then
  shielded = false
  huntNext()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(You charge at (.+), slamming into \w+ and throwing \w+ back.)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>fragment</name>
							<script>bragelist.runewarden.fragment.enabled = false
selectCaptureGroup(2)
setFgColor(170, 255, 0)
resetFormat()
if hunting and autohunting then
  shielded = false
  clearQueue("eqbal")
  send("clearqueue eqbal")
  huntNext()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(You strike at (.+)'s translucent shield with .+, drawing the outline of a rough rune that detonates, consuming the shield.)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>onslaught</name>
							<script>bragelist.runewarden.onslaught.enabled = false
selectCaptureGroup(2)
setFgColor(170, 255, 0)
resetFormat()
if hunting and autohunting then
  shielded = false
  huntNext()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(You unleash a ferocious onslaught on (.+), relentlessly pounding \w+ with .+.)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>silver dragon</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>dragonspark</name>
							<script>bragelist["silver dragon"].dragonspark.enabled = false
selectCaptureGroup(2)
setFgColor(170, 255, 0)
resetFormat()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(You open your cavernous maw and summon a blast of lightning to pulverize .+.)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>overwhelm</name>
							<script>bragelist["silver dragon"].overwhelm.enabled = false
selectCaptureGroup(2)
setFgColor(170, 255, 0)
resetFormat()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(You charge quickly at .+, throwing your mighty form into \w+ and sending \w+ staggering back.)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>shaman</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>corruption</name>
							<script>bragelist.shaman.corruption.enabled = false
selectCaptureGroup(2)
setFgColor(170, 255, 0)
resetFormat()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You point an imperious finger at (.*). (\w+) flesh blackens and sloughs off.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>haemhorrage</name>
							<script>bragelist.shaman.haemhorrage.enabled = false
selectCaptureGroup(2)
setFgColor(170, 255, 0)
resetFormat()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You point an imperious finger at (.*). Blood spurts out of (.*) eyes , ears, nose, and mouth.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>blademaster</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>spinslash</name>
							<script>bragelist.blademaster.spinslash.enabled = false
selectCaptureGroup(2)
setFgColor(170, 255, 0)
resetFormat()
if hunting and autohunting then
  huntNext()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You twist in a tight circle, slashing .+ with each spin.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>leapstrike</name>
							<script>bragelist.blademaster.leapstrike.enabled = false
selectCaptureGroup(2)
setFgColor(170, 255, 0)
resetFormat()
if hunting and autohunting then
  huntNext()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A Shin-enhanced leap flings you high into the air. You extend one knee downwards as you begin to fall, squarely striking .+ and driving .+ to the ground as you land.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>nerveslash</name>
							<script>bragelist.blademaster.nerveslash.enabled = false
selectCaptureGroup(2)
setFgColor(170, 255, 0)
resetFormat()
if hunting and autohunting then
  huntNext()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You lightly stab .+ in several key locations with your blade, causing .+ to slump weakly.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>shin shatter</name>
							<script>bragelist.blademaster.shinshatter.enabled = false
selectCaptureGroup(2)
setFgColor(170, 255, 0)
resetFormat()
shielded = false
if hunting and autohunting then
  huntNext()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You unleash a burst of Shin energy at .+, tearing apart .+ translucent shield.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>daze</name>
							<script>bragelist.blademaster.daze.enabled = false
selectCaptureGroup(2)
setFgColor(170, 255, 0)
resetFormat()
if hunting and autohunting then
  huntNext()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You hurl a precise blast of Shin energy at (.+)'s eyes.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>headstrike</name>
							<script>bragelist.blademaster.headstrike.enabled = false
selectCaptureGroup(2)
setFgColor(170, 255, 0)
resetFormat()
if hunting and autohunting then
  huntNext()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You deliver a glancing blow to (.+)'s head.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>SEVET</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>GAZE</name>
						<script>cecho("\n&lt;cyan&gt; LEAVE NOW NOW NOW NOW")
cecho("\n&lt;cyan&gt; LEAVE NOW NOW NOW NOW")cecho("\n&lt;cyan&gt; LEAVE NOW NOW NOW NOW")
cecho("\n&lt;cyan&gt; LEAVE NOW NOW NOW NOW")cecho("\n&lt;cyan&gt; LEAVE NOW NOW NOW NOW")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Ra'mah, the Corrupted trains its eyes upon you and begins to growl threateningly.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Zynthesys</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName>Zynthesys(Spiritlore Export)</packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Zynthesys Spiritlore Handling</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Basic Captures</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Commune Formed</name>
							<script>sp_communed = true
spb_bal = true
sp_checkall()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your communion with the departed may begin.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Spirit's Unbound</name>
							<script>spReset()
sp_need_spirits = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You sever the bindings with all of the spirits you have bound.</string>
								<string>You have not bound any spirits.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Single Spirit Unbound</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You dissolve your bond with the spirit of (.*).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Commune Ended</name>
							<script>sp_communed = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You are no longer communing with the spirits.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Spirit Tethered</name>
							<script>spt_bal = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You feel the temperature around you rapidly decrease as your spiritual tether with (.*) or snaps into place.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Tether Ended</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You sever your spiritual tether with (.*).$</string>
								<string>^Your tether to (.*) is severed.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Tether Solidified</name>
							<script>spt_solid = matches[2]
spt_check()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A shockingly cold surge of power courses through you as your tether with (.*) solidifies, forming into a true binding.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Daina Invoked</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You feel a soothing warmth filling your extremities.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Can Invoke Daina Again</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You may cure your afflictions with spiritual energy once again.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Spirit Balance False</name>
							<script>spb_bal = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You draw in a breath and release it slowly, allowing your thoughts to fade away.</string>
								<string>^Focusing on your binding with the spirit of (.*), you carefully strengthen the connection, allowing more of the spirit's power to use your body as a conduit.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Spirit Attune Balance Check</name>
							<script>spb_bal = true
sp_checkall()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You have recovered balance on all limbs.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Sitting!</name>
							<script>sp_seated = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You sit yourself down.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Standing!</name>
							<script>sp_seated = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You stand up.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Spirit Tether Balance Returned</name>
							<script>spt_bal = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You have recovered equilibrium.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Missing Bond!?</name>
							<script>SpEcho("&lt;red&gt;Bond Missing!")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You have not formed a bond with the appropriate spirit to carry out that ability.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Spirit's Bound</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Daina Bound</name>
							<script>spb_daina = true
spb_bal = true
sp_checkall()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The sensation of a gentle breeze makes the hairs on your arms stand on end.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Jhulian Bound</name>
							<script>spb_jhulian = true
spb_bal = true
sp_checkall()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A sudden desire to break communion and set out to explore the land comes over you.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Arius Bound</name>
							<script>spb_arius = true
spb_bal = true
sp_checkall()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You almost lose your trance as a feeling of tranquility washes over you.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Silvanix Bound</name>
							<script>spb_silvanix = true
spb_bal = true
sp_checkall()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A cackling laugh builds in your throat, but you ruthlessly suppress it.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Ri'Shen Bound</name>
							<script>spb_rishen = true
spb_bal = true
sp_checkall()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your breathing slows to match your heartbeat as a tranquil presence comes into contact with your own.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Maligus Bound</name>
							<script>spb_maligus = true
spb_bal = true
sp_checkall()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A feeling of terrible, unquenchable devotion to evil threatens to overcome you, but your mental fortitude proves victorious.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Aspar Bound</name>
							<script>spb_aspar = true
spb_bal = true
sp_checkall()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A clinical, ruthless presence overcomes you for an instant, before you reassert control.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Aelkesh Bound</name>
							<script>spb_aelkesh = true
spb_bal = true
sp_checkall()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Unnatural eldritch whispers fill your mind as an insidious presence attempts to overtake you.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Teraile Bound</name>
							<script>spb_teraile = true
spb_bal = true
sp_checkall()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The realisation that none can match you with the blade suddenly dawns upon you.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Arcanor Bound</name>
							<script>spb_arcanor = true
spb_bal = true
sp_checkall()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>An ancient, wise consciousness brushes against your own, before you establish your control.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Syvis Bound</name>
							<script>spb_syvis = true
spb_bal = true
sp_checkall()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A sinister sensation washes over you for the briefest instant, but quickly fades into little morethan a persistent unease.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Marak Bound</name>
							<script>spb_marak = true
spb_bal = true
sp_checkall()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A terrible, absolute knowledge in your supremacy fills you, almost overwhelming your mind.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Anthius Bound</name>
							<script>spb_anthius = true
spb_bal = true
sp_checkall()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A righteous indignation overcomes you, threatening to suppress all else.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Garon Bound</name>
							<script>spb_garon = true
spb_bal = true
sp_checkall()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>An implacable dedication comes over you.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Tarnel Bound</name>
							<script>spb_tarnel = true
spb_bal = true
sp_checkall()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>An ancient, primordial mind brushes briefly against your own before you establish control.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Kosuira Bound</name>
							<script>spb_kosuira = true
spb_bal = true
sp_checkall()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Phantom pain flickers at the edge of perception, accompanied by a terrible, pervasive sadness.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Arayan Bound</name>
							<script>spb_arayan = true
spb_bal = true
sp_checkall()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>An unwavering certainty of the value of Creation washes over you for the briefest instant, before you suppress the alien will.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Adchachel Bound</name>
							<script>spb_adchachel = true
spb_bal = true
sp_checkall()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The phantom heat of an inferno licks at your skin as a terrible, endless hunger demands satiation.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Spirit Attuned</name>
							<script>handleAttunement(matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Focusing on your binding with the spirit of (.*), you carefully strengthen the connection, allowing more of the spirit's power to use your body as a conduit.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Zynthesys Fishy System!</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Put bait in tank</name>
						<script>if gmcp.Room.Info.environment == "Vessel" then
  send("get 50 bait from bucket")
  tempTimer(2, [[expandAlias("sl")]])
  tempTimer(4, [[send("put 50 bait in tank")]])
  tempTimer(6, [[expandAlias("sl")]])
else
  send("get 50 bait from bucket")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^It is now the (\w+) of (\w+), (\w+) years after the fall of the Seleucarian Empire\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Auto-Cook</name>
						<script>if
  gmcp.Room.Info.name == "Cabin (indoors)" or
  gmcp.Room.Info.name == "A stinking cabin (indoors)" or
  gmcp.Room.Info.name == "Clement Captain's cabin (indoors)" or
  gmcp.Room.Info.name == "Captain's cabin (indoors)"
then
  send("get bait from bucket"..cmdsep.."cook fish", false)
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^It is now the (\w+) of (\w+), (\w+) years after the fall of the Seleucarian Empire\.$</string>
							<string>An appetising smell fills the cabin as you remove the lid of the kettle.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>2</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Baiting and Casting</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Line Casted</name>
							<script>Zynthesys.fishing.hasBal = false
Zynthesys.fishing.needCast = false
Zynthesys.fishing.needReel = false
Zynthesys.fishing.config.LINE_STATUS.out = true
Zynthesys.fishing.config.LINE_STATUS.depth = tonumber(matches[2])
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You cock back your arm and smoothly cast your line over the railing into the nearby water\. You judge the cast at about (\d+) feet.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Get Bait</name>
							<script>send("queue add eqbal bait hook with bait")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You take (.+) from a bait tank\.$</string>
								<string>^You take a (.+) from .+ bucket\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Bait Hook</name>
							<script>Zynthesys.fishing.hasBal = false
Zynthesys.fishing.needBait = false
Zynthesys.fishing.needCast = true
Zynthesys.fishing.needReel = false
Zynthesys.fishing.config.LINE_STATUS.out = false
Zynthesys.fishing.config.LINE_STATUS.fighting = false
Zynthesys.fishing.config.LINE_STATUS.depth = 0</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You carefully thread (.+) onto the hook of .+\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>set bait bucket</name>
							<script>fish_bucket = matches[2]</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>\s+bucket(\d+)\s+a bait bucket</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Line Reeled In</name>
							<script>Zynthesys.fishing.needCast = false
Zynthesys.fishing.config.LINE_STATUS.out = false
Zynthesys.fishing.config.LINE_STATUS.fighting = false
Zynthesys.fishing.config.LINE_STATUS.depth = 0
Zynthesys.fishing.needReel = false
Zynthesys.fishing.hasBal = true

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You reel your line in completely.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Wasted Bait!</name>
							<script>Zynthesys.fishing.needBait = false
Zynthesys.fishing.needCast = true
Zynthesys.fishing.config.LINE_STATUS.out = false
Zynthesys.fishing.config.LINE_STATUS.fighting = false
Zynthesys.fishing.config.LINE_STATUS.depth = 0
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Throwing away your existing bait, you carefully thread (.*) onto the hook of a deep sea fishing pole\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Balance Checks and Handling</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Balance Returned</name>
							<script>Zynthesys.fishing.hasBal = true
if Zynthesys.fishing.active then
  if Zynthesys.fishing.needBait then
    Zynthesys.fishing.cast()
  end
  if Zynthesys.fishing.needCast then
    if Zynthesys.fishing.config.POLE_NAME == "a simple fishing pole" then
      send("cast line " .. castdir .. "")
    else
      send("cast line "..Zynthesys.fishing.config.DEFAULT_CAST)
    end  
  end
  if Zynthesys.fishing.needReel then
    Zynthesys.fishing.reel()
  end
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You have recovered balance on all limbs.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Fishing Prompt - Ships only</name>
							<script>if Zynthesys.fishing.config.LINE_STATUS.out then
cecho("&lt;gold&gt;-[&lt;grey&gt;Fishing&lt;gold&gt;]&lt;reset&gt;")
cecho("&lt;gold&gt;-[&lt;grey&gt;Depth-"..Zynthesys.fishing.config.LINE_STATUS.depth.."&lt;gold&gt;]&lt;reset&gt;")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^= \[.*\]$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>FishList Fallback</name>
							<script>function processCatchFallback()
    local stats = Zynthesys.fishing.stats
    stats.total_pounds = tonumber(matches[3])
    stats.total_ounces = tonumber(matches[4])
    stats.session_catches = tonumber(matches[2])
end

processCatchFallback()
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You have a total of (\d+) fish, with a total weight of (\d+) pounds and (\d+) (ounces|ounce).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Fish Strikes and Teases</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Strike!</name>
							<script>deleteFull()
cecho("\n&lt;white&gt;[&lt;gold&gt;Fishy&lt;white&gt;]: &lt;green&gt;Strike!")
tempTimer(1.8, [[send("jerk pole")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You see the water ripple as a fish makes a medium strike at your bait.</string>
								<string>You stagger as a fish makes a large strike at your bait.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Tease!</name>
							<script>deleteFull()
cecho("\n&lt;white&gt;[&lt;gold&gt;Fishy&lt;white&gt;]: &lt;green&gt;Just a tease!")
tempTimer(2.2, [[send("tease line")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You feel a fish nibbling on your hook.</string>
								<string>You feel a fish make a small strike at your bait.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Missed Strike!</name>
							<script>deleteFull()
cecho("\n&lt;white&gt;[&lt;gold&gt;Fishy&lt;white&gt;]: &lt;red&gt; Missed the strike!")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You quickly jerk back your fishing pole, but the hook pulls free of the fish.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Line Teased!</name>
							<script>deleteFull()
cecho("\n&lt;white&gt;[&lt;gold&gt;Fishy&lt;white&gt;]: &lt;green&gt;Line teased!")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>With a short dipping and raising motion, you tease your fishing line.</string>
								<string>You move your fishing pole quickly back and forth hoping to excite the interest of nearby fish.</string>
								<string>You tease your fishing line gingerly.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Hooked Fish!</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Fish Hooked!!</name>
							<script>Zynthesys.fishing.config.LINE_STATUS.fighting = true
Zynthesys.fishing.config.LINE_STATUS.out = true
Zynthesys.fishing.needReel = true
deleteFull()
cecho("\n&lt;white&gt;[&lt;gold&gt;Fishy&lt;white&gt;]: &lt;green&gt;FISH HOOKED!")
tempTimer(0.5, [[if not Zynthesys.fishing.needReel then Zynthesys.fishing.needReel = true send("reel line") end]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You quickly jerk back your fishing pole and feel the line go taut. (.*)!$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Line Out!</name>
							<script>Zynthesys.fishing.config.LINE_STATUS.fighting = true
Zynthesys.fishing.needReel = true
Zynthesys.fishing.config.LINE_STATUS.depth = Zynthesys.fishing.config.LINE_STATUS.depth + tonumber(matches[2])
deleteFull()
cecho("\n&lt;white&gt;[&lt;gold&gt;Fishy&lt;white&gt;]: &lt;red&gt;Fish Running! " .. Zynthesys.fishing.config.LINE_STATUS.depth .. " feet of line still out!")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The fish you've hooked struggles against the line and runs it out (\d+) (feet|foot).$</string>
								<string>^The fish on your line shows its power by running out (\d+) (feet|foot) of line.$</string>
								<string>^Your rod bends slightly as your fish tries to escape its barbed tether, running out (\d+) (feet|foot) of line.$</string>
								<string>^Tugging powerfully, your fish draws out (\d+) (feet|foot) of line.$</string>
								<string>^Dodging back and forth furiously, your fish draws out (\d+) (feet|foot) of line.$</string>
								<string>^The fish tries to swim with the hook, drawing (\d+) (feet|foot) of line.$</string>
								<string>^Your fish struggles and swims firmly away from you, drawing out (\d+) (feet|foot) of fishing line.$</string>
								<string>^With a pull that threatens to rip the pole from your hand, the fish you've hooked runs out (\d+) (feet|foot) of line.$</string>
								<string>^You feel the fish tugging on your line, drawing it out about (\d+) (feet|foot).$</string>
								<string>^With an arm-wrenching burst of power, the fish you've hooked runs out (\d+) (feet|foot) of fishing line.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Fish Caught!</name>
							<script>-- Script code
function processCatch()
    local species = matches[2]
    local pounds = tonumber(matches[3])
    local ounces = tonumber(matches[5]) or 0
    
    -- Reset fishing status
    Zynthesys.fishing.config.LINE_STATUS.fighting = false
    Zynthesys.fishing.config.LINE_STATUS.out = false
    Zynthesys.fishing.needReel = false
    
    -- Add catch to stats
    Zynthesys.fishing.addCatch(species, pounds, ounces)
    Zynthesys.fishing.showStats()
end

processCatch()

fish_bucket = fish_bucket or "bucket"
bait_bucket = bait_bucket or "bucket"
if table.contains(gmcp.Char.Items.List.items, "a bait tank") then
  send("get bait from tank")
else
  send("get bait from " .. bait_bucket .. "")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^With a final tug, you finish reeling in the line and land a (.*) weighing (\d+) pounds and (\d+) (ounces|ounce)\!$</string>
								<string>^You reel in the last bit of line and your struggle is over. You've landed a (.*) weighing (\d+) pounds and (\d+) (ounces|ounce).$</string>
								<string>^With a final tug, you finish reeling in the line and land a (.*) weighing (\d+) pounds!$</string>
								<string>^With a style born of skill, you reel in a (.*) in a single smooth motion. It looks to weigh (\d+) pounds and (\d+) ounces.$</string>
								<string>^You reel in the last bit of line and your struggle is over. You've landed a (.*) weighing (\d+) pounds.$</string>
								<string>^You quickly reel in a(.*), landing it with ease! It looks to weigh (\d+) pounds and (\d+)(ounce|ounces).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Sea God</name>
							<script>Zynthesys.fishing.config.LINE_STATUS.fighting = true
Zynthesys.fishing.needReel = true
Zynthesys.fishing.config.LINE_STATUS.depth = Zynthesys.fishing.config.LINE_STATUS.depth + tonumber(matches[3])
deleteFull()
cecho("\n&lt;white&gt;[&lt;gold&gt;Fishy&lt;white&gt;]: &lt;red&gt;Fish Running! " .. Zynthesys.fishing.config.LINE_STATUS.depth .. " feet of line still out!")

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^With a power born of the Seagod, (.*) leaps from the water explosively, running the line out (\d+) feet.$</string>
								<string>^Leaping from the water in a frenzy to escape, (.*) runs out (\d+) (feet|foot) of your line.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Reeling In!</name>
							<script>Zynthesys.fishing.config.LINE_STATUS.fighting = true
Zynthesys.fishing.needReel = true
Zynthesys.fishing.config.LINE_STATUS.depth = tonumber(matches[2])
deleteFull()
cecho("\n&lt;white&gt;[&lt;gold&gt;Fishy&lt;white&gt;]: &lt;green&gt;Reeling! " .. Zynthesys.fishing.config.LINE_STATUS.depth .. " feet of line still out!")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^With a slow and steady motion you reel in a length of line, straining against the pulling fish\. You have (\d+) (foot|feet) of line left to bring in\.$</string>
								<string>^Playing your fishing pole skilfully, you take up the slack and reel in some line\. You have (\d+) (foot|feet) of line left to bring in\.$</string>
								<string>^You furiously reel in your line, straining to land your fish. You have (\d+) (foot|feet) of line left to bring in\.$</string>
								<string>^Jerking the line quickly, you let the fish feel your power as you reel it in. You have (\d+) (feet|foot) of line left to bring in.$</string>
								<string>^You cock back your arm and smoothly cast your line over the railing into the nearby water\. You judge the cast at about (\d+) feet\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Reeling Line</name>
							<script>deleteFull()
Zynthesys.fishing.reel()
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Relaxing the tension on your line, you are able to reel again.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Line Snapped!!!</name>
							<script>Zynthesys.fishing.needReel = false
Zynthesys.fishing.config.LINE_STATUS.out = false
Zynthesys.fishing.config.LINE_STATUS.fighting = false
Zynthesys.fishing.active = false
deleteFull()
cecho("\n&lt;white&gt;[&lt;gold&gt;Fishy&lt;white&gt;]: &lt;red&gt;LINE SNAPPED!")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>As the fish strains your line beyond its breaking point, it snaps suddenly, costing you your fish and bait.</string>
								<string>You didn't cast your line, so there's no need to reel it.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Fishing gags</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Gags</name>
							<script>if not DEBUG_MODE then deleteLine() end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^.+ furiously reels in (\w+) line\, straining to land (\w+) fish\.$</string>
								<string>^.+ quickly jerks back (\w+) fishing pole\, and you can see the line go taut\. (\w+)\'s hooked a fish\!$</string>
								<string>^.+ moves (\w+) fishing pole quickly back and forth\.$</string>
								<string>^.+ quickly jerks back (\w+) fishing pole\.$</string>
								<string>^With a slow and steady motion .+ reels in a length of line\, straining against what must be a pulling fish\.$</string>
								<string>^Playing (\w+) fishing pole skilfully\, .+ reels in some line\.$</string>
								<string>^With a short dipping and raising motion\, .+ teases (\w+) fishing line\.$</string>
								<string>^Jerking (\w+) fishing line quickly\, .+ reels in a length of line\.$</string>
								<string>A deep sea fishing pole is not a container.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Zynthesys Harvester</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Plant Harvested</name>
						<script>local plants = {
  "Myrrh", "Elm", "Ginger", "Ginseng", "Lobelia", "Echinacea", "Goldenseal", 
  "Slipper", "Kelp", "Bayberry", "Hawthorn", "Bloodroot", "Irid", "Valerian", 
  "Blueberry", "Sileris", "Kola", "Kuzu", "Skullcap", "Bellwort", "Cohosh", 
  "Ash", "Pear", "Weed"
}

for _, plant in ipairs(plants) do
  if VH_Tar == plant then
    ToHarvest_Table[plant] = false
    break
  end
end

vHarvestedPlants()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You reach out and carefully harvest (.*).$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Plant Fully Harvested</name>
						<script>vNoPlants()
vHarvestedPlants()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^That plant has been fully harvested.$</string>
							<string>^You have already harvested from this plant recently.$</string>
							<string>^What do you wish to harvest?$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Harvest Balance</name>
						<script>if vHarvestingPlants then
  vHarvestPlants()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You have recovered balance on all limbs.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Zynthesys zData</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>System Initialize</name>
						<script>zData.initializeEvents()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Password correct. Welcome to Achaea.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>New trigger</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>Tyrandiel, the Wise bows to you - the lesson in Fitness is over.</string>
					<string>Tyrandiel, the Wise nods at you and concludes the lesson in Constitution.</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>0</integer>
					<integer>0</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Zalethka beckons you to him.</name>
				<script>send("renounce grace")
send("queue add eqbal follow zalethka")</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>Zalethka beckons you to him.</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>3</integer>
				</regexCodePropertyList>
			</Trigger>
		</TriggerGroup>
	</TriggerPackage>
	<TimerPackage>
		<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
			<name>Achaean System</name>
			<script></script>
			<command></command>
			<packageName>Achaean System</packageName>
			<time>00:00:00.000</time>
			<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
				<name>system</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<time>00:00:00.000</time>
				<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
					<name>raiding</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<time>00:00:00.000</time>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>litany</name>
						<script>
  if not (systemLoaded) then
    return
  end
  
  if systemPaused then
    return
  end

  if inslowcuringmode() then 
    return 
  end

  if balance_data.stunned.in_use then
    return
  end
  
send("queue addclear eqbal writhe")


  

</script>
						<command></command>
						<packageName></packageName>
						<time>00:00:01.000</time>
					</Timer>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>litany failsafe</name>
						<script>disableTimer("litany")
disableTimer("litany failsafe")</script>
						<command></command>
						<packageName></packageName>
						<time>00:00:04.050</time>
					</Timer>
				</TimerGroup>
			</TimerGroup>
			<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
				<name>combat</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<time>00:00:00.000</time>
				<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>failsafe</name>
					<script>if not (systemLoaded) then
  return
end

if systemPaused then
  return
end

if balance_data.stunned.in_use then
  return
end

local class = myclass() or "blademaster"  

   if class == "blademaster" then
        bmGUI()
      end

--if failsafe then
    
   --if not (inslowcuringmode()) then
     --if myclass() == "blademaster" then
     --   bmAction()
     -- end
   -- end
      
    --  if myclass() == "serpent" then
    --    dstab()
    --  end
     
   --   if myclass() == "dragon" then
   --     dragondecide()
    --  end
   -- end
  
--end</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:00.330</time>
				</Timer>
				<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>api deathsight</name>
					<script>-- Call the function to fetch game feed
fetchGameFeed()</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:02.050</time>
				</Timer>
				<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>defender</name>
					<script>hangedmancd = hangedmancd or 0

warningsys.dangerlevel = 0
warningsys.preplevel = 0

if #myaffs &gt; 3 and not(listfind(myaffs, "prone")) then



end

classdanger = {serpent = {asthma = 2, impatience = 5, darkshade = 3},
psion = {impatience = 2, stupidity = 2, epilepsy = 2, },
snb = {asthma = 3, slickness = 4},
depthswalker = {depression = 2, timeloop = 3, shadowmadness = 3, },
dragon = {asthma = 2, impatience = 3, slickness = 4},

}

classhealthdanger = {
psion = {hp = .40, mp = .30},
snb = {hp = .40, mp = .30},
depthswalker = {hp = .5, mp = .4},
dragon = {hp = .5},
magi = {hp = .25},


}

myhp = gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp
mymp = gmcp.Char.Vitals.mp/gmcp.Char.Vitals.maxmp

for i in pairs(warningsys.targets) do

if classhealthdanger[warningsys.targets[i].class] then

healthdanger = math.floor(10 - ((myhp - classhealthdanger[warningsys.targets[i].class].hp)/(1-classhealthdanger[warningsys.targets[i].class].hp))* 10)

warningsys.dangerlevel = warningsys.dangerlevel + healthdanger


end


end


for i in pairs(warningsys.targets) do

if classhealthdanger[warningsys.targets[i].class] then

manadanger = math.floor(10 - ((mymp - classhealthdanger[warningsys.targets[i].class].mp)/(1-classhealthdanger[warningsys.targets[i].class].mp))* 10)

warningsys.dangerlevel = warningsys.dangerlevel + manadanger


end


end




for i in pairs(warningsys.targets) do

if classdanger[warningsys.targets[i].class] then

for j in pairs(myaffs) do

if classdanger[warningsys.targets[i].class][myaffs[j]] then

warningsys.dangerlevel = warningsys.dangerlevel + classdanger[warningsys.targets[i].class][myaffs[j]]



end


end



end




end


actions = {}
actions.defensive = {}


actions.offensive = {}

actionlist = {
fashion = "cop",
priestess = "healheal",
magician = "manamana",
wander = "roomprep",


}


if warningsys.ai.targetfound then

if warningsys.dangerlevel &lt; 3 then


table.insert(actions.defensive, {"fashion",50})

table.insert(actions.defensive, {"deathrub", 25})

end


else

table.insert(actions.defensive, {"wander",50})


end

if myhp &lt; .75 then

table.insert(actions.defensive, {"priestess", 25})


end



if myhp &lt; .75 then

table.insert(actions.defensive, {"magician", 25})


end

if warningsys.dangerlevel &gt; 6 then

table.insert(actions.defensive, {"flee", warningsys.dangerlevel*10})



end

if warningsys.dangerlevel &gt; 6 and os.clock() &gt; hangedmancd then


table.insert(actions.defensive, {"hangedman", warningsys.dangerlevel*50})




end

if failsafe and not(warningsys.ai.paused) then

send("consider "..target, false)


end

defensepointer = defensepointer or 0


if failsafe then

if warningsys.ai.lastaction &lt; os.clock() or defensepointer &lt; #defensesequence then
warningsys.ai.lastaction = os.clock() + 5
cecho("&lt;red&gt;decided on "..actionselection.."!!!")


actionselection = randompile(actions.defensive)

if actionlist[actionselection] then

expandAlias(actionlist[actionselection])


end




end

end

</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:00.500</time>
				</Timer>
				<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>failsafetimer</name>
					<script>--tracktarget()


if failsafe then

if flairrequested then

if havebalance then
send(flairline)

flairrequested = false

end


else


if tumblerequested then


else

if not(needbombpriority) then


if mickeyrequested then

send("queue addclear eqbal slip "..target.." mickey")


else
--bmoverride()




--attackdecision()


end

end

end


end



end


if defensivefailsafe then

recklesscheck = recklesscheck or 0
if not(inblackoutprompt) then


if #myaffs &gt; 0 and gmcp.Char.Vitals.hp == gmcp.Char.Vitals.maxhp and gmcp.Char.Vitals.mp == gmcp.Char.Vitals.maxmp then

if recklesscheck &lt; os.clock() then

send("curing predict recklessness")
send("focus")

recklesscheck = os.clock() + 10

end

end

end



if healingmode then

balances = {
herb = "",
salve = "",
focus = "",
none = "",
smoke = "",
sip = "",
potash = "",
writhe = "",
clot = "",


}
selectedcure = "none"


if realcures.sip &lt; os.clock() then

if  gmcp.Char.Vitals.hp then

if tonumber(currentHealth) &lt; 5000 then

balances.sip = "sip health"


end

if tonumber(currentMana) &lt; 4000 then
balances.sip = "sip mana"



end
end


end

if realcures.potash &lt; os.clock() then

if  gmcp.Char.Vitals.hp then

if tonumber(currentHealth) &lt; 4000 then

balances.potash = "outr potash|eat potash"


end

if tonumber(currentMana) &lt; 3000 then
balances.potash = "outr potash|eat potash"



end
end


end

if realcures.clot &lt; os.clock() then

if mybleed() &gt; 100 then


balances.clot = "clot|clot|clot|clot|clot|clot|clot|clot|clot|clot"





end




end



foundcure = false

for i = 1, #prioritylist, 1 do


if listfind(myaffs, prioritylist[i]) and not(listfind(cureignorelist, prioritylist[i])) and heldcures[curelist[prioritylist[i]].bal] == 0 then
--cecho("trying to cure "..prioritylist[i])
foundcure = true

if curelist[prioritylist[i]].focusable and balances["focus"] == "" and realcures.focus &lt; os.clock() then

balances.focus = "focus"


end

--cecho("trying to cure "..prioritylist[i])


if balances[curelist[prioritylist[i]].bal] == "" and realcures[curelist[prioritylist[i]].bal] &lt; os.clock() then

--restrictions

allowed = true

if (curelist[prioritylist[i]].bal == "smoke" and listfind(myaffs, "asthma")) then


allowed = false

end

if (curelist[prioritylist[i]].bal == "herb" and listfind(myaffs, "anorexia")) then


allowed = false

end


if curelist[prioritylist[i]].bal == "salve" and ((listfind(myaffs, "slickness") or listfind(myaffs, "impatience")) and not(listfind(myaffs, "anorexia"))) then



allowed = false


end



if allowed then

balances[curelist[prioritylist[i]].bal] = curelist[prioritylist[i]].cure
--cecho("selected "..prioritylist[i].." on balance "..curelist[prioritylist[i]].bal.." timer "..realcures[curelist[prioritylist[i]].bal])

end


end



end



--none balance


end


--no affs found


if not(foundcure) and not(cureallbreak) then



for i, v in pairs(curelist) do



if listfind(myaffs, i) and not(listfind(cureignorelist, i)) and heldcures[curelist[i].bal] == 0  then
--cecho("trying to cure "..prioritylist[i])
foundcure = true

if curelist[i].focusable and balances["focus"] == "" then

balances.focus = "focus"


end

--cecho("trying to cure "..prioritylist[i])


if balances[curelist[i].bal] == "" and realcures[curelist[i].bal] &lt; os.clock() then

--restrictions

allowed = true

if (curelist[i].bal == "smoke" and listfind(myaffs, "asthma")) then


allowed = false

end

if (curelist[i].bal == "herb" and listfind(myaffs, "anorexia")) then


allowed = false

end


if (curelist[i].bal == "salve" and listfind(myaffs, "slickness")) then


allowed = false

end



if allowed then

balances[curelist[i].bal] = curelist[i].cure
--cecho("selected "..prioritylist[i].." on balance "..curelist[prioritylist[i]].bal.." timer "..realcures[curelist[prioritylist[i]].bal])

end


end



end



--none balance


end








end


if not(balances.none == "") then

send(balances.none)
realcures.none = os.clock() + .3




end

if not(balances.writhe == "") then

send(balances.writhe)
realcures.writhe = os.clock() + .3




end

if not(balances.herb == "") then

send("outr "..balances.herb.."|eat "..balances.herb)

realcures.herb = os.clock() + .3




end


if piperefill then

balances.smoke = "outr elm|put elm in "..pipelist.elm.."|outr valerian|put valerian in "..pipelist.valerian.."|outr malachite|put malachite in "..pipelist.malachite.."|"..balances.smoke

end

if not(balances.clot == "") then

send(balances.clot)


end

if not(balances.smoke == "") then

send(balances.smoke)

realcures.smoke = os.clock() + .3




end



if not(balances.salve == "") then

send(balances.salve)

realcures.salve = os.clock() + .3





end


if not(balances.focus == "") then

send(balances.focus)

realcures.focus = os.clock() + .3





end



if not(balances.sip == "") then

send(balances.sip)

realcures.sip = os.clock() + 1





end


if not(balances.potash == "") then

send(balances.potash)

realcures.potash = os.clock() + 1





end


end









tumblecd = tumblecd or 0
x = ""

if projectionrequested then


x = "invoke projection"

failsafe = false

end

if diagnoserequested then

send("queue addclear eqbal diagnose")


end



if cantumble and tumblecd &lt; os.clock() and listfind(myaffs, "paralysis") and listfind(myaffs, "asthma") and listfind(myaffs, "slickness") then


fleerequested = true

--send("curing prioaff asthma")

if fashions &gt; 15 then

send("puppet bind")



end


else


fleerequested = false

end 




if listfind(myaffs, "anorexia") and listfind(myaffs, "asthma") and listfind(myaffs, "slickness") then

treecd = treecd or 0


if treecd &lt; os.clock() then

send("touch tree")


else


failsafe = false

x = "shin phoenix"




end



end


musttumble = false


if not(failsafe) then




lasteaten = lasteaten or "bloodroot"



myfleedir = myfleedir or ""




if shieldrequested then

x = "queue add eqbal touch shield"



end
immunitycd = immunitycd or 0



if alleviaterequested then

x = "queue add eqbal alleviate"



end



if phoenixrequested and shin() &gt; 79 then

x = "queue add eqbal shin phoenix"


end


if manarequested and shin() &gt; 20 then

x = "queue add eqbal shin manatrans all"


end



if healrequested and shin() &gt; 20 then

x = "queue add eqbal shin healthtrans all"


end

if immunityrequested or inimmunity then


halted = true

x = ""


end


if immunityrequested and immunitycd &lt; os.clock() then

cecho("&lt;cyan&gt;i want immunity!")


x = "queue add eqbal immunity"

immunitycd = os.clock() + 4


end


if not(x == "") then

send("clearqueue all")


send(x)

end



end



x = ""
safe = true

tumblecd = tumblecd or 0


if fleerequested then

musttumble = true



end

if tumblerequested then

musttumble = true

end


if (listfind(myaffs, "damagedleftleg") or listfind(myaffs, "damagedrightleg")) then


if failsafe then



send("clearqueue all")


end

failsafe = false



end

if cantumble and (listfind(myaffs, "damagedleftleg") or listfind(myaffs, "damagedrightleg")) and listfind(myaffs, "prone") and tumblecd &lt; os.clock() then

failsafe = false


musttumble = true




end


if (musttumble and tumblecd &lt; os.clock()) or flightmode  then


myfleedir = myfleedir or ""

if myfleedir == "" then

for i, v in pairs(battlemap.map[gmcp.Room.Info.num].exits) do

send("tumble "..i.."|clearqueue all")
break



end

else


send("tumble "..myfleedir.."|clearqueue all")

end






end



end
</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:00.100</time>
				</Timer>
				<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>omnistarpredict</name>
					<script>omnistarpredict("legs")
omnistarpredict("centre")
omnistarpredict("arms")</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:01.500</time>
				</Timer>
				<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>paralysis check timer</name>
					<script>-- Check if the remaining balance time suggests paralysis
-- If the current stop watch time is greater than the average balance time, assume the enemy has paralysis.
if getStopWatchTime(enemyBalanceStopwatch) &gt; getAverageEnemyBalanceTime() + 2 then
    -- Assuming enemy has paralysis and not slickness
    if probabilityTable["paralysis"] &gt;= 0.5 then 
        -- Update the probability tables to reflect the assumption
        probabilityTable["paralysis"] = 1
        probabilityTable["slickness"] = 0 
    end
    -- Print a message indicating the assumption
    cecho("&lt;gold&gt; +&lt;white&gt; Assuming enemy has paralysis, updating afflictions.\n")
    -- Disable the paralysis check timer
    disableTimer("paralysis check timer")
end</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:00.500</time>
				</Timer>
				<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>TargetOutOfRoom</name>
					<script>--[[if targetIshere or not tAffs then
	disableTimer("TargetOutOfRoom")
	return
else
	if haveAff("anorexia") then
		if not haveAff("impatience") then
			erAff("anorexia")
		elseif not haveAff("slickness") then
			erAff("anorexia")
		end
	end

	if tAffs.slickness and not tAffs.asthma then
		erAff("slickness")
	end

	if not haveAff("anorexia") then
		if haveAff("impatience") and not haveAff("whisperingmadness") then
			erAff("impatience"); erAff("confusion"); erAff("epilepsy") erAff("stupidity"); erAff("masochism"); erAff("dizziness")
		elseif haveAff("paralysis") then
			erAff("paralysis")
		elseif haveAff("asthma") then
			erAff("asthma")
			erAff("weariness")
			if haveAff("slickness") then erAff("slickness") end
		elseif haveAff("haemophilia") then
			erAff("haemophilia")
			tAffs.bleed = nil
		elseif tarIsTempered() then
			taTempers()
		else
			tAffs = {blindness = true, deafness = true, shield = false, rebounding = false, curseward = false}
      affTimers = {}
			if ataxiaTemp.hypnoseal then tAffs.hypnoseal = true end
      if pariah and pariah.ensorcell then tAffs.ensorcelled = true end
      if pariah and pariah.burrow then tAffs.burrow = true end
			if bmFistTimer then tAffs.airfist = true end
			disableTimer("TargetOutOfRoom")
		end
	end
end]]</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:01.400</time>
				</Timer>
				<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>herbillusion</name>
					<script>if herbing then

myherbbalance = myherbbalance or 0

sendcd = sendcd or 0


if myherbbalance &lt; os.clock() and sendcd &lt; os.clock() then

send(herbillusion("bloodroot").."|outr aurum|eat aurum")

sendcd = os.clock() + .3



end


end</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:00.100</time>
				</Timer>
				<TimerGroup isActive="no" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
					<name>serpent</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<time>00:00:00.000</time>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>snapcheck</name>
						<script>if failsafe then

  if not (systemLoaded) then
    return
  end
  
  if systemPaused then
    return
  end

  --if inslowcuringmode() then 
   -- return 
  --end

  if balance_data.stunned.in_use then
    return
  end

  handleSnapForLock()
end</script>
						<command></command>
						<packageName></packageName>
						<time>00:00:00.300</time>
					</Timer>
				</TimerGroup>
			</TimerGroup>
			<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
				<name>roleplay</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<time>00:00:00.000</time>
				<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>smoke pipe</name>
					<script>if not failsafe then
  expandAlias("tabac")
  expandAlias("smpipe")
end</script>
					<command></command>
					<packageName></packageName>
					<time>00:05:00.000</time>
				</Timer>
			</TimerGroup>
		</TimerGroup>
	</TimerPackage>
	<AliasPackage>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>Achaean System</name>
			<script></script>
			<command></command>
			<packageName>Achaean System</packageName>
			<regex></regex>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>system</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>login</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex>^login$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>logout</name>
					<script>send("inr all"..cmdsep.."put gold in pack"..cmdsep.."qq"..cmdsep.."wave")</script>
					<command></command>
					<packageName></packageName>
					<regex>^logout$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>pause</name>
					<script>if systemPaused then
  systemPaused=false
  send("curing on")
  echo"\n"
  remedy:process()
  if not meditating then 
    fortify:process()
  end    
else
  systemPaused=true
  send("curing off")
end

cecho("\nSystem has been "..(systemPaused and "&lt;red&gt;paused." or "&lt;green&gt;unpaused."))  </script>
					<command></command>
					<packageName></packageName>
					<regex>^pp$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>debug</name>
					<script>toggleDebugMode()</script>
					<command></command>
					<packageName></packageName>
					<regex>^debug$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Go to ID or Area or Person</name>
					<script>local where = matches[2]:lower()
local gallop
if command:ends("gallop") then
  gallop = "gallop"
  where = where:sub(1, -8)
elseif command:ends("sprint") then
  gallop = "sprint"
  where = where:sub(1, -8)
elseif command:ends("dash") then
  gallop = "dash"
  where = where:sub(1, -6)
elseif command:ends("runaway") then
  gallop = "runaway"
  where = where:sub(1, -9)
elseif command:ends("glide") then
  gallop = "glide"
  where = where:sub(1, -7)
end

if mmp.debug then
  mmp.gotoPerf = mmp.gotoPerf or createStopWatch()
  startStopWatch(mmp.gotoPerf)
end

-- Check if 'where' is a valid person (try to resolve it as a person first)
local roomID = findRoomByPerson(where:title())
if roomID ~= "room not found" then
  -- We found a person, so go to their room
  where = roomID -- Update 'where' to the resolved room ID
  mmp.gotoRoom(where, gallop)
elseif tonumber(where) then
  -- If it's a number, assume it's a room number and go directly to that room
  mmp.gotoRoom(where, gallop)
else
  -- If it's neither a person nor a room number, assume it's an area and go there
  mmp.gotoArea(where, nil, gallop)
end

if mmp.debug then
  mmp.echo("goto alias took " .. stopStopWatch(mmp.gotoPerf) .. "s to run.")
end
</script>
					<command></command>
					<packageName></packageName>
					<regex>^goto (.+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>(gotop) Go to person</name>
					<script>local function goto(whom)
  local p = whom:title()
  if not mmp.pdb[p] then
    mmp.echo("Sorry - don't know where " .. p .. " is.")
    return
  end
  local nums = mmp.getnums(mmp.pdb[p], true)
  mmp.gotoRoom(nums[1])
  mmp.echo(
    string.format(
      "Going to %s in %s%s.",
      p,
      mmp.cleanAreaName(mmp.areatabler[getRoomArea(nums[1])] or '?'),
      (#nums ~= 1 and " (non-unique location though)" or "")
    )
  )
end

if not matches[2] then
  if not target then
    mmp.echo("I don't know what your target is (set the 'target' variable)")
    return
  else
    goto(target)
  end
else
  goto(matches[2])
end
</script>
					<command></command>
					<packageName></packageName>
					<regex>^gotop(?: (\w+))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>duanthara escape</name>
					<script>failsafe = false
hunting = false
autohunting = false
expandAlias("mconfig duanathar on")
send("wear wings")
send("put coins in pack")
send("whisper *Atavian Duanathar")
expandAlias("goto Eleusis")</script>
					<command></command>
					<packageName></packageName>
					<regex>^sd$</regex>
				</Alias>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>config</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>configure</name>
						<script>configureSystem()</script>
						<command></command>
						<packageName></packageName>
						<regex>^configure$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>lesserform</name>
						<script>-- To save or create the file:
local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
local filename = myclass() .. "prios.lua"
local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"
ensureFileExists(tablesDir, filename, "save", afflictions)


send("lesserform")</script>
						<command></command>
						<packageName></packageName>
						<regex>^lesserform$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>dragonform</name>
						<script>-- To save or create the file:
local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
local filename = myclass() .. "prios.lua"
local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"
ensureFileExists(tablesDir, filename, "save", afflictions)


if not systemPaused then
  systemPaused = true
  send("curing off")
  cecho("\nSystem has been "..(systemPaused and "&lt;red&gt;paused." or "&lt;green&gt;unpaused."))  
end

send("dragonform")</script>
						<command></command>
						<packageName></packageName>
						<regex>^dragonform$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>reset user interface</name>
						<script>initializeGUIWindows()</script>
						<command></command>
						<packageName></packageName>
						<regex>^reset gui$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>toggle gauges</name>
						<script>toggleGUIGauges()</script>
						<command></command>
						<packageName></packageName>
						<regex>^gauges$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>reset mudlet profile</name>
						<script>resetProfile()</script>
						<command></command>
						<packageName></packageName>
						<regex>^reset mudlet$</regex>
					</Alias>
					<Alias isActive="no" isFolder="no">
						<name>svr queue cmd</name>
						<script>--print(matches[3])
--print(matches[4])




--local balance = matches[3] or "eqbal"
--local prepend = true
--if isCommandInQueue(balance, matches[4]) then
  --processQueue(balance)
--else
  --clearQueue(balance)
  --addToQueue(balance, matches[4], prepend)
  --processQueue(balance)
--end</script>
						<command></command>
						<packageName></packageName>
						<regex>^do\s+(?:(eqbal|eq|b|e|class|curing)\s+?(.+))$
</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>show gauges</name>
						<script>settings.showGauges = checkBooleanString(string.upper(matches[2]))
initializeFlags()
local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
local filename = "configuration.lua"
local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"
ensureFileExists(tablesDir, filename, "save", settings)
configureSystem()</script>
						<command></command>
						<packageName></packageName>
						<regex>^show gauges (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>show inventory</name>
						<script>settings.gagInventory = checkBooleanString(string.upper(matches[2]))
initializeFlags()
local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
local filename = "configuration.lua"
local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"
ensureFileExists(tablesDir, filename, "save", settings)
configureSystem()
</script>
						<command></command>
						<packageName></packageName>
						<regex>^show inventory (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>show scrollbar</name>
						<script>settings.showScrollbar = checkBooleanString(string.upper(matches[2]))
initializeFlags()
local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
local filename = "configuration.lua"
local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"
ensureFileExists(tablesDir, filename, "save", settings)
configureSystem()</script>
						<command></command>
						<packageName></packageName>
						<regex>^show scrollbar (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>show prompt</name>
						<script>settings.promptEnabled = checkBooleanString(string.upper(matches[2]))
initializeFlags()
local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
local filename = "configuration.lua"
local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"
ensureFileExists(tablesDir, filename, "save", settings)
configureSystem()

  if settings.promptEnabled then
    send("config prompt custom " .. promptstring, false)
  else
    send("config prompt off", false)
  end
</script>
						<command></command>
						<packageName></packageName>
						<regex>^show prompt (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>toggle batching</name>
						<script>settings.batching = checkBooleanString(string.upper(matches[2]))
initializeFlags()
local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
local filename = "configuration.lua"
local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"
ensureFileExists(tablesDir, filename, "save", settings)
configureSystem()</script>
						<command></command>
						<packageName></packageName>
						<regex>^toggle batching (\w+)$</regex>
					</Alias>
					<Alias isActive="no" isFolder="no">
						<name>show prompt percentages</name>
						<script>local value = value or false
if matches[2] == "yes" or matches[2] == "Yes" or matches[2] == "true" or matches[2] == "True"  then
  value = true
else
  value = false
end

settings.promptPercentages = value

initializeFlags()
local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
local filename = "configuration.lua"
local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"
ensureFileExists(tablesDir, filename, "save", settings)
configureSystem()


</script>
						<command></command>
						<packageName></packageName>
						<regex>^show prompt percentages (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>set command separator</name>
						<script>settings.cmdsep = matches[2]
send("config commandseparator "..settings.cmdsep)
initializeFlags()
local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
local filename = "configuration.lua"
local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"
ensureFileExists(tablesDir, filename, "save", settings)
configureSystem()</script>
						<command></command>
						<packageName></packageName>
						<regex>^set command separator (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>set pagelength</name>
						<script>send("CONFIG PAGELENGTH "..tonumber(matches[2]))
settings.pagelength = tonumber(matches[2])
initializeFlags()
local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
local filename = "configuration.lua"
local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"
ensureFileExists(tablesDir, filename, "save", settings)
configureSystem()
</script>
						<command></command>
						<packageName></packageName>
						<regex>^set pagelength (\d+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>set screenwidth</name>
						<script>send("CONFIG SCREENWIDTH "..tonumber(matches[2]))
settings.screenwidth = tonumber(matches[2])
initializeFlags()

local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
local filename = "configuration.lua"
local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"
ensureFileExists(tablesDir, filename, "save", settings)
configureSystem()</script>
						<command></command>
						<packageName></packageName>
						<regex>^set screenwidth (\d+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>set timeout</name>
						<script>send("CONFIG TIMEOUT "..tonumber(matches[2]))
settings.timeout = tonumber(matches[2])
initializeFlags()
local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
local filename = "configuration.lua"
local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"
ensureFileExists(tablesDir, filename, "save", settings)
configureSystem()</script>
						<command></command>
						<packageName></packageName>
						<regex>^set timeout (\d+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>set mount</name>
						<script>send("CURING MOUNT "..tonumber(matches[2]))
settings.mount = tonumber(matches[2])
initializeFlags()
local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
local filename = "configuration.lua"
local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"
ensureFileExists(tablesDir, filename, "save", settings)
configureSystem()</script>
						<command></command>
						<packageName></packageName>
						<regex>^set mount (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>set curingset</name>
						<script>send("CURINGSET SWITCH "..matches[2])
settings.curingset = matches[2]
initializeFlags()
local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
local filename = "configuration.lua"
local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"
ensureFileExists(tablesDir, filename, "save", settings)
configureSystem()</script>
						<command></command>
						<packageName></packageName>
						<regex>^set curingset (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>set sip health at</name>
						<script>send("CURING SIPHEALTH "..matches[2])
settings.siphealth = tonumber(matches[2])
initializeFlags()
local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
local filename = "configuration.lua"
local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"
ensureFileExists(tablesDir, filename, "save", settings)
configureSystem()</script>
						<command></command>
						<packageName></packageName>
						<regex>^set siphealth (\d+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>set sip mana at</name>
						<script>send("CURING SIPMANA "..matches[2])
settings.sipmana = tonumber(matches[2])
initializeFlags()
local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
local filename = "configuration.lua"
local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"
ensureFileExists(tablesDir, filename, "save", settings)
configureSystem()</script>
						<command></command>
						<packageName></packageName>
						<regex>^set sipmana (\d+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>set healthaffs</name>
						<script>send("CURING HEALTHAFFSABOVE "..tonumber(matches[2]))
settings.healthaffsabove = tonumber(matches[2])
initializeFlags()
local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
local filename = "configuration.lua"
local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"
ensureFileExists(tablesDir, filename, "save", settings)
configureSystem()</script>
						<command></command>
						<packageName></packageName>
						<regex>^set healthaffs (\d+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>set manathreshold</name>
						<script>send("CURING MANATHRESHOLD "..tonumber(matches[2]))
settings.manathreshold = tonumber(matches[2])
initializeFlags()
local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
local filename = "configuration.lua"
local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"
ensureFileExists(tablesDir, filename, "save", settings)
configureSystem()</script>
						<command></command>
						<packageName></packageName>
						<regex>^set manathreshold (\d+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>set mosshealth</name>
						<script>send("CURING MOSSHEALTH "..tonumber(matches[2]))
settings.mosshealth = tonumber(matches[2])
initializeFlags()
local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
local filename = "configuration.lua"
local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"
ensureFileExists(tablesDir, filename, "save", settings)
configureSystem()</script>
						<command></command>
						<packageName></packageName>
						<regex>^set mosshealth (\d+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>set mossmana</name>
						<script>send("CURING MOSSMANA "..tonumber(matches[2]))
settings.mossmana = tonumber(matches[2])
initializeFlags()
local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
local filename = "configuration.lua"
local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"
ensureFileExists(tablesDir, filename, "save", settings)
configureSystem()</script>
						<command></command>
						<packageName></packageName>
						<regex>^set mossmana (\d+)$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="no" isFolder="yes">
					<name>developer</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>test type</name>
						<script>-- Debugging: Check the entire afflictions table
cecho("&lt;yellow&gt;Afflictions Table Contents:&lt;/yellow&gt;\n")
for key, value in pairs(afflictions) do
    cecho("&lt;cyan&gt;" .. key .. ":&lt;cyan&gt;\n")
    for _, details in ipairs(value) do
        cecho("  - " .. details.name .. " (Type: " .. (details.type or 0) .. ")  (Priority: " .. (details.priority or 0) .. ")\n")
    end
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^test type$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>test avoidance</name>
						<script>-- Example lines to test
local lines = {
    "You twist your body out of harm's way.",
    "You parry the attack with a deft manoeuvre.",
    "The enemy strikes at your left leg."
}

last_limb = "left leg"

for _, line in ipairs(lines) do
    local result = attackAvoided(line, last_limb)
    echo(string.format("Line: %s | Avoided: %s", line, tostring(result)))
end
</script>
						<command></command>
						<packageName></packageName>
						<regex>^test avoid$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>ndb</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>parse QWHO</name>
						<script>if not NDB then
	cecho("\nName database not currently loaded.")
else
	parsingQW = true
	peopleOnline = {}
	if matches[2] then
		parsingCity = matches[2]
	end
	sendGMCP("Comm.Channel.Players")
	send(" ")
	NDB_GetOnline()
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^qwp(?: (\w+)|)$</regex>
					</Alias>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>configs</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>highlight toggle</name>
							<script>if NDB.highlightNames then
	--Remove any highlights, and turn off the toggle.
	NDB.highlightNames = false
	NDB_Unhighlight()
	cecho("\nDisabled name highlighting.")
else
	--Begin highlighting again, and enable them all.
	NDB.highlightNames = true
	NDB_loadHighlights()
	cecho("\nEnabled name highlighting.")
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^anhl$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>set colours of orgs</name>
							<script>local cities = {"Ashtan", "Cyrene", "Eleusis", "Hashan", "Mhaldor", "Targossas", "Rogues", "Enemies"}

local city, colour = "", ""

if table.contains(cities, matches[2]:title()) then
	city = matches[2]:title()
	colour = matches[3]
elseif table.contains(cities, matches[3]:title()) then
	city = matches[3]:title()
	colour = matches[2]
else
	cecho("That is not a valid option, please choose from: &lt;green&gt;Ashtan, Cyrene, Eleusis, Enemies, Hashan, Mhaldor, Rogues, or Targossas.")
end

if city ~= "" then
	if table.contains(color_table, colour) then
		cecho(city.." will now be highlighted in &lt;"..colour.."&gt;"..colour..".")
		if city ~= "Enemies" then
			NDB_updateHighlights(city, colour)
		else
			NDB_enemyHighlights()
		end
	else
		cecho("That is not a valid colour to choose from.")
	end
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^anhl (\w+) (\w+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>show settings</name>
							<script>local count = 0
for i,v in pairs(NDB.players) do
	count = count + 1
end

cecho("    Name Database Settings")
echo("\n ")
cecho((NDB.highlightNames and "&lt;green&gt;We are" or "&lt;red&gt;We are not").."&lt;NavajoWhite&gt; currently highlighting names.")
cecho("\n       &lt;NavajoWhite&gt;     Total of &lt;white&gt;"..count.."&lt;NavajoWhite&gt; names!\n\n")

cecho("    Highlight settings:")
for city, colour in pairs(NDB.highlighting) do
	cecho("\n &lt;"..colour.."&gt;"..city.."&lt;white&gt;"..string.rep(" ", 12-string.len(city)).."citizens will be highlighted in &lt;"..colour.."&gt;"..colour..".")
end

cecho("\n ")
cecho("     Enemy settings:")
cecho("\n "..(NDB.highlightPriority == "enemies" and "&lt;green&gt;Prioritising" or "&lt;red&gt;Not prioritising").."&lt;NavajoWhite&gt; highlighting of enemies.")
cecho("\n &lt;LightSkyBlue&gt;Enemies will be highlighted in &lt;"..NDB.highlighting.Enemies.."&gt;"..NDB.highlighting.Enemies..".")
cecho("\n    &lt;LightSkyBlue&gt;-Special-")
cecho("\n  "..(NDB.enemySettings.bold and "&lt;green&gt;" or "&lt;red&gt;")..utf8.char(186).." &lt;NavajoWhite&gt;Bolded letters.")
cecho("\n  "..(NDB.enemySettings.underline and "&lt;green&gt;" or "&lt;red&gt;")..utf8.char(186).." &lt;NavajoWhite&gt;Underlined letters.")
cecho("\n  "..(NDB.enemySettings.italics and "&lt;green&gt;" or "&lt;red&gt;")..utf8.char(186).." &lt;NavajoWhite&gt;Italicized letters.")

send(" ")</script>
							<command></command>
							<packageName></packageName>
							<regex>^anss$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>set highlight prioritiy</name>
							<script>local type, colour = matches[2], matches[3]

if NDB.highlightPriority ~= matches[2] then
	NDB.highlightPriority = matches[2]
	cecho("\nHighlighting will give priority to "..NDB.highlightPriority..".")
	NDB_enemyHighlights()
else
	cecho("\nAlready prioritising highlighting of that.")
end
</script>
							<command></command>
							<packageName></packageName>
							<regex>^an prio (enemies|city)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>toggle options for enemy highlighting</name>
							<script>local x = { i = "italics", b = "bold", u = "underline" }
local opt = x[matches[2]]
if not NDB.enemySettings[opt] then
	NDB.enemySettings[opt] = true
	cecho("\nEnemies &lt;green&gt;will now have &lt;NavajoWhite&gt;"..opt.." applied to it.")
else
	NDB.enemySettings[opt] = false
	cecho("\nEnemies &lt;red&gt;will no longer have &lt;NavajoWhite&gt;"..opt.." applied to it.")
end
NDB_enemyHighlights()</script>
							<command></command>
							<packageName></packageName>
							<regex>^aneh (i|u|b)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>highlight irrespective of NDB</name>
							<script>local name, colour = matches[2]:title(), matches[3]
NDB.special = NDB.special or {}

if not NDB.players[name] then
	cecho("\nThat person is not yet in the database!")
elseif colour == "none" then
	if NDB.special[name] then
		cecho("\nClearing special highlight of "..name.."!")
		NDB.special[name] = nil
		killTrigger(NDB.highlightTriggers[name])
	else
		cecho("\nThat person is already not being highlighted a special colour!")
	end
elseif not color_table[colour] then
	cecho("\nThat is not a valid colour to use!")
else
	NDB.special[name] = colour
	NDB_highlightName(name, "nil")
	cecho("\nWill now highlight "..name.." in &lt;"..colour.."&gt;"..colour..".")
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^highlight (\w+) (.+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>manually install NDB</name>
							<script>NDB_Install()</script>
							<command></command>
							<packageName></packageName>
							<regex>^ndbinstall$</regex>
						</Alias>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>actions</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>honours person</name>
							<script>honoursPerson = matches[2]:title()
enableTrigger("Get Player Information")
enableTrigger("Check Player City")
--enableTrigger("No city found")
NDB_Acquire(matches[2]:title(),false)</script>
							<command></command>
							<packageName></packageName>
							<regex>^honou?rs? (\w+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>display who</name>
							<script>NDB.player_Notes = NDB.player_Notes or {}
cecho("\nGetting information on &lt;green&gt;"..matches[2]:title().."...")

NDB_Acquire(matches[2]:title(),false)
NDB.checking = true
</script>
							<command></command>
							<packageName></packageName>
							<regex>^whois (\w+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>remove unranked/retired</name>
							<script>local remove = {}
local cat, num = matches[2], tonumber(matches[3])

for i,v in pairs(NDB.players) do
	if cat == "rank" then
		if v.xp_rank == nil or v.xp_rank == 0 or v.xp_rank &gt; num then
			table.insert(remove, v.name)
			NDB.players[v.name] = nil
		end
	else
		if not v.level or v.level &lt; num then
			table.insert(remove, v.name)
			NDB.players[v.name] = nil
		end		
	end
end
table.sort(remove)

cecho("\nRemoved a total of &lt;green&gt;"..#remove.."&lt;NavajoWhite&gt; unranked people from the database:\n - "..
	table.concat(remove, ", ")..".")
send(" ")
</script>
							<command></command>
							<packageName></packageName>
							<regex>^an remove (rank|level) (\d+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>re-honours everyone.</name>
							<script>local count = 0
cecho("\nUpdating everyone who's currently in the database.")
for i,v in pairs(NDB.players) do
	count = count + 1
	NDB_Acquire(v.name:title(),false)
end
cecho("\nUpdate complete. Total of "..count.." people have been re-checked.")</script>
							<command></command>
							<packageName></packageName>
							<regex>^an recreate$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>show class count</name>
							<script>local classList = {"Alchemist", "Apostate", "Bard", "Blademaster", "Depthswalker", "Dragon", "Druid", "Infernal", "Jester", "Magi", "Monk", "Occultist",
	"Paladin", "Pariah", "Priest", "Psion", "Runewarden", "Sentinel", "Serpent", "Shaman", "Sylvan",}
local classes = {
	Alchemist = {},
	Apostate = {},
	Bard = {},
	Blademaster = {},
	Depthswalker = {},
	Dragon = {},
	Druid = {},
	Infernal = {},
	Jester = {},
	Magi = {},
	Monk = {},
	Occultist = {},
	Paladin = {},
  Pariah = {},
	Priest = {},
	Psion = {},
	Runewarden = {},
	Sentinel = {},
	Serpent = {},
	Shaman = {},
	Sylvan = {},
}

for player, tab in pairs(NDB.players) do
	if tab.class ~= "" then
		table.insert(classes[tab.class], player)
		if tab.level &gt;= 99 then
		table.insert(classes.Dragon, player)
		end	
	end
end

cecho("Displaying class count of currently tracked players.")
for _, class in ipairs(classList) do
	cecho("\n &lt;DimGrey&gt;[&lt;NavajoWhite&gt;"..class:title().."&lt;DimGrey&gt;]"..string.rep(" ", 13-string.len(class)).."- &lt;NavajoWhite&gt;"..#classes[class].." tracked people are "..class..".")
end
send(" ")</script>
							<command></command>
							<packageName></packageName>
							<regex>^an classes$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>show city count</name>
							<script>
local classList = {"Alchemist", "Apostate", "Bard", "Blademaster", "Depthswalker", "Dragon", "Druid", "Infernal", "Jester", "Magi", "Monk", "Occultist",
	"Paladin", "Pariah", "Priest", "Psion", "Runewarden", "Sentinel", "Serpent", "Shaman", "Sylvan"}
local classes = {
	Alchemist = {},
	Apostate = {},
	Bard = {},
	Blademaster = {},
	Depthswalker = {},
	Dragon = {},
	Druid = {},
	Infernal = {},
	Jester = {},
	Magi = {},
	Monk = {},
	Occultist = {},
	Paladin = {},
  Pariah = {},
	Priest = {},
	Psion = {},
	Runewarden = {},
	Sentinel = {},
	Serpent = {},
	Shaman = {},
	Sylvan = {},
}

for player, tab in pairs(NDB.players) do
	if (( tab.city == matches[2]:title() ) or (tab.city == "None" and matches[2]:title() == "Rogues")) and tab.class ~= "" then
		table.insert(classes[tab.class], player)
		if tab.level &gt;= 99 then
			table.insert(classes.Dragon, player)
		end	
	end
end

cecho("Displaying class count of currently tracked players in &lt;"..NDB.highlighting[matches[2]:title()].."&gt;"..matches[2]:title()..".")
for _, class in ipairs(classList) do
	if #classes[class] &gt; 0 then
		cecho("\n &lt;DimGrey&gt;[&lt;NavajoWhite&gt;"..class:title().."&lt;DimGrey&gt;]"..string.rep(" ", 13-string.len(class)).."- &lt;NavajoWhite&gt;"..#classes[class].." tracked people are "..class..".")
	end
end
send(" ")</script>
							<command></command>
							<packageName></packageName>
							<regex>^an cclasses (\w+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>show player count</name>
							<script>local cities = {
	Ashtan = {},
	Cyrene = {},
	Eleusis = {},
	Hashan = {},
	Mhaldor = {},
	Targossas = {},
	None = {},
}

for player, tab in pairs(NDB.players) do
	if cities[tab.city] then
		table.insert(cities[tab.city], player)
	else
		table.insert(cities.None, player)
	end
end

cecho("Displaying count of currently tracked players in each city.")
for city, tab in pairs(cities) do
	cecho("\n"..city..":"..string.rep(" ", 15-string.len(city))..#cities[city])
end

send(" ")</script>
							<command></command>
							<packageName></packageName>
							<regex>^an citymembers$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>tracked from city</name>
							<script>local cities = {"Ashtan", "Cyrene", "Eleusis", "Hashan", "Mhaldor", "Targossas",}

if not table.contains(cities, matches[2]:title()) and matches[2]:title() ~= "None" then
	cecho("Invalid city. Please choose from either "..table.concat(cities, ", ").." or none.")
else
	local cl = (matches[2]:title() == "None" and NDB.highlighting.Rogues or NDB.highlighting[matches[2]:title()])
	cecho("Displaying tracked people from &lt;"..cl.."&gt;"..matches[2]:title()..":")
	local people = {}
	for i,v in pairs(NDB.players) do
		if v.city == matches[2]:title() then
			table.insert(people, v.name)
		end
	end
	table.sort(people)
	
	cecho("\n  &lt;"..cl.."&gt;"..table.concat(people, ", ")..".")
	cecho("\n &lt;NavajoWhite&gt;Total: &lt;green&gt;"..#people..".")
end

</script>
							<command></command>
							<packageName></packageName>
							<regex>^an show (\w+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>tracked of class</name>
							<script>local classList = {"Alchemist", "Apostate", "Bard", "Blademaster", "Depthswalker", "Dragon", "Druid", "Infernal", "Jester", "Magi", "Monk", "Occultist",
	"Paladin", "Priest", "Psion", "Runewarden", "Sentinel", "Serpent", "Shaman", "Sylvan"}
	
	cecho("Displaying tracked people as "..matches[2].." class:")
	local people = {}
	for i,v in pairs(NDB.players) do
		if v.class == matches[2]:title() then
			table.insert(people, v.name)
		elseif matches[2]:title() == "Classless" then
			if not table.contains(classList, v.class) then
				table.insert(people, v.name)
			end
		end
	end
	table.sort(people)
  cecho("\n ")
  for _, person in pairs(people) do
    cecho("&lt;"..NDB_getColour(person).."&gt;"..person..", ")
  end


</script>
							<command></command>
							<packageName></packageName>
							<regex>^an class (\w+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>grab city allies</name>
							<script>NDB.cityList={}
enableTrigger("city members")
enableTrigger("citizens total")
send("citizens")</script>
							<command></command>
							<packageName></packageName>
							<regex>^check allies$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>grab city enemies</name>
							<script>NDB.cityEnemies={}
enableTrigger("city enemies")
enableTrigger("enemies total")
send("city enemies")</script>
							<command></command>
							<packageName></packageName>
							<regex>^check enemies$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>QWC update</name>
							<script>send("echo -Parsing QWC-"..cmdsep.."qwc",false)</script>
							<command></command>
							<packageName></packageName>
							<regex>^qwc$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>re-honours from specific cities</name>
							<script>local count = 0
cecho("Re-checking everyone matching the '"..matches[2].."' city.")
for i,v in pairs(NDB.players) do
  if v.city:lower() == matches[2]:lower() then
	 NDB_Acquire(v.name:title(),false)
   count = count + 1
  end
end
cecho("Update complete. Total of "..count.." people have been re-checked.")</script>
							<command></command>
							<packageName></packageName>
							<regex>^an redo (\w+)$</regex>
						</Alias>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>notes</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>add note</name>
								<script>NDB.player_Notes = NDB.player_Notes or {}
local player, note = matches[2]:title(), matches[3]
if not NDB_Exists(player) then
  cecho("\nThat player isn't currently in the database.")
  return
end

NDB.player_Notes[player] = NDB.player_Notes[player] or {}
table.insert(NDB.player_Notes[player], #NDB.player_Notes[player]+1, note)
cecho("\nAdded note to "..player..":")
cecho("\n "..note)</script>
								<command></command>
								<packageName></packageName>
								<regex>^an noteadd (\w+) (.+)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>remove note</name>
								<script>NDB.player_Notes = NDB.player_Notes or {}
local player, note = matches[2]:title(), tonumber(matches[3])
if not NDB_Exists(player) then
  cecho("\nThat player isn't currently in the database.")
  return
end

if not NDB.player_Notes[player] or #NDB.player_Notes[player] == 0 then
  cecho("\nThat player currently has no notes.")
  return
end

if NDB.player_Notes[player][note] then
  table.remove(NDB.player_Notes[player], note)
  cecho("\nRemoved note from "..player.." with id of "..note..".")
else
  cecho("\nThere is no note for "..player.." with id of "..note..".")
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^an noteremove (\w+) (\d+)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>show notes</name>
								<script>NDB.player_Notes = NDB.player_Notes or {}
local player = matches[2]:title()
if not NDB_Exists(player) then
  cecho("\n&lt;red&gt;That player isn't currently in the database.")
  return
end

if not NDB.player_Notes[player] or #NDB.player_Notes[player] == 0 then
  cecho("\n&lt;DarkSlateGray&gt;That player currently has no notes.")
  return
end

cecho("\nShowing notes for "..player..":")
for num, note in pairs(NDB.player_Notes[player]) do
  cecho("\n&lt;DarkSlateBlue&gt;"..num..") &lt;reset&gt;"..note)
end
cecho("\n ")</script>
								<command></command>
								<packageName></packageName>
								<regex>^an noteshow (\w+)$</regex>
							</Alias>
						</AliasGroup>
					</AliasGroup>
					<Alias isActive="yes" isFolder="no">
						<name>who groups</name>
						<script>whogroups = {}
enableTrigger("Who Grouping")
send("echo -Parsing Who List: "..cmdsep.."who b",false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^qwhom$</regex>
					</Alias>
					<Alias isActive="no" isFolder="no">
						<name>Lust List</name>
						<script>local option = matches[2]:title()
table.sort(lustlist)
if option ~= "List" and NDB_Exists(option) then
	if table.contains(lustlist, option) then
		for n, p in pairs(lustlist) do
			if p == option then
				table.remove(lustlist, n)
				cecho("Removed "..option.." from whitelist for lust.")
			end
		end
	else
		table.insert(lustlist, option)
		cecho("Added "..option.." to whitelist for lust.")
	end
elseif option == "List" then
	cecho("Current whitelisted people are:")
	cecho("\n  &lt;a_darkcyan&gt;"..table.concat(lustlist, ", ")..".")
else
	cecho("That person doesn't exist. Honours them if this is wrong.")
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^lustallow (\w+)$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>curing</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>hh</name>
						<script>if priority == "health" then
	priority = "mana"
  send("curing priority mana")
	cecho("\n&lt;cyan&gt;Swapped to mana priority.")
else 
	priority = "health"
  send("curing priority health")
	cecho("\n&lt;green&gt;Swapped to health priority.")
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^hh$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>full sip</name>
						<script>sipbalance = true
fullsipping = true
--vitals()</script>
						<command></command>
						<packageName></packageName>
						<regex>^fl$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>precache</name>
						<script>precacheCheck()</script>
						<command></command>
						<packageName></packageName>
						<regex>^prc$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>meditate</name>
						<script>if not(meditating) then
  meditating = true
  fullwillandmana = false
  send("queue addclear eqbal meditate")
else
  meditating=false
  fullwillandmana = true
  send("curing insomnia on")
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^(meditate|med)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>sleep</name>
						<script>send("curing prio def insomnia reset"..cmdsep.."relax insomnia")
send("queue addclear eqbal sleep")


</script>
						<command></command>
						<packageName></packageName>
						<regex>^sleep$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>set affl prios</name>
						<script>if not curingset == "default" then
  curingset = "default"
  send("curingset new default")
  send("curingset switch default")
  remedy:setAfflictionPriorities()
end
</script>
						<command></command>
						<packageName></packageName>
						<regex>^set aff prios$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>set class</name>
						<script>set_class(matches[2]:lower())</script>
						<command></command>
						<packageName></packageName>
						<regex>^set class (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>reset aff prios</name>
						<script>-- Call the function with the command you provided
remedy:setAfflictionPriorities()</script>
						<command></command>
						<packageName></packageName>
						<regex>^reset aff prios$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>moss (toggle)</name>
						<script>useMossToggle()
</script>
						<command></command>
						<packageName></packageName>
						<regex>^mss$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>set curing prios</name>
						<script>if matches[2] == "class" then
  matches[2] = activeCureData[myclass():lower()].type
end

curativePriorityList(matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^set (herb|salve|smoke|sip)$</regex>
					</Alias>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>pipes</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>refill pipes at</name>
							<script>pipes.refill=matches[2]</script>
							<command></command>
							<packageName></packageName>
							<regex>^refillpipesat (\d+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>empty pipes (cmd)</name>
							<script>empty_pipes()</script>
							<command></command>
							<packageName></packageName>
							<regex>^empty pipes$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>gag pipes</name>
							<script>if matches[2] == nil and gag_pipes then
	gag_pipes=false
	cecho("\n&lt;green&gt;not gagging pipes")
elseif matches[2] == "off" then
	gag_pipes=false
	cecho("\n&lt;green&gt;Ok, not gagging pipes")
else
	gag_pipes=true
	cecho("\n&lt;green&gt;Ok, gagging pipes")
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^gagpipes\s?(on|off)?$</regex>
						</Alias>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>quick set prios</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>quick set eat prios</name>
							<script>local herblist = { 
    ["bloodroot"]   = {"paralysis", "slickness", "pyramides"},
    ["kelp"]        = {"asthma", "clumsiness", "hypochondria", "sensitivity", "weariness", "healthleech", "parasite", "rebbies"},
    ["ginseng"]     = {"unweavingbody", "addiction", "darkshade", "haemophilia", "lethargy", "nausea", "scytherus", "flushings"},
    ["goldenseal"]  = {"fulminated","unweavingmind", "dizziness", "epilepsy", "impatience", "shyness", "stupidity", "depression", "dissonance", "shadowmadness", "mycalium", "sandfever", "horror"},
    ["lobelia"]     = {"agoraphobia", "guilt", "spiritburn", "tenderskin", "claustrophobia", "loneliness", "masochism", "recklessness", "whisperingmadness","vertigo"},
    ["ash"]         = {"confusion", "dementia", "hallucinations", "hypersomnia", "paranoia"},
    ["bellwort"]    = {"pyre", "retribution", "timeloop", "peace", "justice", "lovers", "pacified", "generosity", "indifference"},
    ["ginger"]      = {"temperedcholeric", "temperedmelancholic", "temperedphlegmatic", "temperedsanguine"},
    ["pear"]        = {"pressure"}
}

-- Iterate through each herb and print its afflictions
for herb, afflictionList in pairs(herblist) do
    --echo("Herb: " .. herb)
    for _, affliction in ipairs(afflictionList) do
       -- echo("  Affliction: " .. affliction)

        -- Set priorities based on the herb
        if affliction == "impatience" or affliction == "whisperingmadness" then
            afflictions[affliction].priority = 6 
        else 
            if herb == "bloodroot" then
                afflictions[affliction].priority = 7 
            elseif herb == "kelp" then
                afflictions[affliction].priority = 8
            elseif herb == "ginseng" then
                afflictions[affliction].priority = 9
            elseif herb == "goldenseal" then
                afflictions[affliction].priority = 10
            elseif herb == "lobelia" then
                afflictions[affliction].priority = 11
            elseif herb == "ash" then
                afflictions[affliction].priority = 12
            elseif herb == "bellwort" then
                afflictions[affliction].priority = 13
            elseif herb == "ginger" then
                afflictions[affliction].priority = 14
            elseif herb == "pear" then
                afflictions[affliction].priority = 15
            end
        end
         --if serverside then
            --send("curing prio "..affliction.." "..afflictions[affliction].priority)
         --end
    end
end


-- To save or create the file:
local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
local filename = myclass() .. "prios.lua"
local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"
ensureFileExists(tablesDir, filename, "save", afflictions)
</script>
							<command></command>
							<packageName></packageName>
							<regex>^qset herb$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>quick set apply</name>
							<script>afflictions.heartseed.priority = 6
afflictions.tonguetied.priority = 6
afflictions.frostbite.priority = 6
afflictions.anorexia.priority = 7
afflictions.itching.priority = 8
afflictions.freezing.priority = 8
afflictions.frozen.priority = 9
afflictions.scalded.priority = 9
afflictions.mangledhead.priority = 10 
afflictions.calcifiedskull.priority = 10
afflictions.laceratedthroat.priority = 10
afflictions.mangledleftleg.priority = 11
afflictions.mangledrightleg.priority = 11
afflictions.mangledleftarm.priority = 12
afflictions.mangledrightarm.priority = 12
afflictions.serioustrauma.priority = 13
afflictions.concussion.priority = 14
afflictions.damagedhead.priority = 14
afflictions.slashedthroat.priority = 14 
afflictions.shivering.priority = 14
afflictions.damagedleftleg.priority = 15
afflictions.damagedrightleg.priority = 15
afflictions.damagedleftarm.priority = 16
afflictions.damagedrightarm.priority = 16
afflictions.dazzled.priority = 17
afflictions.crushedthroat.priority = 17
afflictions.mildtrauma.priority = 17 
afflictions.calcifiedtorso.priority = 17
afflictions.brokenleftleg.priority = 18
afflictions.brokenrightleg.priority = 18
afflictions.brokenleftarm.priority = 19
afflictions.brokenrightarm.priority = 19
afflictions.burning.priority = 20
afflictions.ablaze.priority = 20
afflictions.selarnia.priority = 20
afflictions.stuttering.priority = 21
afflictions.grievouswounds.priority = 21
afflictions.hypothermia.priority = 21


-- To save or create the file:
local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
local filename = myclass() .. "prios.lua"
local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"
ensureFileExists(tablesDir, filename, "save", afflictions)</script>
							<command></command>
							<packageName></packageName>
							<regex>^qset salve$</regex>
						</Alias>
					</AliasGroup>
					<AliasGroup isActive="no" isFolder="yes">
						<name>Lust</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>Whitelist add/remove</name>
							<script>--Adds/Removes people whom you will not reject lust from
--Tremove is just a shortened version of table.remove 
Legacy.Curing.Lust = Legacy.Curing.Lust or {}
Legacy.Curing.Lust.whiteList = Legacy.Curing.Lust.whiteList or {}

if matches[2] == nil then
  if table.size(Legacy.Curing.Lust.whiteList) == 0 then
    Legacy.echo("You have no names or cities in your Lust Whitelist.")
  else
    cecho("\n&lt;white&gt;Lust Whitelist:")
    for k,v in pairs(Legacy.Curing.Lust.whiteList) do
      if table.contains(Legacy.Settings.NDB.cityList, v) then
        local color = Legacy.Settings.NDB.Config[v:lower()].color
        cecho("\n&lt;DimGrey&gt;-- &lt;"..color.."&gt;The City of "..v)
      else
        local color = Legacy.Settings.NDB.Config[Legacy.NDB.db[v].city:lower()].color
        cecho("\n&lt;DimGrey&gt;-- &lt;"..color.."&gt;"..v)
      end
    end
  end
elseif matches[3] == nil and matches[2] == "clear" then
  Legacy.Curing.Lust.whiteList = {}
  Legacy.echo("&lt;red&gt;&lt;b&gt;You have cleared your Lust Whitelist.")
elseif matches[3] ~= nil then
local person = matches[3]:title()

  if Legacy.NDB.db[person] then
    local color = Legacy.Settings.NDB.Config[Legacy.NDB.db[person].city:lower()].color
    Legacy.NDB.lookup(person)
    if matches[2] == "add" then
      Legacy.echo("&lt;green&gt;&lt;b&gt;Added "..("&lt;"..color.."&gt;" or "&lt;white&gt;")..person:title().." &lt;DimGrey&gt;(&lt;gold&gt;"..Legacy.NDB.db[person].city.."&lt;DimGrey&gt;) &lt;green&gt;to your Lust Whitelist.")
      table.insert(Legacy.Curing.Lust.whiteList, person)
    elseif matches[2] == "remove" then
      Legacy.echo("&lt;red&gt;&lt;b&gt;Removed "..("&lt;"..color.."&gt;" or "&lt;white&gt;")..person:title().." &lt;DimGrey&gt;(&lt;gold&gt;"..Legacy.NDB.db[person].city.."&lt;DimGrey&gt;) &lt;red&gt;from your Lust Whitelist.")
      table.bremove(Legacy.Curing.Lust.whiteList, person)
    end
elseif table.contains(NDB.cityList, person) then
    local color = NDB.Config[person:lower()].color
    if matches[2] == "add" then
      Legacy.echo("&lt;green&gt;&lt;b&gt;Added "..("&lt;"..color.."&gt;" or "&lt;white&gt;").."the City of "..person:title().." &lt;green&gt;to your Lust Whitelist.")
      table.insert(Legacy.Curing.Lust.whiteList, person)
    elseif matches[2] == "remove" then
      Legacy.echo("&lt;red&gt;&lt;b&gt;Removed "..("&lt;"..color.."&gt;" or "&lt;white&gt;").."the City of "..person:title().." &lt;red&gt;from your Lust Whitelist.")
      table.bremove(Legacy.Curing.Lust.whiteList, person)
    end
  end
 end</script>
							<command></command>
							<packageName></packageName>
							<regex>^lustlist\s?(add|remove|clear)?\s?((\w+)|\(none\))?$</regex>
						</Alias>
					</AliasGroup>
					<Alias isActive="yes" isFolder="no">
						<name>check limbs</name>
						<script>cecho("\n&lt;white&gt;|&lt;yellow&gt;H:&lt;white&gt;"..hitcount["head"].."|&lt;yellow&gt;T:&lt;white&gt;"..hitcount["torso"].."|&lt;yellow&gt;LL:&lt;white&gt;"..hitcount["left leg"].."|&lt;yellow&gt;RL:&lt;white&gt;"..hitcount["right leg"].."|&lt;yellow&gt;LA:&lt;white&gt;"..hitcount["left arm"].."|&lt;yellow&gt;RA:&lt;white&gt;"..hitcount["right arm"].."|")</script>
						<command></command>
						<packageName></packageName>
						<regex>^c$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>reset limbs</name>
						<script>resetLimbs()</script>
						<command></command>
						<packageName></packageName>
						<regex>^rsl$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>defences</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>show def list</name>
						<script>displayDefenses(matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^show (defups|keepups)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>toggle selfishness</name>
						<script>if defenses.selfishness.keepup then
   defenses.selfishness.keepup = false
   send("generosity")
else
   defenses.selfishness.keepup = true
   send("selfishness")
end
  </script>
						<command></command>
						<packageName></packageName>
						<regex>^sl$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>relax</name>
						<script>defupmode = false
fortify:relax()</script>
						<command></command>
						<packageName></packageName>
						<regex>^rlx$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>defup</name>
						<script>if not(defupmode) then
  send("queue addclear eqbal def")
  defupmode=true
else
  defupmode = false
end

cecho("\nDefenses have been: "..(defupmode and "&lt;green&gt;enabled." or "&lt;red&gt;disabled."))  </script>
						<command></command>
						<packageName></packageName>
						<regex>^defup$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>def list</name>
						<script>pipeline.defenses={}

if parrymethod ~= "manual" then 
  send("queue add eqbal " .. checkForParry())
end

send("queue add eqbal def")</script>
						<command></command>
						<packageName></packageName>
						<regex>^def$</regex>
					</Alias>
					<AliasGroup isActive="no" isFolder="yes">
						<name>disabled</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="no" isFolder="no">
							<name>defdown</name>
							<script>clearDefencesWithRelax()
clearDefensesWithPriority()
processDefenceQueue()</script>
							<command></command>
							<packageName></packageName>
							<regex>^defdown$</regex>
						</Alias>
						<Alias isActive="no" isFolder="no">
							<name>keepups</name>
							<script>createKeepupsWithPriority()
processDefenceQueue()</script>
							<command></command>
							<packageName></packageName>
							<regex>^keepup$</regex>
						</Alias>
						<Alias isActive="no" isFolder="no">
							<name>defups</name>
							<script>createDefupsWithPriority()
processDefenceQueue()</script>
							<command></command>
							<packageName></packageName>
							<regex>^defup$</regex>
						</Alias>
					</AliasGroup>
					<Alias isActive="yes" isFolder="no">
						<name>parry method</name>
						<script>local x = matches[2]
local methods = {"stand","defend","manual"}

if x == "none" then
    cecho("\n&lt;red&gt;DISABLED PARRY HANDLING.")
    send("queue addclear eqbal parry nothing")
    useparry = false
elseif not table.contains(methods, x) then
    cecho("\n&lt;yellow&gt;Options are manual, stand, or defend.")
    cecho("\n&lt;white&gt;STAND:             &lt;green&gt;Focus on parrying what will get/keep you standing.")
    cecho("\n&lt;white&gt;DEFEND:            &lt;green&gt;Focus on parrying what's closest to breaking, with weights.")
    cecho("\n&lt;white&gt;MANUAL:            &lt;green&gt;Manually set your parrying.")   
else
    useparry = true
    parrymethod = x
    cecho("\n&lt;white&gt;PARRY METHOD: &lt;yellow&gt;"..parrymethod:upper().."")
end
</script>
						<command></command>
						<packageName></packageName>
						<regex>^pm (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>manually parry</name>
						<script>local limbs = {
    h = "head",
    tt = "torso",
    rl = "right leg",
    ll = "left leg",
    ra = "right arm",
    la = "left arm",
    c = "center",
    l = "left",
    r = "right"
}

-- Check and set the parrying method to manual if not already
if parrymethod ~= "manual" then
    parrymethod = "manual"
    cecho("Parrying method changed to manual.")
end

-- Determine the parry type based on the class
local parry_type = ""
if myclass() == "dragon" then
    parry_type = "clawparry "
elseif myclass() == "bard" then
    parry_type = "trueparry "
elseif myclass() == "monk" then
    parry_type = "guard "
else
    parry_type = "parry "
end

-- Send the parry command with the appropriate limb
send(parry_type .. limbs[matches[2]], false)
</script>
						<command></command>
						<packageName></packageName>
						<regex>^p(h|tt|rl|ll|la|ra|c|l|r)$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>raiding</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>ally room</name>
						<script>
for i = 1, #gmcp.Room.Players, 1 do

if not(gmcp.Room.Players[i].name == gmcp.Char.Status.name) and table.contains(NDB.cityList,gmcp.Room.Players[i].name)  then
		if not(table.contains(allylist,gmcp.Room.Players[i].name)) then
      send("ally "..gmcp.Room.Players[i].name)
    end
end



if not(gmcp.Room.Players[i].name == gmcp.Char.Status.name) 
  and not(table.contains(NDB.cityList,gmcp.Room.Players[i].name)) 
  and ((gmcp.Room.Players[i].name==target) or table.contains(NBD.cityEnemies, gmcp.Room.Players[i].name)) then
	if not(table.contains(enemylist,gmcp.Room.Players[i].name)) then
		send("enemy "..gmcp.Room.Players[i].name)
	end
end



end
</script>
						<command></command>
						<packageName></packageName>
						<regex>^al$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>report when</name>
						<script>tracereportwhen=tonumber(matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^reportwhen (\d+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>raid (.*)</name>
						<script>

cyclepointer = cyclepointer or 0

arguments = string.split(matches[2], " ")
if arguments[1] == "on" then
  send("curing prio def density 25"..cmdsep.."curing prio def metawake 25"..cmdsep.."curing prio def rebounding 25"..cmdsep.."curing prio def heldbreath 25"..cmdsep.."curing prio def pacing 25")
end

if arguments[1] == "off" then
  send("curing prio def density reset"..cmdsep.."curing prio def metawake reset"..cmdsep.."curing prio def rebounding reset"..cmdsep.."curing prio def heldbreath reset"..cmdsep.."curing prio def pacing reset"..cmdsep.."release"..cmdsep.."relax metawake"..cmdsep.."relax pacing")
end

if matches[2] == "clear" then

raidleader = ""
cyclepointer = 0
cecho("&lt;navy_blue:coral&gt;raid stuff cleared")

end
if arguments[1] == "set" then

target = arguments[2]
--if partytells then 
if raidleader == gmcp.Char.Name.name then 
--send("pt targeting "..string.title(arguments[2])) 
end
end

--end

if matches[2] == "lead set" then

raidleader = gmcp.Char.Name.name

send("pt I am the leader.")

end

if arguments[1] == "add" then
send("enemy "..arguments[2])

table.insert(enemylist, string.title(arguments[2]))

send("pt targets: "..table.concat(enemylist, " "))


end

if arguments[1] == "cycle" then


cyclepointer = cyclepointer + 1

if cyclepointer &gt; #enemylist then
cyclepointer = 1


end


expandAlias("t "..enemylist[cyclepointer])



end


if arguments[1] == "remove" then
arguments[2] = string.title(arguments[2])
send("unenemy "..arguments[2])

--table.remove(enemylist, table.index_of(enemylist, arguments[2]))
removeElement(enemylist, arguments[2])

send("pt targets: "..table.concat(enemylist, " "))


end

if matches[2] == "leader" then

send("pt Who is the leader?")

end

if arguments[1] == "appoint" then
--send("pt i transfer lead to "..string.title(arguments[2]))
tempraidleader = string.title(arguments[2])
raidleader = string.title(arguments[2])


end

if arguments[1] == "accept" then

--send("pt i accept")
if  gmcp.Char.Name.name == tempraidleader then
raidleader = tempraidleader



end

end

if arguments[1] == "list" then

send("pt targets: "..table.concat(enemylist, ", "))

	if gmcp.Char.Name.name == raidleader then
		if arguments[2] then
			enemylist = {}

			for i = 2, #arguments, 1 do
				table.insert(enemylist, string.title(arguments[i]))
			end
	end
	
for i in pairs(enemylist) do

send("enemy "..enemylist[i])


end



else

--send("pt who are the targets?")

end




end

if arguments[1] == "autotarget" then

if arguments[2] then

if arguments[2] == "on" then
autotarget = true

else

autotarget = false



end

end

if autotarget then

cecho("&lt;navy_blue:coral&gt;autotarget is on")
else

cecho("&lt;navy_blue:coral&gt;autotarget is off")



end

end

if matches[2] == "help" then

cecho("\nCommands for leading")
cecho("\n********************")
cecho("\nraid lead set: set yourself as the raid leader")
cecho("\nraid list &lt;arguments&gt;: when the raid leader, set the raid targets (raid list proficy kiet ashmond")
cecho("\nraid add &lt;person&gt;: Add an anemy to the target list")
cecho("\nraid remove &lt;person&gt;: remove an enemy from the target list")
cecho("\nraid cycle: selects the next person in the target list")
cecho("\nraid appoint &lt;person&gt;: appoint someone else as the raid leader -- raid accept to accept this")
cecho("\n")
cecho("\n")
cecho("\nCommands for following")
cecho("\n**********************")
cecho("\nraid clear: clear the raid leader and target list")
cecho("\nraid list: request a target list")
cecho("\nraid leader:see who the raid leader is")
cecho("\nraid autotarget on/off: target the next target called automatically")

cecho("\n")
cecho("\n")


end

if matches[2]=="targets" then

	reportEnemies()
	
end

function reportEnemies()
-- 	send("pt Enemies: "..table.concat(enemylist, ", ").. " ("..#enemylist..")") 
	if table.is_empty(enemylist) then
		echo("\nNo Enemies")
	else
		send("pt Enemies: "..table.concat(enemylist, ", ")) 
	end
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^raid (.*)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>enan</name>
						<script>if not table.is_empty(enemylist) then
  send("pt Enemies: "..table.concat(enemylist, ", ")) 
end

</script>
						<command></command>
						<packageName></packageName>
						<regex>^enan$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>block</name>
						<script>send("queue prepend eqbal block " .. matches[2])
</script>
						<command></command>
						<packageName></packageName>
						<regex>^b (:?+(\w+))?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>unblock</name>
						<script>send("queue prepend eqbal unblock")
</script>
						<command></command>
						<packageName></packageName>
						<regex>^ub$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>raidleader</name>
						<script>raidleader=matches[2]:title()
--expandAlias("raid autotarget on")</script>
						<command></command>
						<packageName></packageName>
						<regex>^raid leader (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>pton</name>
						<script>if partytells then

partytells = false

cecho("&lt;yellow&gt;Partycalling off!")
send("ptoff")


else

cecho("&lt;yellow&gt;Partycalling on")


partytells = true
send("pton")

end</script>
						<command></command>
						<packageName></packageName>
						<regex>^ptc$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>pike</name>
						<script>send("queue add eqbal wield fang"..cmdsep.."drop body"..cmdsep.."decapitate body"..cmdsep.."pike head") 

	
</script>
						<command></command>
						<packageName></packageName>
						<regex>^pike$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>plant tumbleweed</name>
						<script>send("plant tumbleweed")</script>
						<command></command>
						<packageName></packageName>
						<regex>^plt$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>brazier</name>
						<script>if failsafe then
  requestbrazier = true
else
  if table.contains(myaffs, "retardation") then
  	send ("touch brazier " ..target)
  else
  	send("clearqueue eqbal")
    send ("queue addclear eqbal stand")
  	send ("queue addclear eqbal touch brazier " ..target)
  end
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^bra$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>drop monolith</name>
						<script>send("unwield right"..cmdsep.."wield monolith"..cmdsep.."attach flame to monolith"..cmdsep.."drop monolith")</script>
						<command></command>
						<packageName></packageName>
						<regex>^mono$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>infiltrate</name>
						<script>if matches[2]=="eleusis" then
  send("phase"..cmdsep.."goto 41457")
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^infiltrate (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>duanthara regroup</name>
						<script>failsafe = false
hunting = false
autohunting = false
expandAlias("mconfig duanathar on")
send("wear wings")
send("put coins in pack")
send("whisper *Atavian Duanathar")

		if myclass() == "dragon" then
			send("veilglance " ..raidleader)
		else
			send("farsee " ..raidleader)
		end

  if not mmp.pdb[raidleader] then 
		mmp.echo("Sorry - don't know where "..raidleader.." is.") 
			return 
  end

  local nums = mmp.getnums(mmp.pdb[raidleader], true)

		mmp.gotoRoom(nums[1])
 		mmp.echo(string.format("Going to %s in %s%s.", raidleader, mmp.cleanAreaName(mmp.areatabler[getRoomArea(nums[1])] or '?'), (#nums ~= 1 and " (non-unique location though)" or "")))

	if not matches[2] then
  		if not target then
   			mmp.echo("I don't know what your party leader is (set the 'raidleader' variable)") return
  		else
    		goto(raidleader)
  		end
	else
  		goto(matches[2])
	end
</script>
						<command></command>
						<packageName></packageName>
						<regex>^sg$</regex>
					</Alias>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>guards</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>highlight (toggle)</name>
							<script>if not highlightGuards then
	highlightGuards = true
	listGuards = false
	cecho("&lt;DarkSlateGrey&gt;(&lt;green&gt;+&lt;DarkSlateGrey&gt;) &lt;green&gt;Guards") 
else
	highlightGuards = false 
	cecho("&lt;DarkSlateGrey&gt;(&lt;red&gt;+&lt;DarkSlateGrey&gt;) &lt;red&gt;Guards")
end 
</script>
							<command></command>
							<packageName></packageName>
							<regex>^hg$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>list  (toggle)</name>
							<script>if not listGuards then
	listGuards = true
	highlightGuards = false
	cecho("&lt;DarkSlateGrey&gt;(&lt;green&gt;+&lt;DarkSlateGrey&gt;) &lt;green&gt;List Guards") 
else
	listGuards = false 
	cecho("&lt;DarkSlateGrey&gt;(&lt;red&gt;+&lt;DarkSlateGrey&gt;) &lt;red&gt;List Guards")
end 
</script>
							<command></command>
							<packageName></packageName>
							<regex>^lg$</regex>
						</Alias>
					</AliasGroup>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>hunting</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>create route data</name>
						<script>--[[commands]]
--route new &lt;route&gt; -- create a new route name.
--route save &lt;route&gt; -- save route after finished creating.
--route list -- list known routes.
--route pause --used to pause route recording if necessary.
--route go --used to restart route recording if paused during recording.
--route filesave  -- is done automatically by system.
--route fileload -- is done automatically by system.

--to create a new route
  --1) route new &lt;name&gt;
  --2) use numpad to move through rooms to create the route
  --3) route save &lt;name&gt; (at the end of the route)
  

arguments = string.split(matches[2], " ") -- r new ml1

if arguments[1] == "new" then
  currentpath = {}
  recordmode = true
  routedb[arguments[2]] = {}
  huntingpointer = 1
  cecho("\n&lt;green&gt;route created")
end

if arguments[1] == "save" and arguments[2] then  --r save ml1
  routedb[arguments[2]] = currentpath
  
      -- Define the base directory for the C: drive
    local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
    local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"
    
    -- Save `cityenemylist.lua` in `C:/Users/YourUsername/Documents/Achaean System/Tables/`
    ensureFileExists(tablesDir, "huntroutes.lua", "save", routedb)

  
  recordmode = false
  currentpath={}
  cecho("\n&lt;green&gt;route saved")
end

if arguments[1] == "list" then
  cecho("\n&lt;green&gt;Known Routes&lt;white&gt;:\n")
  for k,v in pairs(routedb) do cecho("&lt;white&gt;"..k.."\n") end
end

if arguments[1] == "pause" then
  recordmode = false
end

if arguments[1] == "go" then
  recordmode = true
end


if arguments[1] == "filesave" then
      -- Define the base directory for the C: drive
    local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
    local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"
    
    -- Save `cityenemylist.lua` in `C:/Users/YourUsername/Documents/Achaean System/Tables/`
    ensureFileExists(tablesDir, "huntroutes.lua", "save", routedb)
    
    cecho("\n&lt;green&gt;hunting data saved")
end

if arguments[1] == "fileload" then
      -- Define the base directory for the C: drive
    local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
    local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"
    
    -- Save `cityenemylist.lua` in `C:/Users/YourUsername/Documents/Achaean System/Tables/`
    ensureFileExists(tablesDir, "huntroutes.lua", "load", routedb)
    
    cecho("\n&lt;green&gt;hunting data loaded")
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^route (.*)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>hunt configuration</name>
						<script>--[[commands]]
--hunt configure
--hunt start or go
--hunt stop
--hunt location or route  -- used to set the desired route  i.e. hunt route manara1
--hunt step -- used for auto hunting or can be done manually if not auto hunting.
--hunt target -- not really used, but could be used to record current target for party hunting. 
--hunt flee -- not set up yet.
--hunt attack


arguments = string.split(matches[2], " ")

if matches[2] == "configure" then

--if not targetMasterList then 
  setTargetMasterList()
--end

setHuntSettingsData()

end


if arguments[1] == "ignore" and arguments[2] then

-- toggle area ignore
toggleIgnoreArea(arguments[2]:title())

end


if matches[2] == "start" or matches[2] == "go" then

hunting = true


end


if matches[2] == "stop" then

if requestmoss==0 then
  moss_toggle()
end

send("clearqueue eqbal")
--send("curing prio def curseward reset")

hunting = false

end



if arguments[1] == "location" or arguments[1] == "route" then

if routedb[arguments[2]] then

selectedroute = arguments[2]

huntingpointer = 1

  if table.contains(routedb, selectedroute) then  
    myEcho("green", "Route " ..selectedroute .. " set.")    
  else  
    myEcho("red","Route " ..selectedroute .. " invalid route.")
    expandAlias("route list")
  end

end

end

if matches[2] == "step" then
fleemode = false
roomclaimed = false
justmoved = routedb[selectedroute][huntingpointer]
if not(requestedhuntstep) then
  requestedhuntstep = true
   tempTimer(.5, [[
     combinedMove(routedb[selectedroute][huntingpointer][1] or routedb[selectedroute][huntingpointer])
    requestedhuntstep = false
  ]])
end

end


if arguments[1] == "target" then

huntrecordtarget = arguments[2]

cecho("\n&lt;green&gt;hunting target set to "..huntrecordtarget)


end


if matches[2] == "flee" then

fleemode = true

  fleetable = {
    n = "s", ne = "sw", e = "w", se = "nw",
    s = "n", sw = "ne", w = "e", nw = "se",
    u = "d", d = "u", out = "in"
  }
  
  fleetable["in"] = "out"

  if routedb[selectedroute][huntingpointer - 1][1] then
    fleedir = fleetable[routedb[selectedroute][huntingpointer - 1][1]]
  else
    fleedir = fleetable[routedb[selectedroute][huntingpointer - 1]]
  end

  combinedMove(fleedir)
  
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^hunt (.*)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>hunt priorities</name>
						<script>--print denizen list prios, while in the area.
printDenizenPriorityList()</script>
						<command></command>
						<packageName></packageName>
						<regex>^hunt prios$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>area known list</name>
						<script>--print currently known areas
printAreaHuntList()</script>
						<command></command>
						<packageName></packageName>
						<regex>^area hunt list$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>hunt regular attack</name>
						<script>--example: hunt regular attack wield lash shield"..cmdsep.."garrote @tar
setHuntSettings("regular attack", matches[2])





</script>
						<command></command>
						<packageName></packageName>
						<regex>^hunt regular attack (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>hunt regular shield break</name>
						<script>--example: hunt regular shield break wield lash shield"..cmdsep.."garrote @tar
setHuntSettings("regular shield break", matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^hunt regular shield break (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>hunt rage shield</name>
						<script>--example: hunt rage shield (yes/no)
setHuntSettings("rage shield break", matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^hunt rage shield break (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>hunt toggle</name>
						<script>huntToggle()</script>
						<command></command>
						<packageName></packageName>
						<regex>^ht$</regex>
					</Alias>
					<Alias isActive="no" isFolder="no">
						<name>auto hunt toggle</name>
						<script>autoHuntToggle()</script>
						<command></command>
						<packageName></packageName>
						<regex>^aht$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>MEROPIS</name>
						<script>send("clearqueue all"..cmdsep.."legenddeck draw agith'maal")</script>
						<command></command>
						<packageName></packageName>
						<regex>^mer$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>inventory</name>
					<script></script>
					<command></command>
					<packageName>GMCP_Inventory</packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>reset</name>
						<script>resetFormat()
sendGMCP("Char.Items.Inv")
gagInventory=true
send(matches[1])  



</script>
						<command></command>
						<packageName></packageName>
						<regex>^inv reset$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>more</name>
						<script>if not inventory then inventory = {} end
if inventory.pager and table.size(inventory.pager) &gt; 0 then
  display_inventory({[1] = '', [2] = '', [3] = inventory.pager['match3'] })
else 
 inventory.pager = nil
 inventory.page_command = nil
 inventory.lrange = nil
 send('more',false)
end
</script>
						<command></command>
						<packageName></packageName>
						<regex>^more$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>inv</name>
						<script>display_inventory(matches[1])

</script>
						<command></command>
						<packageName></packageName>
						<regex>^i$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>get gold</name>
						<script>getGold()</script>
						<command></command>
						<packageName></packageName>
						<regex>^ggold$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>store gold</name>
						<script>storeGold()</script>
						<command></command>
						<packageName></packageName>
						<regex>^sgold$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>utility</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>inr all</name>
						<script>send("inr all")</script>
						<command></command>
						<packageName></packageName>
						<regex>^inra$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>offer corpses</name>
						<script>send("queue addclear eqbal generosity")
send("queue addclear eq offer corpses")</script>
						<command></command>
						<packageName></packageName>
						<regex>^oc$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>buy item</name>
						<script>send("get gold from pack"..cmdsep.."buy " .. matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^buy (.*)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>open url</name>
						<script>if matches[2] == "google" then
  local url = "http://www.google.com/"
  openUrl(url)
elseif matches[2] == "achaea" then
  local url = "http://www.achaea.com/"
  openUrl(url)
elseif matches[2] == "gmail" then
  local url = "http://www.gmail.com/"
  openUrl(url)
elseif matches[2] == "regex" then
  local url = "http://regexpal.com/"
  openUrl(url)
elseif matches[2] == "mudletwiki" then
  local url = "http://wiki.mudlet.org/"
  openUrl(url)
elseif matches[2] == "pastebin" then
  local url = "http://pastebin.com/"
  openUrl(url)
elseif matches[2] == "pb" then
  local url = "https://pasteboard.co/"
  openUrl(url)
elseif matches[2] == "weebly" then
  local url = "http://mudletscriptinghelp.weebly.com/"
  openUrl(url)
elseif matches[2] == "ada" then
  local url = "https://ada-young.com/pastebin/"
  openUrl(url)
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^(google|achaea|gmail|regex|mudletwiki|pastebin|weebly|ada|pb)$</regex>
					</Alias>
					<Alias isActive="no" isFolder="no">
						<name>tsol'dasi</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex>^tsi$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>enter arena</name>
						<script>send("get gold from pack"..cmdsep.."accept " .. matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^spar (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>deposit gold</name>
						<script>send("get " .. matches[2] .. " gold from pack"..cmdsep.."deposit " .. matches[2] .. " gold")</script>
						<command></command>
						<packageName></packageName>
						<regex>^dep (\d+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>north reach</name>
						<script>expandAlias("goto 7584")</script>
						<command></command>
						<packageName></packageName>
						<regex>^acamp$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>delete folder messages full</name>
						<script>--NOTE:  			I suggest renumbering your messages first. with MSG RENUMBER. then running this alias
--i.e  dm 101     &lt;&lt; 	this will delete messages 1-101 fully, in all folders then renumber your messages.
--							Seeing as how delmsg full only deletes messages in your main folder not any others you may have created for your self.
local i = 1
-- plus one because we are telling the system to run 102 two times, so the 101'st will be deleted.
while (i &lt; matches[2] + 1) do
  send("dm " .. i)
  i = i + 1
end
send("msg renumber")</script>
						<command></command>
						<packageName></packageName>
						<regex>^dm (\w+)$</regex>
					</Alias>
					<Alias isActive="no" isFolder="no">
						<name>refill rift</name>
						<script>send("get gold from pack"..cmdsep.."fill rift with " .. matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^refill rift (\w+)$</regex>
					</Alias>
					<Alias isActive="no" isFolder="no">
						<name>refill empty</name>
						<script>send("get gold from pack"..cmdsep.."refill empty with " .. matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^refill (.*)$</regex>
					</Alias>
					<Alias isActive="no" isFolder="no">
						<name>refill empty from rift</name>
						<script>send("get gold from pack"..cmdsep.."refill empty with " .. matches[2] .. " from rift")</script>
						<command></command>
						<packageName></packageName>
						<regex>^refill from rift (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>prompt toggle</name>
						<script>if matches[2] == "t" then
  if timestamp == 0 then
    timestamp = 1
    send("config prompt custom #W[*s#W] " .. promptstring .. "", false)
  else
    timestamp = 0
    send("config prompt custom " .. promptstring, false)
  end
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^prompt (t)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>give group mineral</name>
						<script>pullnum = matches[2]
send(
  "outr " ..
  pullnum ..
  " antimony"..cmdsep.."outr " ..
  pullnum ..
  " argentum"..cmdsep.."outr " ..
  pullnum ..
  " arsenic"..cmdsep.."outr " ..
  pullnum ..
  " aurum"..cmdsep.."outr " ..
  pullnum ..
  " azurite"..cmdsep.."outr " ..
  pullnum ..
  " bisemutum"..cmdsep.."outr " ..
  pullnum ..
  " calamine"..cmdsep.."outr " ..
  pullnum ..
  " calcite"..cmdsep.."outr " ..
  pullnum ..
  " cinnabar"..cmdsep.."outr " ..
  pullnum ..
  " cuprum"
)
send(
  "outr " ..
  pullnum ..
  " dolomite"..cmdsep.."outr " ..
  pullnum ..
  " ferrum"..cmdsep.."outr " ..
  pullnum ..
  " gypsum"..cmdsep.."outr " ..
  pullnum ..
  " magnesium"..cmdsep.."outr " ..
  pullnum ..
  " malachite"..cmdsep.."outr " ..
  pullnum ..
  " plumbum"..cmdsep.."outr " ..
  pullnum ..
  " potash"..cmdsep.."outr " ..
  pullnum ..
  " quartz"..cmdsep.."outr " ..
  pullnum ..
  " quicksilver"..cmdsep.."outr " ..
  pullnum ..
  " realgar"
)
send("outr " .. pullnum .. " stannum")
-- " give group mineral to "</script>
						<command></command>
						<packageName></packageName>
						<regex>poutr (.*)</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>skull find</name>
						<script>send("caress skull " .. matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^cs (\w+)$</regex>
					</Alias>
					<Alias isActive="no" isFolder="no">
						<name>processcode</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex>^processcode$</regex>
					</Alias>
					<Alias isActive="no" isFolder="no">
						<name>writesaid (\w+)</name>
						<script>for i = 1, tonumber(matches[2]), 1 do
  send(isaid[i])
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^writesaid (\w+)$</regex>
					</Alias>
					<Alias isActive="no" isFolder="no">
						<name>writenews (.*)</name>
						<script>--pattern: ^writenews (.*)$
textarray = string.split(matches[2], " ")
--split it
textblocks = {}
blockpointer = 1
for i = 1, #textarray, 1 do
  if not (textblocks[blockpointer]) then
    textblocks[blockpointer] = textarray[i]
  else
    if not (#textblocks[blockpointer] + #textarray[i] &gt; 55) then
      textblocks[blockpointer] = textblocks[blockpointer] .. " " .. textarray[i]
    else
      blockpointer = blockpointer + 1
      textblocks[blockpointer] = textarray[i]
    end
  end
end
for i = 1, #textblocks, 1 do
  send(textblocks[i])
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^writenews (.*)$</regex>
					</Alias>
					<Alias isActive="no" isFolder="no">
						<name>give scroll</name>
						<script>if table.contains(defignore, "selfishness") then
  keepupToggle("selfishness")
end
send("queue addclear eqbal generosity"..cmdsep.."give scroll544274 to " .. matches[2])
if not table.contains(defignore, "selfishness") then
  keepupToggle("selfishness")
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^givescroll (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>gare</name>
						<script>if not (myclass() == "dragon") and not (inslowcuringmode()) then
  expandAlias("dragonform")
else
  if myclass() == "dragon" and inslowcuringmode() then
    send("pierce the veil")
  else
    send("clearqueue eqbal")
    send("queue add eqbal stand"..cmdsep.."pierce the veil")
  end
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^gare$</regex>
					</Alias>
					<Alias isActive="no" isFolder="no">
						<name>taper</name>
						<script>send("HERALDRY SEAL " .. matches[2] .. " WITH 444972 [1]")
send("mail " .. matches[2] .. " to " .. matches[3])</script>
						<command></command>
						<packageName></packageName>
						<regex>^taper (\w+) (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>tabac</name>
						<script>send("put tabac in 67492")</script>
						<command></command>
						<packageName></packageName>
						<regex>^tabac$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>smoke pipe</name>
						<script>send("light 67492"..cmdsep.."smoke 67492")</script>
						<command></command>
						<packageName></packageName>
						<regex>^smpipe$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>show colors</name>
						<script>--showColours(5)
showColors(4)</script>
						<command></command>
						<packageName></packageName>
						<regex>^showcolors$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>check ping</name>
						<script>print(getPing())</script>
						<command></command>
						<packageName></packageName>
						<regex>^ping$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>ab cheat</name>
						<script>abcheat.ab(matches[2], matches[3])</script>
						<command></command>
						<packageName></packageName>
						<regex>^cb (\w+)(?: (\S+))?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>secrurity</name>
						<script>send("clearqueue eqbal")
send("queue add eqbal get eye from pack"..cmdsep.."wield right eye"..cmdsep.."throw eye at ground"..cmdsep.."wield right shield;"..cmdsep.."ent"..cmdsep.."group")
</script>
						<command></command>
						<packageName></packageName>
						<regex>^sec$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>GO IN</name>
						<script>send("open door in"..cmdsep.."in"..cmdsep.."close door out")</script>
						<command></command>
						<packageName></packageName>
						<regex>^goin$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>GO OUT</name>
						<script>send("open door out"..cmdsep.."out"..cmdsep.."close door in")</script>
						<command></command>
						<packageName></packageName>
						<regex>^goout$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>get all</name>
						<script>for i,v in ipairs(gmcp.Char.Items.List.items) do
  if not v.id == "a monolith sigil" then
   send("get group "..v.id)
   send("get "..v.id)
   send("combine "..v.id)    
  end
end

send("inr all")</script>
						<command></command>
						<packageName></packageName>
						<regex>^getall$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>group stuff</name>
						<script>send("get group "..matches[2].." from pack")
send("combine "..matches[2])
send("put group "..matches[2].." in pack")




</script>
						<command></command>
						<packageName></packageName>
						<regex>^groupstuff (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>who here</name>
						<script>send("who here")</script>
						<command></command>
						<packageName></packageName>
						<regex>^wh$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>ferry passage</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex>^bferry (.+?)$</regex>
					</Alias>
					<Alias isActive="no" isFolder="no">
						<name>SHOP ENTRY</name>
						<script>send("g pouch from kitbag"..cmdsep.."g key from pouch"..cmdsep.."unlock door down"..cmdsep.."open door down"..cmdsep.."down"..cmdsep.."put key in pouch"..cmdsep.."put pouch in kitbag")</script>
						<command></command>
						<packageName></packageName>
						<regex>^shopin$</regex>
					</Alias>
					<Alias isActive="no" isFolder="no">
						<name>SHOP OUT</name>
						<script>send("g pouch from kitbag"..cmdsep.."g key from pouch"..cmdsep.."unlock door up"..cmdsep.."open door up"..cmdsep.."up"..cmdsep.."put key in pouch"..cmdsep.."put pouch in kitbag")</script>
						<command></command>
						<packageName></packageName>
						<regex>^shopout$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>GET ALL</name>
						<script>send("clearqueue all"..cmdsep.."get 50 mineral"..cmdsep.."get 50 plant")</script>
						<command></command>
						<packageName></packageName>
						<regex>^gall$</regex>
					</Alias>
					<Alias isActive="no" isFolder="no">
						<name>GOT TO TARGET</name>
						<script>--send("clearqueue all"..cmdsep.." queue add free scry for " ..target)
send("queue addclear free farsee " ..target)
local function to(whom)
  local p = whom:title()
  if not mmp.pdb[p] then mmp.echo("Sorry - don't know where "..p.." is.") return end
 
  local nums = mmp.getnums(mmp.pdb[p], true)
  mmp.gotoRoom(nums[1])
  mmp.echo(string.format("Going to %s in %s%s.", p, mmp.cleanAreaName(mmp.areatabler[getRoomArea(nums[1])] or '?'), (#nums ~= 1 and " (non-unique location though)" or "")))
send("pt going to "..target.." in "..nums[1])
end
 
if not matches[2] then
  if not target then
    mmp.echo("I don't know what your target is (set the 'target' variable)") return
  else
    goto(target)
  end
else
  goto(matches[2])
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^top(?: (\w+))?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>SHROOM</name>
						<script>send("cq all"..cmdsep.."g mushroom from pack"..cmdsep.."attach mushroom to monolith")</script>
						<command></command>
						<packageName></packageName>
						<regex>^shroom$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>OOC Tells</name>
						<script>send("tell "..matches[2].." (( "..matches[3]:title().." ))")</script>
						<command></command>
						<packageName></packageName>
						<regex>^ooc (\w+) (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>REPLY OOC</name>
						<script>send("reply (( "..matches[2]:title().." ))")</script>
						<command></command>
						<packageName></packageName>
						<regex>^rooc (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>EXTRACT MINERALS</name>
						<script>extraction = extraction or {}
local a = gmcp.Room.Info.area 

if extraction[a] then
  send("queue addclear eqbal extract "..extraction[a],false)
else
  send("minerals",false)
end
</script>
						<command></command>
						<packageName></packageName>
						<regex>^ext$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>MINERAL LOCATIONS</name>
						<script>extraction = extraction or {}
local minList = {
  "ferrum", "stannum", "dolomite", "antimony", "bisemutum", "cuprum",
  "magnesium", "calamine", "malachite", "azurite", "plumbum",
  "realgar", "arsenic", "gypsum", "argentum", "calcite", "potash",
  "quicksilver", "aurum", "quartz", "cinnabar",
}
cecho("\n&lt;LightSkyBlue&gt;These are the areas we have found minerals in so far...\n")
for _, mineral in ipairs(minList) do
  cecho("\n  &lt;green&gt;[&lt;NavajoWhite&gt;"..mineral:title().."&lt;green&gt;]: ")
  for area, min in spairs(extraction) do
    if min == mineral then
      echo(area..", ")
    end
  end
  echo("\n ")
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^extract$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>AFK</name>
						<script>send("get journal from pack"..cmdsep.."write journal")</script>
						<command></command>
						<packageName></packageName>
						<regex>^afk$</regex>
					</Alias>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>legend deck</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>Season (Elixir|Poison)</name>
							<script>send("clearqueue all"..cmdsep.."queue add eqbal legenddeck draw seasone for elixir")</script>
							<command></command>
							<packageName></packageName>
							<regex>^lsea$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Pazuzu (Not Magical Travel)</name>
							<script>send("clearqueue all"..cmdsep.."legenddeck draw pazuzu")</script>
							<command></command>
							<packageName></packageName>
							<regex>^lpaz$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Heal</name>
							<script>send("clearqueue all"..cmdsep.."queue add eqbal legenddeck draw catarin")</script>
							<command></command>
							<packageName></packageName>
							<regex>^lcata$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Severian</name>
							<script>send("clearqueue all"..cmdsep.."queue add eqbal legenddeck draw severian")</script>
							<command></command>
							<packageName></packageName>
							<regex>^lseve$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Agith'tai (Gives Focus Afflictions to Target)</name>
							<script>send("clearqueue all"..cmdsep.."queue add eqbal legenddeck draw agith'tai")</script>
							<command></command>
							<packageName></packageName>
							<regex>^lagi$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Yuthka (Flaming Meteor to target)</name>
							<script>send("clearqueue all"..cmdsep.."queue add eqbal legenddeck draw yu")</script>
							<command></command>
							<packageName></packageName>
							<regex>^lyuh$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Horror</name>
							<script>send("queue addclear free legenddeck draw horror for " ..target)</script>
							<command></command>
							<packageName></packageName>
							<regex>^lhor$</regex>
						</Alias>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>vials</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>venom refill all</name>
							<script>local rvenomlist = {
"aconite",
"colocasia",
--"curare",
"darkshade",
"delphinium",
"digitalis",
"epseth",
"epteth",
"euphorbia",
"eurypteria",
"gecko",
--"kalmia",
"larkspur",
"loki",
"monkshood",
"oculus",
"oleander",
"prefarar",
"selarnia",
"slike",
"vardrax",
"vernalius",
"voyria",
"xentio"
}


for i in ipairs(rvenomlist) do
 send("refill empty with "..rvenomlist[i].." from rift")
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^refillvenoms$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>venom give all to person</name>
							<script>local venomlist = {
"aconite",
"colocasia",
--"curare",
"darkshade",
"delphinium",
"digitalis",
"epseth",
"epteth",
"euphorbia",
"eurypteria",
"gecko",
--"kalmia",
"larkspur",
"loki",
"monkshood",
"oculus",
"oleander",
"prefarar",
"selarnia",
"slike",
"vardrax",
"vernalius",
"voyria",
"xentio"
}

for i in ipairs(venomlist) do
 send("give "..venomlist[i].." to "..matches[2])
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^giveallvenom (\w+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>elixir refill all</name>
							<script>local relixirlist = {
"frost",
"health",
"immunity",
"levitation",
"mana",
"speed",
"venom",
"caloric",
"epidermal",
"mass",
"mending",
"restoration"
}


for i in ipairs(relixirlist) do
 send("refill empty with "..relixirlist[i].." from rift")
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^refillelixirs$</regex>
						</Alias>
					</AliasGroup>
					<Alias isActive="yes" isFolder="no">
						<name>print table</name>
						<script>function printTable( map )
	echo("-------------------------------------------------------\n");
	for k, v in pairs( map ) do
		if type(v) ~= "function" and type(v) ~= "table" then 
			echo( "key=" .. k .. "  			value=" .. v .. "\n" )
		end
	end
	echo("-------------------------------------------------------\n");
end

printTable(_G)</script>
						<command></command>
						<packageName></packageName>
						<regex>^print table$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>duanathara</name>
						<script></script>
						<command>say duanathara</command>
						<packageName></packageName>
						<regex>^dua$</regex>
					</Alias>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Tattoos</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>fixtats</name>
							<script>tatQ = {}
inking = false
processTattoos()</script>
							<command></command>
							<packageName></packageName>
							<regex>^fixtats$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>tattoos</name>
							<script>charges = {}
tattoos = {}
send("tattoos")</script>
							<command></command>
							<packageName></packageName>
							<regex>^tattoos$</regex>
						</Alias>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Vial topper</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>Vlist</name>
							<script>vialcounter = 0
crucialVenoms = {
    "aconite",
    "curare",
    "digitalis", 
    "epteth", 
    "epseth", 
    "eurypteria", 
    "gecko", 
    "kalmia", 
    "larkspur", 
    "monkshood", 
    "prefarar", 
    "slike", 
    "vardrax", 
    "vernalius", 
    "voyria", 
    "xentio"
}
--enableTrigger("Refill vials")
--enableTrigger("Vial count")
send("vlist", false)</script>
							<command></command>
							<packageName></packageName>
							<regex>^vlist$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Elist</name>
							<script>vialcounter = 0
crucialVials = {
    "caloric",
    "epidermal", 
    "frost", 
    "health", 
    "immunity", 
    "levitation", 
    "mana", 
    "mass", 
    "mending", 
    "restoration", 
    "speed", 
    "venom"
}
enableTrigger("Refill vials")
enableTrigger("Vial count")
send("elist", false)</script>
							<command></command>
							<packageName></packageName>
							<regex>^elist$</regex>
						</Alias>
					</AliasGroup>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>containers</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>leave wilderness</name>
						<script>send("leave wilderness")
GUI.mapwindow:activateTab("Mainland")
--we can call activateTab both ways.
--GUI.mapwindow.activateTab(GUI.mapwindow, "Mainland")</script>
						<command></command>
						<packageName></packageName>
						<regex>^leave wilderness$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>enter harbour</name>
						<script>send("enter harbour")
GUI.mapwindow:activateTab("Mainland")</script>
						<command></command>
						<packageName></packageName>
						<regex>^enter harbour$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>show all containers</name>
						<script>Adjustable.Container:showAll()</script>
						<command></command>
						<packageName></packageName>
						<regex>^show all containers$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>city bounty list</name>
					<script></script>
					<command></command>
					<packageName>City Bounty List v2</packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>city bounty tracker</name>
						<script>--send("config pagelength 250")
send("city bounty list")
--tempTimer(1, [[send("config pagelength 60")]])</script>
						<command></command>
						<packageName></packageName>
						<regex>^city bounty list$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>seafaring</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>ship directions</name>
						<script>local directions = {
    ["e"] = "east",
    ["ese"] = "east-southeast",
    ["se"] = "southeast",
    ["sse"] = "south-southeast",
    ["s"] = "south",
    ["ssw"] = "south-southwest",
    ["sw"] = "southwest",
    ["wsw"] = "west-southwest",
    ["w"] = "west",
    ["wnw"] = "west-northwest",
    ["nw"] = "northwest",
    ["nnw"] = "north-northwest",
    ["n"] = "north",
    ["nne"] = "north-northeast",
    ["ne"] = "northeast",
    ["ene"] = "east-northeast",
}

local direction = directions[matches[2]]

if direction then
    if gmcp.Room.Info.environment == "Vessel" then
      send("say course " .. direction)
    end
end
</script>
						<command></command>
						<packageName></packageName>
						<regex>^sd (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>ship commands</name>
						<script>local cs = cmdsep
local commands = {
    ["rp"] = "ship raise plank",
    ["lp"] = "ship lower plank",
    ["ss"] = "ship strike sails"..cs.."ship row",
    ["ra"] = "ship repair stop"..cs.."ship raise anchor"..cs.."ship repair all",
    ["rm"] = "ship repair stop"..cs.."ship raise anchor"..cs.."ship repair all"..cs.."maintain hull",
    ["fs"] = "ship row"..cs.."ship sails full",
    ["co"] = "ship castoff",
    ["as"] = "ship all stop",
    ["la"] = "ship lower anchor",
    ["rb"] = "ship raise bell",
    ["lb"] = "ship lower bell",
    ["is"] = "invoke shield",
    ["im"] = "invoke sea spirits",
    ["iw"] = "invoke wavescythe",
    ["aw"] = "aura activate weapons",
    ["ms"] = "ship manoeuvre steadygoing",
    ["me"] = "ship manoeuvre evasive",
    ["cr"] = "climb rigging"..cs.."clear rigging",
    
    
}

local command = commands[matches[2]]

if command then
    if gmcp.Room.Info.environment == "Vessel" then
      send("queue add eqbal "..command)
    else
      send("sc")
    end
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^sc (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>ship announce</name>
						<script>if gmcp.Room.Info.environment == "Vessel" then
  send("ship announce " .. matches[2])
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^sa (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>ship fire</name>
						<script>local cs = cmdsep
local weapons = {
    ["st"] = "load onager with starshot dipped"..cs.."fire onager",
    ["cs"] = "load onager with chainshot dipped"..cs.."fire onager",
    ["ss"] = "load onager with spidershot"..cs.."fire onager",
    ["bd"] = "load ballista with dart"..cs.."fire ballista",
    ["td"] = "load thrower with disc"..cs.."fire thrower",
    ["th"] = "load thrower with hookshot"..cs.."fire thrower",
}

local weapon = weapons[matches[2]]

if weapon then
    if gmcp.Room.Info.environment == "Vessel" then
      send("queue addclear eqbal "..weapon)
    end
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^sf (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>ship fire monster</name>
						<script>local cs = cmdsep
local weapons = {
    ["os"] = "load onager with spidershot"..cs.."fire onager at seamonster",
    ["bd"] = "load ballista with dart"..cs.."fire ballista at seamonster",
    ["td"] = "load thrower with disc"..cs.."fire thrower at seamonster",
}

local weapon = weapons[matches[2]]

if not firing then
firing = true
cecho("firing ship weapon")
if weapon then
    if gmcp.Room.Info.environment == "Vessel" then
      systemPaused=true
      send("queue addclear eqbal "..weapon)
      systemPaused=false
    end
end
else
firing = false
cecho("stopped firing ship weapon")
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^sfm (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>ship target lock</name>
						<script>send("ship target lock " .. matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^slo (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>ship target clear</name>
						<script>send("ship target lock clear")</script>
						<command></command>
						<packageName></packageName>
						<regex>^sloc$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>sell trophies</name>
						<script>sendAll("ii fin","ii lantern","ii tangle","ii tooth","ii wheel","ii canvas","ii barb")
expandAlias("smkills 0")

</script>
						<command></command>
						<packageName></packageName>
						<regex>^selltrophy$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>goto casov</name>
						<script>expandAlias("goto 20873")</script>
						<command></command>
						<packageName></packageName>
						<regex>^casov$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>wavecall</name>
						<script>send("invoke wavecall "..matches[2].." "..matches[3])</script>
						<command></command>
						<packageName></packageName>
						<regex>^swc (\w+) (\d+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>dock ship</name>
						<script>send("ship dock "..matches[2].." confirm")</script>
						<command></command>
						<packageName></packageName>
						<regex>^dock (.+)$</regex>
					</Alias>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>ship trade</name>
						<script></script>
						<command></command>
						<packageName>Ship Trade Path Finder 2</packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>Ship Trade Alias</name>
							<script>startTrade(matches[2], matches[3])</script>
							<command></command>
							<packageName></packageName>
							<regex>^strade\s(\d+)\s(\w+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Show Hidden Routes</name>
							<script>shipTradeHidden()</script>
							<command></command>
							<packageName></packageName>
							<regex>^showroutes$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Show My Route</name>
							<script>showSelectedRoute()</script>
							<command></command>
							<packageName></packageName>
							<regex>^myroute$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>tradedeal</name>
							<script>send("ship trade deal show")</script>
							<command></command>
							<packageName></packageName>
							<regex>^tradedeal$</regex>
						</Alias>
					</AliasGroup>
					<Alias isActive="yes" isFolder="no">
						<name>toggle commscreen</name>
						<script>if commscreen_check == nil or commscreen_check == false then
  send("ship commscreen raise")
  commscreen_check = true
  else
  send("ship commscreen lower")
  commscreen_check = false
end
</script>
						<command></command>
						<packageName></packageName>
						<regex>^commscreen$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>talisman</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>summary</name>
						<script>talisman.setorder = {"dragon", "underworld", "wonders", "miscellane", "historical", "conclave", "marks", "seafaring", "death", "blackwave", "races", "forays", "cities", "monks", "elemental", "yggdrasil", "contenders", "azatlan", "renegades", "invasion", "war", "planes", "eldergods", "logosmas"}
talisman.summary(matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^(?:tlist|TLIST)(?: (\w+))?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>talisman trade</name>
						<script>if matches[2]:lower()=="set" then
	talisman.tradeset(matches[3], matches[4])
elseif matches[2]:lower()=="talisman" then
	talisman.tradetalisman(matches[3], matches[4])
else
	talisman.trade(matches[3], matches[4], tonumber(matches[5] or 1))
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^(?:ttrade|TTRADE)(?: (set|SET|talisman|TALISMAN))? (\w+) (\w+)(?: (\d+))?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>talisman trade help</name>
						<script>talisman.help()</script>
						<command></command>
						<packageName></packageName>
						<regex>^(?:ttrade|thelp)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>talisman complete</name>
						<script>talisman.complete(matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^tcomplete (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>main summary</name>
						<script>talisman.setorder = {"dragon", "underworld"}
talisman.summary(matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^tlista$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>talisman pieces</name>
						<script>send("talisman pieces")
enableTrigger("TalismanV6")</script>
						<command></command>
						<packageName></packageName>
						<regex>^talisman pieces$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>talisman pieces</name>
						<script>for piece, count in pairs(talismanPieces) do
	echo("\n"..piece:title()..string.rep(" ", 40-string.len(piece)).."x"..count)
end
send(" ")</script>
						<command></command>
						<packageName></packageName>
						<regex>^tpcs$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>renown</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>tomacula village</name>
						<script>expandAlias("goto 1502")</script>
						<command></command>
						<packageName></packageName>
						<regex>^tomacula$</regex>
					</Alias>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>nimick</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>nimick sherrif</name>
							<script>expandAlias("goto 23442")</script>
							<command></command>
							<packageName></packageName>
							<regex>^sheriff$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>mines of nimick</name>
							<script>expandAlias("goto 23472")</script>
							<command></command>
							<packageName></packageName>
							<regex>^nimick$</regex>
						</Alias>
					</AliasGroup>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>casino</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>play blackjack</name>
						<script>initialbet = 25000
send("play blackjack")</script>
						<command></command>
						<packageName></packageName>
						<regex>^play blackjack$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>mining</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>deploy miners</name>
						<script>local count = 0
for k, v in pairs(legiondb) do
  if v.type == "miners" and v.status == "none" then
    count = count + 1
    if count &lt; 14 then
      send("legion deploy squad " .. k)
    end
  end
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^deployminers$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>retire squads</name>
						<script>for k, v in pairs(legiondb) do
  if tonumber(v.strength) &lt; 20 and v.status == "none" then
    send("legion retire squad " .. k)
  end
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^retiresquads$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>deploy soldiers</name>
						<script>local count = 0
for k, v in pairs(legiondb) do
  if not (v.type == "miners") and v.status == "none" then
    count = count + 1
    if count &lt; 14 then
      send("legion deploy squad " .. k)
    end
  end
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^deploysoldiers$</regex>
					</Alias>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>prospecting</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>prospect</name>
							<script>ProspectList = { 
--Mhojave Desert
"330", "331", "335", "334", "333", "343", "347", "348", "352", "6587", "6629", "348", "45863", "344", "345", "346", "350", "354", "358", "357", "356", "355", "1236", "1235"
,"1247", "1246", "1249", "1250", "1244", "1243", "1251", "1245", "1237", "316", "318", "312", "311", "317", "315", "310", "314", "308", "307", "303", "301", "309"
,"302", "300", "304", "14790", "6164", "13778", "306", "305"
--Dakhota Hills
,"1079", "1080", "1077", "1081", "1083", "1094", "1084", "1089", "1088", "1090", "1091", "1093", "1092", "1095", "1103", "1102", "1115", "1118", "1119", "1121"
,"1123", "1112", "1113", "1114", "1111", "1104", "1105", "1106", "1096", "1097", "1098", "1082", "1100", "1101", "1125", "1127", "1126", "1133", "1136", "1137", "1138"
,"1139", "1132", "1128", "1131", "1130", "1108", "1107"
-- Dun valley
, "3812", "3797", "3796", "3799", "3801", "3802", "3805", "3804", "3800", "3821", "3798", "3795", "5036", "5035", "5034", "5033", "5032"
-- Vashnar Mountains
,"2019", "2018", "2017", "2010", "2011", "2012", "2013", "2015", "2016", "2014", "2009", "2008", "2007"
--Southern Vashnars
,"10226", "10247", "10224", "10502", "10381", "10458", "10241", "10295", "38162", "35601", "35193", "10280", "10311", "10235", "13553", "10342", "10299"
,"10250", "10448", "10218", "10219", "10429", "10412", "10567", "10203", "10202", "10195", "10712", "10196", "10194", "10240", "10184", "10186", "10182", "10185"
,"10189", "10193", "10187", "10192", "10190", "10409", "10181", "10206", "10222"
-- Pash valley
,"1726", "1725", "1724", "1723", "1722", "1721", "1720", "1717", "1716", "1714", "5585", "4315", "1715", "1713", "1718", "1719", "1712", "1711", "1710", "1705", "1702", "1706", "1709", "1708", "1707", "1697", "1619", "1728", "1490"
,"1729", "1727", "1686", "1685", "1683", "1634", "1633", "1635", "1631", "1628", "1627", "1626", "1433", "1434", "1432", "1431", "1435"
,"1428", "1430", "1427", "1423", "1425", "1424", "1426", "1429", "3018", "3017", "3019", "3020", "3391", "3390", "3389", "28632", "3016", "3015", "2997", "2991", "2990", "2977"
-- Siroccian hills
,"2979", "2980", "2981", "3420", "3421", "3422", "3424", "3423", "2982", "2983", "2984", "2985", "2986", "2987", "2988"
--granite hills 1
,"9067", "9068", "9069", "9075", "9074", "9073", "9070", "9071", "9072", "9146", "19004", "11693", "11657", "18634", "7626", "7154", "7153", "7155", "7156", "7226", "7625", "9139", "9140", "9141", "9142", "9143", "9144", "9145"
-- granite hills 2
,"9086", "9088", "9089", "9090", "9091", "9092", "9093", "9096", "9094", "9095", "9138", "9147", "9097", "9098", "9099", "9100", "9101", "9102", "9103", "9131", "9130", "9105", "9104", "30958"
}


expandAlias("goto "..ProspectList[1])
--send("clan tug tell Beginning prospecting run!")
prospecting=1
lastminetable = minetable
minetable = {}
lodetable = {}
strongholdtable = {}</script>
							<command></command>
							<packageName></packageName>
							<regex>^prospectall$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>continue prospecting</name>
							<script>expandAlias("goto " .. ProspectList[1])
prospecting = 1</script>
							<command></command>
							<packageName></packageName>
							<regex>^cprospect$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>showmines</name>
							<script>mineowners = {}
counter = 0
for k, v in pairs(minetable) do
  cecho("\nMaterial type: " .. k)
  for m, n in pairs(v) do
    for p, o in pairs(n) do
      cecho("Room number: " .. p .. "\n")
      for b, r in pairs(o) do
        echo(b .. ": " .. r .. ",  ")
        if b == 2 then
          mineowners[counter] = r
          counter = counter + 1
        end
      end
    end
  end
end
cecho("\n--STRONGHOLDS--\n")
for k, v in pairs(strongholdtable) do
  cecho(" Room number: " .. k .. "\n ")
  for m, n in pairs(v) do
    cecho(m .. ": " .. n .. ", ")
  end
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^showmines$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>OMG STOP</name>
							<script>mmp.stop()
killTimer(tostring(prospectingtimer))
gotopactive = false
send("stop")
prospecting = 0</script>
							<command></command>
							<packageName></packageName>
							<regex>^pstop$</regex>
						</Alias>
					</AliasGroup>
					<Alias isActive="no" isFolder="no">
						<name>warehouse</name>
						<script>send("warehouse show 1")</script>
						<command></command>
						<packageName></packageName>
						<regex>^w1$ </regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>withdraw warehouse</name>
						<script>send(
  "warehouse withdraw " ..
  matches[2] ..
  " " ..
  matches[3] ..
  "|outr " ..
  matches[2] ..
  " " ..
  matches[3] ..
  "|combine " ..
  matches[3] ..
  "|"
)</script>
						<command></command>
						<packageName></packageName>
						<regex>^ww (\d+) (\w+)$</regex>
					</Alias>
				</AliasGroup>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>combat</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>target</name>
					<script>if matches[2] == "none" then
  send("settarget none")
  target = "none"
else 
  	setTarget(matches[2])
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^t (\w+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>sheathe</name>
					<script>
if myclass() == "serpent" then

send("wield dirk"..cmdsep.."sheathe dirk")
send("wield shield"..cmdsep.."lash shield to backstrap")
send("wield lash"..cmdsep.."sheathe lash")
send("wield bow"..cmdsep.."put bow in baldric")

else

send("sheathe sword")

end</script>
					<command></command>
					<packageName></packageName>
					<regex>^sheathe$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>print queue</name>
					<script>--example: 'pq eqbal'
local queueType = matches[2]
printQueueItems(queueType)</script>
					<command></command>
					<packageName></packageName>
					<regex>^pq (\w+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>reset class</name>
					<script>class_reset()</script>
					<command></command>
					<packageName></packageName>
					<regex>^reset class$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>CATARIN</name>
					<script>send("clearqueue all"..cmdsep.."legenddeck draw catarin")</script>
					<command></command>
					<packageName></packageName>
					<regex>^cat$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ICEWALL</name>
					<script>send("clearqueue all"..cmdsep.."point ring379683 "..matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^ice (\w+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>PARALYSE</name>
					<script>send("envenom axe with curare"..cmdsep.."wield axe"..cmdsep.."throw axe at " .. target ..""..cmdsep.."get axe") </script>
					<command></command>
					<packageName></packageName>
					<regex>^para$</regex>
				</Alias>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>bladedancer</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>ctr</name>
						<script>counterrequested = true
send("writhe")
failsafe = false
send("clearqueue all")
pommelstrategy = "impale"
send("em takes a half step back and places his hand on the hilt of his sword, a red glow in his eyes")
</script>
						<command></command>
						<packageName></packageName>
						<regex>^ctr$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>sanya</name>
						<script>send("sanya")
stancerequested = "sanya"
</script>
						<command></command>
						<packageName></packageName>
						<regex>^sanya$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>mir</name>
						<script>send("mir")
stancerequested = "mir"
</script>
						<command></command>
						<packageName></packageName>
						<regex>^mir$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>pew</name>
						<script>
send("load "..nextweapon.." with "..nextammo.."|fire "..nextweapon.." at seamonster")
</script>
						<command></command>
						<packageName></packageName>
						<regex>^pew$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>heal</name>
						<script>healrequested = true
</script>
						<command></command>
						<packageName></packageName>
						<regex>^heal$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>thyr</name>
						<script>send("thyr")
stancerequested = "thyr"
</script>
						<command></command>
						<packageName></packageName>
						<regex>^thyr$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>im</name>
						<script>immunityrequested = true
immunitycounterrequested = true
send("clearqueue all")

--AI.strategy = "defensive"
</script>
						<command></command>
						<packageName></packageName>
						<regex>^im$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>sp</name>
						<script>phoenixrequested = true

</script>
						<command></command>
						<packageName></packageName>
						<regex>^sp$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>af</name>
						<script>airfistrequested = true

cecho("&lt;yellow&gt;\nRequested airfist!")
cecho("&lt;yellow&gt;\nRequested airfist!")
cecho("&lt;yellow&gt;\nRequested airfist!")</script>
						<command></command>
						<packageName></packageName>
						<regex>^af$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>reset limb</name>
						<script>if limbdamage[matches[2]] then

limbdamage[matches[2]] = 1

cecho(matches[2].." reset")

end

if matches[2] == "all" then


for i in pairs(limbdamage) do

limbdamage[i] = 1

cecho(matches[2].." reset")

end


end
</script>
						<command></command>
						<packageName></packageName>
						<regex>^rs (.*)$</regex>
					</Alias>
					<Alias isActive="no" isFolder="no">
						<name>recalc</name>
						<script>omnistarpredict("legs")
omnistarpredict("centre")
omnistarpredict("arms")</script>
						<command></command>
						<packageName></packageName>
						<regex>^recalc$</regex>
					</Alias>
					<Alias isActive="no" isFolder="no">
						<name>cleardata</name>
						<script>stancelimbdamage = {thyr = {highdamage = 1, lowdamage = 1, compassdamage = 1}, none = {highdamage = 1, lowdamage = 1, compassdamage = 1},doya = {highdamage = 1, lowdamage = 1, compassdamage = 1},mir = {highdamage = 1, lowdamage = 1, compassdamage = 1}, sanya = {highdamage = 1, lowdamage = 1, compassdamage = 1}, arash = {highdamage = 1, lowdamage = 1, compassdamage = 1}}</script>
						<command></command>
						<packageName></packageName>
						<regex>^cleardata$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>reset all</name>
						<script>limbcount[target].head = 0
</script>
						<command></command>
						<packageName></packageName>
						<regex>^rall$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>flee</name>
						<script>

fleerequested = true

</script>
						<command></command>
						<packageName></packageName>
						<regex>^flee$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>counter</name>
						<script>

AI.stance = "reactive"
</script>
						<command></command>
						<packageName></packageName>
						<regex>^counter$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>dv</name>
						<script>diagnoserequested = true</script>
						<command></command>
						<packageName></packageName>
						<regex>^dv$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>complass   (\w+)</name>
						<script>local tabletable = {head = "north", torso = "south", leftleg = "southeast", rightleg = "southwest", leftarm = "east", rightarm = "west"}

send("compassslash "..target.." "..tabletable[matches[2]])</script>
						<command></command>
						<packageName></packageName>
						<regex>^compass (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>slash (\w+)</name>
						<script>local tabletable = {head = "centreslash "..target.." down", torso = "centreslash "..target.." up", leftleg = "legslash "..target.." left", rightleg = "legslash "..target.." right", leftarm = "armslash "..target.." left", rightarm = "armslash "..target.." right"}


send(tabletable[matches[2]])
</script>
						<command></command>
						<packageName></packageName>
						<regex>^slash (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>bs</name>
						<script>brokenstarrequested = true</script>
						<command></command>
						<packageName></packageName>
						<regex>^bs$</regex>
					</Alias>
					<Alias isActive="no" isFolder="no">
						<name>heal (.*)</name>
						<script>if matches[2] == "1" then
healingmode = true

send("em folds her hands in front of herself and closes her eyes in brief meditation. when she reopens them, a purple glint is visible in her eyes|say equinox style: hundred healing hands!")

send("curing on")
send("curing afflictions off")
send("curing sipping on")



end
if matches[2] == "2" then
healingmode = true

send("em (dim streaks of pink markings start to shine across )'s face as her focus on curing intensifies|say equinox style: thousand healing hands!")


send("curing on")
send("curing afflictions off")
send("curing sipping off")


end


if matches[2] == "3" then
healingmode = true

send("em (faint purple wings start to take shape behind ) as her focus on curing reaches even greater heights|say equinox style: ultimate healing stance!")
send("curing off")

end



if matches[2] == "0" then
healingmode = false

send("em claps her fingers above her head, the purple glint fading from her eyes|say equinox release!")

send("curing on")
send("curing afflictions on")
send("curing sipping on")

end

</script>
						<command></command>
						<packageName></packageName>
						<regex>^heal (.*)$</regex>
					</Alias>
					<Alias isActive="no" isFolder="no">
						<name>los (\w+)</name>
						<script>target = matches[2]

send("dop seek "..target)
send("dop channel warp "..target)</script>
						<command></command>
						<packageName></packageName>
						<regex>^los (\w+)$</regex>
					</Alias>
					<Alias isActive="no" isFolder="no">
						<name>spit</name>
						<script>send("queue addclear eqbal dragoncurse "..target.." sensitivity 1|dragonroar "..target)</script>
						<command></command>
						<packageName></packageName>
						<regex>^spit$</regex>
					</Alias>
					<Alias isActive="no" isFolder="no">
						<name>herbill (\w+)</name>
						<script>


send("conjure illusion "..mainline..illline)
</script>
						<command></command>
						<packageName></packageName>
						<regex>^herbill (\w+)$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="no" isFolder="yes">
					<name>serpent</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>[ y ] yank</name>
						<script>send("queue addclear eqbal wield lash"..cmdsep.."yank "..target)
cecho("\n&lt;green&gt;COMBAT RESET")
combat_reset()
if not(NDB_getClass(target) == "Unknown") then
  set_class(NDB_getClass(target):lower())
else
  cecho("\n&lt;yellow&gt; SET CLASS MANUALLY")
end

myEcho("green","yanking "..target:lower())
failsafe = true</script>
						<command></command>
						<packageName></packageName>
						<regex>^y$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>[ ev ] evade</name>
						<script>evaderequested=true
enableTimer("evade requested")  
send("queue addclear eqbal open door "..matches[2]..""..cmdsep.."evade "..matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^ev (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>[ h ] hypnotize</name>
						<script>hypnomake()</script>
						<command></command>
						<packageName></packageName>
						<regex>^h$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>[ ps ] pinshot</name>
						<script>local target = string.trim(matches[2])
local exits = table.keys(gmcp.Room.Info.exits)
local lightwalldir = exits[math.random(#exits)]


if target ~= nil then
  if isLightWall() then
    sendAll("setalias qpshot "..prefix()..""..cmdsep.."get bow from backstrap"..cmdsep.."wield bow"..cmdsep.."pinshot "..target,"queue addclear eqbal qpshot")
  else
    sendAll("setalias qpshot "..prefix()..""..cmdsep.."get bow from backstrap"..cmdsep.."wield bow"..cmdsep.."pinshot "..target..""..cmdsep.."conjure lightwall "..lightwalldir,"queue addclear eqbal qpshot")
  end
end


</script>
						<command></command>
						<packageName></packageName>
						<regex>^ps( \w+)?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>[ cl ] conjure lightwall</name>
						<script>cLightWall()</script>
						<command></command>
						<packageName></packageName>
						<regex>^cl$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>[ ss ] summon snake</name>
						<script>local snake = "treesnake"
send("summon "..snake)</script>
						<command></command>
						<packageName></packageName>
						<regex>^ss$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>[ ssi ] summon snake inventory</name>
						<script>local snake = "treesnake"
send("summon "..snake.." inventory")</script>
						<command></command>
						<packageName></packageName>
						<regex>^ssi$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>[ rp ] request pinshot</name>
						<script>requestpinshot = true
myEcho("green","pinshot requested")</script>
						<command></command>
						<packageName></packageName>
						<regex>^rp$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>[ lw ] request lightwall</name>
						<script>requestlightwall=true
myEcho("green","lightwall requested")</script>
						<command></command>
						<packageName></packageName>
						<regex>^lw$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>[ rb ] request bite</name>
						<script>requestbite=true
myEcho("green","bite requested")</script>
						<command></command>
						<packageName></packageName>
						<regex>^rb$</regex>
					</Alias>
					<Alias isActive="no" isFolder="no">
						<name>[ ds ] dstab</name>
						<script>local venoms = {
a = "aconite",
b = "oculus",
c = "curare",
d = "delphinium",
e = "eurypteria",
f = "epteth",
g = "gecko",
i = "digitalis",
k = "kalmia",
l = "larkspur",
m = "monkshood",
n = "selarnia",
o = "voyria",
p = "prefarar",
q = "epseth",
r = "darkshade",
s = "slike",
u = "euphorbia",
v = "vernalius",
x = "xentio",
z = "vardrax",
}

vleft = venoms[matches[2]]
vright = venoms[matches[3]] or vleft

--MESMER HYPNOSIS
function mesmer_push()
  if no_hyp == true then
  elseif mesmer.status == "none" then
    mesmer.reset()
    expandAlias(hypnoout)
    mesmer.suggest()
  elseif mesmer.status == "in progress" then
  elseif mesmer.status == "hypnotised" then
    mesmer.suggest()
  elseif mesmer.status == "snapped" then
    mesmer.reset()
    expandAlias(hypnoout)
    mesmer.suggest()
  elseif mesmer.status == "sealed" then
  end
end

--PREFIX
local function prefix()
  local pref = {"stand","purge"}
  pf = table.concat(pref, "/")
  return pf
end

--MAIN
if not vleft then
  ak.scoreup()
  ak.serpent.Lockstack.main()
  send("queue addclear eqbal oattack")
  return
end 

if ak.defs.shield and auto_flay then
  sendAll("cq all","setalias qfls "..prefix().."/wield "..myWhip.." "..myShield.."/flay "..target.." shield "..vleft,"queue add eqbal qfls")
  cecho("&lt;orange&gt;[FLAY]: flaying &lt;red&gt;"..target.."&lt;orange&gt;'s &lt;cyan&gt;shield&lt;orange&gt; with: [&lt;yellow&gt;"..vleft.."&lt;orange&gt;]")
elseif ak.defs.rebounding and auto_flay then
  sendAll("cq all","setalias qfls "..prefix().."/wield "..myWhip.." "..myShield.."/flay "..target.." rebounding "..vleft,"queue add eqbal qfls")
  cecho("&lt;orange&gt;[FLAY]: flaying &lt;red&gt;"..target.."&lt;orange&gt;'s &lt;cyan&gt;rebounding&lt;orange&gt; with: [&lt;yellow&gt;"..vleft.."&lt;orange&gt;]")
else 
  sendAll("cq all","setalias qstab "..prefix().."/wield "..myDirk.." "..myShield.."/wipe dirk/dstab "..target.." "..vleft.." "..vright,"queue add eqbal qstab")
  cecho("&lt;orange&gt;[DSTAB]: afflicting &lt;red&gt;"..target.."&lt;orange&gt; with: [&lt;yellow&gt;"..vleft.."&lt;orange&gt;, &lt;yellow&gt;"..vright.."&lt;orange&gt;]")
end

mesmer_push()
</script>
						<command></command>
						<packageName></packageName>
						<regex>^ds([a-z]?)([a-z]?)$</regex>
					</Alias>
					<Alias isActive="no" isFolder="no">
						<name>[ bs ] bite</name>
						<script>local venoms = {
a = "aconite",
b = "oculus",
c = "camus",
d = "delphinium",
e = "eurypteria",
f = "epteth",
g = "gecko",
i = "digitalis",
k = "kalmia",
l = "loki",
m = "nechamandra",
n = "notechis",
o = "voyria",
p = "prefarar",
q = "epseth",
r = "darkshade",
s = "scytherus",
u = "euphorbia",
v = "vernalius",
x = "xentio",
y = "oculus",
z = "vardrax",
}

local vbite = venoms[matches[2]]

--MESMER HYPNOSIS
function mesmer_push()
  if no_hyp == true then
  elseif mesmer.status == "none" then
    mesmer.reset()
    expandAlias(hypnoout)
    mesmer.suggest()
  elseif mesmer.status == "in progress" then
  elseif mesmer.status == "hypnotised" then
    mesmer.suggest()
  elseif mesmer.status == "snapped" then
    mesmer.reset()
    expandAlias(hypnoout)
    mesmer.suggest()
  elseif mesmer.status == "sealed" then
  end
end

--PREFIX
local function prefix()
  local pref = {"stand","purge"}
  pf = table.concat(pref, "/")
  return pf
end

if not vbite then
  ak.scoreup()
  ak.serpent.Bitestack.main()
  send("queue addclear eqbal battack")
  return
else
  mesmer_push()
end

if ak.defs.sileris then
  sendAll("cq all","setalias qflg "..prefix().."/wield "..myWhip.." "..myShield.."/purge/flay "..target.." rebounding gecko/purge","queue add eqbal qflg")
  ak.defs.sileris = false
  cecho("&lt;orange&gt;[FLAY]: flaying &lt;red&gt;"..target.."&lt;orange&gt;'s &lt;purple&gt;sileris&lt;orange&gt; with: [&lt;yellow&gt;gecko&lt;orange&gt;]")
else
  if auto_illusion then
    sendAll("cq all","setalias qbite "..prefix().."/bite "..target.." "..vbite.."/purge","queue add eqbal qbite")
    cecho("&lt;orange&gt;[BITE]: afflicting &lt;red&gt;"..target.." &lt;orange&gt;with: [&lt;yellow&gt;"..vbite.."&lt;orange&gt;]")
  else
    sendAll("cq all","setalias qbite "..prefix().."/bite "..target.." "..vbite.."/purge","queue add eqbal qbite")  
    cecho("&lt;orange&gt;[BITE]: afflicting &lt;red&gt;"..target.." &lt;orange&gt;with: [&lt;yellow&gt;"..vbite.."&lt;orange&gt;]")
  end
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^bs([a-z]?)$</regex>
					</Alias>
					<Alias isActive="no" isFolder="no">
						<name>[ sn ] snipe</name>
						<script>local aim_dir = string.trim(matches[2])

if aim_dir ~= nil then
  cecho(aim_dir)
  send("aim "..target.." "..aim_dir)
  tempTrigger("You feel confident that your aim is accurate.", [[ sendAll("cq all","setalias qasnipe stand"..cmdsep.."get bow from backstrap"..cmdsep.."wield bow"..cmdsep.."snipe "..target,"queue add eqbal qasnipe") ]], 1)
else
  sendAll("cq all","setalias qsnipe stand"..cmdsep.."get bow from backstrap"..cmdsep.."wield bow"..cmdsep.."snipe "..target,"queue add eqbal qsnipe")
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^sn(\w+)?$</regex>
					</Alias>
					<Alias isActive="no" isFolder="no">
						<name>aim on/off</name>
						<script>if not(aiming) then
	aiming = true
  cecho("\n&lt;yellow&gt;Aiming On")
else
	aiming = false
  cecho("\n&lt;yellow&gt;Aiming Off")
end


</script>
						<command></command>
						<packageName></packageName>
						<regex>^aim$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>[ sm ] shoot meteor</name>
						<script>sendAll("cq all","setalias qmet stand"..cmdsep.."get bow from backstrap"..cmdsep.."wield bow"..cmdsep.."shoot "..target.." with meteor","queue add eqbal qmet")
</script>
						<command></command>
						<packageName></packageName>
						<regex>^sm$</regex>
					</Alias>
					<Alias isActive="no" isFolder="no">
						<name>[ st ] snap target</name>
						<script>send("snap "..target)</script>
						<command></command>
						<packageName></packageName>
						<regex>^st$</regex>
					</Alias>
					<Alias isActive="no" isFolder="no">
						<name>[ bh ] behead</name>
						<script>--ENABLE AUTOASSIST
local function autoassistEnable()
  auto_assist = true
end

--DISABLE AUTOASSIST
local function autoassistDisable()
  if auto_assist == true then
    auto_assist = false
    if aad_behead then killTimer(aad_behead) end
    aad_behead = tempTimer(14,function() autoassistEnable() aad_behead = nil end)
  end
end 

--BEHEAD MAIN
autoassistDisable()

sendAll("cq all","setalias qbh stand/wield "..mySword.." "..myShield.."/behead "..target,"queue add eqbal qbh")</script>
						<command></command>
						<packageName></packageName>
						<regex>^bh$</regex>
					</Alias>
					<Alias isActive="no" isFolder="no">
						<name>[ mr ] mesmer reset</name>
						<script>mesmer.reset()
cecho("&lt;light_slate_blue&gt;Mesmer reset: &lt;red&gt;"..target.."\n")
hyp_delay = nil</script>
						<command></command>
						<packageName></packageName>
						<regex>^mr$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>fire!!</name>
						<script>direction = matches[2]
if matches[2]=="m" then
	send("wield bow")
	send("queue addclear eqbal shoot "..target.." with meteor")
else
		        	         
  if gmcp.Char.Status.class:lower():trim() == "serpent" then
       send("queue addclear eqbal snipe "..target.." "..matches[2].."")
  end 

end
</script>
						<command></command>
						<packageName></packageName>
						<regex>^fire(?: (\w+))?</regex>
					</Alias>
					<Alias isActive="no" isFolder="no">
						<name>meteor</name>
						<script>send("shoot "..target.." with meteor")</script>
						<command></command>
						<packageName></packageName>
						<regex>^met$</regex>
					</Alias>
					<Alias isActive="no" isFolder="no">
						<name>snipe</name>
						<script>direction=matches[2]
send("remove bow"..cmdsep.."wield bow"..cmdsep.."open door "..matches[2]..""..cmdsep.."snipe "..target.." "..matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^fire (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>player prio swap</name>
						<script>if opppriority == "impatience" then
  opppriority = "paralysis"
  cecho("\nplayer prio swapped to: "..opppriority)
else
  opppriority = "impatience"
  cecho("\nplayer prio swapped to: "..opppriority)
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^pps$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="no" isFolder="yes">
					<name>CHASING</name>
					<script>local exits = table.keys(gmcp.Room.Info.exits)
local whodir = exits[math.random(#exits)]

print(#whodir)</script>
					<command></command>
					<packageName></packageName>
					<regex>^chase$</regex>
					<Alias isActive="yes" isFolder="no">
						<name>chase</name>
						<script>failsafe = false

  for k, v in pairs(getRoomExits(gmcp.Room.Info.num)) do
      send("who "..k)
  end


</script>
						<command></command>
						<packageName></packageName>
						<regex>^chase$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>duanthara capture</name>
						<script>failsafe = false
hunting = false
autohunting = false
requestchase = false

		if myclass() == "dragon" then
			send("clearqueue all"..cmdsep.." queue add free veilglance " ..target)
		--elseif inv["scrybowl"] then
			--send("scry for " ..target)
		else
			send("clearqueue all"..cmdsep.." queue add free farsee " ..target)
		end

send("clearqueue all"..cmdsep.." queue add free scry for " ..target)
local function to(whom)
  local p = whom:title()
  if not mmp.pdb[p] then mmp.echo("Sorry - don't know where "..p.." is.") return end
 
  local nums = mmp.getnums(mmp.pdb[p], true)
  mmp.gotoRoom(nums[1])
  mmp.echo(string.format("Going to %s in %s%s.", p, mmp.cleanAreaName(mmp.areatabler[getRoomArea(nums[1])] or '?'), (#nums ~= 1 and " (non-unique location though)" or "")))
send("pt going to "..target.." in "..nums[1])
end
 
if not matches[2] then
  if not target then
    mmp.echo("I don't know what your target is (set the 'target' variable)") return
  else
    goto(target)
  end
else
  goto(matches[2])
end
 </script>
						<command></command>
						<packageName></packageName>
						<regex>^(ce|capture enemy)$</regex>
					</Alias>
					<Alias isActive="no" isFolder="no">
						<name>Toggle Target Chasing</name>
						<script>if chasing_Targets then chasing_Targets = false else chasing_Targets = true end
cecho("Target chasing has been "..(chasing_Targets and "&lt;green&gt;Enabled." or "&lt;red&gt;Disabled."))</script>
						<command></command>
						<packageName></packageName>
						<regex>^tch$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="no" isFolder="yes">
					<name>DRAGON</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>DRAGONSENSE</name>
						<script>send("clearqueue all"..cmdsep.." dragonsense "..target)</script>
						<command></command>
						<packageName></packageName>
						<regex>^ds$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>PIERCE THE VEIL</name>
						<script>send("clearqueue all"..cmdsep.."pierce the veil")</script>
						<command></command>
						<packageName></packageName>
						<regex>^pv$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>BREATHSTREAM</name>
						<script>breathstreamdirection = matches[2]
send("queue addclear free stand"..cmdsep.."wield shield"..cmdsep.."breathstream "..target.." "..matches[2].. ""..cmdsep.."summon lightning")
</script>
						<command></command>
						<packageName></packageName>
						<regex>^br (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>DEVOUR</name>
						<script>send("queue addclear eqbal devour "..target)</script>
						<command></command>
						<packageName></packageName>
						<regex>^dev$</regex>
					</Alias>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>RAGEBLADE</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>RAGEBLADE</name>
							<script>rageprios()
</script>
							<command></command>
							<packageName></packageName>
							<regex>^rag$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>HUNTING</name>
							<script>send("wield shield rageblade")
--send("curing siphealth 30")
--send("curing mosshealth 25")</script>
							<command></command>
							<packageName></packageName>
							<regex>^rage$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>NO MORE HUNTING</name>
							<script>send("wield shield")
--send("curing siphealth 80")
--send("curing mosshealth 70")</script>
							<command></command>
							<packageName></packageName>
							<regex>^norage$</regex>
						</Alias>
					</AliasGroup>
				</AliasGroup>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Zynthesys</name>
				<script></script>
				<command></command>
				<packageName>Zynthesys(Spiritlore Export)</packageName>
				<regex></regex>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Zynthesys Spiritlore Handling</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Spirit Selection</name>
						<script>handleSpiritBinding(matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^spup (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Spirit Reset</name>
						<script>send("spirit unbind all")</script>
						<command></command>
						<packageName></packageName>
						<regex>^spreset$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Zynthesys Spiritlore Info</name>
						<script>spInfo()</script>
						<command></command>
						<packageName></packageName>
						<regex>^spinfo$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Zynthesys Fishy System</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Go Fishing!</name>
						<script>if not(gmcp.Room.Info.environment == "Vessel") then
  Zynthesys.fishing.config.POLE_NAME = "a simple fishing pole"
else
  Zynthesys.fishing.config.POLE_NAME = "a deep sea fishing pole"
end

if not Zynthesys.fishing.config.LINE_STATUS.out then
  Zynthesys.fishing.start()
else
  cecho("\n&lt;white&gt;[&lt;gold&gt;Fishy Bonehead Alert!&lt;white&gt;]: &lt;magenta&gt;IS IT JUST ME? OR ARE WE ALREADY CASTED!? huh?")
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^gofish$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Fish Value</name>
						<script>Zynthesys.fishing.showStats()</script>
						<command></command>
						<packageName></packageName>
						<regex>^myfish$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Fishing Reset</name>
						<script>Zynthesys.fishing.reset()
</script>
						<command></command>
						<packageName></packageName>
						<regex>^zfish reset$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Fish bucket</name>
						<script>fish_bucket = matches[2]</script>
						<command></command>
						<packageName></packageName>
						<regex>^fishb (.*)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Cast direction</name>
						<script>castdir = matches[2]</script>
						<command></command>
						<packageName></packageName>
						<regex>^castdir (.*)$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Zynthesys Harvester</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Harvest</name>
						<script>vHarvestingPlants = true
vHarvestPlantsSet()</script>
						<command></command>
						<packageName></packageName>
						<regex>^vharv$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Enable/Disable Plants</name>
						<script>vTogPlant = matches[2]:title()
if matches[3] == "on" then
  Harvest_Table[vTogPlant] = true
  cecho(
    "\n&lt;white&gt;[&lt;gold&gt;Harvester&lt;white&gt;]:&lt;green&gt; " ..
    matches[2]:title() ..
    " is now&lt;white&gt; -&lt;green&gt; On"
  )
end
if matches[3] == "off" then
  Harvest_Table[vTogPlant] = false
  cecho(
    "\n&lt;white&gt;[&lt;gold&gt;Harvester&lt;white&gt;]:&lt;green&gt; " ..
    matches[2]:title() ..
    " is now&lt;white&gt; -&lt;red&gt; Off"
  )
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^vh (\w+) (on|off)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Display Harvest Table</name>
						<script>vHarvesterShow()</script>
						<command></command>
						<packageName></packageName>
						<regex>^vhshow$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Harvester Reset</name>
						<script>vHarvesterReset()</script>
						<command></command>
						<packageName></packageName>
						<regex>^vhreset$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Set Auto Rift Plants</name>
						<script>if matches[2] == "on" then
  vHerbAway = true
  cecho("\n&lt;white&gt;[&lt;gold&gt;Harvester&lt;white&gt;]:&lt;white&gt; Auto Rifting Plants!")
elseif matches[2] == "off" then
  vHerbAway = false
  cecho("\n&lt;white&gt;[&lt;gold&gt;Harvester&lt;white&gt;]:&lt;yellow&gt; Will Not Auto Rift Plants!")
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^vhar (on|off)$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Zynthesys zData</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Show All</name>
						<script>zData.showall()</script>
						<command></command>
						<packageName></packageName>
						<regex>^zData$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Show Table</name>
						<script>zData.showtable (matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^zData[ \.](\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Show Items</name>
						<script>zData.showitems (matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^(?i)\s*z[D]ata[ \.]items[ \.](\w+)\s*(?-i)$</regex>
					</Alias>
				</AliasGroup>
			</AliasGroup>
		</AliasGroup>
	</AliasPackage>
	<ActionPackage />
	<ScriptPackage>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>Achaean System</name>
			<packageName>Achaean System</packageName>
			<script></script>
			<eventHandlerList />
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>system</name>
				<packageName></packageName>
				<script></script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>methods</name>
					<packageName></packageName>
					<script>-- Utility function to check if a file exists

function fileExists(name)
  local f = io.open(name, "r")
  if f then
    f:close()
    return true
  else
    return false
  end
end




function ensureDirectoryExists(path)
    if not lfs.attributes(path, "mode") then
        lfs.mkdir(path)
        if DEBUG_MODE then
          cecho("&lt;green&gt;Created directory: " .. path .. "\n")
        end
    end
end


function ensureFileExists(directory, filename, mode, tableToUse)
    local fullPath = directory .. "/" .. filename

    -- Ensure the directory exists
    if not lfs.attributes(directory, "mode") then
        lfs.mkdir(directory)
        if DEBUG_MODE then
          cecho("&lt;green&gt;Created directory: " .. directory .. "\n")
        end
    end

    -- Check if the file exists; if not, create it
    if not fileExists(fullPath) then
        local file = io.open(fullPath, "w")
        if file then
            file:close()
           if DEBUG_MODE then
              cecho("&lt;green&gt;Created new file: " .. fullPath .. "\n")
            end
            if tableToUse then
                table.save(fullPath, tableToUse)
            end
        else
           if DEBUG_MODE then
              cecho("&lt;red&gt;Error: Could not create file: " .. fullPath .. "\n")
           end
            return
        end
    end

    -- Load or save the file depending on the mode
    if mode == "load" and tableToUse then
        table.load(fullPath, tableToUse)
       --- if DEBUG_MODE then
            cecho("&lt;green&gt;Loaded file: " .. fullPath .. "\n")
       -- end
    elseif mode == "save" and tableToUse then
        table.save(fullPath, tableToUse)
       -- if DEBUG_MODE then
            cecho("&lt;green&gt;Saved file: " .. fullPath .. "\n")
       -- end
    end
end

function deepCopy(orig)
  if type(orig) ~= "table" then
    return orig
  end
  local copy = {}
  for key, value in pairs(orig) do
    copy[key] = deepCopy(value)
  end
  return copy
end

function deepcopyaffstrack()
  tempafflist = {}
  for i in pairs(affstrack.score) do
    tempafflist[i] = affstrack.score[i]
  end
end

function deeppasteaffstrack()
  for i in pairs(affstrack.score) do
    affstrack.score[i] = tempafflist[i]
  end
end

function arraytest(testvar)
  cecho(testvar[1])
end

-- Function to find if a specific item exists in a list (with optional return index)
function listfind(list, var, returnIndex)
    for i = 1, #list do
        if list[i] == var then
            return returnIndex and i or true
        end
    end
    return false
end


--local myList = {"apple", "banana", "cherry"}
--local updatedList = listremove(myList, "banana")


-- Function to remove an item from a list
function listremove(list, var)
    local newList = {}  -- Create a new list to store items
    for i = 1, #list do
        if list[i] ~= var then  -- If the item is not equal to the one we're removing, add it to newList
            table.insert(newList, list[i])
        end
    end
    return newList  -- Return the new list
end


--numbers with commas
function math.reint(i)
  return tostring(i):reverse():gsub("%d%d%d", "%1,"):reverse():gsub("^,", "")
end

function tableLength(t)
  local count = 0
  for _ in pairs(t) do
    count = count + 1
  end
  return count
end

function tableToString(tbl)
  if tbl == nil then
    return ""
  end
  local result = {}
  for k, v in pairs(tbl) do
    if type(v) == "table" then
      local subResult = {}
      for subK, subV in pairs(v) do
        table.insert(subResult, tostring(subK) .. ": " .. tostring(subV))
      end
      table.insert(result, tostring(k) .. ": {" .. table.concat(subResult, ", ") .. "}")
    else
      table.insert(result, tostring(k) .. ": " .. tostring(v))
    end
  end
  return "{" .. table.concat(result, ", ") .. "}"
end

function printTable(t, indent)
  indent = indent or 0
  for k, v in pairs(t) do
    if type(v) == "table" then
      print(string.rep("  ", indent) .. tostring(k) .. ":")
      printTable(v, indent + 1)
    else
      print(string.rep("  ", indent) .. tostring(k) .. ": " .. tostring(v))
    end
  end
end

function tablesEqual(t1, t2)
  if #t1 ~= #t2 then
    return false
  end
  local seen = {}
  for _, v in ipairs(t1) do
    seen[v] = true
  end
  for _, v in ipairs(t2) do
    if not seen[v] then
      return false
    end
  end
  return true
end

function trimDecimal(num)
  -- Round the number to two decimal places
  local roundedNum = math.floor(num * 100 + 0.5) / 100
  -- Format the number to a string with two decimal places
  return string.format("%.2f", roundedNum)
end

-- Function to silence the output of tempTimer

function silentTempTimer(seconds, callback)
  local originalPrint = print
  -- Backup original print function
  print =
    function()
    end
  -- Override print function to do nothing
  tempTimer(
    seconds,
    function()
      print = originalPrint
      -- Restore original print function
      callback()
    end
  )
end

function deepcopy(orig)
  local orig_type = type(orig)
  local copy
  if orig_type == 'table' then
    copy = {}
    for orig_key, orig_value in next, orig, nil do
      copy[deepcopy(orig_key)] = deepcopy(orig_value)
    end
    setmetatable(copy, deepcopy(getmetatable(orig)))
  else
    -- number, string, boolean, etc
    copy = orig
  end
  return copy
end

--BETTER RANDOM

function betterRand()
  randomtable = {}
  for i = 1, 97 do
    randomtable[i] = math.random()
  end
  local x = math.random()
  local i = 1 + math.floor(97 * x)
  x, randomtable[i] = randomtable[i], x
  return x
end

-- Function to find the index of an element in a table

function findIndex(tbl, value)
  for i, v in ipairs(tbl) do
    if v == value then
      return i
    end
  end
  return nil
end

-- Function to copy a table

function copyTable(orig)
  local copy = {}
  for key, value in pairs(orig) do
    copy[key] = value
  end
  return copy
end

function toggleDebugMode()
  if DEBUG_MODE then
    DEBUG_MODE = false
    cecho("\n&lt;red&gt;Debug mode has been turned off.")
  else
    DEBUG_MODE = true
    cecho("\n&lt;green&gt;Debug mode has been turned on.")
  end
end

--function toggleGUIGauges()
--showGauges = showGauges or false
--if not showGauges then
--  showGauges = true
-- gui.gauges:show()
--  cecho("\n&lt;white&gt;(&lt;gold&gt;GUI&lt;white&gt;):&lt;green&gt; Gauges Enabled")
--elseif showGauges then
-- showGauges = false
-- gui.gauges:hide()
-- cecho("\n&lt;white&gt;(&lt;gold&gt;GUI&lt;white&gt;):&lt;red&gt; Gauges Disabled")
-- end
--end
-- 2. Utility Functions

function findkey(list, item, var)
  for v, k in pairs(list) do
    if v == item then
      return true
    end
  end
  return false
end

function removeElement(tbl, value)
  for i, v in ipairs(tbl) do
    if v == value then
      table.remove(tbl, i)
      --return true
    end
  end
  --return false
end

-- Utility function to check if any elements from subset are present in elements

function containsAny(elements, subset)
  for _, v in pairs(subset) do
    if table.contains(elements, v) then
      return true
    end
  end
  return false
end

function get_aff_modifiers(cure_type)
  local keys = {}
  local aff_modifiers = balance_data[cure_type].aff_modifiers
  for k, v in pairs(aff_modifiers) do
    local entry = {affliction = k, multiplier = v.multiplier, offset = v.offset}
    table.insert(keys, entry)
  end
  return keys
end

function myTimerEcho(DEBUG_MODE, balanceType, string, color)
  local nextline = ""
  local debug = DEBUG_MODE
  moveCursorEnd("main")
  if getCurrentLine() ~= "" then
    nextline = "\n"
  end
  if debug then
    cecho("" .. nextline .. "&lt;" .. color .. "&gt;" .. balance_data[balanceType].echo_title .. string)
  end
end

function myDebugEcho(color, string)
  local nextline = ""
  local debug = DEBUG_MODE
  moveCursorEnd("main")
  if getCurrentLine() ~= "" then
    nextline = "\n"
  end
  if debug then
    cecho("" .. nextline .. "&lt;" .. color .. "&gt;" .. string)
  end
end

function tryingtodo(what)
  -- Removing trailing semicolon
  local trimmedWhat = what:gsub(";$", "")
  -- Outputting the trimmed value
  cecho(
    "\n&lt;LightBlue&gt;CURES QUEUED: &lt;DarkSlateGrey&gt;(&lt;LightBlue&gt;" .. trimmedWhat .. "&lt;DarkSlateGrey&gt;)"
  )
end

function myEcho(color, string)
  local nextline = ""
  moveCursorEnd("main")
  if getCurrentLine() ~= "" then
    nextline = "\n"
  end
  cecho("" .. nextline .. "&lt;" .. color .. "&gt;" .. string)
end

function myHEcho(string)
  local nextline = ""
  --local debug = DEBUG_MODE
  moveCursorEnd("main")
  if getCurrentLine() ~= "" then
    nextline = "\n"
  end
  --if debug then
  hecho(nextline .. string)
  --end
end

-- Function to check if matches[2] is one of the desired words, case-insensitive

function checkWord(matches)
  -- Possible words to check
  local validWords = {"yes", "true", "on"}
  -- Generate all possible capitalizations for each word
  for _, word in ipairs(validWords) do
    local validCapitalizations = generateCapitalizations(word)
    -- Check if matches[2] matches any capitalization of the word
    for _, capitalization in ipairs(validCapitalizations) do
      if matches[2] == capitalization then
        return true
      end
    end
  end
  return false
end

-- Function to generate all capitalization combinations of a word

function generateCapitalizations(word)
  local combinations = {}

  local function generate(word, index)
    if index &gt; #word then
      table.insert(combinations, word)
      return
    end
    -- Try both lowercase and uppercase for each letter
    generate(
      word:sub(1, index - 1) .. word:sub(index, index):lower() .. word:sub(index + 1), index + 1
    )
    generate(
      word:sub(1, index - 1) .. word:sub(index, index):upper() .. word:sub(index + 1), index + 1
    )
  end

  generate(word, 1)
  return combinations
end

function checkBooleanString(value)
  -- Convert the input value to uppercase for case-insensitive comparison
  value = string.upper(value)
  -- Check if the value matches any of the predefined true values
  if value == "YES" or value == "ON" or value == "TRUE" or value == "1" then
    return true
  else
    return false
  end
end

function city_capture()
  for k, v in pairs(gmcp.Char.Status) do
    if k == "city" then
      if string.starts(v, "(None)") then
        return "None"
      end
      if string.starts(v, "Ashtan") then
        return "Ashtan"
      end
      if string.starts(v, "Eleusis") then
        return "Eleusis"
      end
      if string.starts(v, "Mhaldor") then
        return "Mhaldor"
      end
      if string.starts(v, "Hashan") then
        return "Hashan"
      end
      if string.starts(v, "Targossas") then
        return "Targossas"
      end
      if string.starts(v, "Cyrene") then
        return "Cyrene"
      end
    end
  end
end

function inaparty()
  if not gmcp.Comm then
    return false
  end
  for _, v in ipairs(gmcp.Comm.Channel.List) do
    if v.name == "party" then
      return true
    end
  end
  return false
end

function myclass(extract)
  local warriors = {"Paladin", "Runewarden", "Unnamable", "Infernal"}
  -- Check if gmcp.Char.Vitals is not nil and systemLoaded is true
  if gmcp.Char.Vitals and systemLoaded then
    -- Return "dragon" if the character race contains "Dragon"
    if string.match(gmcp.Char.Status.race, "Dragon") then
      return "dragon"
    end
     if extract then
        -- Check if the character class is one of the warrior classes
        if table.contains(warriors, gmcp.Char.Status.class) then
          -- Loop through gmcp.Char.Vitals.charstats table
          for _, v in pairs(gmcp.Char.Vitals.charstats) do
            if v:match("Spec:") then
              -- Extract the weapon specialization and return it in lowercase
              return string.gsub(v, "Spec: ", ""):lower()
            end
          end
          -- If no weapon specialization found, return a placeholder like "na"
          return "na"
        end
     end
    -- Return the character class in lowercase with leading/trailing spaces removed
    return gmcp.Char.Status.class:lower():trim()
  end
  -- Return a default value to avoid nil errors
  return "unknown"
end

function afflictionClassEnabled()
  local affliction_classes = {"apostate", "serpent", "shaman", "bard", "jester"}
  for _, v in pairs(affliction_classes) do
    if enemyclass[string.lower(v)].enabled then
      return true
    end
  end
  return false
end

function channels()
  display(gmcp.Comm.Channel.List)
end

keystolist =
  function(t)
    local r = {}
    for k, v in pairs(t) do
      r[#r + 1] = k
    end
    return r
  end

function listfind(list, var, vartwo)
  local re = false
  for i = 1, #list, 1 do
    if list[i] == var then
      re = true
      if vartwo then
        re = i
      end
    end
  end
  return re
end

function flip(var)
  if var == true then
    return false
  else
    return true
  end
end

function ts(var)
  if var &lt; os.clock() then
    return true
  else
    return false
  end
end

function highlightline(selectstring)
  selectString(selectstring, 1)
  setItalics(true)
  fg("red")
  resetFormat()
  deselect()
end

function highlightline(selectstring, bgcolor, fgcolor, bold, italics)
  setBold(false)
  setItalics(true)
  bg(bgcolor)
  fg(fgcolor)
  resetFormat()
  deselect()
end

function boxDisplay(msg, color)
  deselect()
  local colTbl = {}
  if color then
    colTbl = string.split(color, ":")
    for k = 1, 2 do
      if colTbl[k] == "" then
        colTbl[k] = nil
      end
    end
    if colTbl[2] then
      bg(colTbl[2])
    end
  end
  colTbl[1] = colTbl[1] or "red"
  fg(colTbl[1])
  local leng = ((2 * string.len(msg)) + 11)
  local mes = string.upper(msg)
  echo("\n ")
  echo(string.rep("-", leng + 2))
  echo(" \n|     " .. mes .. " | " .. mes .. "     |\n ")
  echo(string.rep("-", leng + 2))
  echo(" \n")
  resetFormat()
end


--function reloadMethodsFile()
  --dofile(getMudletHomeDir() .. "/Achaean System/system/methods.lua")
  -- Adjust the path as needed
 -- echo("\Methods Loaded")
--end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>login</name>
					<packageName></packageName>
					<script>function initializeFileLoads()
    -- Define the base directories
    local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
    local baseDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System"
    local tablesDir = baseDir .. "/Tables"

    -- Ensure directories exist
    local function ensureDirectoryExists(path)
        if not lfs.attributes(path, "mode") then
            lfs.mkdir(path)
            if DEBUG_MODE then cecho("&lt;green&gt;Created directory: " .. path .. "\n") end
        end
    end

    -- Ensure directories for Mudlet and Tables exist
    ensureDirectoryExists(baseDir)
    ensureDirectoryExists(tablesDir)
    if DEBUG_MODE then cecho("&lt;green&gt;File directories initialized.\n") end

    -- Special handling for the NDB file
    local ndbFile = tablesDir .. "/ndbData.lua"
    if not fileExists(ndbFile) then
        --cecho("&lt;red&gt;\nName database not initialized. Loading default settings.\n")
        NDB_Install()
    else
        -- Load NDB if it exists
        NDB = {cityList = {}, cityEnemies = {}}
        table.load(ndbFile, NDB)
        if DEBUG_MODE then cecho("&lt;green&gt;Name database loaded.\n") end
    end

    -- Define files to load and their associated global tables
    local filesToLoad = {
        {dir = tablesDir, file = "configuration.lua", table = settings},
        {dir = tablesDir, file = "enemylist.lua", table = enemylist},
        {dir = tablesDir, file = "allylist.lua", table = allylist},
        {dir = tablesDir, file = "cityallylist.lua", table = NDB.cityList},
        {dir = tablesDir, file = "cityenemylist.lua", table = NDB.cityEnemies},
        {dir = tablesDir, file = "huntroutes.lua", table = routedb},
        {dir = tablesDir, file = "huntmasterlist.lua", table = targetMasterList},
        {dir = tablesDir, file = "areaignorelist.lua", table = areaIgnoreList},
        {dir = tablesDir, file = "huntsettings.lua", table = huntSettingsData},
        {dir = tablesDir, file = gmcp.Char.Status.class:lower() .. "prios.lua", table = afflictions},
        {dir = tablesDir, file = "curinglist.lua", table = curinglist},
        {dir = tablesDir, file = "defuplist.lua", table = defenses},
    }

    -- Load or initialize each file
    for _, fileInfo in ipairs(filesToLoad) do
        -- Ensure the table exists
        if not fileInfo.table then
            if fileInfo.file:find("cityallylist") or fileInfo.file:find("cityenemylist") then
                -- Handle nested tables for NDB
                NDB = NDB or {}
                if fileInfo.file:find("cityallylist") then
                    NDB.cityList = {}
                    fileInfo.table = NDB.cityList
                    for _, ally in ipairs(NDB.cityList) do
                        NDB_Acquire(ally)
                    end
                elseif fileInfo.file:find("cityenemylist") then
                    NDB.cityEnemies = {}
                    fileInfo.table = NDB.cityEnemies
                    for _, enemy in ipairs(NDB.cityEnemies) do
                        NDB_Acquire(enemy)
                    end
                end
            else
                -- Top-level table
                fileInfo.table = {}
            end
        end

        -- Load the file
        ensureFileExists(fileInfo.dir, fileInfo.file, "load", fileInfo.table)
    end

    local mudletDir = getMudletHomeDir() .. "/Achaean System"

    local filesToDofile = {
        {dir = "curing", file = "remedies.lua"},
        {dir = "defenses", file = "defenses.lua"},
        {dir = "system", file = "srvqueue.lua"},
        {dir = "hunting", file = "hunting.lua"},
        {dir = "system", file = "system.lua"},
        {dir = "combat", file = "blademaster.lua"}
    }
    
    -- Execute each file
    for _, fileInfo in ipairs(filesToDofile) do
        local fullPath = mudletDir .. "/" .. fileInfo.dir .. "/" .. fileInfo.file
        if fileExists(fullPath) then
            dofile(fullPath)
            if DEBUG_MODE then  cecho("&lt;green&gt;Loaded file: " .. fullPath .. "\n") end
        else
            if DEBUG_MODE then  cecho("&lt;yellow&gt;Warning: File not found: " .. fullPath .. "\n") end
        end
    end


    cecho("&lt;green&gt;All files loaded successfully.\n")

    -- Version handling
    local versionFile = getMudletHomeDir() .. "/Achaean System/system/version.lua"
    version = fileExists(versionFile) and dofile(versionFile) or 'dev'
    cecho("&lt;green&gt;System version: " .. version .. "\n")
end


function initializeFileSaves()
    -- Define the base directories
    local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
    local baseDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System"
    local tablesDir = baseDir .. "/Tables"

    -- Ensure directories for Mudlet and Tables exist
    local function ensureDirectoryExists(path)
        if not lfs.attributes(path, "mode") then
            local success, err = pcall(function() lfs.mkdir(path) end)
            if success then
                if DEBUG_MODE then cecho("&lt;green&gt;Created directory: " .. path .. "\n") end
            else
                cecho("&lt;red&gt;Error creating directory: " .. err .. "\n")
            end
        end
    end

    ensureDirectoryExists(baseDir)
    ensureDirectoryExists(tablesDir)
    if DEBUG_MODE then cecho("&lt;green&gt;File directories initialized.\n") end

    -- Define files to save and their associated global tables
    local filesToSave = {
        {dir = tablesDir, file = "configuration.lua", table = settings},
        {dir = tablesDir, file = "enemylist.lua", table = enemylist},
        {dir = tablesDir, file = "allylist.lua", table = allylist},
        {dir = tablesDir, file = "cityallylist.lua", table = NDB.cityList},
        {dir = tablesDir, file = "cityenemylist.lua", table = NDB.cityEnemies},
        {dir = tablesDir, file = "huntroutes.lua", table = routedb},
        {dir = tablesDir, file = "huntmasterlist.lua", table = targetMasterList},
        {dir = tablesDir, file = "areaignorelist.lua", table = areaIgnoreList},
        {dir = tablesDir, file = "huntsettings.lua", table = huntSettingsData},
        {dir = tablesDir, file = gmcp.Char.Status.class:lower() .. "prios.lua", table = afflictions},
        {dir = tablesDir, file = "curinglist.lua", table = curinglist},
        {dir = tablesDir, file = "defuplist.lua", table = defenses},
    }

    -- Save each file
    for _, fileInfo in ipairs(filesToSave) do
        -- Check if the table exists, if not, initialize it
        if not fileInfo.table then
            fileInfo.table = {}  -- Initialize an empty table if it's nil
            if DEBUG_MODE then cecho("&lt;yellow&gt;Warning: Table not found for " .. fileInfo.file .. ". Initializing as empty.\n") end
        end

        -- Save the file
        ensureFileExists(fileInfo.dir, fileInfo.file, "save", fileInfo.table)
    end

    if DEBUG_MODE then cecho("&lt;green&gt;All files saved successfully.\n") end
end




function arenaEvent()
  systemOnRespawn()
  send("stop")
  expandAlias("mstop")
  failsafe = false
 -- disableTimer("failsafe")
  send("inq all arrows")
  if myclass() == "serpent" then
    send("order treesnake passive")
  end
end

function systemOnDeath()
  if not systemPaused then
    --initializeFileSaves()
    systemPaused = true
    cecho("\nSystem has been " .. (systemPaused and "&lt;red&gt;paused." or "&lt;green&gt;unpaused."))
  end
end

function systemOnRespawn()
  if systemPaused then
    systemPaused = false
    cecho("\nSystem has been " .. (systemPaused and "&lt;red&gt;paused." or "&lt;green&gt;unpaused."))
  end
  fortify:reset()
  remedy:reset()
  initializeMyAffs()
  initializeMyDefs()
  --initializeMyPipeline()  
  initializePlayer2History()
  --initializeDefupList()
  initializeHitCount()  
  initializeHuntingFlags()
  initializeCureBalance()
  initializeMyStackableAffs()
  initializeLimbDamageTypes()
  initializeSelfPrecache()
  initializeRiftables()
  initializePipeSettings()
  initializeVitalsData()
  initializeVitals()
  resetActiveDefenses()
  resetLimbs()
  class_reset()
  combat_reset()  
  initializeCombatFlags()
  --initializeBreakpointTable()
  initializeCombatTables()
  initializeFileLoads()
end

--on system login.

function systemLogin()
	defenses = defenses or {}
	afflictions = afflictions or {}
  
  settings = {
    cmdsep = ";",
    ansi = false,
    mxp = false,
    batching = false,
    gagInventory = false,
    gmcpLoaded = false,
    pagelength = "",
    screenwidth = "",
    timeout = "",
    promptEnabled = false,
    promptPercentages = false,
    showGauges = false,
    showInventory = false,
    showPrompt = false,
    showScrollbar = false,
    autoopendoors = false,
    showqueuealerts = false,
    killwarning = false,
    uamessages = false,
    myclass = "",
    cureMethod = "herbal",
    curingset = "",
    curing = false,
    advancedcuring = false,
    reporting = false,
    defences = false,
    sipping = false,
    afflictions = false,
    insomnia = false,
    clot = false,
    mount = "",
    usevault = false,
    curingset = "",
    siphealth = "",
    healthaffsabove = "",
    sipmana = "",
    manathreshold = "",
    mosshealth ="",
    mossmana = "",
    sippriority = ""
  }
  
  
  
  
  initializeCombatFlags()
  initializeCombatTables() 
 	initializeFlags()
	initializeHuntingFlags()
	initializeDataStructures()
	initializeCureBalance()
	initializeLists()
	initializeSelfPrecache()
	initializeRiftables()
	initializePipeSettings()
	initializeScrollbar()
	initializeGUIContainers()
  
  	cecho("&lt;green&gt;\nLoading System Settings")
  
end

--failsafe save on system kick.

function systemExit()
  resetActiveDefenses()
  initializeFileSaves()
  GUI.scorewindow:save()
  GUI.mapwindow:save()
  GUI.chatwindow:save()
  GUI.roomwindow:save()
  GUI.affwindow:save()
  GUI.datawindow:save()
end

--on manual logout.

function systemLogout()
  systemLoaded = false

  GUI.scorewindow:save()
  GUI.mapwindow:save()
  GUI.chatwindow:save()
  GUI.roomwindow:save()
  GUI.affwindow:save()
  GUI.datawindow:save()
  
  resetActiveDefenses()
  initializeFileSaves()
end

--on system loaded gmcp.

function onProtocolEnabled(_, protocol)
  if protocol == "gmcp.Char.Vitals" then
    if settings == nil then return end
        settings.gmcpLoaded = true
        if not (systemLoaded) then
          initializeSettings()  
          reloadCombatFile()    
        end
  end
end

-- Register the event with the Mudlet Event Engine
--registerAnonymousEventHandler("arenaEvent", arenaEvent)
--registerAnonymousEventHandler("characterDeath", systemOnDeath)
registerAnonymousEventHandler("characterRespawn", systemOnRespawn)
registerAnonymousEventHandler("sysExitEvent", systemExit)
registerAnonymousEventHandler("sysDisconnectionEvent", systemLogout)
registerAnonymousEventHandler("sysConnectionEvent", systemLogin)
registerAnonymousEventHandler("gmcp.Char.Vitals", onProtocolEnabled)</script>
					<eventHandlerList />
				</Script>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>developer</name>
					<packageName></packageName>
					<script>-- Can leave this folder disabled if not actively developing. 
-- This is a helper folder to update scripts to memory. After changes are made in IDE.</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>reloadSystem</name>
						<packageName></packageName>
						<script>reloadSystem()</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>reloadSrvQueue</name>
						<packageName></packageName>
						<script>reloadSrvQueue()</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>reloadRemediesQueue</name>
						<packageName></packageName>
						<script>reloadRemediesQueue()</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>reloadFortifyQueue</name>
						<packageName></packageName>
						<script>reloadFortifyQueue()</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>reloadHuntingFile</name>
						<packageName></packageName>
						<script>reloadHuntingFile()</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>uploadToGit</name>
						<packageName></packageName>
						<script>function uploadMudletProfileToGit(commitMessage)
    local profilePath = getMudletHomeDir().."Achaean System" -- Automatically gets the Mudlet profile directory
    local versionFile = profilePath .. "/system/version.lua" -- Path to the version file
    local version = "dev" -- Default version if not found

    -- Load version if the file exists
    if io.open(versionFile, "r") then
        local versionData = dofile(versionFile)
        version = versionData or version
    end

    -- Append version to the commit message
    commitMessage = (commitMessage or "Updated Mudlet profile") .. " (Version: " .. version .. ")"

    -- Escape special characters in the commit message
    commitMessage = commitMessage:gsub('"', '\\"')

    -- Git commands
    local gitCommandTemplate = [[
        cd "%s" &amp;&amp;
        git add . &amp;&amp;
        git commit -m "%s" &amp;&amp;
        git push
    ]]
    local gitCommand = string.format(gitCommandTemplate, profilePath, commitMessage)

    -- Execute the Git command and capture the output
    local result = io.popen(gitCommand):read("*a")

    -- Output the result in Mudlet
    cecho("\n&lt;green&gt;Git Output:\n" .. result)
end
</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>data</name>
					<packageName></packageName>
					<script></script>
					<eventHandlerList />
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>config</name>
						<packageName></packageName>
						<script></script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>initializeFlags</name>
							<packageName></packageName>
							<script>function initializeFlags()
 
  --defensesEnabled = false
  combatLoaded = false
  corpselocation = ""
  classchange = false
  serverside = true
  dead = false
  siphealth = -1
  sipmana = -1
  sipbalance = true
  fullwillandmana = true
  mossbalance = true
  magirobes = false
  mossenabled = true
  manathreshold = 1
  reckless_check = 0
  currentclass = myclass() or "blademaster"
  --siphealthfor = 0.20
  healthaffsabove = tonumber(settings.healthaffsabove)
  sippriority = settings.sippriority
  manadanger = 4515 - (4515 * 0.25)
  healthdanger = 4784 - (4784 * 0.25)
  mindseye = mindseye or false
  preppoint = 4  
  lustlist = {}
  predictions = {}
  groupedByArea = {}
  Enemy_Balance_Data = {}
  
  	target = "none"

    -- Reset the limb tracking variables, but only if they are not already initialized
    		limbdamage = {}

  
  slainPlayers = {} -- .json api newsfeed table.
  nowparrying = "none"  
  curingset = settings.curingset
  DEBUG_MODE = settings.debug
  cmdsep = settings.cmdsep
  class = settings.myclass
  cureMethod = settings.cureMethod
  batching = settings.batching
  showGauges = settings.showGauges
  gagInventory = settings.gagInventory
  showScrollbar = settings.showScrollbar
  promptEnabled = settings.promptEnabled
  promptPercentages = settings.promptPercentages
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>initializeSettings</name>
							<packageName></packageName>
							<script>--on gmcp connection.
function initializeSettings()
        
  systemLoaded = true
  systemPaused = false
  
  sendGMCP("Char.Items.Inv")
  sendGMCP("IRE.Rift.Request")
  sendGMCP("Comm.Channel.Players")
  sendGMCP([[Core.Supports.Add ["Comm.Channel 1"] ]])
  sendGMCP('Core.Supports.Add ["IRE.Target 1"]')
  sendGMCP('Core.Supports.Add ["IRE.Time 1"]')
  sendGMCP('Core.Supports.Add ["IRE.Tasks 1"]')
  sendGMCP('Core.Supports.Add ["IRE.Misc 1"]')
  sendGMCP('Core.Supports.Add ["IRE.Display 1"]')
  sendGMCP('Core.Supports.Add ["IRE.Sound 1"]')
  send("inv reset")
  riftcheck()
  resetLimbs()
  class_reset()
  combat_reset()
  
  initializeVitals()
  
  initializeCurativeTable()
  
  initializeMyAffs()
  
  initializeMyDefs()
  
  initializeCombatFlags()
  initializeCombatTables()

  initializeFileLoads()
  
  initializeFlags() 

  --update gui
  initializeGUIWindows()
  initializeGUIGauges()
  --combat

	NDB_loadHighlights()
  
  setDefensePrios()
  
  send("plist")
  send("queue addclear eqbal def")
  send("date")
  
  createQueue("eqbal")
  createQueue("bal")
  createQueue("eq")
  createQueue("class")
  createQueue("nobal")
  
  if settings.showScrollbar then
		enableScrollBar("main")
	else
		disableScrollBar()
	end

end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>initializeDataStructures</name>
							<packageName></packageName>
							<script>-- Main function to initialize all data structures
function initializeDataStructures()
  initializeMyAffs()
  initializeMyDefs()
  initializeActiveCureData()
  initializePipeLine()
  initializeAllyList()
  initializeEnemyList()
  initializeRouteDB()
  initializeInv()
  initializeGUI()
  initializeInRift()
  initializeInvRoom()
  initializeVitalsData()
  initializeExtermList()
  initializeRoomStuffList()
  initializeJane()
  initializePlayer2History()
  initializePingCalculation()
  initializePersonalBalanceStartTimes()
  initializeEnemyBalanceStartTimes()
  initializeMyStackableAffs()
  initializeHumourAffTable()
  initializeEnemyClass()
  initializeSkillTreeList()
  initializeHerbConversion()
  initializeTattoos()
  initializeHitCount()
  initializePercentages()
  initializeParryList()
  initializeBattleRageList()
  initializeBreathWeaponTypes()
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>fetchGameFeed</name>
							<packageName></packageName>
							<script>-- Helper function to format the date and adjust for the timezone

function formatEventTime(eventTime)
  -- Parse the original event time: "2024-12-07 22:39:08"
  local year, month, day, hour, min, sec = eventTime:match("(%d+)-(%d+)-(%d+) (%d+):(%d+):(%d+)")
  -- Convert the hour to number for math operations
  hour = tonumber(hour)
  -- Add 5 hours to the time (adjust for the time difference)
  hour = (hour + 4) % 24
  -- Wrap the hour back around if it exceeds 24
  -- Map the numeric month to the abbreviated month name
  local months =
    {"Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"}
  local monthName = months[tonumber(month)]
  -- Convert the time from 24-hour to 12-hour format
  local hour12 = hour % 12
  if hour12 == 0 then
    hour12 = 12
  end
  -- Special case for midnight
  -- Format the new time string: "Dec-07 2:39"
  return string.format("%s-%02d %d:%02d", monthName, tonumber(day), hour12, tonumber(min))
end

-- Event handler triggered when the HTTP request is successfully completed

function sysGetHttpDoneHandler(event, url, response)
  if systemLoaded then
    -- Check if the response came from the correct URL
    if url:match("https://api.achaea.com/gamefeed.json") then
      -- Parse the JSON response (using yajl in Mudlet)
      local data = yajl.to_value(response)
      -- Ensure the data is valid and process each event
      if data and type(data) == "table" then
        local lastPlayerName = nil
        -- Track the most recent player name
        for _, event in ipairs(data) do
          -- Skip arena death events (caption contains "Arena Duel")
          if event.caption ~= "Arena Duel" then
            -- Only handle Player Death events
            if event.type == "DEA" then
              local playerName = event.description:match("^(%S+) was slain")
              -- Extract the slain player's name
              if playerName then
                -- Get the event timestamp and format it to show only time (HH:MM)
                local eventTime = event.date
                -- Format the event time for better readability, with time adjustment
                local formattedTime = formatEventTime(eventTime)
                -- Check if the player is already in the table, and if not, add them
                if not slainPlayers[eventTime] then
                  -- Add the player to the table with the timestamp as the key
                  slainPlayers[eventTime] = playerName
                  -- Display the player death event
                  --GUI.datawindow:activateTab("Misc")
                  cecho(
                    string.format(
                      "[%s]: &lt;red&gt;%s&lt;reset&gt; - %s \n", formattedTime, playerName, event.description
                    )
                  )
                  GUI.deathsight:cecho(
                    string.format(
                      "[%s]: &lt;red&gt;%s&lt;reset&gt; - %s \n", formattedTime, playerName, event.description
                    )
                  )
                  -- Update the last added player
                  lastPlayerName = playerName
                end
              end
            end
          end
        end
        -- Only send the caress skull command for the most recent player added
        if lastPlayerName and systemLoaded then
          if not hunting and not failsafe then
            if not balance_data.balance.in_use then
              if
                not table.contains(NDB.cityEnemies, lastPlayerName) and
                not table.contains(enemylist, lastPlayerName)
              then
                if
                  table.contains(NDB.cityList, lastPlayerName) or
                  table.contains(allylist, lastPlayerName) or
                  NDB_isCitizenOf("Eleusis", lastPlayerName) or
                  NDB_isCitizenOf("Cyrene", lastPlayerName)
                then
                  if not hunting and not failsafe and not meditating and not systemPaused then
                   -- send("caress skull " .. lastPlayerName)
                  end
                end
              end
            end
          end
        end
      end
    end
  end
end

-- Register the event handler for the HTTP request completion
registerAnonymousEventHandler("sysGetHttpDone", "sysGetHttpDoneHandler")
-- Event handler triggered when the HTTP request fails

function sysGetHttpErrorHandler(event, response, url)
  if systemLoaded then
    -- Print a debug message to confirm the event was raised
    if DEBUG_MODE then
      cecho(
        "&lt;red&gt;sysGetHttpError event triggered! URL: " ..
        url ..
        " Error: " ..
        response ..
        "&lt;reset&gt;\n"
      )
    end
  end
end

-- Register the event handler for HTTP errors
registerAnonymousEventHandler("sysGetHttpError", "sysGetHttpErrorHandler")
-- Function to fetch the game feed

function fetchGameFeed()
  if systemLoaded then
    -- Print a debug message to confirm the function is called
    if DEBUG_MODE then
      cecho("&lt;green&gt;Fetching game feed...&lt;reset&gt;\n")
    end
    -- Send the HTTP GET request to the game feed API
    getHTTP("https://api.achaea.com/gamefeed.json")
  end
end</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>curing</name>
						<packageName></packageName>
						<script></script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>initializeVitals</name>
							<packageName></packageName>
							<script>function initializeVitals()
  vitals =
    {
      health =
        {
          current = tonumber(gmcp.Char.Vitals.hp),
          previous = tonumber(gmcp.Char.Vitals.hp),
          halflife = tonumber(gmcp.Char.Vitals.maxhp) * 0.50,
        },
      maxHealth = tonumber(gmcp.Char.Vitals.maxhp),
      mana =
        {
          current = tonumber(gmcp.Char.Vitals.mp),
          previous = tonumber(gmcp.Char.Vitals.mp),
          halflife = tonumber(gmcp.Char.Vitals.maxmp) * 0.50,
        },
      maxMana = tonumber(gmcp.Char.Vitals.maxmp),
      ep =
        {
          current = tonumber(gmcp.Char.Vitals.ep),
          previous = tonumber(gmcp.Char.Vitals.ep),
          halflife = tonumber(gmcp.Char.Vitals.maxep) * 0.50,
        },
      maxEp = tonumber(gmcp.Char.Vitals.maxep),
      wp =
        {
          current = tonumber(gmcp.Char.Vitals.wp),
          previous = tonumber(gmcp.Char.Vitals.wp),
          halflife = tonumber(gmcp.Char.Vitals.maxwp) * 0.50,
        },
      maxWp = tonumber(gmcp.Char.Vitals.maxwp),
      rank = {current = tonumber(string.cut(gmcp.Char.Status.xp, 2)), previous = tonumber(string.cut(gmcp.Char.Status.xp, 2)), halflife = 50},
      maxRank = 100,
    }
  interpolationState = {health = false, mana = false, ep = false, wp = false, rank = false}
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>initializeMyAffs</name>
							<packageName></packageName>
							<script>-- Function to initialize myaffs and curinglist
function initializeMyAffs()
    myaffs = {}
    curinglist = {}
    sentPriorityCommands = {}
    resetCuringList()
    
end


-- Function to reset curinglist to default values
--function resetCuringList()
   -- for key, value in pairs(afflictions) do      
   --     curinglist[key] = value.priority
  --  end
--end

-- Function to reset curinglist using a deep copy
function resetCuringList()
    for key, value in pairs(afflictions) do
        curinglist[key] = deepCopy(value.priority)
    end
end

-- Function to update curinglist dynamically
function updateCuringList()
    for key, value in pairs(afflictions) do
        -- Only add afflictions not already in curinglist
        if curinglist[key] == nil then
            curinglist[key] = value.priority
        end
    end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>initializeCurativeTable</name>
							<packageName></packageName>
							<script>function initializeCurativeTable()
  local cs = cmdsep
  initializeMyStackableAffs()
  afflictions =
    {
      ["ablaze"] =
        {
          name = "ablaze",
          priority = 1,
          prompt = "&lt;white&gt;ablaze",
          cures =
            {
              {
                type = "salve",
                command = "apply mending to body",
                cooldown = "salve",
                requires = "salve",
                handle = 1,
                blockers = {"slickness", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 2,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 3,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["addiction"] =
        {
          name = "addiction",
          priority = 3,
          prompt = "&lt;red&gt;addiction",
          cures =
            {
              {
                type = "herb",
                command =
                  {herbal = "outr ginseng"..cs.."eat ginseng", alchemical = "outr ferrum"..cs.."eat ferrum"},
                cooldown = "herb",
                requires = "herb",
                handle = 1,
                blockers = {"anorexia", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 2,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 3,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["airfisted"] =
        {
          name = "airfisted",
          priority = 1,
          prompt = "&lt;red&gt;airfisted",
          cures =
            {
              {
                type = "time",
                command = "",
                cooldown = "time",
                requires = "time",
                handle = 1,
                blockers = {""},
                seconds = 15.0,
              },
            },
        },
      ["aeon"] =
        {
          name = "aeon",
          priority = 1,
          prompt = "&lt;red&gt;AEON",
          cures =
            {
              {
                type = "smoke",
                command =
                  {herbal = "light elm"..cs.."smoke elm", alchemical = "light cinnabar"..cs.."smoke cinnabar"},
                cooldown = "smoke",
                requires = "smoke",
                handle = 1,
                blockers = {"asthma", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 2,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 3,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["anorexia"] =
        {
          name = "anorexia",
          priority = 1,
          prompt = "&lt;red&gt;anorexia",
          cures =
            {
              {
                type = "focus",
                command = "focus",
                cooldown = "focus",
                requires = "focus",
                handle = 1,
                blockers = {"impatience", "guilt", "fulminated", "hecate", "sleeping"},
              },
              {
                type = "salve",
                command = "apply epidermal to body",
                cooldown = "salve",
                requires = "salve",
                handle = 2,
                blockers = {"slickness", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 3,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 4,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["asthma"] =
        {
          name = "asthma",
          priority = 3,
          prompt = "&lt;red&gt;asthma",
          cures =
            {
              {
                type = "herb",
                command = {herbal = "outr kelp"..cs.."eat kelp", alchemical = "outr aurum"..cs.."eat aurum"},
                cooldown = "herb",
                requires = "herb",
                handle = 1,
                blockers = {"anorexia", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 2,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 4,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["asphyxiating"] =
        {
          name = "asphyxiating",
          priority = 3,
          prompt = "&lt;red&gt;asphyxiating",
          cures =
            {
              {
                type = "time",
                command = "",
                cooldown = "time",
                requires = "time",
                handle = 1,
                blockers = {""},
                seconds = 0.0,
              },
            },
        },
      ["agoraphobia"] =
        {
          name = "agoraphobia",
          priority = 1,
          prompt = "&lt;white&gt;agoraphobia",
          cures =
            {
              {
                type = "focus",
                command = "focus",
                cooldown = "focus",
                requires = "focus",
                handle = 1,
                blockers = {"impatience", "guilt", "fulminated", "hecate", "sleeping"},
              },
              {
                type = "herb",
                command =
                  {herbal = "outr lobelia"..cs.."eat lobelia", alchemical = "outr argentum"..cs.."eat argentum"},
                cooldown = "herb",
                requires = "herb",
                handle = 2,
                blockers = {"anorexia", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 3,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 4,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["bound"] =
        {
          name = "bound",
          priority = 1,
          prompt = "&lt;white&gt;bound",
          cures =
            {
              {
                type = "balance",
                command = "writhe",
                cooldown = "writhe",
                requires = "balance",
                handle = 1,
                blockers = {"sleeping"},
              },
            },
        },
      ["burning"] =
        {
          name = "burning",
          priority = 1,
          prompt = "&lt;dark_orange&gt;brn(&lt;white&gt;" .. mystackableaffs.burning .. "&lt;dark_orange&gt;)",
          cures =
            {
              {
                type = "salve",
                command = "apply mending to body",
                cooldown = "salve",
                requires = "salve",
                handle = 1,
                blockers = {"slickness", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 2,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 3,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["blackout"] =
        {
          name = "blackout",
          priority = 1,
          prompt = "&lt;red&gt;blackout",
          cures =
            {
              --{
               -- type = "time",
               -- command = "",
               -- cooldown = "time",
              --  requires = "time",
               -- handle = 99,
              --  blockers = {""},
              --  seconds = 4.0,
              --},
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 1,
                blockers = {"paralysis", "sleeping"},
              },
            },
        },
      ["blistered"] =
        {
          name = "blistered",
          priority = 1,
          prompt = "&lt;red&gt;blistered",
          cures =
            {
              {
                type = "time",
                command = "",
                cooldown = "time",
                requires = "time",
                handle = 1,
                blockers = {""},
                seconds = 0.0,
              },
            },
        },
      ["bruisedribs"] =
        {
          name = "bruisedribs",
          priority = 1,
          prompt = "&lt;red&gt;bruisedribs",
          cures =
            {
              {
                type = "time",
                command = "",
                cooldown = "time",
                requires = "time",
                handle = 1,
                blockers = {""},
                seconds = 30.0,
              },
            },
        },
      ["brokenleftleg"] =
        {
          name = "brokenleftleg",
          priority = 1,
          prompt = "&lt;white&gt;LL1",
          cures =
            {
              {
                type = "salve",
                command = "apply mending to left leg",
                cooldown = "salve",
                requires = "salve",
                handle = 1,
                blockers = {"slickness", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 2,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 3,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["brokenrightleg"] =
        {
          name = "brokenrightleg",
          priority = 1,
          prompt = "&lt;white&gt;RL1",
          cures =
            {
              {
                type = "salve",
                command = "apply mending to right leg",
                cooldown = "salve",
                requires = "salve",
                handle = 1,
                blockers = {"slickness", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 2,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 3,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["brokenleftarm"] =
        {
          name = "brokenleftarm",
          priority = 1,
          prompt = "&lt;white&gt;LA1",
          cures =
            {
              {
                type = "salve",
                command = "apply mending to right arm",
                cooldown = "salve",
                requires = "salve",
                handle = 1,
                blockers = {"slickness", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 2,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 3,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["brokenrightarm"] =
        {
          name = "brokenrightarm",
          priority = 1,
          prompt = "&lt;white&gt;RA1",
          cures =
            {
              {
                type = "salve",
                command = "apply mending to left arm",
                cooldown = "salve",
                requires = "salve",
                handle = 1,
                blockers = {"slickness", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 2,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 3,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["calcifiedskull"] =
        {
          name = "calcifiedskull",
          priority = 1,
          prompt = "&lt;white&gt;calcifiedskull",
          cures =
            {
              {
                type = "salve",
                command = "apply restoration to head",
                cooldown = "salve",
                requires = "salve",
                handle = 1,
                blockers = {"slickness", "sleeping"},
              },
            },
        },
      ["calcifiedtorso"] =
        {
          name = "calcifiedtorso",
          priority = 1,
          prompt = "&lt;white&gt;calcifiedtorso",
          cures =
            {
              {
                type = "salve",
                command = "apply restoration to body",
                cooldown = "salve",
                requires = "salve",
                handle = 1,
                blockers = {"slickness", "sleeping"},
              },
            },
        },
      ["coldfate"] =
        {
          name = "coldfate",
          priority = 1,
          prompt = "&lt;red&gt;coldfate",
          cures =
            {
              {
                type = "time",
                command = "",
                cooldown = "time",
                requires = "time",
                handle = 1,
                blockers = {""},
                seconds = 0.0,
              },
            },
        },
      ["condemned"] =
        {
          name = "condemned",
          priority = 1,
          prompt = "&lt;red&gt;condemned",
          cures =
            {
              {
                type = "time",
                command = "",
                cooldown = "time",
                requires = "time",
                handle = 1,
                blockers = {""},
                seconds = 0.0,
              },
            },
        },
      ["concussion"] =
        {
          name = "concussion",
          priority = 1,
          prompt = "&lt;white&gt;concussion",
          cures =
            {
              {
                type = "salve",
                command = "apply restoration to head",
                cooldown = "salve",
                requires = "salve",
                handle = 1,
                blockers = {"slickness", "sleeping"},
              },
            },
        },
      ["claustrophobia"] =
        {
          name = "claustrophobia",
          priority = 1,
          prompt = "&lt;white&gt;claustrophobia",
          cures =
            {
              {
                type = "focus",
                command = "focus",
                cooldown = "focus",
                requires = "focus",
                handle = 1,
                blockers = {"impatience", "guilt", "fulminated", "hecate", "sleeping"},
              },
              {
                type = "herb",
                command =
                  {herbal = "outr lobelia"..cs.."eat lobelia", alchemical = "outr argentum"..cs.."eat argentum"},
                cooldown = "herb",
                requires = "herb",
                handle = 2,
                blockers = {"anorexia", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 3,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 4,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["crackedribs"] =
        {
          name = "crackedribs",
          priority = 1,
          prompt = "&lt;cyan&gt;(bru &lt;white&gt;" .. mystackableaffs.crackedribs .. "&lt;cyan&gt;)&lt;white&gt;",
          cures =
            {
              {
                type = "sip",
                command = "apply health",
                cooldown = "sip",
                requires = "sip",
                handle = 1,
                blockers = {"slickness", "sleeping"},
              },
            },
        },
      ["cremated"] =
        {
          name = "cremated",
          priority = 1,
          prompt = "&lt;red&gt;cremated",
          cures =
            {
              {
                type = "time",
                command = "",
                cooldown = "time",
                requires = "time",
                handle = 1,
                blockers = {""},
                seconds = 60.0,
              },
            },
        },
      ["crushedthroat"] =
        {
          name = "crushedthroat",
          priority = 1,
          prompt = "&lt;white&gt;crushedthroat",
          cures =
            {
              {
                type = "salve",
                command = "apply mending to head",
                cooldown = "salve",
                requires = "salve",
                handle = 1,
                blockers = {"slickness", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 2,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 3,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["confusion"] =
        {
          name = "confusion",
          priority = 1,
          prompt = "&lt;white&gt;confusion",
          cures =
            {
              {
                type = "focus",
                command = "focus",
                cooldown = "focus",
                requires = "focus",
                handle = 2,
                blockers = {"impatience", "guilt", "fulminated", "hecate", "sleeping"},
              },
              {
                type = "herb",
                command = {herbal = "outr ash"..cs.."eat ash", alchemical = "outr stannum"..cs.."eat stannum"},
                cooldown = "herb",
                requires = "herb",
                handle = 2,
                blockers = {"anorexia", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 3,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 4,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["clumsiness"] =
        {
          name = "clumsiness",
          priority = 1,
          prompt = "&lt;white&gt;clumsiness",
          cures =
            {
              {
                type = "herb",
                command = {herbal = "outr kelp"..cs.."eat kelp", alchemical = "outr aurum"..cs.."eat aurum"},
                cooldown = "herb",
                requires = "herb",
                handle = 1,
                blockers = {"anorexia", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 2,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 3,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["daeggerimpale"] =
        {
          name = "daeggerimpale",
          priority = 1,
          prompt = "&lt;red&gt;daeggerimpale",
          cures =
            {
              {
                type = "balance",
                command = "writhe",
                cooldown = "writhe",
                requires = "balance",
                handle = 1,
                blockers = {"sleeping"},
              },
            },
        },
      ["darkshade"] =
        {
          name = "darkshade",
          priority = 1,
          prompt = "&lt;white&gt;darkshade",
          cures =
            {
              {
                type = "herb",
                command =
                  {herbal = "outr ginseng"..cs.."eat ginseng", alchemical = "outr ferrum"..cs.."eat ferrum"},
                cooldown = "herb",
                requires = "herb",
                handle = 1,
                blockers = {"anorexia", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 2,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = "shrugging",
                command = "shrugging",
                cooldown = "shrugging",
                requires = "shrugging",
                handle = 3,
                blockers = {"weariness", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 4,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["damagedleftleg"] =
        {
          name = "damagedleftleg",
          priority = 1,
          prompt = "&lt;white&gt;LL2",
          cures =
            {
              {
                type = "salve",
                command = "apply restoration to legs",
                cooldown = "salve",
                requires = "salve",
                handle = 1,
                blockers = {"slickness", "sleeping"},
              },
            },
        },
      ["damagedrightleg"] =
        {
          name = "damagedrightleg",
          priority = 1,
          prompt = "&lt;white&gt;RL2",
          cures =
            {
              {
                type = "salve",
                command = "apply restoration to legs",
                cooldown = "salve",
                requires = "salve",
                handle = 1,
                blockers = {"slickness", "sleeping"},
              },
            },
        },
      ["damagedleftarm"] =
        {
          name = "damagedleftarm",
          priority = 1,
          prompt = "&lt;white&gt;LA2",
          cures =
            {
              {
                type = "salve",
                command = "apply restoration to arms",
                cooldown = "salve",
                requires = "salve",
                handle = 1,
                blockers = {"slickness", "sleeping"},
              },
            },
        },
      ["damagedrightarm"] =
        {
          name = "damagedrightarm",
          priority = 1,
          prompt = "&lt;white&gt;RA2",
          cures =
            {
              {
                type = "salve",
                command = "apply restoration to arms",
                cooldown = "salve",
                requires = "salve",
                handle = 1,
                blockers = {"slickness", "sleeping"},
              },
            },
        },
      ["damagedhead"] =
        {
          name = "damagedhead",
          priority = 1,
          prompt = "&lt;white&gt;H2",
          cures =
            {
              {
                type = "salve",
                command = "apply restoration to head",
                cooldown = "salve",
                requires = "salve",
                handle = 1,
                blockers = {"slickness", "sleeping"},
              },
            },
        },
      ["dazzled"] =
        {
          name = "dazzled",
          priority = 1,
          prompt = "&lt;white&gt;dazzled",
          cures =
            {
              {
                type = "salve",
                command = "apply mending to head",
                cooldown = "salve",
                requires = "salve",
                handle = 1,
                blockers = {"slickness", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 2,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 3,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["deathsickness"] =
        {
          name = "deathsickness",
          priority = 1,
          prompt = "&lt;red&gt;deathsickness",
          cures =
            {
              {
                type = "time",
                command = "",
                cooldown = "time",
                requires = "time",
                handle = 1,
                blockers = {""},
                seconds = 60.0,
              },
            },
        },
     ["degenerate"] =
        {
          name = "degenerate",
          priority = 1,
          prompt = "&lt;red&gt;degenerate",
          cures =
            {
              {
                type = "time",
                command = "",
                cooldown = "time",
                requires = "time",
                handle = 1,
                blockers = {""},
                seconds = 0.0,
              },
            },
        },
      ["dehydrated"] =
        {
          name = "dehydrated",
          priority = 1,
          prompt = "&lt;red&gt;dehydrated",
          cures =
            {
              {
                type = "time",
                command = "",
                cooldown = "time",
                requires = "time",
                handle = 1,
                blockers = {""},
                seconds = 0.0,
              },
            },
        },
      ["demonstain"] =
        {
          name = "demonstain",
          priority = 1,
          prompt = "&lt;red&gt;demonstain",
          cures =
            {
              {
                type = "time",
                command = "",
                cooldown = "time",
                requires = "time",
                handle = 1,
                blockers = {""},
                seconds = 0.0,
              },
            },
        },
      ["depression"] =
        {
          name = "depression",
          priority = 1,
          prompt = "&lt;white&gt;depression",
          cures =
            {
              {
                type = "herb",
                command =
                  {
                    herbal = "outr goldenseal"..cs.."eat goldenseal",
                    alchemical = "outr plumbum"..cs.."eat plumbum",
                  },
                cooldown = "herb",
                requires = "herb",
                handle = 1,
                blockers = {"anorexia", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 2,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 3,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["deteriorate"] =
        {
          name = "deteriorate",
          priority = 1,
          prompt = "&lt;red&gt;deteriorate",
          cures =
            {
              {
                type = "time",
                command = "",
                cooldown = "time",
                requires = "time",
                handle = 1,
                blockers = {""},
                seconds = 0.0,
              },
            },
        },
      ["dissonance"] =
        {
          name = "dissonance",
          priority = 1,
          prompt = "&lt;white&gt;dissonance",
          cures =
            {
              {
                type = "herb",
                command =
                  {
                    herbal = "outr goldenseal"..cs.."eat goldenseal",
                    alchemical = "outr plumbum"..cs.."eat plumbum",
                  },
                cooldown = "herb",
                requires = "herb",
                handle = 1,
                blockers = {"anorexia", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 2,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 3,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["disrupted"] =
        {
          name = "disrupted",
          priority = 1,
          prompt = "&lt;white&gt;disrupted",
          cures =
            {
              {
                type = "free",
                command = "concentrate",
                cooldown = "free",
                requires = "free",
                handle = 1,
                blockers = {"sleeping"},
              },
            },
        },
      ["daeggerimpale"] =
        {
          name = "daeggerimpale",
          priority = 1,
          prompt = "&lt;white&gt;daeggerimpale",
          cures =
            {
              {
                type = "balance",
                command = "writhe",
                cooldown = "writhe",
                requires = "balance",
                handle = 1,
                blockers = {"sleeping"},
              },
            },
        },
      ["dazed"] =
        {
          name = "dazed",
          priority = 1,
          prompt = "&lt;white&gt;dazed",
          cures =
            {
              {
                type = "smoke",
                command =
                  {herbal = "light elm"..cs.."smoke elm", alchemical = "light cinnabar"..cs.."smoke cinnabar"},
                cooldown = "smoke",
                requires = "dazed",
                handle = 1,
                blockers = {"asthma", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 2,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 3,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["deadening"] =
        {
          name = "deadening",
          priority = 1,
          prompt = "&lt;white&gt;deadening",
          cures =
            {
              {
                type = "smoke",
                command =
                  {herbal = "light elm"..cs.."smoke elm", alchemical = "light cinnabar"..cs.."smoke cinnabar"},
                cooldown = "smoke",
                requires = "smoke",
                handle = 1,
                blockers = {"asthma", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 2,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 3,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["dementia"] =
        {
          name = "dementia",
          priority = 1,
          prompt = "&lt;white&gt;dementia",
          cures =
            {
              {
                type = "focus",
                command = "focus",
                cooldown = "focus",
                requires = "focus",
                handle = 1,
                blockers = {"impatience", "guilt", "fulminated", "hecate", "sleeping"},
              },
              {
                type = "herb",
                command = {herbal = "outr ash"..cs.."eat ash", alchemical = "outr stannum"..cs.."eat stannum"},
                cooldown = "herb",
                requires = "herb",
                handle = 2,
                blockers = {"anorexia", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 3,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 4,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["disfigurement"] =
        {
          name = "disfigurement",
          priority = 1,
          prompt = "&lt;white&gt;disfigurement",
          cures =
            {
              {
                type = "smoke",
                command =
                  {
                    herbal = "light valerian"..cs.."smoke valerian",
                    alchemical = "light realgar"..cs.."smoke realgar",
                  },
                cooldown = "smoke",
                requires = "smoke",
                handle = 1,
                blockers = {"asthma", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 2,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 3,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["disloyalty"] =
        {
          name = "disloyalty",
          priority = 1,
          prompt = "&lt;white&gt;disloyalty",
          cures =
            {
              {
                type = "smoke",
                command =
                  {
                    herbal = "light valerian"..cs.."smoke valerian",
                    alchemical = "light realgar"..cs.."smoke realgar",
                  },
                cooldown = "smoke",
                requires = "smoke",
                handle = 1,
                blockers = {"asthma", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 2,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 3,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["dizziness"] =
        {
          name = "dizziness",
          priority = 1,
          prompt = "&lt;white&gt;dizziness",
          cures =
            {
              {
                type = "focus",
                command = "focus",
                cooldown = "focus",
                requires = "focus",
                handle = 1,
                blockers = {"impatience", "guilt", "fulminated", "hecate", "sleeping"},
              },
              {
                type = "herb",
                command =
                  {
                    herbal = "outr goldenseal"..cs.."eat goldenseal",
                    alchemical = "outr plumbum"..cs.."eat plumbum",
                  },
                cooldown = "herb",
                requires = "herb",
                handle = 2,
                blockers = {"anorexia", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 3,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 4,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["enmesh"] =
        {
          name = "enmesh",
          priority = 1,
          prompt = "&lt;red&gt;enmesh",
          cures =
            {
              {
                type = "time",
                command = "",
                cooldown = "time",
                requires = "time",
                handle = 1,
                blockers = {""},
                seconds = 4.0,
              },
            },
        },
      ["ensorcelled"] =
        {
          name = "ensorcelled",
          priority = 1,
          prompt = "&lt;red&gt;ensorcelled",
          cures =
            {
              {
                type = "time",
                command = "",
                cooldown = "time",
                requires = "time",
                handle = 1,
                blockers = {""},
                seconds = 20.0,
              },
            },
        },
      ["entangled"] =
        {
          name = "entangled",
          priority = 1,
          prompt = "&lt;red&gt;entangled",
          cures =
            {
              {
                type = "balance",
                command = "writhe",
                cooldown = "writhe",
                requires = "balance",
                handle = 1,
                blockers = {"sleeping"},
              },
            },
        },
      ["epilepsy"] =
        {
          name = "epilepsy",
          priority = 1,
          prompt = "&lt;white&gt;epilepsy",
          cures =
            {
              {
                type = "focus",
                command = "focus",
                cooldown = "focus",
                requires = "focus",
                handle = 1,
                blockers = {"impatience", "guilt", "fulminated", "hecate", "sleeping"},
              },
              {
                type = "herb",
                command =
                  {
                    herbal = "outr goldenseal"..cs.."eat goldenseal",
                    alchemical = "outr plumbum"..cs.."eat plumbum",
                  },
                cooldown = "herb",
                requires = "herb",
                handle = 2,
                blockers = {"anorexia", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 3,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 4,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["flamefisted"] =
        {
          name = "flamefisted",
          priority = 1,
          prompt = "&lt;red&gt;flamefisted",
          cures =
            {
              {
                type = "time",
                command = "",
                cooldown = "time",
                requires = "time",
                handle = 1,
                blockers = {""},
                seconds = 15.0,
              },
            },
        },
      ["freezing"] =
        {
          name = "freezing",
          priority = 1,
          prompt = "&lt;blue&gt;freezing",
          cures =
            {
              {
                type = "salve",
                command = "apply caloric",
                cooldown = "salve",
                requires = "salve",
                handle = 1,
                blockers = {"slickness", "sleeping"},
              },
            },
        },
      ["frostbite"] =
        {
          name = "frostbite",
          priority = 1,
          prompt = "&lt;white&gt;frostbite",
          cures =
            {
              {
                type = "salve",
                command = "apply caloric",
                cooldown = "salve",
                requires = "salve",
                handle = 1,
                blockers = {"slickness", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 2,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 3,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },        
      ["frozen"] =
        {
          name = "frozen",
          priority = 1,
          prompt = "&lt;blue&gt;frozen",
          cures =
            {
              {
                type = "salve",
                command = "apply caloric",
                cooldown = "salve",
                requires = "salve",
                handle = 1,
                blockers = {"slickness", "sleeping"},
              },
            },
        },
      ["grievouswounds"] =
        {
          name = "grievouswounds",
          priority = 1,
          prompt = "&lt;white&gt;grievouswounds",
          cures =
            {
              {
                type = "salve",
                command = "apply health to torso",
                cooldown = "salve",
                requires = "salve",
                handle = 1,
                blockers = {"slickness", "sleeping"},
              },
            },
        },
      ["hatred"] =
        {
          name = "hatred",
          priority = 1,
          prompt = "&lt;red&gt;hatred",
          cures =
            {
              {
                type = "time",
                command = "",
                cooldown = "time",
                requires = "time",
                handle = 1,
                blockers = {""},
                seconds = 0.0,
              },
            },
        },
      ["hamstrung"] =
        {
          name = "hamstrung",
          priority = 1,
          prompt = "&lt;red&gt;hamstrung",
          cures =
            {
              {
                type = "time",
                command = "",
                cooldown = "time",
                requires = "time",
                handle = 1,
                blockers = {""},
                seconds = 10.0,
              },
            },
        },
      ["heartseed"] =
        {
          name = "heartseed",
          priority = 1,
          prompt = "&lt;white&gt;heartseed",
          cures =
            {
              {
                type = "salve",
                command = "apply restoration to body",
                cooldown = "salve",
                requires = "salve",
                handle = 1,
                blockers = {"slickness", "sleeping"},
              },
            },
            },
          ["hecatecurse"] =
              {
                  name = "hecatecurse",
                  priority = 1,
                  prompt = "&lt;red&gt;hecatecurse",
                  cures =
                  {
                      {
                          type = "time",
                          command = "",
                          cooldown = "time",
                          requires = "time",
                          handle = 1,
                          blockers = {""},
                          seconds = 16.0,
                      },
                  },
              }, 
          ["hypothermia"] =
            {
              name = "hypothermia",
              priority = 1,
              prompt = "&lt;white&gt;hypothermia",
              cures =
                {
                  {
                    type = "salve",
                    command = "apply restoration to body",
                    cooldown = "salve",
                    requires = "salve",
                    handle = 1,
                    blockers = {"slickness", "sleeping"},
                  },
                },
            },
          ["fear"] =
            {
              name = "fear",
              priority = 1,
              prompt = "&lt;white&gt;fear",
              cures =
                {
                  {
                    type = "compose",
                    command = "compose",
                    cooldown = "free",
                    requires = "free",
                    handle = 1,
                    blockers = {"sleeping"},
                  },
                },
            },
          ["flushings"] =
            {
              name = "flushings",
              priority = 1,
              prompt = "&lt;white&gt;flushings",
              cures =
                {
                  {
                    type = "herb",
                    command =
                      {herbal = "outr ginseng"..cs.."eat ginseng", alchemical = "outr ferrum"..cs.."eat ferrum"},
                    cooldown = "herb",
                    requires = "herb",
                    handle = 1,
                    blockers = {"anorexia", "sleeping"},
                  },
                  {
                    type = "tree",
                    command = "touch tree",
                    cooldown = "tree",
                    requires = "tree",
                    handle = 2,
                    blockers = {"paralysis", "sleeping"},
                  },
                  {
                    type = activeCureData[myclass()].type,
                    command = activeCureData[myclass()].command,
                    cooldown = activeCureData[myclass()].cooldown,
                    requires = activeCureData[myclass()].requires,
                    handle = 3,
                    blockers = activeCureData[myclass()].blockers,
                  },
                },
            },
          ["fulminated"] =
            {
              name = "fulminated",
              priority = 1,
              prompt = "&lt;white&gt;fulminated",
              cures =
                {
                  {
                    type = "herb",
                    command =
                      {
                        herbal = "outr goldenseal"..cs.."eat goldenseal",
                        alchemical = "outr plumbum"..cs.."eat plumbum",
                      },
                    cooldown = "herb",
                    requires = "herb",
                    handle = 1,
                    blockers = {"anorexia", "sleeping"},
                  },
                  {
                    type = "tree",
                    command = "touch tree",
                    cooldown = "tree",
                    requires = "tree",
                    handle = 2,
                    blockers = {"paralysis", "sleeping"},
                  },
                  {
                    type = activeCureData[myclass()].type,
                    command = activeCureData[myclass()].command,
                    cooldown = activeCureData[myclass()].cooldown,
                    requires = activeCureData[myclass()].requires,
                    handle = 3,
                    blockers = activeCureData[myclass()].blockers,
                  },
                },
            },
          ["generosity"] =
            {
              name = "generosity",
              priority = 1,
              prompt = "&lt;white&gt;generosity",
              cures =
                {
                  {
                    type = "focus",
                    command = "focus",
                    cooldown = "focus",
                    requires = "focus",
                    handle = 1,
                    blockers = {"impatience", "guilt", "fulminated", "hecate", "sleeping"},
                  },
                  {
                    type = "herb",
                    command =
                      {herbal = "outr bellwort"..cs.."eat bellwort", alchemical = "outr cuprum"..cs.."eat cuprum"},
                    cooldown = "herb",
                    requires = "herb",
                    handle = 2,
                    blockers = {"anorexia", "sleeping"},
                  },
                  {
                    type = "tree",
                    command = "touch tree",
                    cooldown = "tree",
                    requires = "tree",
                    handle = 3,
                    blockers = {"paralysis", "sleeping"},
                  },
                  {
                    type = activeCureData[myclass()].type,
                    command = activeCureData[myclass()].command,
                    cooldown = activeCureData[myclass()].cooldown,
                    requires = activeCureData[myclass()].requires,
                    handle = 4,
                    blockers = activeCureData[myclass()].blockers,
                  },
                },
            },
          ["guilt"] =
            {
              name = "guilt",
              priority = 1,
              prompt = "&lt;white&gt;guilt",
              cures =
                {
                  {
                    type = "herb",
                    command =
                      {
                        herbal = "outr lobelia"..cs.."eat lobelia",
                        alchemical = "outr argentum"..cs.."eat argentum",
                      },
                    cooldown = "herb",
                    requires = "herb",
                    handle = 1,
                    blockers = {"anorexia", "sleeping"},
                  },
                  {
                    type = "tree",
                    command = "touch tree",
                    cooldown = "tree",
                    requires = "tree",
                    handle = 2,
                    blockers = {"paralysis", "sleeping"},
                  },
                  {
                    type = activeCureData[myclass()].type,
                    command = activeCureData[myclass()].command,
                    cooldown = activeCureData[myclass()].cooldown,
                    requires = activeCureData[myclass()].requires,
                    handle = 3,
                    blockers = activeCureData[myclass()].blockers,
                  },
                },
            },
          ["hallucinations"] =
            {
              name = "hallucinations",
              priority = 1,
              prompt = "&lt;white&gt;hallucinations",
              cures =
                {
                  {
                    type = "herb",
                    command = {herbal = "outr ash"..cs.."eat ash", alchemical = "outr stannum"..cs.."eat stannum"},
                    cooldown = "herb",
                    requires = "herb",
                    handle = 1,
                    blockers = {"anorexia", "sleeping"},
                  },
                  {
                    type = "tree",
                    command = "touch tree",
                    cooldown = "tree",
                    requires = "tree",
                    handle = 2,
                    blockers = {"paralysis", "sleeping"},
                  },
                  {
                    type = activeCureData[myclass()].type,
                    command = activeCureData[myclass()].command,
                    cooldown = activeCureData[myclass()].cooldown,
                    requires = activeCureData[myclass()].requires,
                    handle = 3,
                    blockers = activeCureData[myclass()].blockers,
                  },
                },
            },
          ["haemophilia"] =
            {
              name = "haemophilia",
              priority = 1,
              prompt = "&lt;white&gt;haemophilia",
              cures =
                {
                  {
                    type = "herb",
                    command =
                      {herbal = "outr ginseng"..cs.."eat ginseng", alchemical = "outr ferrum"..cs.."eat ferrum"},
                    cooldown = "herb",
                    requires = "herb",
                    handle = 1,
                    blockers = {"anorexia", "sleeping"},
                  },
                  {
                    type = "tree",
                    command = "touch tree",
                    cooldown = "tree",
                    requires = "tree",
                    handle = 2,
                    blockers = {"paralysis", "sleeping"},
                  },
                  {
                    type = activeCureData[myclass()].type,
                    command = activeCureData[myclass()].command,
                    cooldown = activeCureData[myclass()].cooldown,
                    requires = activeCureData[myclass()].requires,
                    handle = 3,
                    blockers = activeCureData[myclass()].blockers,
                  },
                },
            },
          ["healthleech"] =
            {
              name = "healthleech",
              priority = 1,
              prompt = "&lt;green&gt;healthleech",
              cures =
                {
                  {
                    type = "herb",
                    command = {herbal = "outr kelp"..cs.."eat kelp", alchemical = "outr aurum"..cs.."eat aurum"},
                    cooldown = "herb",
                    requires = "herb",
                    handle = 1,
                    blockers = {"anorexia", "sleeping"},
                  },
                  {
                    type = "tree",
                    command = "touch tree",
                    cooldown = "tree",
                    requires = "tree",
                    handle = 2,
                    blockers = {"paralysis", "sleeping"},
                  },
                  {
                    type = activeCureData[myclass()].type,
                    command = activeCureData[myclass()].command,
                    cooldown = activeCureData[myclass()].cooldown,
                    requires = activeCureData[myclass()].requires,
                    handle = 3,
                    blockers = activeCureData[myclass()].blockers,
                  },
                },
            },
          ["hellsight"] =
            {
              name = "hellsight",
              priority = 1,
              prompt = "&lt;red&gt;hellsight",
              cures =
                {
                  {
                    type = "smoke",
                    command =
                      {
                        herbal = "light valerian"..cs.."smoke valerian",
                        alchemical = "light realgar"..cs.."smoke realgar",
                      },
                    cooldown = "smoke",
                    requires = "smoke",
                    handle = 1,
                    blockers = {"asthma", "sleeping"},
                  },
                  {
                    type = "tree",
                    command = "touch tree",
                    cooldown = "tree",
                    requires = "tree",
                    handle = 2,
                    blockers = {"paralysis", "sleeping"},
                  },
                  {
                    type = activeCureData[myclass()].type,
                    command = activeCureData[myclass()].command,
                    cooldown = activeCureData[myclass()].cooldown,
                    requires = activeCureData[myclass()].requires,
                    handle = 3,
                    blockers = activeCureData[myclass()].blockers,
                  },
                },
            },
          ["horror"] =
            {
              name = "horror",
              priority = 1,
              prompt = "&lt;white&gt; [hor &lt;white&gt;" .. mystackableaffs.horror .. "]",
              cures =
                {
                  {
                    type = "herb",
                    command =
                      {
                        herbal = "outr goldenseal"..cs.."eat goldenseal",
                        alchemical = "outr plumbum"..cs.."eat plumbum",
                      },
                    cooldown = "herb",
                    requires = "herb",
                    handle = 1,
                    blockers = {"anorexia", "sleeping"},
                  },
                },
            },
          ["hypersomnia"] =
            {
              name = "hypersomnia",
              priority = 1,
              prompt = "&lt;white&gt;hypersomnia",
              cures =
                {
                  {
                    type = "herb",
                    command = {herbal = "outr ash"..cs.."eat ash", alchemical = "outr stannum"..cs.."eat stannum"},
                    cooldown = "herb",
                    requires = "herb",
                    handle = 1,
                    blockers = {"anorexia", "sleeping"},
                  },
                  {
                    type = "tree",
                    command = "touch tree",
                    cooldown = "tree",
                    requires = "tree",
                    handle = 2,
                    blockers = {"paralysis", "sleeping"},
                  },
                  {
                    type = activeCureData[myclass()].type,
                    command = activeCureData[myclass()].command,
                    cooldown = activeCureData[myclass()].cooldown,
                    requires = activeCureData[myclass()].requires,
                    handle = 3,
                    blockers = activeCureData[myclass()].blockers,
                  },
                },
            },
          ["hypochondria"] =
            {
              name = "hypochondria",
              priority = 1,
              prompt = "&lt;white&gt;hypochondria",
              cures =
                {
                  {
                    type = "herb",
                    command = {herbal = "outr kelp"..cs.."eat kelp", alchemical = "outr aurum"..cs.."eat aurum"},
                    cooldown = "herb",
                    requires = "herb",
                    handle = 1,
                    blockers = {"anorexia", "sleeping"},
                  },
                  {
                    type = "tree",
                    command = "touch tree",
                    cooldown = "tree",
                    requires = "tree",
                    handle = 2,
                    blockers = {"paralysis", "sleeping"},
                  },
                  {
                    type = activeCureData[myclass()].type,
                    command = activeCureData[myclass()].command,
                    cooldown = activeCureData[myclass()].cooldown,
                    requires = activeCureData[myclass()].requires,
                    handle = 3,
                    blockers = activeCureData[myclass()].blockers,
                  },
                },
            },
          ["icefisted"] =
            {
              name = "icefisted",
              priority = 1,
              prompt = "&lt;red&gt;icefisted",
              cures =
                {
                  {
                    type = "time",
                    command = "",
                    cooldown = "time",
                    requires = "time",
                    handle = 1,
                    blockers = {""},
                    seconds = 15.0,
                  },
                },
            },
          ["impaled"] =
            {
              name = "impaled",
              priority = 1,
              prompt = "&lt;red&gt;impaled",
              cures =
                {
                  {
                    type = "balance",
                    command = "writhe",
                    cooldown = "writhe",
                    requires = "balance",
                    handle = 1,
                    blockers = {"sleeping"},
                  },
                },
            },
          ["impatience"] =
            {
              name = "impatience",
              priority = 1,
              prompt = "&lt;white&gt;impatience",
              cures =
                {
                  {
                    type = "herb",
                    command =
                      {
                        herbal = "outr goldenseal"..cs.."eat goldenseal",
                        alchemical = "outr plumbum"..cs.."eat plumbum",
                      },
                    cooldown = "herb",
                    requires = "herb",
                    handle = 1,
                    blockers = {"anorexia", "sleeping"},
                  },
                  {
                    type = "tree",
                    command = "touch tree",
                    cooldown = "tree",
                    requires = "tree",
                    handle = 2,
                    blockers = {"paralysis", "sleeping"},
                  },
                  {
                    type = activeCureData[myclass()].type,
                    command = activeCureData[myclass()].command,
                    cooldown = activeCureData[myclass()].cooldown,
                    requires = activeCureData[myclass()].requires,
                    handle = 3,
                    blockers = activeCureData[myclass()].blockers,
                  },
                },
            },
          ["indifference"] =
            {
              name = "indifference",
              priority = 1,
              prompt = "&lt;white&gt;indifference",
              cures =
                {
                  {
                    type = "herb",
                    command =
                      {herbal = "outr bellwort"..cs.."eat bellwort", alchemical = "outr cuprum"..cs.."eat cuprum"},
                    cooldown = "herb",
                    requires = "herb",
                    handle = 1,
                    blockers = {"anorexia", "sleeping"},
                  },
                  {
                    type = "tree",
                    command = "touch tree",
                    cooldown = "tree",
                    requires = "tree",
                    handle = 2,
                    blockers = {"paralysis", "sleeping"},
                  },
                  {
                    type = activeCureData[myclass()].type,
                    command = activeCureData[myclass()].command,
                    cooldown = activeCureData[myclass()].cooldown,
                    requires = activeCureData[myclass()].requires,
                    handle = 3,
                    blockers = activeCureData[myclass()].blockers,
                  },
                },
            },
          ["internalbleeding"] =
            {
              name = "internalbleeding",
              priority = 1,
              prompt = "&lt;red&gt;internalbleeding",
              cures =
                {
                  {
                    type = "time",
                    command = "",
                    cooldown = "time",
                    requires = "time",
                    handle = 1,
                    blockers = {""},
                    seconds = 0.0,
                  },
                },
            },
          ["inquisition"] =
            {
              name = "inquisition",
              priority = 1,
              prompt = "&lt;red&gt;inquisition",
              cures =
                {
                  {
                    type = "time",
                    command = "",
                    cooldown = "time",
                    requires = "time",
                    handle = 1,
                    blockers = {""},
                    seconds = 20.0,
                  },
                },
            },
          ["itching"] =
            {
              name = "itching",
              priority = 1,
              prompt = "&lt;red&gt;itching",
              cures =
                {
                  {
                    type = "salve",
                    command = "apply epidermal to body",
                    cooldown = "salve",
                    requires = "salve",
                    handle = 1,
                    blockers = {"slickness", "sleeping"},
                  },
                },
            },
          ["justice"] =
            {
              name = "justice",
              priority = 1,
              prompt = "&lt;white&gt;justice",
              cures =
                {
                  {
                    type = "herb",
                    command =
                      {herbal = "outr bellwort"..cs.."eat bellwort", alchemical = "outr cuprum"..cs.."eat cuprum"},
                    cooldown = "herb",
                    requires = "herb",
                    handle = 1,
                    blockers = {"anorexia", "sleeping"},
                  },
                },
            },
          ["kaisurge"] =
            {
              name = "kaisurge",
              priority = 1,
              prompt = "&lt;red&gt;kaisurge",
              cures =
                {
                  {
                    type = "time",
                    command = "",
                    cooldown = "time",
                    requires = "time",
                    handle = 1,
                    blockers = {""},
                    seconds = 0.0,
                  },
                },
            },
          ["kkractlebrand"] =
            {
              name = "kkractlebrand",
              priority = 1,
              prompt = "&lt;white&gt;kkractlebrand",
              cures =
                {
                  {
                    type = "sip",
                    command = "sip health",
                    cooldown = "sip",
                    requires = "sip",
                    handle = 1,
                    blockers = {"anorexia", "sleeping"},
                  },
                },
            },
          ["laceratedthroat"] =
            {
              name = "laceratedthroat",
              priority = 1,
              prompt = "&lt;yellow&gt;laceratedthroat",
              cures =
                {
                  {
                    type = "salve",
                    command = "apply restoration to head",
                    cooldown = "salve",
                    requires = "salve",
                    handle = 1,
                    blockers = {"slickness", "sleeping"},
                  },
                },
            },
          ["lapsingconsciousness"] =
            {
              name = "lapsingconsciousness",
              priority = 1,
              prompt = "&lt;red&gt;lapsingconsciousness",
              cures =
                {
                  {
                    type = "time",
                    command = "",
                    cooldown = "time",
                    requires = "time",
                    handle = 1,
                    blockers = {""},
                    seconds = 0.0,
                  },
                },
            },
          ["latched"] =
            {
              name = "latched",
              priority = 1,
              prompt = "&lt;red&gt;latched",
              cures =
                {
                  {
                    type = "time",
                    command = "",
                    cooldown = "time",
                    requires = "time",
                    handle = 1,
                    blockers = {""},
                    seconds = 0.0,
                  },
                },
            },
          ["lethargy"] =
            {
              name = "lethargy",
              priority = 1,
              prompt = "&lt;white&gt;lethargy",
              cures =
                {
                  {
                    type = "herb",
                    command =
                      {herbal = "outr ginseng"..cs.."eat ginseng", alchemical = "outr ferrum"..cs.."eat ferrum"},
                    cooldown = "herb",
                    requires = "herb",
                    handle = 1,
                    blockers = {"anorexia", "sleeping"},
                  },
                  {
                    type = "tree",
                    command = "touch tree",
                    cooldown = "tree",
                    requires = "tree",
                    handle = 2,
                    blockers = {"paralysis", "sleeping"},
                  },
                  {
                    type = activeCureData[myclass()].type,
                    command = activeCureData[myclass()].command,
                    cooldown = activeCureData[myclass()].cooldown,
                    requires = activeCureData[myclass()].requires,
                    handle = 3,
                    blockers = activeCureData[myclass()].blockers,
                  },
                },
            },
          ["lightbind"] =
            {
              name = "lightbind",
              priority = 1,
              prompt = "&lt;red&gt;lightbind",
              cures =
                {
                  {
                    type = "time",
                    command = "",
                    cooldown = "time",
                    requires = "time",
                    handle = 1,
                    blockers = {""},
                    seconds = 22.0,
                  },
                },
            },
          ["loneliness"] =
            {
              name = "loneliness",
              priority = 1,
              prompt = "&lt;white&gt;loneliness",
              cures =
                {
                  {
                    type = "focus",
                    command = "focus",
                    cooldown = "focus",
                    requires = "focus",
                    handle = 1,
                    blockers = {"impatience", "guilt", "fulminated", "hecate", "sleeping"},
                  },
                  {
                    type = "herb",
                    command =
                      {
                        herbal = "outr lobelia"..cs.."eat lobelia",
                        alchemical = "outr argentum"..cs.."eat argentum",
                      },
                    cooldown = "herb",
                    requires = "herb",
                    handle = 2,
                    blockers = {"anorexia", "sleeping"},
                  },
                  {
                    type = "tree",
                    command = "touch tree",
                    cooldown = "tree",
                    requires = "tree",
                    handle = 3,
                    blockers = {"paralysis", "sleeping"},
                  },
                  {
                    type = activeCureData[myclass()].type,
                    command = activeCureData[myclass()].command,
                    cooldown = activeCureData[myclass()].cooldown,
                    requires = activeCureData[myclass()].requires,
                    handle = 4,
                    blockers = activeCureData[myclass()].blockers,
                  },
                },
            },
          ["lovers"] =
            {
              name = "lovers",
              priority = 1,
              prompt = "&lt;white&gt;lovers",
              cures =
                {
                  {
                    type = "focus",
                    command = "focus",
                    cooldown = "focus",
                    requires = "focus",
                    handle = 1,
                    blockers = {"impatience", "guilt", "fulminated", "hecate", "sleeping"},
                  },
                  {
                    type = "herb",
                    command =
                      {herbal = "outr bellwort"..cs.."eat bellwort", alchemical = "outr cuprum"..cs.."eat cuprum"},
                    cooldown = "herb",
                    requires = "herb",
                    handle = 2,
                    blockers = {"anorexia", "sleeping"},
                  },
                  {
                    type = "tree",
                    command = "touch tree",
                    cooldown = "tree",
                    requires = "tree",
                    handle = 3,
                    blockers = {"paralysis", "sleeping"},
                  },
                  {
                    type = activeCureData[myclass()].type,
                    command = activeCureData[myclass()].command,
                    cooldown = activeCureData[myclass()].cooldown,
                    requires = activeCureData[myclass()].requires,
                    handle = 4,
                    blockers = activeCureData[myclass()].blockers,
                  },
                },
            },
          ["manaleech"] =
            {
              name = "manaleech",
              priority = 1,
              prompt = "&lt;blue&gt;manaleech",
              cures =
                {
                  {
                    type = "smoke",
                    command =
                      {
                        herbal = "light valerian"..cs.."smoke valerian",
                        alchemical = "light realgar"..cs.."smoke realgar",
                      },
                    cooldown = "smoke",
                    requires = "smoke",
                    handle = 1,
                    blockers = {"asthma", "sleeping"},
                  },
                  {
                    type = "tree",
                    command = "touch tree",
                    cooldown = "tree",
                    requires = "tree",
                    handle = 2,
                    blockers = {"paralysis", "sleeping"},
                  },
                  {
                    type = activeCureData[myclass()].type,
                    command = activeCureData[myclass()].command,
                    cooldown = activeCureData[myclass()].cooldown,
                    requires = activeCureData[myclass()].requires,
                    handle = 3,
                    blockers = activeCureData[myclass()].blockers,
                  },
                },
            },
          ["masochism"] =
            {
              name = "masochism",
              priority = 1,
              prompt = "&lt;white&gt;masochism",
              cures =
                {
                  {
                    type = "herb",
                    command =
                      {
                        herbal = "outr lobelia"..cs.."eat lobelia",
                        alchemical = "outr argentum"..cs.."eat argentum",
                      },
                    cooldown = "herb",
                    requires = "herb",
                    handle = 1,
                    blockers = {"anorexia", "sleeping"},
                  },
                  {
                    type = "tree",
                    command = "touch tree",
                    cooldown = "tree",
                    requires = "tree",
                    handle = 2,
                    blockers = {"paralysis", "sleeping"},
                  },
                  {
                    type = activeCureData[myclass()].type,
                    command = activeCureData[myclass()].command,
                    cooldown = activeCureData[myclass()].cooldown,
                    requires = activeCureData[myclass()].requires,
                    handle = 3,
                    blockers = activeCureData[myclass()].blockers,
                  },
                },
            },
          ["mangledleftleg"] =
            {
              name = "mangledleftleg",
              priority = 1,
              prompt = "&lt;red&gt;LL3",
              cures =
                {
                  {
                    type = "salve",
                    command = "apply restoration to legs",
                    cooldown = "salve",
                    requires = "salve",
                    handle = 1,
                    blockers = {"slickness", "sleeping"},
                  },
                },
            },
          ["mangledrightleg"] =
            {
              name = "mangledrightleg",
              priority = 1,
              prompt = "&lt;red&gt;RL3",
              cures =
                {
                  {
                    type = "salve",
                    command = "apply restoration to legs",
                    cooldown = "salve",
                    requires = "salve",
                    handle = 1,
                    blockers = {"slickness", "sleeping"},
                  },
                },
            },
          ["mangledleftarm"] =
            {
              name = "mangledleftarm",
              priority = 1,
              prompt = "&lt;red&gt;LA3",
              cures =
                {
                  {
                    type = "salve",
                    command = "apply restoration to arms",
                    cooldown = "salve",
                    requires = "salve",
                    handle = 1,
                    blockers = {"slickness", "sleeping"},
                  },
                },
            },
          ["mangledrightarm"] =
            {
              name = "mangledrightarm",
              priority = 1,
              prompt = "&lt;red&gt;RA3",
              cures =
                {
                  {
                    type = "salve",
                    command = "apply restoration to arms",
                    cooldown = "salve",
                    requires = "salve",
                    handle = 1,
                    blockers = {"slickness", "sleeping"},
                  },
                },
            },
          ["mangledhead"] =
            {
              name = "mangledhead",
              priority = 1,
              prompt = "&lt;red&gt;H3",
              cures =
                {
                  {
                    type = "salve",
                    command = "apply restoration to head",
                    cooldown = "salve",
                    requires = "salve",
                    handle = 1,
                    blockers = {"slickness", "sleeping"},
                  },
                },
            },
          ["mildtrauma"] =
            {
              name = "mildtrauma",
              priority = 1,
              prompt = "&lt;yellow&gt;mildtrauma",
              cures =
                {
                  {
                    type = "salve",
                    command = "apply restoration to body",
                    cooldown = "salve",
                    requires = "salve",
                    handle = 1,
                    blockers = {"slickness", "sleeping"},
                  },
                },
            },
          ["mindravaged"] =
            {
              name = "mindravaged",
              priority = 1,
              prompt = "&lt;red&gt;mindravaged",
              cures =
                {
                  {
                    type = "time",
                    command = "",
                    cooldown = "time",
                    requires = "time",
                    handle = 1,
                    blockers = {""},
                    seconds = 0.0,
                  },
                },
            },
          ["muddled"] =
            {
              name = "muddled",
              priority = 1,
              prompt = "&lt;red&gt;muddled",
              cures =
                {
                  {
                    type = "time",
                    command = "",
                    cooldown = "time",
                    requires = "time",
                    handle = 1,
                    blockers = {""},
                    seconds = 12.0,
                  },
                },
            },
          ["mycalium"] =
            {
              name = "mycalium",
              priority = 1,
              prompt = "&lt;white&gt;mycalium",
              cures =
                {
                  {
                    type = "herb",
                    command =
                      {
                        herbal = "outr goldenseal"..cs.."eat goldenseal",
                        alchemical = "outr plumbum"..cs.."eat plumbum",
                      },
                    cooldown = "herb",
                    requires = "herb",
                    handle = 1,
                    blockers = {"anorexia", "sleeping"},
                  },
                  {
                    type = "tree",
                    command = "touch tree",
                    cooldown = "tree",
                    requires = "tree",
                    handle = 2,
                    blockers = {"paralysis", "sleeping"},
                  },
                  {
                    type = activeCureData[myclass()].type,
                    command = activeCureData[myclass()].command,
                    cooldown = activeCureData[myclass()].cooldown,
                    requires = activeCureData[myclass()].requires,
                    handle = 3,
                    blockers = activeCureData[myclass()].blockers,
                  },
                },
            },
          ["nausea"] =
            {
              name = "nausea",
              priority = 1,
              prompt = "&lt;white&gt;nausea",
              cures =
                {
                  {
                    type = "herb",
                    command =
                      {herbal = "outr ginseng"..cs.."eat ginseng", alchemical = "outr ferrum"..cs.."eat ferrum"},
                    cooldown = "herb",
                    requires = "herb",
                    handle = 1,
                    blockers = {"anorexia", "sleeping"},
                  },
                  {
                    type = "tree",
                    command = "touch tree",
                    cooldown = "tree",
                    requires = "tree",
                    handle = 2,
                    blockers = {"paralysis", "sleeping"},
                  },
                  {
                    type = activeCureData[myclass()].type,
                    command = activeCureData[myclass()].command,
                    cooldown = activeCureData[myclass()].cooldown,
                    requires = activeCureData[myclass()].requires,
                    handle = 3,
                    blockers = activeCureData[myclass()].blockers,
                  },
                },
            },
          ["numbedleftarm"] =
            {
              name = "numbedleftarm",
              priority = 1,
              prompt = "&lt;red&gt;numbedleftarm",
              cures =
                {
                  {
                    type = "time",
                    command = "",
                    cooldown = "time",
                    requires = "time",
                    handle = 1,
                    blockers = {""},
                    seconds = 0.0,
                  },
                },
            },
          ["numbedrightarm"] =
            {
              name = "numbedrightarm",
              priority = 1,
              prompt = "&lt;red&gt;numbedrightarm",
              cures =
                {
                  {
                    type = "time",
                    command = "",
                    cooldown = "time",
                    requires = "time",
                    handle = 1,
                    blockers = {""},
                    seconds = 0.0,
                  },
                },
            },
          ["palpatarfeed"] =
            {
              name = "palpatarfeed",
              priority = 1,
              prompt = "&lt;red&gt;palpatarfeed",
              cures =
                {
                  {
                    type = "time",
                    command = "",
                    cooldown = "time",
                    requires = "time",
                    handle = 1,
                    blockers = {""},
                    seconds = 20.0,
                  },
                },
            },
          ["paranoia"] =
            {
              name = "paranoia",
              priority = 1,
              prompt = "&lt;white&gt;paranoia",
              cures =
                {
                  {
                    type = "herb",
                    command = {herbal = "outr ash"..cs.."eat ash", alchemical = "outr stannum"..cs.."eat stannum"},
                    cooldown = "herb",
                    requires = "herb",
                    handle = 1,
                    blockers = {"anorexia", "sleeping"},
                  },
                  {
                    type = "tree",
                    command = "touch tree",
                    cooldown = "tree",
                    requires = "tree",
                    handle = 2,
                    blockers = {"paralysis", "sleeping"},
                  },
                  {
                    type = activeCureData[myclass()].type,
                    command = activeCureData[myclass()].command,
                    cooldown = activeCureData[myclass()].cooldown,
                    requires = activeCureData[myclass()].requires,
                    handle = 3,
                    blockers = activeCureData[myclass()].blockers,
                  },
                },
            },
          ["parasite"] =
            {
              name = "parasite",
              priority = 1,
              prompt = "&lt;white&gt;parasite",
              cures =
                {
                  {
                    type = "herb",
                    command = {herbal = "outr kelp"..cs.."eat kelp", alchemical = "outr aurum"..cs.."eat aurum"},
                    cooldown = "herb",
                    requires = "herb",
                    handle = 1,
                    blockers = {"anorexia", "sleeping"},
                  },
                  {
                    type = "tree",
                    command = "touch tree",
                    cooldown = "tree",
                    requires = "tree",
                    handle = 2,
                    blockers = {"paralysis", "sleeping"},
                  },
                  {
                    type = activeCureData[myclass()].type,
                    command = activeCureData[myclass()].command,
                    cooldown = activeCureData[myclass()].cooldown,
                    requires = activeCureData[myclass()].requires,
                    handle = 3,
                    blockers = activeCureData[myclass()].blockers,
                  },
                },
            },
          ["pacified"] =
            {
              name = "pacified",
              priority = 1,
              prompt = "&lt;white&gt;pacified",
              cures =
                {
                  {
                    type = "focus",
                    command = "focus",
                    cooldown = "focus",
                    requires = "focus",
                    handle = 1,
                    blockers = {"impatience", "guilt", "fulminated", "hecate", "sleeping"},
                  },
                  {
                    type = "herb",
                    command =
                      {herbal = "outr bellwort"..cs.."eat bellwort", alchemical = "outr cuprum"..cs.."eat cuprum"},
                    cooldown = "herb",
                    requires = "herb",
                    handle = 2,
                    blockers = {"anorexia", "sleeping"},
                  },
                  {
                    type = "tree",
                    command = "touch tree",
                    cooldown = "tree",
                    requires = "tree",
                    handle = 3,
                    blockers = {"paralysis", "sleeping"},
                  },
                  {
                    type = activeCureData[myclass()].type,
                    command = activeCureData[myclass()].command,
                    cooldown = activeCureData[myclass()].cooldown,
                    requires = activeCureData[myclass()].requires,
                    handle = 3,
                    blockers = activeCureData[myclass()].blockers,
                  },
                },
            },
          ["paralysis"] =
            {
              name = "paralysis",
              priority = 1,
              prompt = "&lt;red&gt;paralysis",
              cures =
                {
                  {
                    type = "herb",
                    command =
                      {
                        herbal = "outr bloodroot"..cs.."eat bloodroot",
                        alchemical = "outr magnesium"..cs.."eat magnesium",
                      },
                    cooldown = "herb",
                    requires = "herb",
                    handle = 2,
                    blockers = {"anorexia", "sleeping"},
                  },
                  {
                    type = activeCureData[myclass()].type,
                    command = activeCureData[myclass()].command,
                    cooldown = activeCureData[myclass()].cooldown,
                    requires = activeCureData[myclass()].requires,
                    handle = 1,
                    blockers = activeCureData[myclass()].blockers,
                  },
                },
            },
          ["peace"] =
            {
              name = "peace",
              priority = 1,
              prompt = "&lt;red&gt;peace",
              cures =
                {
                  {
                    type = "herb",
                    command =
                      {herbal = "outr bellwort"..cs.."eat bellwort", alchemical = "outr cuprum"..cs.."eat cuprum"},
                    cooldown = "herb",
                    requires = "herb",
                    handle = 1,
                    blockers = {"anorexia", "sleeping"},
                  },
                  {
                    type = "tree",
                    command = "touch tree",
                    cooldown = "tree",
                    requires = "tree",
                    handle = 2,
                    blockers = {"paralysis", "sleeping"},
                  },
                  {
                    type = activeCureData[myclass()].type,
                    command = activeCureData[myclass()].command,
                    cooldown = activeCureData[myclass()].cooldown,
                    requires = activeCureData[myclass()].requires,
                    handle = 3,
                    blockers = activeCureData[myclass()].blockers,
                  },
                },
            },
          ["petrified"] =
            {
              name = "petrified",
              priority = 1,
              prompt = "&lt;red&gt;petrified",
              cures =
                {
                  {
                    type = "time",
                    command = "",
                    cooldown = "time",
                    requires = "time",
                    handle = 1,
                    blockers = {""},
                    seconds = 0.0,
                  },
                },
            },
          ["phlogisticated"] =
            {
              name = "phlogisticated",
              priority = 1,
              prompt = "&lt;red&gt;phlogisticated",
              cures =
                {
                  {
                    type = "time",
                    command = "",
                    cooldown = "time",
                    requires = "time",
                    handle = 1,
                    blockers = {""},
                    seconds = 45.0,
                  },
                },
            },
          ["pinshot"] =
            {
              name = "pinshot",
              priority = 1,
              prompt = "&lt;red&gt;pinshot",
              cures =
                {
                  {
                    type = "time",
                    command = "",
                    cooldown = "time",
                    requires = "time",
                    handle = 1,
                    blockers = {""},
                    seconds = 21.0,
                  },
                },
            },
          ["pressure"] =
            {
              requires = "herb",
              name = "pressure",
              priority = 1,
              prompt = "&lt;white&gt; [prs &lt;white&gt;" .. mystackableaffs.pressure .. "]",
              cures =
                {
                  {
                    type = "herb",
                    command =
                      {herbal = "outr bellwort"..cs.."eat bellwort", alchemical = "outr cuprum"..cs.."eat cuprum"},
                    cooldown = "herb",
                    handle = 1,
                    blockers = {"anorexia", "sleeping"},
                  },
                },
            },
      
      ["pyramides"] =
        {
          name = "pyramides",
          priority = 1,
          prompt = "&lt;white&gt;pyramides",
          cures =
            {
              {
                type = "herb",
                command =
                  {
                    herbal = "outr bloodroot"..cs.."eat bloodroot",
                    alchemical = "outr magnesium"..cs.."eat magnesium",
                  },
                cooldown = "herb",
                requires = "herb",
                handle = 1,
                blockers = {"anorexia", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 2,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 3,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["pyre"] =
        {
          name = "pyre",
          priority = 1,
          prompt = "&lt;white&gt;pyre",
          cures =
            {
              {
                type = "herb",
                command =
                  {herbal = "outr bellwort"..cs.."eat bellwort", alchemical = "outr cuprum"..cs.."eat cuprum"},
                cooldown = "herb",
                requires = "herb",
                handle = 1,
                blockers = {"anorexia", "sleeping"},
              },
            },
        },
      ["prone"] =
        {
          name = "prone",
          priority = 1,
          prompt = "&lt;red&gt;prone",
          cures =
            {
              {
                type = "stand",
                command = "stand",
                cooldown = "free",
                requires = "balance",
                handle = 1,
                blockers =
                  {
                    "paralysis",
                    "sleeping",
                    "brokenleftleg",
                    "brokenrightleg",
                    "dizziness",
                    "hunger",
                    "webbed",
                    "damagedleftleg",
                    "damagedrightleg",
                    "mangledleftleg",
                    "mangledrightleg",
                    "bound",
                    "daeggerimpale",
                    "impale",
                    "transfixation",
                    "entangled",
                  },
              },
            },
        },
      ["rebbies"] =
        {
          name = "rebbies",
          priority = 1,
          prompt = "&lt;white&gt;rebbies",
          cures =
            {
              {
                type = "herb",
                command = {herbal = "outr kelp"..cs.."eat kelp", alchemical = "outr aurum"..cs.."eat aurum"},
                cooldown = "herb",
                requires = "herb",
                handle = 1,
                blockers = {"anorexia", "sleeping"},
              },
            },
        },
      ["recklessness"] =
        {
          name = "recklessness",
          priority = 1,
          prompt = "&lt;white&gt;recklessness",
          cures =
            {
              {
                type = "focus",
                command = "focus",
                cooldown = "focus",
                requires = "focus",
                handle = 1,
                blockers = {"impatience", "guilt", "fulminated", "hecate", "sleeping"},
              },
              {
                type = "herb",
                command =
                  {herbal = "outr lobelia"..cs.."eat lobelia", alchemical = "outr argentum"..cs.."eat argentum"},
                cooldown = "herb",
                requires = "herb",
                handle = 2,
                blockers = {"anorexia", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 3,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 3,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["retribution"] =
        {
          name = "retribution",
          priority = 1,
          prompt = "&lt;white&gt;retribution",
          cures =
            {
              {
                type = "herb",
                command =
                  {herbal = "outr bellwort"..cs.."eat bellwort", alchemical = "outr cuprum"..cs.."eat cuprum"},
                cooldown = "herb",
                requires = "herb",
                handle = 1,
                blockers = {"anorexia", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 2,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 3,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["revealed"] =
        {
          name = "revealed",
          priority = 1,
          prompt = "&lt;red&gt;revealed",
          cures =
            {
              {
                type = "time",
                command = "",
                cooldown = "time",
                requires = "time",
                handle = 1,
                blockers = {""},
                seconds = 60.0,
              },
            },
        },
      ["sandfever"] =
        {
          name = "sandfever",
          priority = 1,
          prompt = "&lt;white&gt;sandfever",
          cures =
            {
              {
                type = "herb",
                command =
                  {
                    herbal = "outr goldenseal"..cs.."eat goldenseal",
                    alchemical = "outr plumbum"..cs.."eat plumbum",
                  },
                cooldown = "herb",
                requires = "herb",
                handle = 1,
                blockers = {"anorexia", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 2,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 3,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["scytherus"] =
        {
          name = "scytherus",
          priority = 1,
          prompt = "&lt;white&gt;scytherus",
          cures =
            {
              {
                type = "herb",
                command =
                  {herbal = "outr ginseng"..cs.."eat ginseng", alchemical = "outr ferrum"..cs.."eat ferrum"},
                cooldown = "herb",
                requires = "herb",
                handle = 1,
                blockers = {"anorexia", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 2,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 3,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["scrambledbrains"] =
        {
          name = "scrambledbrains",
          priority = 1,
          prompt = "&lt;red&gt;scrambledbrains",
          cures =
            {
              {
                type = "time",
                command = "",
                cooldown = "time",
                requires = "time",
                handle = 1,
                blockers = {""},
                seconds = 60.0,
              },
            },
        },
      ["sensitivity"] =
        {
          name = "sensitivity",
          priority = 1,
          prompt = "&lt;white&gt;sensitivity",
          cures =
            {
              {
                type = "herb",
                command = {herbal = "outr kelp"..cs.."eat kelp", alchemical = "outr aurum"..cs.."eat aurum"},
                cooldown = "herb",
                requires = "herb",
                handle = 1,
                blockers = {"anorexia", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 2,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 3,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["scalded"] =
        {
          name = "scalded",
          priority = 1,
          prompt = "&lt;white&gt;scalded",
          cures =
            {
              {
                type = "salve",
                command = "apply epidermal to head",
                cooldown = "salve",
                requires = "salve",
                handle = 1,
                blockers = {"slickness", "sleeping"},
              },
            },
        },
      ["selarnia"] =
        {
          name = "selarnia",
          priority = 1,
          prompt = "&lt;white&gt;selarnia",
          cures =
            {
              {
                type = "salve",
                command = "apply mending to body",
                cooldown = "salve",
                requires = "salve",
                handle = 1,
                blockers = {"slickness", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 2,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 3,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["serioustrauma"] =
        {
          name = "serioustrauma",
          priority = 1,
          prompt = "&lt;white&gt;serioustrauma",
          cures =
            {
              {
                type = "salve",
                command = "apply restoration to body",
                cooldown = "salve",
                requires = "salve",
                handle = 1,
                blockers = {"slickness", "sleeping"},
              },
            },
        },
      ["shivering"] =
        {
          name = "shivering",
          priority = 1,
          prompt = "&lt;white&gt;shivering",
          cures =
            {
              {
                type = "salve",
                command = "apply caloric",
                cooldown = "salve",
                requires = "salve",
                handle = 1,
                blockers = {"slickness", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 2,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 3,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["shyness"] =
        {
          name = "shyness",
          priority = 1,
          prompt = "&lt;white&gt;shyness",
          cures =
            {
              {
                type = "focus",
                command = "focus",
                cooldown = "focus",
                requires = "focus",
                handle = 1,
                blockers = {"impatience", "guilt", "fulminated", "hecate", "sleeping"},
              },
              {
                type = "herb",
                command =
                  {
                    herbal = "outr goldenseal"..cs.."eat goldenseal",
                    alchemical = "outr plumbum"..cs.."eat plumbum",
                  },
                cooldown = "herb",
                requires = "herb",
                handle = 2,
                blockers = {"anorexia", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 3,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 4,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["silenced"] =
        {
          name = "silenced",
          priority = 1,
          prompt = "&lt;red&gt;silenced",
          cures =
            {
              {
                type = "time",
                command = "",
                cooldown = "time",
                requires = "time",
                handle = 1,
                blockers = {""},
                seconds = 0.0,
              },
            },
        },
      ["silver"] =
        {
          name = "silver",
          priority = 1,
          prompt = "&lt;red&gt;silver",
          cures =
            {
              {
                type = "time",
                command = "",
                cooldown = "time",
                requires = "time",
                handle = 1,
                blockers = {""},
                seconds = 180.0,
              },
            },
        },
      ["skullfractures"] =
        {
          name = "skullfractures",
          priority = 1,
          prompt = "&lt;cyan&gt; (sku &lt;white&gt;" .. mystackableaffs.skullfractures .. "&lt;cyan&gt;)&lt;white&gt;",
          cures =
            {
              {
                type = "sip",
                command = "apply health to head",
                cooldown = "sip",
                requires = "sip",
                handle = 1,
                blockers = {"slickness", "sleeping"},
              },
            },
        },
      ["slashedthroat"] =
        {
          name = "slashedthroat",
          priority = 1,
          prompt = "&lt;white&gt;slashedthroat",
          cures =
            {
              {
                type = "salve",
                command = "apply epidermal to head",
                cooldown = "salve",
                requires = "salve",
                handle = 1,
                blockers = {"slickness", "sleeping"},
              },
            },
        },
      ["sleeping"] =
        {
          name = "sleeping",
          priority = 1,
          prompt = "&lt;red&gt;sleeping",
          cures =
            {
              {
                type = "free",
                command = "wake",
                cooldown = "wake",
                requires = "free",
                blockers = {""},
              },
            },
        },
      ["slickness"] =
        {
          name = "slickness",
          priority = 1,
          prompt = "&lt;red&gt;slickness",
          cures =
            {
              {
                type = "smoke",
                command =
                  {
                    herbal = "light valerian"..cs.."smoke valerian",
                    alchemical = "light realgar"..cs.."smoke realgar",
                  },
                cooldown = "smoke",
                requires = "smoke",
                handle = 1,
                blockers = {"asthma", "sleeping"},
              },
              {
                type = "herb",
                command =
                  {
                    herbal = "outr bloodroot"..cs.."eat bloodroot",
                    alchemical = "outr magnesium"..cs.."eat magnesium",
                  },
                cooldown = "herb",
                requires = "herb",
                handle = 2,
                blockers = {"anorexia", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 3,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 4,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["slimeobscure"] =
        {
          name = "slimeobscure",
          priority = 1,
          prompt = "&lt;red&gt;slimeobscure",
          cures =
            {
              {
                type = "time",
                command = "",
                cooldown = "time",
                requires = "time",
                handle = 1,
                blockers = {""},
                seconds = 60.0,
              },
            },
        },
      ["solarburn"] =
        {
          name = "solarburn",
          priority = 1,
          prompt = "&lt;red&gt;solarburn",
          cures =
            {
              {
                type = "time",
                command = "",
                cooldown = "time",
                requires = "time",
                handle = 1,
                blockers = {""},
                seconds = 5.0,
              },
            },
        },
      ["stuttering"] =
        {
          name = "stuttering",
          priority = 1,
          prompt = "&lt;white&gt;stuttering",
          cures =
            {
              {
                type = "salve",
                command = "apply epidermal to head",
                cooldown = "salve",
                requires = "salve",
                handle = 1,
                blockers = {"slickness", "sleeping"},
              },
            },
        },
      ["shadowmadness"] =
        {
          name = "shadowmadness",
          priority = 1,
          prompt = "&lt;white&gt;shadowmadness",
          cures =
            {
              {
                type = "herb",
                command =
                  {
                    herbal = "outr goldenseal"..cs.."eat goldenseal",
                    alchemical = "outr plumbum"..cs.."eat plumbum",
                  },
                cooldown = "herb",
                requires = "herb",
                handle = 1,
                blockers = {"anorexia", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 2,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 3,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["stupidity"] =
        {
          name = "stupidity",
          priority = 1,
          prompt = "&lt;white&gt;stupidity",
          cures =
            {
              {
                type = "focus",
                command = "focus",
                cooldown = "focus",
                requires = "focus",
                handle = 1,
                blockers = {"impatience", "guilt", "fulminated", "hecate", "sleeping"},
              },
              {
                type = "herb",
                command =
                  {
                    herbal = "outr goldenseal"..cs.."eat goldenseal",
                    alchemical = "outr plumbum"..cs.."eat plumbum",
                  },
                cooldown = "herb",
                requires = "herb",
                handle = 2,
                blockers = {"anorexia", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 3,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 4,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["spiritburn"] =
        {
          name = "spiritburn",
          priority = 1,
          prompt = "&lt;white&gt;spiritburn",
          cures =
            {
              {
                type = "herb",
                command =
                  {herbal = "outr lobelia"..cs.."eat lobelia", alchemical = "outr argentum"..cs.."eat argentum"},
                cooldown = "herb",
                requires = "herb",
                handle = 1,
                blockers = {"anorexia", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 2,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 3,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["temperedmelancholic"] =
        {
          name = "temperedmelancholic",
          priority = 1,
          prompt = "&lt;cyan&gt;(MeH &lt;white&gt;" .. mystackableaffs.temperedmelancholic .. "&lt;cyan&gt;)&lt;white&gt;",
          cures =
            {
              {
                type = "herb",
                command =
                  {herbal = "outr ginger"..cs.."eat ginger", alchemical = "outr antimony"..cs.."eat antimony"},
                cooldown = "herb",
                requires = "herb",
                handle = 1,
                blockers = {"anorexia", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 2,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 3,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["temperedcholeric"] =
        {
          name = "temperedcholeric",
          priority = 1,
          prompt = "&lt;cyan&gt;(ChH &lt;white&gt;" .. mystackableaffs.temperedcholeric .. "&lt;cyan&gt;)&lt;white&gt;",
          cures =
            {
              {
                type = "herb",
                command =
                  {herbal = "outr ginger"..cs.."eat ginger", alchemical = "outr antimony"..cs.."eat antimony"},
                cooldown = "herb",
                requires = "herb",
                handle = 1,
                blockers = {"anorexia", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 2,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 3,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["temperedphlegmatic"] =
        {
          name = "temperedphlegmatic",
          priority = 1,
          prompt = "&lt;cyan&gt;(PlH &lt;white&gt;" .. mystackableaffs.temperedphlegmatic .. "&lt;cyan&gt;)&lt;white&gt;",
          cures =
            {
              {
                type = "herb",
                command =
                  {herbal = "outr ginger"..cs.."eat ginger", alchemical = "outr antimony"..cs.."eat antimony"},
                cooldown = "herb",
                requires = "herb",
                handle = 1,
                blockers = {"anorexia", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 2,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 3,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["temperedsanguine"] =
        {
          name = "temperedsanguine",
          priority = 1,
          prompt = "&lt;cyan&gt;(SaH &lt;white&gt;" .. mystackableaffs.temperedsanguine .. "&lt;cyan&gt;)&lt;white&gt;",
          cures =
            {
              {
                type = "herb",
                command =
                  {herbal = "outr ginger"..cs.."eat ginger", alchemical = "outr antimony"..cs.."eat antimony"},
                cooldown = "herb",
                requires = "herb",
                handle = 1,
                blockers = {"anorexia", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 2,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 3,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["tenderskin"] =
        {
          name = "tenderskin",
          priority = 1,
          prompt = "&lt;white&gt;tenderskin",
          cures =
            {
              {
                type = "herb",
                command =
                  {herbal = "outr lobelia"..cs.."eat lobelia", alchemical = "outr argentum"..cs.."eat argentum"},
                cooldown = "herb",
                requires = "herb",
                handle = 1,
                blockers = {"anorexia", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 2,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 3,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["timeflux"] =
        {
          name = "timeflux",
          priority = 1,
          prompt = "&lt;red&gt;timeflux",
          cures =
            {
              {
                type = "time",
                command = "",
                cooldown = "time",
                requires = "time",
                handle = 1,
                blockers = {""},
                seconds = 60.0,
              },
            },
        },
      ["timeloop"] =
        {
          name = "timeloop",
          priority = 1,
          prompt = "&lt;white&gt;timeloop",
          cures =
            {
              {
                type = "herb",
                command =
                  {herbal = "outr bellwort"..cs.."eat bellwort", alchemical = "outr cuprum"..cs.."eat cuprum"},
                cooldown = "herb",
                requires = "herb",
                handle = 1,
                blockers = {"anorexia", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 2,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 3,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["tonguetied"] =
        {
          name = "tonguetied",
          priority = 1,
          prompt = "&lt;white&gt;tonguetied",
          cures =
            {
              {
                type = "salve",
                command = "apply restoration to head",
                cooldown = "salve",
                requires = "salve",
                handle = 1,
                blockers = {"slickness", "sleeping"},
              },
            },
        },
      ["torntendons"] =
        {
          name = "torntendons",
          priority = 1,
          prompt = "&lt;cyan&gt; (ten &lt;white&gt;" .. mystackableaffs.torntendons .. "&lt;cyan&gt;)&lt;white&gt;",
          cures =
            {
              {
                type = "sip",
                command = "apply health to legs",
                cooldown = "sip",
                requires = "sip",
                handle = 1,
                blockers = {"slickness", "sleeping"},
              },
            },
        },
      ["transfixation"] =
        {
          name = "transfixation",
          priority = 1,
          prompt = "&lt;red&gt;transfixation",
          cures =
            {
              {
                type = "balance",
                command = "writhe",
                cooldown = "writhe",
                requires = "balance",
                handle = 1,
                blockers = {"sleeping"},
              },
            },
        },
      ["trueblind"] =
        {
          name = "trueblind",
          priority = 1,
          prompt = "&lt;red&gt;trueblind",
          cures =
            {
              {
                type = "time",
                command = "",
                cooldown = "time",
                requires = "time",
                handle = 1,
                blockers = {""},
                seconds = 7.0,
              },
            },
        },      
      ["unweavingbody"] =
        {
          name = "unweavingbody",
          priority = 1,
          prompt = "&lt;white&gt; [unwbdy &lt;white&gt;" .. mystackableaffs.unweavingbody .. "]",
          cures =
            {
              {
                type = "herb",
                command =
                  {herbal = "outr ginseng"..cs.."eat ginseng", alchemical = "outr ferrum"..cs.."eat ferrum"},
                cooldown = "herb",
                requires = "herb",
                handle = 1,
                blockers = {"anorexia", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 2,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 3,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["unweavingmind"] =
        {
          name = "unweavingmind",
          priority = 1,
          prompt = "&lt;white&gt; [unwbdy &lt;white&gt;" .. mystackableaffs.unweavingmind .. "]",
          cures =
            {
              {
                type = "herb",
                command =
                  {
                    herbal = "outr goldenseal"..cs.."eat goldenseal",
                    alchemical = "outr plumbum"..cs.."eat plumbum",
                  },
                cooldown = "herb",
                requires = "herb",
                handle = 1,
                blockers = {"anorexia", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 2,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 3,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["unweavingspirit"] =
        {
          name = "unweavingspirit",
          priority = 1,
          prompt = "&lt;white&gt; [unwspr &lt;white&gt;" .. mystackableaffs.unweavingspirit .. "]",
          cures =
            {
              {
                type = "smoke",
                command =
                  {herbal = "light elm"..cs.."smoke elm", alchemical = "light cinnabar"..cs.."smoke cinnabar"},
                cooldown = "smoke",
                requires = "smoke",
                handle = 1,
                blockers = {"asthma", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 2,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 3,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["vertigo"] =
        {
          name = "vertigo",
          priority = 1,
          prompt = "&lt;white&gt;vertigo",
          cures =
            {
              {
                type = "herb",
                command =
                  {herbal = "outr lobelia"..cs.."eat lobelia", alchemical = "outr argentum"..cs.."eat argentum"},
                cooldown = "herb",
                requires = "herb",
                handle = 1,
                blockers = {"anorexia", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 2,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 3,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["vinewreathed"] =
        {
          name = "vinewreathed",
          priority = 1,
          prompt = "&lt;red&gt;vinewreathed",
          cures =
            {
              {
                type = "time",
                command = "",
                cooldown = "time",
                requires = "time",
                handle = 1,
                blockers = {""},
                seconds = 20.0,
              },
            },
        },
      ["vitiated"] =
        {
          name = "vitiated",
          priority = 1,
          prompt = "&lt;red&gt;vitiated",
          cures =
            {
              {
                type = "time",
                command = "",
                cooldown = "time",
                requires = "time",
                handle = 1,
                blockers = {""},
                seconds = 20.0,
              },
            },
        },
      ["vitrified"] =
        {
          name = "vitrified",
          priority = 1,
          prompt = "&lt;red&gt;vitrified",
          cures =
            {
              {
                type = "time",
                command = "",
                cooldown = "time",
                requires = "time",
                handle = 1,
                blockers = {""},
                seconds = 45.0,
              },
            },
        },
      ["voidfisted"] =
        {
          name = "voidfisted",
          priority = 1,
          prompt = "&lt;red&gt;voidfisted",
          cures =
            {
              {
                type = "time",
                command = "",
                cooldown = "time",
                requires = "time",
                handle = 1,
                blockers = {""},
                seconds = 15.0,
              },
            },
        },
      ["waterbonds"] =
        {
          name = "waterbonds",
          priority = 1,
          prompt = "&lt;red&gt;waterbonds",
          cures =
            {
              {
                type = "time",
                command = "",
                cooldown = "time",
                requires = "time",
                handle = 1,
                blockers = {""},
                seconds = 15.0,
              },
            },
        },
      ["webbed"] =
        {
          name = "webbed",
          priority = 1,
          prompt = "&lt;red&gt;webbed",
          cures =
            {
              {
                type = "balance",
                command = "writhe",
                cooldown = "writhe",
                requires = "balance",
                handle = 1,
                blockers = {"sleeping"},
              },
            },
        },
      ["weariness"] =
        {
          name = "weariness",
          priority = 1,
          prompt = "&lt;white&gt;weariness",
          cures =
            {
              {
                type = "herb",
                command = {herbal = "outr kelp"..cs.."eat kelp", alchemical = "outr aurum"..cs.."eat aurum"},
                cooldown = "herb",
                requires = "herb",
                handle = 1,
                blockers = {"anorexia", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 2,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 3,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
      ["whisperingmadness"] =
        {
          name = "whisperingmadness",
          priority = 1,
          prompt = "&lt;white&gt;whisperingmadness",
          cures =
            {
              {
                type = "herb",
                command = {herbal = "outr lobelia"..cs.."eat lobelia", alchemical = "outr argentum"..cs.."eat argentum"},
                cooldown = "herb",
                requires = "herb",
                handle = 1,
                blockers = {"anorexia", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 2,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 3,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },        
      ["wristfractures"] =
        {
          name = "wristfractures",
          priority = 1,
          prompt = "&lt;cyan&gt; (wri &lt;white&gt;" .. mystackableaffs.wristfractures .. "&lt;cyan&gt;)&lt;white&gt;",
          cures =
            {
              {
                type = "sip",
                command = "apply health to arms",
                cooldown = "sip",
                requires = "sip",
                handle = 1,
                blockers = {"slickness", "sleeping"},
              },
            },
        },
      ["voyria"] =
        {
          name = "voyria",
          priority = 1,
          prompt = "&lt;red&gt;voyria",
          cures =
            {
              {
                type = "antidote",
                command = "sip immunity",
                cooldown = "antidote",
                requires = "antidote",
                handle = 1,
                blockers = {"anorexia", "sleeping"},
              },
              {
                type = "tree",
                command = "touch tree",
                cooldown = "tree",
                requires = "tree",
                handle = 2,
                blockers = {"paralysis", "sleeping"},
              },
              {
                type = activeCureData[myclass()].type,
                command = activeCureData[myclass()].command,
                cooldown = activeCureData[myclass()].cooldown,
                requires = activeCureData[myclass()].requires,
                handle = 3,
                blockers = activeCureData[myclass()].blockers,
              },
            },
        },
    }  
    
    
    -- Usage example
--local class = myclass() 
--local afflictions = afflictions or {}  
--local filename = class .. "prios.lua"
-- To load or create the file:
--ensureFileExists("curing", filename, "load")
    
    
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>initializeSelfPrecache</name>
							<packageName></packageName>
							<script>function initializeSelfPrecache()
  if cureMethod == "herbal" then
    precache = {ginseng = 0, kelp = 0, goldenseal = 0, bloodroot = 0}
    desired_precache = {ginseng = 3, kelp = 3, goldenseal = 3, bloodroot = 3}
  else
    precache = {ferrum = 0, aurum = 0, plumbum = 0, magnesium = 0}
    desired_precache = {ferrum = 3, aurum = 3, plumbum = 3, magnesium = 3}
  end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>initializeRiftables</name>
							<packageName></packageName>
							<script>function initializeRiftables()
  riftables =
    {
      bisemutum = {amount = 0},
      malachite = {amount = 0},
      arsenic = {amount = 0},
      antimony = {amount = 0},
      quartz = {amount = 0},
      plumbum = {amount = 0},
      realgar = {amount = 0},
      ferrum = {amount = 0},
      cuprum = {amount = 0},
      magnesium = {amount = 0},
      argentum = {amount = 0},
      calcite = {amount = 0},
      stannum = {amount = 0},
      gypsum = {amount = 0},
      aurum = {amount = 0},
      dolomite = {amount = 0},
      quicksilver = {amount = 0},
      azurite = {amount = 0},
      calamine = {amount = 0},
      cinnabar = {amount = 0},
    }
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>initializePipeSettings</name>
							<packageName></packageName>
							<script>function initializePipeSettings()
  pipes = {
    refill = 3
}
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>initializeActiveCureData</name>
							<packageName></packageName>
							<script>-- Add cure or defense to the pipeline
function initializeActiveCureData()
activeCureData = {
  ["alchemist"] = {type = "salt", command = "educe salt", cooldown = "salt", requires = "salt", blockers = {"stupidity","sleeping"}},
  ["serpent"] = {type = "shrugging", command = "shrugging", cooldown = "shrugging", requires = {"balance","shrugging"}, blockers = {"weariness","sleeping"}},
  ["runewarden"] = {type = "fitness", command = "fitness", cooldown = "fitness", requires = "fitness", blockers = {"weariness","sleeping"}},
  ["dragon"] = {type = "dragonheal", command = "dragonheal", cooldown = "dragonheal", requires = "dragonheal", blockers = {{"weariness","recklessness"},"sleeping"}},
  ["magi"] = {type = "bloodboil", command = "cast bloodboil", cooldown = "bloodboil", requires = "bloodboil", blockers = {{"brokenleftarm","brokenrightarm"},"sleeping"}},
  ["blademaster"] = {type = "fitness", command = "fitness", cooldown = "fitness", requires = "fitness", blockers = {"weariness","sleeping"}},
  --["blademaster"] = {type = "alleviate", command = "alleviate", cooldown = "alleviate", requires = "alleviate", blockers = {"paralysis","sleeping"}},
  ["infernal"] = {type = "fitness", command = "fitness", cooldown = "fitness", requires = "fitness", blockers = {"weariness","sleeping"}},
  ["paladin"] = {type = "fitness", command = "fitness", cooldown = "fitness", requires = "fitness", blockers = {"weariness","sleeping"}},
  ["sentinel"] = {type = "fitness", command = "fitness", cooldown = "fitness", requires = "fitness", blockers = {"weariness","sleeping"}},
  --["depthswalker"] = {type = "chrono", command = "chrono", cooldown = "chrono", requires = "chrono", blockers = {"recklessness","sleeping"}},
  ["druid"] = {type = "panacea", command = "evoke panacea", cooldown = "panacea", requires = "panacea", blockers = {"weariness","sleeping"}},
  }
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>initializePipeLine</name>
							<packageName></packageName>
							<script>-- Add cure or defense to the pipeline
function initializePipeLine()
  pipeline = {defenses={},afflictions={}}
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>initializeVitalsData</name>
							<packageName></packageName>
							<script>function initializeVitalsData()
vitals = {
    health = {current = 0, previous = 0, halflife = 0},
    maxHealth = 0,
    mana = {current = 0, previous = 0, halflife = 0},
    maxMana = 0,
    ep = {current = 0, previous = 0, halflife = 0},
    maxEp = 0,
    wp = {current = 0, previous = 0, halflife = 0},
    maxWp = 0,
    rank = {current = 0, previous = 0, halflife = 0},
    maxRank = 0,
}

interpolationState = {
    health = false,
    mana = false,
    ep = false,
    wp = false,
    rank = false
}

end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>initializeMyStackableAffs</name>
							<packageName></packageName>
							<script>-- Function to initialize mystackableaffs
function initializeMyStackableAffs()
  mystackableaffs = {
    torntendons = 0,
    skullfractures = 0,
    crackedribs = 0,
    wristfractures = 0,
    pressure = 0,
    burning = 0,
    temperedsanguine = 0,
    temperedmelancholic = 0,
    temperedphlegmatic = 0,
    temperedcholeric = 0,
    unweavingmind = 0,
    unweavingbody = 0,
    unweavingspirit = 0,
    horror = 0,
  }
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>initializeHumourAffTable</name>
							<packageName></packageName>
							<script>-- Function to initialize humourafftable
function initializeHumourAffTable()
  humourafftable = {
    "nausea",
    "sensitivity",
    "slickness",
    "stupidity",
    "anorexia",
    "impatience",
    "clumsiness",
    "weariness",
    "asthma",
    "haemophilia",
    "recklessness",
    "paralysis",
  }
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>initializeCureBalance</name>
							<packageName></packageName>
							<script>function initializeCureBalance()
  balance_start_time = 0
  equilibrium_start_time = 0
  health_start_time = 0
  mana_start_time = 0
  herb_start_time = 0
  focus_start_time = 0
  tree_start_time = 0
  smoke_start_time = 0
  salve_start_time = 0
  shrugging_start_time = 0
  balance_start_time = 0
  equilibrium_start_time = 0
  stunned_start_time = 0
  balance_data = {
      free = {
          in_use = false,
          avg_time = 99,
          aff_modifiers = { lethargy = { multiplier = 1.0, offset = 0.5 } },
          echo_title = "free",
      },
      time = {
          in_use = true, -- always set to true, there is not time balance.
          avg_time = 99,
          aff_modifiers = { lethargy = { multiplier = 1.0, offset = 0.5 } },
          echo_title = "time",
      },      
      wake = {
          in_use = false,
          avg_time = 99,
          aff_modifiers = { lethargy = { multiplier = 1.0, offset = 0.5 } },
          echo_title = "wake",
      },    
      writhe = {
          in_use = false,
          avg_time = 99,
          aff_modifiers = { lethargy = { multiplier = 1.0, offset = 0.5 } },
          echo_title = "writhe",
      },        
      balance = {
          in_use = false,
          avg_time = 1.65,
          aff_modifiers = { lethargy = { multiplier = 1.0, offset = 0.5 } },
          echo_title = "balance",
      },
      equilibrium = {
          in_use = false,
          avg_time = 3.0,
          aff_modifiers = {},
          echo_title = "equilibrium",
      },
      antidote = {
          in_use = false,
          avg_time = 8.0,
          aff_modifiers = {},
          echo_title = "antidote",
      },    
      tree = {
          in_use = false,
          avg_time = 16.0,
          aff_modifiers = {},
          echo_title = "tree",
      },
      herb = {
          in_use = false,
          avg_time = 2.3,
          aff_modifiers = {
              homunculusmercury = { multiplier = 1.0, offset = 0.5 },
              earthdisrupt = { multiplier = 1.0, offset = 0.5 },
          },
          echo_title = "herb",
      },
      salve = {
          in_use = false,
          avg_time = 5.0,
          aff_modifiers = {},
          echo_title = "salve",
      },
      smoke = {
          in_use = false,
          avg_time = 1.55,
          aff_modifiers = {},
          echo_title = "smoke",
      },
      focus = {
          in_use = false,
          avg_time = 2.6,
          aff_modifiers = {},
          echo_title = "focus",
      },
      health = {
          in_use = false,
          avg_time = 3.3,
          aff_modifiers = {},
          echo_title = "health",
      },
      mana = {
          in_use = false,
          avg_time = 3.3,
          aff_modifiers = {},
          echo_title = "mana",
      },
      stunned = {
          in_use = false,
          avg_time = 3.0,
          aff_modifiers = {},
          echo_title = "stunned",
      },
      fitness = {
          in_use = false,
          avg_time = 3.0,
          aff_modifiers = {},
          echo_title = "fitness",
      },
      shrugging = {
          in_use = false,
          avg_time = 13.0,
          aff_modifiers = {},
          echo_title = "shrugging",
      },
      dragonheal = {
          in_use = false,
          avg_time = 23.0,
          aff_modifiers = {},
          echo_title = "dragonheal",
      },
      salt = {
          in_use = false,
          avg_time = 3.0,
          aff_modifiers = {},
          echo_title = "salt",
      },
      bloodboil = {
          in_use = false,
          avg_time = 3.0,
          aff_modifiers = {},
          echo_title = "bloodboil",
      },
      panacea = {
          in_use = false,
          avg_time = 3.0,
          aff_modifiers = {},
          echo_title = "panacea",
      },
      accelerate = {
          in_use = false,
          avg_time = 3.0,
          aff_modifiers = {},
          echo_title = "accelerate",
      },
  }

end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>initializeLimbDamageTypes</name>
							<packageName></packageName>
							<script>function initializeLimbDamageTypes()
  limbDamageTypes = {
      "mangledhead",
      "mangledleftleg",
      "mangledrightleg",
      "mangledleftarm",
      "mangledrightarm",
      "damagedhead",
      "damagedleftleg",
      "damagedrightleg",
      "damagedleftarm",
      "damagedrightarm",
      "mildtrauma",
      "serioustrauma",
      "brokenleftleg",
      "brokenrightleg",
      "brokenleftarm",
      "brokenrightarm",
  }
end</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>defenses</name>
						<packageName></packageName>
						<script></script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>initializeMyDefs</name>
							<packageName></packageName>
							<script>function initializeMyDefs()
  mydefs = {}
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>initializeSkillTreeList</name>
							<packageName></packageName>
							<script>-- Function to initialize skillTreeList
function initializeSkillTreeList()
  skillTreeList = {
    ["alchemist"] = {"alchemy", "physiology", "formulation", "sublimation"},
    ["apostate"] = {"evileye", "necromancy", "apostasy"},
    ["bard"] = {"voicecraft", "swashbuckling", "harmonics"},
    ["blademaster"] = {"twoarts", "striking", "shindo"},
    ["depthswalker"] = {"aeonics", "shadowmancy", "terminus"},
    ["druid"] = {"groves", "metamorphosis", "reclamation"},
    ["infernal"] = {"weaponmastery", "oppression", "malignity"},
    ["jester"] = {"tarot", "pranks", "puppetry"},
    ["magi"] = {"elementalism", "crystalism", "artificing"},
    ["monk"] = {"tekura", "shikudo", "kaido", "telepathy"},
    ["occultist"] = {"occultism", "tarot", "domination"},
    ["paladin"] = {"weaponmastery", "excision", "valour"},
    ["pariah"] = {"memorium", "pestilence", "charnel"},
    ["priest"] = {"spirituality", "devotion", "zeal"},
    ["psion"] = {"weaving", "psionics", "emulation"},
    ["runewarden"] = {"weaponmastery", "runelore", "discipline"},
    ["sentinel"] = {"metamorphosis", "woodlore", "skirmishing"},
    ["sylvan"] = {"propagation", "groves", "weatherweaving"},
    ["unnamable"] = {"weaponmastery", "anathema", "dominion"},
    ["air Elemental Lord"] = {""},
    ["water Elemental Lord"] = {""},
    ["fire Elemental Lord"] = {""},
    ["earth Elemental Lord"] = {""},
    ["dragon"] = {"dragoncraft"},
    ["serpent"] = {"subterfuge", "venom", "hypnosis"},
    ["shaman"] = {"spiritlore", "curses", "vodun"},
  }
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>initializeBreathWeaponTypes</name>
							<packageName></packageName>
							<script>-- Function to initialize breath_weapon_types
function initializeBreathWeaponTypes()
  breath_types = {
    ["Black"] = "Acid",
    ["Blue"] = "Ice",
    ["Gold"] = "Psi",
    ["Green"] = "Venom",
    ["Red"] = "Dragonfire",
    ["Silver"] = "Lightning",
  }
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>initializeDefensiveTable</name>
							<packageName></packageName>
							<script>-- EXAMPLE: initializeDefensiveTable("save") or initializeDefensiveTable("load")
function initializeDefensiveTable(arg)
--blackboarlegend
local cs = cmdsep
defenses =  {
	shintrance =
	  {
		type = "shindo",
		command = "shin trance",
		relax = "break trance",
		active = false,
		enabled = true,
		keepup = false,
		name = "shintrance",
    cooldown = {"free"},
		requires = {"free"},
		drain = "none",
		priority = 2,
		blockers = {"sleep","paralysis"},
	  },

	weathering =
	  {
		type = {"shindo","discipline"},
		command = "weathering",
		relax = "",
		active = false,
		enabled = true,
		keepup = false,
		name = "weathering",
    cooldown = {"free"},
		requires = {"free"},
		drain = "none",
		priority = 2,
		blockers = {"sleep","paralysis"},
	  },
  toughness =
	  {
		type = "shindo",
		command = "toughness",
		relax = "",
		active = false,
		enabled = true,
		keepup = false,
		name = "toughness",
    cooldown = {"free"},
		requires = {"free"},
		drain = "none",
		priority = 2,
		blockers = {"sleep","paralysis"},
	  }, 
  gripping = 
	  {
		type = {"discipline","twoarts"},
		command = "grip",
		relax = "relax grip",
		active = false,
		enabled = true,
		keepup = false,
		name = "gripping",
    cooldown = {"free"},
		requires = {"free"},
		drain = "none",
		priority = 2,
		blockers = {"sleep","paralysis"},
	  },     
 projectiles = 
	  {
		type = "shindo",
		command = "projectiles on",
		relax = "relax projectiles",
		active = false,
		enabled = true,
		keepup = false,
		name = "projectiles",
    cooldown = {"free"},
		requires = {"free"},
		drain = "mana",
		priority = 2,
		blockers = {"sleep","paralysis"},
	  }, 
  shinbinding = 
	  {
		type = "shindo",
		command = "binding on",
		relax = "binding off",
		active = false,
		enabled = true,
		keepup = false,
		name = "shinbinding",
    cooldown = {"equilibrium"},
		requires = {"balance"},
		drain = "none",
		priority = 3,
		blockers = {"sleep","paralysis"},
	  },  
  retaliation = 
	  {
		type = "shindo",
		command = "retaliation on",
		relax = "retaliation off",
		active = false,
		enabled = true,
		keepup = false,
		name = "retaliation",
    cooldown = {"equilibrium"},
		requires = {"balance","equilibrium"},
		drain = "none",
		priority = 3,
		blockers = {"sleep","paralysis"},
	  },    
 blademastery = 
	  {
		type = "discipline",
		command = "mastery on",
		relax = "relax mastery",
		active = false,
		enabled = true,
		keepup = false,
		name = "blademastery",
    cooldown = {"free"},
		requires = {"free"},
		drain = "none",
		priority = 2,
		blockers = {"sleep","paralysis"},
	  },            
  resistance = 
	  {
		type = "discipline",
		command = "resistance",
		relax = "",
		active = false,
		enabled = true,
		keepup = false,
		name = "resistance",
    cooldown = {"free"},
		requires = {"free"},
		drain = "none",
		priority = 2,
		blockers = {"sleep","paralysis"},
	  }, 
  waterwalking = 
	  {
		type = "shindo",
		command = "waterwalk",
		relax = "relax waterwalk",
		active = false,
		enabled = true,
		keepup = false,
		name = "waterwalking",
    cooldown = {"balance"},
		requires = {"balance","equilibrium"},
		drain = "none",
		priority = 99,
		blockers = {"sleep","prone","paralysis"},
	  },  
  shinclarity = 
	  {
		type = "shindo",
		command = "clarity",
		relax = "",
		active = false,
		enabled = true,
		keepup = false,
		name = "shinclarity",
    cooldown = {"equilibrium"},
		requires = {"balance"},
		drain = "none",
		priority = 99,
		blockers = {"sleep","prone","paralysis"},
	  },      
  mindnet = 
	  {
		type = "shindo",
		command = "mindnet on",
		relax = "relax mindnet",
		active = false,
		enabled = true,
		keepup = false,
		name = "mindnet",
    cooldown = {"free"},
		requires = {"free"},
		drain = "mana",
		priority = 2,
		blockers = {"sleep","paralysis"},
	  }, 
  consciousness = 
	  {
		type = "shindo",
		command = "consciousness on",
		relax = "relax consciousness",
		active = false,
		enabled = true,
		keepup = false,
		name = "consciousness",
    cooldown = {"free"},
		requires = {"free"},
		drain = "",
		priority = 2,
		blockers = {"sleep","paralysis"},
	  },     
                     
  dragonarmour =
	  {
		type = "dragoncraft",
		command = "dragonarmour on",
		relax = "relax dragonarmour",
		active = false,
		enabled = true,
		keepup = false,
		name = "dragonarmour",
    cooldown = {"equilibrium"},
		requires = {"balance"},
		drain = "none",
		priority = 99,
		blockers = {"sleep","prone","paralysis"},
	  },
	dragonbreath =
	  {
		type = "dragoncraft",
		command = dragon_breath(),
		--command = "summon lightning",
    relax = "",
		active = false,
		enabled = true,
		keepup = false,
    name = "dragonbreath",
		cooldown = {"free"},
		requires = {"equilibrium"},
		drain = "none",
		priority = 2,
		blockers = {"sleep","prone","paralysis"},
	  },
	hiding =
	  {
		type = "subterfuge",
		command = "hide",
		relax = "emerge",
		active = false,
		enabled = true,
		keepup = false,
    name = "hiding",
		cooldown = {"balance"},
		requires = {"equilibrium"},
		drain = "none",
		priority = 3,
		blockers = {"sleep","prone"}
	  },
	pacing =
	  {
		type = "subterfuge",
		command = "pacing on",
		relax = "relax pacing",
		active = false,
		enabled = true,
		keepup = false,
    name = "pacing",
		cooldown = {"balance"},
		requires = {"equilibrium"},
		drain = "none",
		priority = 3,
		blockers = {"sleep","prone"}
	  },
	scales =
	  {
		type = "subterfuge",
		command = "scales",
		relax = "scales shed",
		active = false,
		enabled = true,
		keepup = false,
    name = "scales",
		cooldown = {"balance"},
		requires = {"equilibrium"},
		drain = "none",
		priority = 3,
		blockers = {"sleep"}
	  },
	ghost =
	  {
		type = "subterfuge",
		command = "conjure ghost",
		relax = "dispel me",
		active = false,
		enabled = true,
		keepup = false,
    name = "ghost",
		cooldown = {"equilibrium"},
		requires = {"equilibrium"},
		drain = "none",
		priority = 2,
		blockers = {"sleep"}
	  },
	lipreading =
	  {
		type = "subterfuge",
		command = "lipread",
		relax = "",
		active = false,
		enabled = true,
		keepup = false,
    name = "lipreading",
		cooldown = {"equilibrium"},
		requires = {"equilibrium"},
		drain = "none",
		priority = 2,
		blockers = {"sleep"}
	  },          
	weaving =
	  {
		type = "subterfuge",
		command = "weaving on",
		relax = "relax weaving",
		active = false,
		enabled = true,
		keepup = false,
    name = "weaving",
		cooldown = {"balance"},
		requires = {"equilibrium"},
		drain = "mana",
		priority = 3,
		blockers = {"sleep"}
	  },
	secondsight =
	  {
		type = "subterfuge",
		command = "secondsight",
		relax = "",
		active = false,
		enabled = true,
		keepup = false,
    name = "secondsight",
		cooldown = {"equilibrium"},
		requires = {"balance"},            
		drain = "none",
		priority = 3,
		blockers = {"sleep"}
	  },
	shroud =
	  {
		type = "subterfuge",
		command = "conjure cloak",
		relax = "dispel me",
		active = false,
		enabled = true,
		keepup = false,
    name = "shroud",
		cooldown = {"equilibrium"},
		requires = {"equilibrium"},            
		drain = "none",
		priority = 2,
		blockers = {"sleep"}
	  },   
	lifevision =
	  {
		type = "vision",
		command = "lifevision",
		relax = "relax nightsight",
		active = false,
		enabled = true,
		keepup = false,
    name = "lifevision",
		cooldown = {"free"},
		requires = {"free"},
		drain = "none",
		priority = 1,
		blockers = {"sleep"}
	  },             
	nightsight =
	  {
		type = "vision",
		command = "nightsight on",
		relax = "relax nightsight",
		active = false,
		enabled = true,
		keepup = false,
    name = "nightsight",
		cooldown = {"free"},
		requires = {"free"},
		drain = "none",
		priority = 1,
		blockers = {"sleep"}
	  },
	vigilance =
	  {
		type = "vision",
		command = "vigilance on",
		relax = "relax vigilance",
		active = false,
		enabled = true,
		keepup = false,
    name = "vigilance",
		cooldown = {"free"},
		requires = {"equilibrium"},
		drain = "mana",
		priority = 1,
		blockers = {"sleep"}
	  },
	treewatch =
	  {
		type = "vision",
		command = "treewatch on",
		relax = "relax treewatch",
		active = false,
		enabled = true,
		keepup = false,
    name = "treewatch",
		cooldown = {"free"},
		requires = {"free"},
		drain = "mana",
		priority = 1,
		blockers = {"sleep"}
	  },
	deathsight =
	  {
		type = "vision",
		command = "deathsight",
		relax = "relax deathsight",
		active = false,
		enabled = true,
		keepup = false,
    name = "deathsight",
		cooldown = {"free"},
		requires = {"balance","equilibrium"},
		drain = "none",
		priority = 1,
		blockers = {"sleep"}
	  },
	skywatch =
	  {
		type = "vision",
		command = "skywatch on",
		relax = "relax skywatch",
		active = false,
		enabled = true,
		keepup = false,
    name = "skywatch",
		cooldown = {"free"},
		requires = {"free"},
		drain = "mana",
		priority = 1,
		blockers = {"sleep"}
	  },
	groundwatch =
	  {
		type = "vision",
		command = "groundwatch on",
		relax = "relax groundwatch",
		active = false,
		enabled = true,
		keepup = false,
    name = "groundwatch",
		cooldown = {"free"},
		requires = {"free"},
		drain = "mana",
		priority = 1,
		blockers = {"sleep"}
	  },
	alertness =
	  {
		type = "vision",
		command = "alertness on",
		relax = "relax alertness",
		active = false,
		enabled = true,
		keepup = false,
    name = "alertness",
		cooldown = {"equilibrium"},
		requires = {"equilibrium"},
		drain = "mana",
		priority = 2,
		blockers = {"sleep"}
	  },
	hypersight =
	  {
		type = "vision",
		command = "hypersight on",
		relax = "relax hypersight",
		active = false,
		enabled = true,
		keepup = false,
    name = "hypersight",
		cooldown = {"equilibrium"},
		requires = {"equilibrium"},
		drain = "mana",
		priority = 2,
		blockers = {"sleep"}
	  },
	thirdeye =
	  {
		type = "vision",
		command = "thirdeye",
		relax = "",
		active = false,
		enabled = true,
		keepup = false,
    name = "thirdeye",
		cooldown = {"free"},
		requires = {"free"},
		drain = "none",
		priority = 1,
		blockers = {"sleep"}
	  },
	telesense =
	  {
		type = "vision",
		command = "telesense on",
		relax = "relax telesense",
		active = false,
		enabled = true,
		keepup = false,
    name = "telesense",
		cooldown = {"free"},
		requires = {"free"},
		drain = "mana",
		priority = 1,
		blockers = {"sleep"}
	  },
	softfocusing =
	  {
		type = "vision",
		command = "softfocus on",
		relax = "relax softfocus",
		active = false,
		enabled = true,
		keepup = false,
    name = "softfocusing",
		cooldown = {"free"},
		requires = {"free"},
		drain = "mana",
		priority = 1,
		blockers = {"sleep"}
	  },
	selfishness =
	  {
		type = "survival",
		command = "selfishness",
		relax = "generosity",
		active = false,
		enabled = true,
		keepup = false,
    name = "selfishness",
		cooldown = {"equilibrium"},
		requires = {"balance"},
		drain = "none",
		priority = 3,
		blockers = {"sleep"}
	  },
	heldbreath =
	  {
		type = "survival",
		command = "hold breath",
		relax = "release",
		active = false,
		enabled = true,
		keepup = false,
    name = "heldbreath",
		cooldown = {"free"},
		requires = {"balance","equilibrium"},
		drain = "none",
		priority = 4,
		blockers = {"sleep"}
	  },
	insomnia =
	  {
		type = "survival",
		command = "insomnia",
		relax = "relax insomnia",
		active = false,
		enabled = true,
		keepup = false,
    name = "insomnia",
		cooldown = {"free"},
		requires = {"free"},
		drain = "none",
		priority = 1,
		blockers = {"sleep"}
	  },
	curseward =
	  {
		type = "survival",
		command = "curseward",
		relax = "",
		active = false,
		enabled = true,
		keepup = false,
    name = "curseward",
		cooldown = {"equilibrium"},
		requires = {"balance"},
		drain = "none",
		priority = 3,
		blockers = {"sleep","prone"}
	  },
	metawake =
	  {
		type = "survival",
		command = "metawake on",
		relax = "relax metawake",
		active = false,
		enabled = true,
		keepup = false,
    name = "metawake",
		cooldown = {"equilibrium"},
		requires = {"balance"},
		drain = "mana",
		priority = 3,
		blockers = {"sleep"}
	  },
	speed =
	  {
		type = "free",
		command = "sip speed",
		relax = "",
		active = false,
		enabled = true,
		keepup = false,
    name = "speed",
		cooldown = {"free"},
		requires = {"free"},
		drain = "none",
		priority = 1,
		blockers = {"sleep","anorexia"}
	  },   
	levitating =
	  {
		type = "free",
		command = "sip levitation",
		relax = "",
		active = false,
		enabled = true,
		keepup = false,
    name = "levitating",
		cooldown = {"free"},
		requires = {"free"},
		drain = "none",
		priority = 1,
		blockers = {"sleep","anorexia"}
	  },
	poisonresist =
	  {
		type = "free",
		command = "sip venom",
		relax = "",
		active = false,
		enabled = true,
		keepup = false,
    name = "poisonresist",
		cooldown = {"free"},
		requires = {"free"},
		drain = "none",
		priority = 1,
		blockers = {"sleep","anorexia"}
	  }, 
	temperance =
	  {
		type = "free",
		command = "sip frost",
		relax = "",
		active = false,
		enabled = true,
		keepup = false,
    name = "temperance",
		cooldown = {"free"},
		requires = {"free"},
		drain = "none",
		priority = 1,
		blockers = {"sleep","anorexia"}
	  },                                
	insulation =
	  {
		type = "salve",
		command = "apply caloric",
		relax = "",
		active = false,
		enabled = true,
		keepup = false,
    name = "insulation",
		cooldown = {"salve"},
		requires = {"salve"},
		drain = "none",
		priority = 1,
		blockers = {"sleep","slickness"}
	  }, 
	density =
	  {
		type = "salve",
		command = "apply mass",
		relax = "",
		active = false,
		enabled = true,
		keepup = false,
    name = "density",
		cooldown = {"salve"},
		requires = {"salve"},
		drain = "none",
		priority = 1,
		blockers = {"sleep","paralysis","slickness"}		
	  }, 
	fangbarrier =
	  {
		type = "herb",
		command = {herbal = "outr sileris"..cs.."apply sileris", alchemical = "outr quicksilver"..cs.."apply quicksilver"},
		relax = "",
		active = false,
		enabled = true,
		keepup = false,
    name = "fangbarrier",
		cooldown = {"free"},
		requires = {"free"},
		priority = 1,
		drain = "none",
		blockers = {"sleep","slickness"}
	  },                          
	rebounding =
	  {
		type = "smoke",
		command = {herbal = "light skullcap"..cs.."smoke skullcap", alchemical = "light malachite"..cs.."smoke malachite"}, 
		relax = "",
		active = false,
		enabled = true,
		keepup = false,
    name = "rebounding",
		cooldown = {"smoke"},
		requires = {"smoke"},
		drain = "none",
		priority = 1,
		blockers = {"sleep","asthma"}
	  },           
	deafness =
	  {
		type = "herb",
		command = {herbal = "outr hawthorn"..cs.."eat hawthorn", alchemical = "outr calamine"..cs.."eat calamine"},            
		relax = "apply epidermal",
		active = false,
		enabled = true,
		keepup = false,
    name = "deafness",
		cooldown = {"free"},
		requires = {"free"},
		drain = "none",
		priority = 1,
		blockers = {"sleep","anorexia"}
	  },  
	blindness =
	  {
		type = "herb",
		command = {herbal = "outr bayberry"..cs.."eat bayberry", alchemical = "outr arsenic"..cs.."eat arsenic"},
		relax = "apply epidermal",
		active = false,
		enabled = true,
		keepup = false,
    name = "blindness",
		cooldown = {"herb"},
		requires = {"herb"},
		drain = "none",
		priority = 1,
		blockers = {"sleep","anorexia"}
	  },     
	mindseye =
	  {
		type = "tattoo",
		command = "touch mindseye",
		relax = "",
		active = false,
		enabled = true,
		keepup = false,
    name = "mindseye",
		cooldown = {"equilibrium"},
		requires = {"balance","equilibrium"},
		drain = "none",
		priority = 99,
		blockers = {"sleep","paralysis"}
	  },       
	mosstattoo =
	  {
		type = "tattoo",
		command = "touch moss",
		relax = "",
		active = false,
		enabled = true,
		keepup = false,
    name = "mosstattoo",
		cooldown = {"balance"},
		requires = {"balance","equilibrium"},
		drain = "none",
		priority = 3,
		blockers = {"sleep","paralysis"}
	  }, 
	boartattoo =
	  {
		type = "tattoo",
		command = "touch boar",
		relax = "",
		active = false,
		enabled = true,
		keepup = false,
    name = "boartattoo",
		cooldown = {"balance"},
		requires = {"balance","equilibrium"},
		drain = "none",
		priority = 1,
		blockers = {"sleep","paralysis"}
	  },
	moontattoo =
	  {
		type = "tattoo",
		command = "touch moon",
		relax = "",
		active = false,
		enabled = true,
		keepup = false,
    name = "moontattoo",
		cooldown = {"balance"},
		requires = {"balance","equilibrium"},
		drain = "none",
		priority = 1,
		blockers = {"sleep","paralysis"}
	  },    
	oxtattoo =
	  {
		type = "tattoo",
		command = "touch ox",
		relax = "",
		active = false,
		enabled = true,
		keepup = false,
    name = "oxtattoo",
		cooldown = {"balance"},
		requires = {"balance","equilibrium"},
		drain = "none",
		priority = 3,
		blockers = {"sleep","paralysis"}
	  },
	megalithtattoo =
	  {
		type = "tattoo",
		command = "touch megalith",
		relax = "",
		active = false,
		enabled = true,
		keepup = false,
    name = "megalithtattoo",
		cooldown = {"balance"},
		requires = {"balance","equilibrium"},
		drain = "none",
		priority = 3,
		blockers = {"sleep","paralysis"}
	  }, 
	belltattoo =
	  {
		type = "tattoo",
		command = "touch bell",
		relax = "",
		active = false,
		enabled = true,
		keepup = false,
    name = "belltattoo",
		cooldown = {"free"},
		requires = {"balance","equilibrium"},
		drain = "none",
		priority = 3,
		blockers = {"sleep","paralysis"}
	  },  
	cloak =
	  {
		type = "tattoo",
		command = "touch cloak",
		relax = "",
		active = false,
		enabled = true,
		keepup = false,
    name = "cloak",
		cooldown = {"equilibrium"},
		requires = {"balance","equilibrium"},
		drain = "none",
		priority = 3,
		blockers = {"sleep","paralysis"}
	  },                                                                       
               
}

-- Define the base directory for the C: drive
local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"

-- Check if the file exists before attempting to load or save
local filePath = tablesDir .. "/defuplist.lua"

if arg == "load" then
    ensureFileExists(tablesDir, "defuplist.lua", "load", defenses)
elseif arg == "save" then
    saveDefensiveTable()
else
    cecho("&lt;red&gt;Invalid argument: " .. tostring(arg) .. "\n")
end



end  
</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>combat</name>
						<packageName></packageName>
						<script></script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>initializeCombatFlags</name>
							<packageName></packageName>
							<script>function initializeCombatFlags()
  failsafe = false
  hindered = false
  blocking = false
  fullsipping = false
  shielded = false
  rebounding = false
  selfishness = false
  defupmode = false
  meditating = false
  aiming = false
  clotcd = 0.0
  clotat = 70
  bleeddanger = 0
  vivimode = false
  flying = false
  mounted = false
  blockage = false
  listGuards = true
  jumprequested = false
  shackleworn = false
  hiddenaff = 0
  raidleader = ""
  parrystring = ""
  parrymethod = "stand"
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="no" isFolder="no">
							<name>initializeBreakpointTable</name>
							<packageName></packageName>
							<script>function initializeBreakpointTable()
  breakpointrecordtable = {}
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>initializePlayer2History</name>
							<packageName></packageName>
							<script>-- Function to initialize player2History
function initializePlayer2History()
  player2History = {}
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>initializeEnemyClass</name>
							<packageName></packageName>
							<script>-- Function to initialize enemyclass
function initializeEnemyClass()
  enemyclass = {
    ["alchemist"] = {["enabled"] = false},
    ["apostate"] = {["enabled"] = false},
    ["bard"] = {["enabled"] = false},
    ["blademaster"] = {["enabled"] = false},
    ["depthswalker"] = {["enabled"] = false},
    ["dragon"] = {["enabled"] = false},
    ["druid"] = {["enabled"] = false},
    ["jester"] = {["enabled"] = false},
    ["magi"] = {["enabled"] = false},
    ["monk"] = {["enabled"] = false},
    ["occultist"] = {["enabled"] = false},
    ["pariah"] = {["enabled"] = false},
    ["priest"] = {["enabled"] = false},
    ["psion"] = {["enabled"] = false},
    ["sentinel"] = {["enabled"] = false},
    ["serpent"] = {["enabled"] = false},
    ["shaman"] = {["enabled"] = false},
    ["sylvan"] = {["enabled"] = false},
    ["infernal"] = {["enabled"] = false},
    ["unnamable"] = {["enabled"] = false},
    ["paladin"] = {["enabled"] = false},
    ["runewarden"] = {["enabled"] = false},
    ["airlord"] = {["enabled"] = false},
    ["waterlord"] = {["enabled"] = false},
    ["firelord"] = {["enabled"] = false},
    ["earthlord"] = {["enabled"] = false},
  }
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>initializeHerbConversion</name>
							<packageName></packageName>
							<script>-- Function to initialize herb_conversion
function initializeHerbConversion()
  herb_conversion = {
    ["aurum flake"] = "kelp",
    ["piece of kelp"] = "kelp",
    ["lobelia seed"] = "lobelia",
    ["argentum flake"] = "lobelia",
    ["prickly ash bark"] = "ash",
    ["stannum flake"] = "ash",
    ["bellwort flower"] = "bellwort",
    ["cuprum flake"] = "bellwort",
    ["goldenseal root"] = "goldenseal",
    ["plumbum flake"] = "goldenseal",
    ["bloodroot leaf"] = "bloodroot",
    ["magnesium chip"] = "bloodroot",
    ["ginseng root"] = "ginseng",
    ["ferrum flake"] = "ginseng",
    ["hawthorn berry"] = "hawthorn",
    ["calamine crystal"] = "hawthorn",
    ["bayberry bark"] = "bayberry",
    ["arsenic pellet"] = "bayberry",
    ["calcite mote"] = "pear",
    ["prickly pear"] = "pear",
    ["smoke"] = "smoke",
  }
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>initializeHitCount</name>
							<packageName></packageName>
							<script>-- Function to initialize hitcount
function initializeHitCount()
  hitcount = {
    ["head"] = 0,
    ["torso"] = 0,
    ["left arm"] = 0,
    ["right arm"] = 0,
    ["left leg"] = 0,
    ["right leg"] = 0,
  }
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>initializePercentages</name>
							<packageName></packageName>
							<script>-- Function to initialize percentages
function initializePercentages()
  percentages = {
    ["head"] = 0,
    ["torso"] = 0,
    ["left arm"] = 0,
    ["right arm"] = 0,
    ["left leg"] = 0,
    ["right leg"] = 0,
  }
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>initializeParryList</name>
							<packageName></packageName>
							<script>-- Function to initialize parrylist
function initializeParryList()
  parrylist = {
    paladin = {
      head = 1,
      torso = 2,
      ["left leg"] = 3,
      ["right leg"] = 3,
      ["left arm"] = 4,
      ["right arm"] = 4,
    },
    unnamable = {
      head = 1,
      torso = 2,
      ["left leg"] = 3,
      ["right leg"] = 3,
      ["left arm"] = 4,
      ["right arm"] = 4,
    },
    infernal = {
      head = 1,
      torso = 2,
      ["left leg"] = 3,
      ["right leg"] = 3,
      ["left arm"] = 4,
      ["right arm"] = 4,
    },
    runewarden = {
      head = 1,
      torso = 2,
      ["left leg"] = 3,
      ["right leg"] = 3,
      ["left arm"] = 4,
      ["right arm"] = 4,
    },
    blademaster = {
      head = 4,
      torso = 3,
      ["left leg"] = 1,
      ["right leg"] = 1,
      ["left arm"] = 2,
      ["right arm"] = 2,
    },
    monk = {
      head = 4,
      torso = 2,
      ["left leg"] = 1,
      ["right leg"] = 1,
      ["left arm"] = 3,
      ["right arm"] = 3,
    },
    shikudo = {
      head = 4,
      torso = 2,
      ["left leg"] = 1,
      ["right leg"] = 1,
      ["left arm"] = 3,
      ["right arm"] = 3,
    },
    dragon = {
      head = 4,
      torso = 2,
      ["left leg"] = 1,
      ["right leg"] = 1,
      ["left arm"] = 3,
      ["right arm"] = 3,
    },
    magi = {
      head = 4,
      torso = 2,
      ["left leg"] = 1,
      ["right leg"] = 1,
      ["left arm"] = 3,
      ["right arm"] = 3,
    },
    earthlord = {
      head = 2,
      torso = 1,
      ["left leg"] = 2,
      ["right leg"] = 2,
      ["left arm"] = 3,
      ["right arm"] = 3,
    },
    druid = {
      head = 1,
      torso = 2,
      ["left leg"] = 3,
      ["right leg"] = 3,
      ["left arm"] = 4,
      ["right arm"] = 4,
    },
    sentinel = {
      head = 4,
      torso = 3,
      ["left leg"] = 1,
      ["right leg"] = 1,
      ["left arm"] = 2,
      ["right arm"] = 2,
    },
    sylvan = {
      head = 3,
      torso = 1,
      ["left leg"] = 2,
      ["right leg"] = 2,
      ["left arm"] = 4,
      ["right arm"] = 4,
    },
  }
end
</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>balances</name>
						<packageName></packageName>
						<script></script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>initializeEnemyBalanceStartTimes</name>
							<packageName></packageName>
							<script>-- Function to initialize enemyBalanceStartTimes
function initializeEnemyBalanceStartTimes()
  enemyBalanceStartTimes = {}
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>initializePersonalBalanceStartTimes</name>
							<packageName></packageName>
							<script>-- Function to initialize personalBalanceStartTimes
function initializePersonalBalanceStartTimes()
  personalBalanceStartTimes = {}
end</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>hunting</name>
						<packageName></packageName>
						<script></script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>initializeLists</name>
							<packageName></packageName>
							<script>function initializeLists()
  areaIgnoreList = areaIgnoreList or {}
  targetMasterList = targetMasterList or {}
  targetPriorityList = targetPriorityList or {}
  huntSettingsData = huntSettingsData or {}
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>initializeHuntingFlags</name>
							<packageName></packageName>
							<script>function initializeHuntingFlags()
  hunting = false
  autohunting = false
  partysize = 1
  huntstepcount = 0
  targetfleedir = ""
  fleerequested = false
  fleecd = os.clock() + 3
  huntingpointer = 0
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>initializeRouteDB</name>
							<packageName></packageName>
							<script>-- Function to initialize routedb
function initializeRouteDB()
  routedb = {}
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>initializeExtermList</name>
							<packageName></packageName>
							<script>-- Function to initialize extermlist
function initializeExtermList()
  extermlist = {}
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>initializeBattleRageList</name>
							<packageName></packageName>
							<script>-- Function to initialize bragelist
function initializeBattleRageList()
  bragelist = {
    serpent = {
      excoriate = {enabled = true, type = "shield break", rage = 16, command = "excoriate @tar"},
      thrash = {enabled = true, type = 1, rage = 13, command = "thrash @tar"},
      throatrip = {enabled = true, type = 3, rage = 35, command = "throatrip @tar"},
      flagellate = {enabled = true, type = 2, rage = 24, command = "flagellate @tar"},
      snare = {enabled = false, type = 4, rage = 25, command = "snare @tar"},
      obliviate = {enabled = false, type = 5, rage = 41, command = "obliviate @tar"},
    },
    apostate = {
      burrow = {enabled = true, type = 1, rage = 35, command = "daegger burrow @tar"},
      convulsions = {enabled = true, type = 2, rage = 6, command = "stare @tar convulsions"},
      horrify = {enabled = false, type = 4, rage = 10, command = "stare @tar horrify"},
      pierce = {enabled = true, type = "shield break", rage = 20, command = "daegger pierce @tar"},
      bloodlet = {enabled = false, type = 3, rage = 50, command = "bloodlet @tar"},
      possess = {enabled = false, type = 5, rage = 65, command = "possess @tar"},
    },
    blademaster = {
      leapstrike = {enabled = true, type = 2, rage = 14, command = "leapstrike @tar"},
      daze = {enabled = true, type = 1, rage = 26, command = "shin daze @tar"},
      shatter = {enabled = false, type = "shield break", rage = 17, command = "shin shatter @tar"},
      spinslash = {enabled = true, type = 3, rage = 36, command = "spinslash @tar"},
     -- headstrike = {enabled = false, type = 5, rage = 25, command = "strike @tar head"},
      nerveslash = {enabled = false, type = 4, rage = 22, command = "nerveslash @tar"},
    },    
    runewarden = {
      collide = {enabled = true, type = 1, rage = 14, command = "collide @tar"},
      bulwark = {enabled = false, type = 3, rage = 28, command = "bulwark"},
      fragment = {enabled = true, type = "shield break", rage = 17, command = "fragment @tar"},
      onslaught = {enabled = true, type = 2, rage = 36, command = "onslaught @tar"},
      etch = {enabled = false, type = 4, rage = 25, command = "etch rune at @tar"},
     -- safeguard = {enabled = false, type = 5, rage = 35, command = "safeguard @tar"},
    },
    ["black dragon"] = {
      dragonspit = {enabled = false, type = 1, rage = 14, command = "dragonspit @tar"},
      dragonsting = {enabled = false, type = "affliction", rage = 25, command = "dragonsting @tar"},
      dissolve = {enabled = false, type = "shield break", rage = 17, command = "dissolve @tar"},
      override = {enabled = false, type = 2, rage = 36, command = "override @tar"},
      corrode = {enabled = false, type = 3, rage = 25, command = "corrode @tar"},
      dragonfear = {enabled = false, type = 4, rage = 29, command = "dragonfear @tar"},
    },
    ["blue dragon"] = {
      dragonchill = {enabled = false, type = 1, rage = 14, command = "dragonchill @tar"},
      glaciate = {enabled = false, type = 3, rage = 26, command = "glaciate @tar"},
      frostrive = {enabled = false, type = "shield break", rage = 17, command = "frostrive @tar"},
      override = {enabled = false, type = 2, rage = 36, command = "override @tar"},
      frostwave = {enabled = false, type = 4, rage = 25, command = "frostwave @tar"},
      ague = {enabled = false, type = 5, rage = 14, command = "ague @tar"},
    },
    ["gold dragon"] = {
      overwhelm = {enabled = false, type = 1, rage = 14, command = "overwhelm @tar"},
      deaden = {enabled = false, type = 3, rage = 24, command = "deaden @tar"},
      psishatter = {enabled = false, type = "shield break", rage = 17, command = "psishatter @tar"},
      psiblast = {enabled = false, type = 2, rage = 36, command = "psiblast @tar"},
      psistorm = {enabled = false, type = 4, rage = 25, command = "psistorm @tar"},
      psidaze = {enabled = false, type = 5, rage = 31, command = "psidaze @tar"},
    },
    ["green dragon"] = {
      dragonspit = {enabled = false, type = 1, rage = 14, command = "dragonspit @tar"},
      scour = {enabled = false, type = 2, rage = 18, command = "scour @tar"},
      deteriorate = {enabled = false, type = "shield break", rage = 17, command = "deteriorate @tar"},
      override = {enabled = false, type = 1, rage = 36, command = "override @tar"},
      slaver = {enabled = false, type = 3, rage = 25, command = "slaver on @tar"},
      dragonsap = {enabled = false, type = 4, rage = 22, command = "dragonsap @tar"},
    },
    ["red dragon"] = {
      overwhelm = {enabled = false, type = 1, rage = 14, command = "overwhelm @tar"},
      dragontaunt = {enabled = false, type = 2, rage = 18, command = "dragontaunt @tar"},
      melt = {enabled = false, type = "shield break", rage = 17, command = "melt @tar"},
      dragonblaze = {enabled = false, type = 1, rage = 36, command = "dragonblaze @tar"},
      flamebath = {enabled = false, type = 3, rage = 25, command = "flamebath @tar"},
      scorch = {enabled = false, type = 4, rage = 18, command = "scorch @tar"},
    },
    ["silver dragon"] = {
      overwhelm = {enabled = true, type = 1, rage = 14, command = "overwhelm @tar"},
      sizzle = {enabled = false, type = 2, rage = 25, command = "sizzle @tar"},
      splinter = {enabled = true, type = "shield break", rage = 17, command = "splinter @tar"},
      dragonspark = {enabled = true, type = 3, rage = 36, command = "dragonspark @tar"},
      stormflare = {enabled = false, type = 4, rage = 25, command = "stormflare @tar"},
      galvanize = {enabled = false, type = 5, rage = 18, command = "galvanize @tar"},
    },
    shaman = {
      corruption = {enabled = true, type = 1, rage = 14, command = "curse @tar corruption"},
      korkma = {enabled = false, type = 2, rage = 29, command = "invoke korkma @tar"},
      vulnerability = {enabled = true, type = "shield break", rage = 17, command = "curse @tar vulnerability"},
      haemorrhage = {enabled = true, type = 1, rage = 36, command = "curse @tar haemorrhage"},
    },
  }
end</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>utility</name>
						<packageName></packageName>
						<script></script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>initializeScrollbar</name>
							<packageName></packageName>
							<script>function initializeScrollbar()
  if settings.showScrollbar then
    enableScrollBar("main")
  else
    disableScrollBar()
  end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>initializeJane</name>
							<packageName></packageName>
							<script>-- Function to initialize jane
function initializeJane()
  jane = {target = {}}
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>initializePingCalculation</name>
							<packageName></packageName>
							<script>-- Function to initialize pingCalculation
function initializePingCalculation()
  pingCalculation = {}
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>initializeAllyList</name>
							<packageName></packageName>
							<script>-- Function to initialize allylist
function initializeAllyList()
  allylist = {}
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>initializeEnemyList</name>
							<packageName></packageName>
							<script>-- Function to initialize enemylist
function initializeEnemyList()
  enemylist = {}
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>initializeInv</name>
							<packageName></packageName>
							<script>-- Function to initialize inv
function initializeInv()
  inv = {}
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>initializeInRift</name>
							<packageName></packageName>
							<script>-- Function to initialize inrift
function initializeInRift()
  inrift = {}
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>initializeInvRoom</name>
							<packageName></packageName>
							<script>-- Function to initialize inv_room
function initializeInvRoom()
  inv_room = {}
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>initializeRoomStuffList</name>
							<packageName></packageName>
							<script>-- Function to initialize roomstufflist
function initializeRoomStuffList()
  roomstufflist = {}
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>initializeTattoos</name>
							<packageName></packageName>
							<script>-- Function to initialize tattoos
function initializeTattoos()
  tattoos = {
    mindseye = {artefact = true, inked = true},
    boar = {artefact = true, inked = true},
    tree = {artefact = true, inked = true},
    feather = {artefact = false, inked = false},
    megalith = {artefact = false, inked = false},
    cloak = {artefact = false, inked = false},
    brazier = {artefact = false, inked = false},
    tentacle = {artefact = false, inked = false},
    web = {artefact = false, inked = false},
    bell = {artefact = false, inked = false},
    prism = {artefact = false, inked = false},
    shield = {artefact = false, inked = false},
    firefly = {artefact = false, inked = false},
    moss = {artefact = false, inked = false},
    hammer = {artefact = false, inked = false},
    crystal = {artefact = false, inked = false},
    moon = {artefact = false, inked = false},
    starburst = {artefact = false, inked = false},
    hourglass = {artefact = false, inked = false},
    ox = {artefact = false, inked = false},
    chamelion = {artefact = false, inked = false},
    talon = {artefact = false, inked = false},
  }
end</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>ndb</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>NDB settings</name>
							<packageName></packageName>
							<script>function NDB_Install()
    -- Initialize the NDB table
    NDB = {
        installed = true,
        players = {},
        highlightNames = true,
        highlighting = {
            Ashtan = "purple",
            Cyrene = "CornflowerBlue",
            Eleusis = "green",
            Hashan = "orange",
            Mhaldor = "red",
            Targossas = "cyan",
            Enemies = "red",
            Rogues = "brown",
            Underworld = "brown",
        },
        special = {},
        player_Notes = {},
        divine = {
            "Aegis", "Artemis", "Aurora", "Babel", "Deucalion", "Gaia", "Lorielan", "Lupus", "Neraeos",
            "Ourania", "Pandora", "Phaestus", "Prospero", "Sartan", "Scarlatti", "Twilight", "Valnurana",
            "Vastar", "Tlalaiad", "Romeo", "Juliet"
        },
        cityEnemies = {},
        cityList = {},
        highlightPriority = "city",
        enemySettings = {bold = false, italics = false, underline = false},
    }

    cecho("\n&lt;green&gt;Systems have been Installed and are ready to go.\n")
    NDB_Unhighlight()

    -- Define the base directory for the C: drive
    local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
    local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"

    -- Save NDB data using `ensureFileExists`
    ensureFileExists(tablesDir, "ndbData.lua", "save", NDB)
end
</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>NDB_Failed</name>
							<packageName></packageName>
							<script>function NDB_Failed(_, filepath)
    cecho("\n&lt;red&gt;Error downloading information.")
    
    -- Define the base directory for the C: drive
    local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
    local tablesDir = userHome .. "/Documents/Achaean System/Tables"

    if filepath:match("server replied: Not Found") then
        echo("\n" .. filepath)
        local person = filepath:match("/(%w+).json")
        local fpr = tablesDir .. "/" .. person .. ".json"

        cecho("\n&lt;red&gt;This person does not exist: " .. person)
        NDB_Remove(person)
        os.remove(fpr)
    else
        cecho("\n&lt;red&gt;Unknown error while downloading: " .. filepath)
    end
end
</script>
							<eventHandlerList>
								<string>sysDownloadError</string>
							</eventHandlerList>
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>NDB_Success</name>
							<packageName></packageName>
							<script>function NDB_Success(_, filepath)
	--Do not mess with if it's not NDB information.
	if not filepath:find("ndbData", 1, true) then return end

	if filepath:find("Online",1,true) then
		NDB_SortOnline(filepath)
		return
	end

    local f, s = io.open(filepath)
    if f then s = f:read("*l"); io.close(f) end

	-- didn't get JSON data? 
	if s:find("Internal error", 1, true) or s:find("DOCTYPE html PUBLIC", 1, true) then
		cecho("\n&lt;red&gt;Data Acquisition Failed!") 
		return 
	end

	local t = yajl.to_value(s)
	local cities = {"Ashtan", "Cyrene", "Eleusis", "Hashan", "Mhaldor", "Targossas", "Rogues"}
	local name = t.name
	local title = t.fullname
	local house = t.house:title()
	local xp_rank = tonumber(t.xp_rank)
	local city = t.city:title()
	local class = t.class:title()
	local level = tonumber(t.level)
  local pks = tonumber(t.player_kills)

	local tmpCity = (NDB_Exists(name) and NDB_getCitizenship(name) or "Unknown")
  local isMark, aRank = NDB_isMark(name), NDB_armyRank(name)

	NDB.players[name] = {
		name = name,
		title = title,
		house = house,
		xp_rank = xp_rank,
		city = city,
		level = level,
		class = class,
    pks = pks,
		lastUpdate = os.date(),
    armyRank = aRank or nil,
    mark = isMark or nil,
	}
	if house:find("hidden") then
		NDB.players[name].house = "Unknown"
	elseif house:find("none") then
		NDB.players[name].house = "None"
	else
		NDB.players[name].house = house:title()
	end

	if city:find("hidden") then
		if not table.contains(cities, tmpCity) then
			NDB.players[name].city = "Unknown"
			if honoursPerson == nil then cecho("\n&lt;red&gt;WARNING: "..name.."'s city is hidden; will require a manual honours/setting to update it.") end
		else
      if tmpCity == "Rogues" then
        NDB.players[name].city = "None"
      else
			 NDB.players[name].city = tmpCity
      end
		end
	elseif city:find("none") or city == "" then
		NDB.players[name].city = "None"
	else
		NDB.players[name].city = city:title()
	end

  	os.remove(filepath)
	
	if honoursPerson ~= nil then 
		send("honours "..honoursPerson,false)
		tempTimer(3, [[honoursPerson = nil]])
	else
		raiseEvent("NDB Check Highlight", t.name)
	end
  if NDB.checking then
    NDB_displayWho(name)
  end
end</script>
							<eventHandlerList>
								<string>sysDownloadDone</string>
							</eventHandlerList>
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>get information</name>
							<packageName></packageName>
							<script>function NDB_GetOnline()
    -- Define base directory for NDB data
    local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
    local baseDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System"
    local ndbPath = baseDir .. "/ndbData"

    -- Ensure the NDB directory exists
    if not lfs.attributes(ndbPath, "mode") then
        lfs.mkdir(ndbPath)
        cecho("&lt;green&gt;Created folder to store downloaded data at: " .. ndbPath .. "\n")
    end  

    -- Download the online character data
    downloadFile(ndbPath .. "/Online.json", "http://api.achaea.com/characters.json")

    cecho("\n&lt;green&gt;One moment while I access the list...")

    -- Initialize or reset the stopwatch
    ndbWatcher = ndbWatcher or createStopWatch()
    startStopWatch(ndbWatcher)
end

function NDB_Acquire(person)
    -- Ensure a valid person name is provided
    assert(person, "Person name is required")
    local person = person:title()

    -- Define base directory for NDB data
    local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
    local baseDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System"
    local ndbPath = baseDir .. "/ndbData"

    -- Ensure the NDB directory exists
    if not lfs.attributes(ndbPath, "mode") then
        lfs.mkdir(ndbPath)
        cecho("&lt;green&gt;Created folder to store downloaded data at: " .. ndbPath .. "\n")
    end

    -- Download the character data for the given person
    downloadFile(ndbPath .. "/" .. person .. ".json", "http://api.achaea.com/characters/" .. person .. ".json")
end


function NDB_NameList(names)
	--Parse list to see who isn't tracked.
	for _, name in pairs(names) do
		if not NDB_Exists(name) and not table.contains(NDB.divine, name) then
			NDB_Acquire(name)
		end
	end
	cecho("\n&lt;green&gt;Database has been fully updated, thank you.")
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>NDB API</name>
							<packageName></packageName>
							<script>function NDB_isMark(name)
  if not NDB_Exists(name) then return false end
  if NDB.players[name].mark then
    return NDB.players[name].mark
  else
    return false
  end
end

function NDB_armyRank(name)
  if not NDB_Exists(name) then return 0 end
  if NDB.players[name].armyRank then
    return NDB.players[name].armyRank
  else
    return 0
  end
end

function NDB_isEnemy(name)
	if table.contains(NDB.cityEnemies, name) then
		return true
	else
		return false
	end
end

function NDB_getHouse(name)
  if not NDB_Exists(name) then
    return "Unknown"
  else
    return NDB.players[name:title()].house 
  end
end

function NDB_getColour(name)
    if not NDB_Exists(name) then
        return "white"  -- Return white if player data doesn't exist
    else
        local citizenship = NDB_getCitizenship(name:title())
        
        -- If the citizenship is Unknown or None, return the color for Rogues
        if citizenship == "Unknown" or citizenship == "None" then
            return NDB.highlighting.Rogues or "white"  -- Ensure it returns a color
        elseif citizenship == "underworld" then
            return NDB.highlighting.Underworld or "white"  -- Ensure it returns a color
        else
            -- Check for the city in the highlighting table
            return NDB.highlighting[citizenship] or "white"  -- Return white if city is not found
        end
    end
end



function NDB_getClass(name)
	if NDB_Exists(name:title()) then
		return NDB.players[name:title()].class
    --return NDB.players[name].class
	else
		return "Unknown"
	end
end

function NDB_Exists(name)
	if not NDB.players[name:title()] then
		return false
	else
		return true
	end
end

function NDB_isCitizenOf(city, name)
	if NDB_Exists(name:title()) then
		return (NDB.players[name:title()].city == city:title() and true or false)
	else
		cecho("\n&lt;red&gt;That person's information has not yet been gathered.")
		return false
	end
end

function NDB_getCitizenship(name)
	if NDB_Exists(name:title()) then
		if NDB.players[name].city:lower() == "none" or NDB.players[name].city:lower() == "(hidden)" or NDB.players[name].city:lower() == "underworld" then
			return "Rogues"
		else
			return NDB.players[name].city
		end
	else
		return "Unknown"
	end
end


function NDB_Remove(name)
	local person = name:title()
	if NDB_Exists(person) then
		NDB.players[person] = nil
		--If any highlight available, then clear it.
		if NDB.highlightTriggers and NDB.highlightTriggers[person] then
			killTrigger(NDB.highlightTriggers[person])
		end
		cecho("\n&lt;red&gt;"..person.." has been removed from the database.")
	else
		cecho("\n&lt;red&gt;"..person.." is not in the database, anyway.")
	end
end

function NDB_SortOnline(filepath)
	local f, s = io.open(filepath)
    if f then s = f:read("*l"); io.close(f) end

	-- didn't get JSON data? 
	if s:find("Internal error", 1, true) or s:find("DOCTYPE html PUBLIC", 1, true) then
		cecho("\n&lt;red&gt;Data Acquisition Failed!") 
		return 
	end

	local t = yajl.to_value(s)

	apiOnlineFound = {}
	apiNeedUpdate = {}
	for ind, tab in pairs(t.characters) do
		if not tab.name:find("masked") and not table.contains(NDB.divine, tab.name) then
			table.insert(apiOnlineFound, tab.name)
		end
	end

	for ind, tab in pairs(gmcp.Comm.Channel.Players) do
		if not table.contains(apiOnlineFound, tab.name) and not tab.name:find("masked") and not table.contains(NDB.divine, tab.name) then
			table.insert(apiOnlineFound, tab.name)
		end
	end

	os.remove(filepath)
	table.sort(apiOnlineFound)

	--Parse the list to see who needs to be added.
	local count = 0
	for index, name in pairs(apiOnlineFound) do
		if not NDB_Exists(name) and not table.contains(NDB.divine, name) then
			count = count + 1
			table.insert(apiNeedUpdate, name)
		end
	end

	if count &gt; 0 then
		cecho(count.." new names identified, grabbing their info.")
		cecho("\n&lt;DarkSlateGray&gt; - "..table.concat(apiNeedUpdate, ", ")..".")
		NDB_NameList(apiNeedUpdate)
	else
		if parsingCity then
			if parsingCity:lower() == "classes" then
				NDB_displayOnlineClass(apiOnlineFound)
			else
				NDB_displayOnlineCity(apiOnlineFound)
			end
		else
			NDB_displayOnline(apiOnlineFound)
		end
	end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>NDB highlighting</name>
							<packageName></packageName>
							<script>function NDB_Unhighlight()
	if not NDB.highlightTriggers or not next(NDB.highlightTriggers) then return end

  	for k,v in pairs(NDB.highlightTriggers) do
    	killTrigger(v)
  	end

  	NDB.highlightTriggers = {}
end

function NDB_enemyHighlights()
	cecho("Clearing all highlights to prevent errors. One moment, please.")
	NDB_Unhighlight()
	tempTimer(2, [[ cecho("&lt;DarkSlateGray&gt;Loading new highlights now."); NDB_loadHighlights() ]])	
end

function NDB_loadHighlights()
	NDB.highlightTriggers = NDB.highlightTriggers or {}
	collectgarbage("stop")

	NDB_Unhighlight()

	if NDB.highlightNames then
		for index, person in pairs(NDB.players) do
			NDB_highlightName( person.name, person.city )
		end
	elseif NDB.special then
		for person, colour in pairs(NDB.special) do
			NDB_highlightName( person, "nil" )
		end		
	end

	collectgarbage()
end

function NDB_addHighlight(_, name)

	if not NDB.highlightNames then return end	
	if not name then return end
	if not NDB.players[name] then return end

	NDB_highlightName( NDB.players[name].name, NDB.players[name].city)
end


function NDB_updateHighlights(city, colour)

	NDB.highlighting[city] = colour
	
	for name, trig in pairs(NDB.highlightTriggers) do
		if NDB.players[name].city == city then
			killTrigger(trig)
			if NDB.highlightNames then
				NDB_highlightName( NDB.players[name].name, NDB.players[name].city )
			end
		elseif city == "Rogues" or city == "(hidden)" or city == "underworld" then
			if NDB_getCitizenship(name) == "None" then
				killTrigger(trig)
				if NDB.highlightNames then
					NDB_highlightName( NDB.players[name].name, NDB.players[name].city )
				end
			end
		end
	end
end


function NDB_highlightName(who, city)
	--If any highlight available, then clear it.
	if NDB.highlightTriggers and NDB.highlightTriggers[who] then
		killTrigger(NDB.highlightTriggers[who])
	end

	local colour = NDB.highlighting.Rogues

	--Get the necessary colour.
		--Check specials first, then enemy list
	if NDB.special and NDB.special[who] then
		colour = NDB.special[who]	
	elseif NDB.highlightPriority == "enemies" then
		if table.contains(NDB.cityEnemies, who) then
			colour = NDB.highlighting.Enemies
		else
			if city == "None" or city == "(hidden)" then
				colour = NDB.highlighting.Rogues
			else
				colour = NDB.highlighting[city]
			end
		end
	else
		if city == "None" or city == "(hidden)" then
			colour = NDB.highlighting.Rogues
		else
			colour = NDB.highlighting[city]
		end
	end

	NDB.highlightTriggers = NDB.highlightTriggers or {}
	NDB.highlightTriggers[who] = tempTrigger(who, ([[NDB_highlight("%s", %s)]]):format(who,
		(colour and '"' .. colour .. '"' or "false")
	))
end

function NDB_highlight(name, colour)
	local c, k = 1, 1
	while k &gt; 0 do
		k = line:find(name, k)
		if k == nil then return end
		c = c + 1

		if k == line:find("%f[%a]"..name.."%f[%A]", k) then
			if selectString(name, c-1) &gt; -1 then
				if colour then fg(colour) end
				if NDB.highlightPriority == "enemies" and table.contains(NDB.cityEnemies, name) then
					if NDB.enemySettings.bold then setBold(true) end
					if NDB.enemySettings.underline then setUnderline(true) end
					if NDB.enemySettings.italics then setItalics(true) end
				end
				resetFormat()
			else 
				return 
			end
    		end
		k = k + 1
	end
end

registerAnonymousEventHandler("NDB Check Highlight", "NDB_addHighlight")
</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>NDB display API</name>
							<packageName></packageName>
							<script>function NDB_displayOnlineClass(players)
	local classList = {"Alchemist", "Apostate", "Bard", "Blademaster", "Depthswalker", "Druid", "Infernal", "Jester", "Magi", "Monk", "Occultist",
		"Paladin", "Priest", "Runewarden", "Sentinel", "Serpent", "Shaman", "Sylvan"}
	local classes = {
		Alchemist = {}, Apostate = {}, Bard = {}, Blademaster = {}, Depthswalker = {},
		Druid = {}, Infernal = {}, Jester = {}, Magi = {}, Monk = {}, Occultist = {},
		Paladin = {}, Priest = {}, Runewarden = {}, Sentinel = {}, Serpent = {},
		Shaman = {}, Sylvan = {},
	}

	for _, player in pairs(players) do
		local class = NDB.players[player].class
		table.insert(classes[class], player)
	end
	cecho("Data acqusition completed and analysed. Showing class count for online players.")

	for _, class in ipairs(classList) do
		cecho("\n &lt;DimGrey&gt;[&lt;NavajoWhite&gt;"..class:title().."&lt;DimGrey&gt;]"..string.rep(" ", 13-string.len(class)).."- &lt;NavajoWhite&gt;"..#classes[class].." tracked people are "..class..".")
	end
	send(" ")
	parsingCity = nil
end

function NDB_displayOnlineCity(players)
	local peopleFound = {}

cecho("Data acqusition completed and analysed. Showing online players from &lt;"..NDB.highlighting[parsingCity:title()].."&gt;"..parsingCity:title()..".")

	for _, person in pairs(players) do
		if NDB_isCitizenOf(parsingCity:title(), person) then
			cecho("\n &lt;"..NDB.highlighting[parsingCity:title()].."&gt;"..person..string.rep(" ", 13-string.len(person)).."- &lt;NavajoWhite&gt;"..NDB_getClass(person))
		end
	end
	send(" ")
	parsingCity = nil
end

function NDB_displayOnline(players)
	local onlinePeople = {
		Ashtan = {}, Cyrene = {}, Eleusis = {}, Hashan = {}, Mhaldor = {}, Targossas = {}, Rogues = {}, Untracked = {}, underworld = {},
	}

  
	for _, person in pairs(players) do
		if not NDB_Exists(person) then
			table.insert(onlinePeople.Untracked, person)
		elseif NDB_getCitizenship(person):lower() == "none" or NDB_getCitizenship(person):lower() == "unknown" or NDB_getCitizenship(person) == "(hidden)"  or NDB_getCitizenship(person) == "Unknown" or NDB_getCitizenship(person):lower() == "Unknown" then
			table.insert(onlinePeople.Rogues, person)
		elseif NDB_getCitizenship(person):lower() == "underworld" then
      table.insert(onlinePeople.underworld, person)
    else
			table.insert(onlinePeople[NDB_getCitizenship(person)], person)
		end
	end

	cecho("Data acquisition completed and analysed. List of players online:")
	cecho("\n&lt;DarkSlateGray&gt;"..table.concat(apiOnlineFound, ", ")..".\n&lt;green&gt;Total players visible to us&lt;white&gt;: "..#apiOnlineFound..".\n")

	cecho(" City affiliations of currently online people:")
	cecho(string.format("\n&lt;%s&gt;[Ashtan]     :&lt;white&gt;(&lt;orange&gt;%d&lt;white&gt;)&lt;%s&gt; %s.", NDB.highlighting.Ashtan, #onlinePeople.Ashtan, NDB.highlighting.Ashtan, table.concat(onlinePeople.Ashtan, ", ")))
	cecho(string.format("\n&lt;%s&gt;[Cyrene]     :&lt;white&gt;(&lt;orange&gt;%d&lt;white&gt;)&lt;%s&gt; %s.", NDB.highlighting.Cyrene, #onlinePeople.Cyrene, NDB.highlighting.Cyrene, table.concat(onlinePeople.Cyrene, ", ")))
	cecho(string.format("\n&lt;%s&gt;[Eleusis]    :&lt;white&gt;(&lt;orange&gt;%d&lt;white&gt;)&lt;%s&gt; %s.", NDB.highlighting.Eleusis, #onlinePeople.Eleusis, NDB.highlighting.Eleusis, table.concat(onlinePeople.Eleusis, ", ")))
	cecho(string.format("\n&lt;%s&gt;[Hashan]     :&lt;white&gt;(&lt;orange&gt;%d&lt;white&gt;)&lt;%s&gt; %s.", NDB.highlighting.Hashan, #onlinePeople.Hashan, NDB.highlighting.Hashan, table.concat(onlinePeople.Hashan, ", ")))
	cecho(string.format("\n&lt;%s&gt;[Mhaldor]    :&lt;white&gt;(&lt;orange&gt;%d&lt;white&gt;)&lt;%s&gt; %s.", NDB.highlighting.Mhaldor, #onlinePeople.Mhaldor, NDB.highlighting.Mhaldor, table.concat(onlinePeople.Mhaldor, ", ")))
	cecho(string.format("\n&lt;%s&gt;[Targossas]  :&lt;white&gt;(&lt;orange&gt;%d&lt;white&gt;)&lt;%s&gt; %s.", NDB.highlighting.Targossas, #onlinePeople.Targossas, NDB.highlighting.Targossas, table.concat(onlinePeople.Targossas, ", ")))
	cecho(string.format("\n&lt;%s&gt;[Rogues]     :&lt;white&gt;(&lt;orange&gt;%d&lt;white&gt;)&lt;%s&gt; %s.", NDB.highlighting.Rogues, #onlinePeople.Rogues, NDB.highlighting.Rogues, table.concat(onlinePeople.Rogues, ", ")))
  --cecho(string.format("\n&lt;%s&gt;[Underworld]     :&lt;white&gt;(&lt;orange&gt;%d&lt;white&gt;)&lt;%s&gt; %s.",NDB.highlighting.underworld, #onlinePeople.underworld, NDB.highlighting.underworld, table.concat(onlinePeople.underworld, ", ")))
	echo("\n ")
	send(" ")

end

function NDB_displayWho(person)
  NDB.checking = nil
  local name = person:title()
  local x, c, u
  if not NDB_Exists(name) then
  	cecho(name.." is not yet tracked!")
  else
  	x = NDB.players[name]
  	c = NDB_getColour(name)
  	u = "Checked: "..(x.lastUpdate and x.lastUpdate or "n/a")
  	
  	cecho("\n\n&lt;blue&gt;- &lt;"..c.."&gt;"..x.title.." &lt;blue&gt;"..string.rep("-", 70-(string.len(x.title)+3)).."\n")
  	cecho("\n&lt;cyan&gt; City :   &lt;NavajoWhite&gt;"..x.city..string.rep(" ", 31-string.len(x.city)).."  &lt;cyan&gt; Level:   &lt;NavajoWhite&gt;"..x.level)
  	cecho("\n&lt;cyan&gt; House:   &lt;NavajoWhite&gt;"..x.house..string.rep(" ", 31-string.len(x.house)).."  &lt;cyan&gt; Rank :   &lt;NavajoWhite&gt;"..x.xp_rank)
  	cecho("\n&lt;cyan&gt; Class:   &lt;NavajoWhite&gt;"..x.class..string.rep(" ", 31-string.len(x.class)).."  &lt;cyan&gt; Kills:   &lt;NavajoWhite&gt;"..(x.pks or "n/a"))
    if NDB_armyRank(name) &gt; 0 then
      cecho("\n&lt;cyan&gt; Army :   &lt;"..(NDB_armyRank(name) &gt; 3 and "red" or "NavajoWhite").."&gt;"..NDB_armyRank(name))
    end
    if NDB_isMark(name) then
      cecho("\n&lt;cyan&gt; Mark :   &lt;"..(NDB_isMark(name) == "Ivory" and "NavajoWhite" or "purple").."&gt;"..NDB_isMark(name))
    end
    echo("\n ")
    if NDB.player_Notes[name] and #NDB.player_Notes[name] &gt; 0 then
      cecho("\n&lt;cyan&gt; Notes:")
      for num, note in pairs(NDB.player_Notes[name]) do
        cecho("\n  &lt;DarkSlateBlue&gt;"..num..") &lt;reset&gt;"..note)
      end
      echo("\n ")
    end
  	cecho("\n &lt;green&gt;"..string.rep(" ", 69-string.len(u))..u)
  	cecho("\n&lt;blue&gt;"..string.rep("-", 70))
  	cecho("\n ")
  	send(" ",false)
  end	
end</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>user interface</name>
					<packageName></packageName>
					<script></script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>initializeGUI</name>
						<packageName></packageName>
						<script>-- Function to initialize GUI
function initializeGUI()
  GUI = {}
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>initializeGUIWindows</name>
						<packageName></packageName>
						<script>function initializeGUIWindows()

  -- ==================
  --  Chat Window
  -- ==================
  --tabs = {"Main","City","Party","Clan"},
  -- Create the Chat Window
GUI.chatwindow =
  GUI.chatwindow or
  Adjustable.TabWindow:new(
    {
      name = "chatwindow",
      x = 0,
      y = 0,
      width = "100%",
      height = "49%",
      color1 = "black", -- Old color, will be overridden
      color2 = "black", -- Old color, will be overridden
      tabBarHeight = "10%",
      tabs = {"Chat Window"},
    },
    GUI.left
  )

-- Set the tab bar background color
GUI.chatwindow:setTabBarColor("black")

-- Set the active tab background and text colors
GUI.chatwindow:setActiveTabBGColor("DarkSlateGray") -- DarkSlateGray
GUI.chatwindow:setActiveTabFGColor("white")           -- White text

-- Set the inactive tab background and text colors
GUI.chatwindow:setInactiveTabBGColor("black")        -- Black background
GUI.chatwindow:setInactiveTabFGColor("gray")         -- Gray text

-- Apply the changes to adjust all tab styles
GUI.chatwindow:adjustTabStyle()

-- Set the first tab as active (optional)
GUI.chatwindow:setActiveTab("Chat Window")

-- Configure the mini console
GUI.chatwindow.miniconsole =
  Geyser.MiniConsole:new(
    {name = "chatwindow.miniconsole", x = 10, y = 51.25, width = "95.85%", height = "86%"},
    GUI.chatwindow
  )
setWindowWrap("chatwindow.miniconsole", 58)
setBackgroundColor("chatwindow.miniconsole", 0, 0, 0, 200) -- Black with transparency
GUI.chatwindow.miniconsole:setFontSize(10)

  -- ==================
  --  Room Window
  -- ==================
  GUI.roomwindow =
  GUI.roomwindow or
  Adjustable.TabWindow:new(
    {
      name = "roomwindow",
      x = 0,
      y = "50%",
      width = "100%",
      height = "50%",
      color1 = "black", -- Old color, will be overridden
      color2 = "black", -- Old color, will be overridden
      tabBarHeight = "10%",
      tabs = {"Room Window"},
    },
    GUI.left
  )

-- Set the tab bar background color
GUI.roomwindow:setTabBarColor("black")

-- Set the active tab background and text colors
GUI.roomwindow:setActiveTabBGColor("DarkSlateGray") -- Named color
GUI.roomwindow:setActiveTabFGColor("white")         -- Named color

-- Set the inactive tab background and text colors
GUI.roomwindow:setInactiveTabBGColor("black")       -- Named color
GUI.roomwindow:setInactiveTabFGColor("gray")        -- Named color

-- Apply the changes to adjust all tab styles
GUI.roomwindow:adjustTabStyle()

-- Set the first tab as active (optional)
GUI.roomwindow:setActiveTab("Room Window")

-- Configure the mini console
GUI.roomwindow.miniconsole =
  Geyser.MiniConsole:new(  
    {name = "roomwindow.miniconsole", x = 10, y = 53, width = "95.85%", height = "86%"},
    GUI.roomwindow
  )
setWindowWrap("roomwindow.miniconsole", 60)
setBackgroundColor("roomwindow.miniconsole", 0, 0, 0, 200) -- Black with transparency
GUI.roomwindow.miniconsole:setFontSize(10)

  
  -- ==================
  --  Map Window
  -- ==================
GUI.mapwindow =
  GUI.mapwindow or
  Adjustable.TabWindow:new(
    {
      name = "mapwindow",
      x = 0,
      y = 0,
      color1 = "black", -- Old color, will be overridden
      color2 = "black", -- Old color, will be overridden
      width = "100%",
      height = "49%",
      tabBarHeight = "10%",
      tabs = {"Mainland", "Wilderness", "Ocean"},
    },
    GUI.right
  )

-- Set the tab bar background color
GUI.mapwindow:setTabBarColor("black")

-- Set the active tab background and text colors with a white border
GUI.mapwindow:setActiveTabBGColor("DarkSlateGray") -- Named color
GUI.mapwindow.activeTabStyle =
  GUI.mapwindow.activeTabStyle .. "border: 2px solid white;" -- Add white border
GUI.mapwindow:setActiveTabFGColor("white")         -- Named color

-- Set the inactive tab background and text colors with a white border
GUI.mapwindow:setInactiveTabBGColor("black")
GUI.mapwindow.inactiveTabStyle =
  GUI.mapwindow.inactiveTabStyle .. "border: 2px solid white;" -- Add white border
GUI.mapwindow:setInactiveTabFGColor("gray")

-- Apply the changes to adjust all tab styles
GUI.mapwindow:adjustTabStyle()

-- Set the first tab as active (optional)
GUI.mapwindow:setActiveTab("Mainland")

-- Create a new Geyser Mapper for the "Mainland" tab
GUI.mapper =
  GUI.mapper or
  Geyser.Mapper:new(
    {x = 12, y = 12, width = "94%", height = "94%", name = "mapper"}, GUI.mapwindow.Mainlandcenter
  )

-- Create a new Geyser MiniConsole for the "Wilderness" tab
GUI.wilderness =
  GUI.wilderness or
  Geyser.MiniConsole:new(
    {x = 12, y = 12, width = "94%", height = "94%", name = "wilderness"},
    GUI.mapwindow.Wildernesscenter
  )
setWindowWrap("wilderness", 82)
setBackgroundColor("wilderness", 0, 0, 0, 200) -- Black with transparency

-- Create a new Geyser MiniConsole for the "Ocean" tab
GUI.ocean =
  GUI.ocean or
  Geyser.MiniConsole:new(
    {x = 12, y = 12, width = "94%", height = "94%", name = "ocean"},
    GUI.mapwindow.Oceancenter
  )
setWindowWrap("ocean", 82)
setBackgroundColor("ocean", 0, 0, 0, 200) -- Black with transparency



  
-- ==================
  --  Data Window
  -- ==================
GUI.datawindow =
  GUI.datawindow or
  Adjustable.TabWindow:new(
    {
      name = "datawindow",
      x = 0,
      y = "50%",
      color1 = "black", -- Old color, will be overridden
      color2 = "black", -- Old color, will be overridden
      width = "100%",
      height = "50%",
      tabBarHeight = "10%",
      tabs = {"Target", "Deathsight","Data"},
    },
    GUI.right
  )

-- Set the tab bar background color
GUI.datawindow:setTabBarColor("black")

-- Set the active tab background and text colors with a white border
GUI.datawindow:setActiveTabBGColor("DarkSlateGray") -- Named color
GUI.datawindow.activeTabStyle =
  GUI.datawindow.activeTabStyle .. "border: 2px solid white;" -- Add white border
GUI.datawindow:setActiveTabFGColor("white")         -- Named color

-- Set the inactive tab background and text colors with a white border
GUI.datawindow:setInactiveTabBGColor("black")
GUI.datawindow.inactiveTabStyle =
  GUI.datawindow.inactiveTabStyle .. "border: 2px solid white;" -- Add white border
GUI.datawindow:setInactiveTabFGColor("gray")

-- Apply the changes to adjust all tab styles
GUI.datawindow:adjustTabStyle()

-- Set the first tab as active (optional)
GUI.datawindow:setActiveTab("Data")

-- Configure the middle console for the "Data" tab
GUI.data =
  Geyser.MiniConsole:new(      
    {name = "data", x = 10, y = 10, width = "95.85%", height = "95%"},
    GUI.datawindow.Datacenter
  )
setWindowWrap("data", 55)
setBackgroundColor("data", 0, 0, 0, 200) -- Black with transparency
GUI.data:setFontSize(10)

-- Configure the "Target" tab
GUI.target =
  Geyser.MiniConsole:new(
    {name = "target", x = 10, y = 10, width = "95.85%", height = "95%"}, -- Adjusted to match Room tab
    GUI.datawindow.Targetcenter
  )
setWindowWrap("target", 55) -- Match wrap width with Room tab
setBackgroundColor("target", 0, 0, 0, 200) -- Black with transparency
GUI.target:setFontSize(11) -- Match font size with Room tab



-- Create the labels/buttons for each body part
GUI.head = Geyser.Label:new({
  name = "head", x = "40%", y = "2.5%", width = "20%", height = "10%",
  color = "green", fontSize = 12, alignment = "center", text = "Head\n"
}, GUI.target)

GUI.ra = Geyser.Label:new({
  name = "ra", x = "60%", y = "15%", width = "20%", height = "10%",
  color = "green", fontSize = 12, alignment = "center", text = "RA\n"
}, GUI.target)

GUI.la = Geyser.Label:new({
  name = "la", x = "20%", y = "15%", width = "20%", height = "10%",
  color = "green", fontSize = 12, alignment = "center", text = "LA\n"
}, GUI.target)

GUI.torso = Geyser.Label:new({
  name = "torso", x = "40%", y = "27.5%", width = "20%", height = "10%",
  color = "green", fontSize = 12, alignment = "center", text = "Torso\n"
}, GUI.target)

GUI.rl = Geyser.Label:new({
  name = "rl", x = "60%", y = "42%", width = "20%", height = "10%",
  color = "green", fontSize = 12, alignment = "center", text = "RL\n"
}, GUI.target)

GUI.ll = Geyser.Label:new({
  name = "ll", x = "20%", y = "42%", width = "20%", height = "10%",
  color = "green", fontSize = 12, alignment = "center", text = "LL\n"
}, GUI.target)


GUI.tdata = Geyser.Label:new({
  name = "tdata", x = "2%", y = "57%", width = "95%", height = "40%",
  color = "green", fontSize = 12, alignment = "left", text = "DATA\n"
}, GUI.target)


-- Adjust styling for all labels
for _, label in pairs({GUI.head, GUI.ra, GUI.la, GUI.torso, GUI.rl, GUI.ll, GUI.tdata}) do
  --label:setStyleSheet("border: 2px solid black; border-radius: 5px; background-color: #006400;")
  label:setStyleSheet([[
        font-size: 18pt;
        background: DarkSlateGray;
        border: 2px solid white;
        border-radius: 5px;
        qproperty-wordWrap: true;
        qproperty-alignment:AlignCenter;
      ]])
end
 






-- Configure the "Deathsight" tab
GUI.deathsight =
  Geyser.MiniConsole:new(
    {name = "deathsight", x = 10, y = 10, width = "95.85%", height = "90%"}, -- Adjusted to match Room tab
    GUI.datawindow.Deathsightcenter
  )
setWindowWrap("deathsight", 55) -- Match wrap width with Room tab
setBackgroundColor("deathsight", 0, 0, 0, 200) -- Black with transparency
GUI.deathsight:setFontSize(10) -- Match font size with Room tab



  -- ==================
  --  Affliction Window
  -- ==================
  GUI.affwindow =
    GUI.affwindow or
    Adjustable.Container:new(
      {name = "affwindow", x = 0, y = 0, width = "100%", height = "100%"}, GUI.affbar
    )
  GUI.affwindow.footer =
    Geyser.Label:new(
      {name = "affwindow.footer", x = 0, y = 0, height = "100%", width = "100%"}, GUI.affwindow
    )
  GUI.affwindow.middle =
    Geyser.MiniConsole:new(
      {
        name = "affwindow.middle",
        x = ".3%",
        y = "4%",
        height = "88%",
        width = "99.5%",
        color = "black",
      },
      GUI.affwindow.footer
    )
  setMiniConsoleFontSize("affwindow.middle", 14)
  -- ==================
  --  Score Window
  -- ==================
  GUI.scorewindow =
    GUI.scorewindow or
    Adjustable.Container:new(
      {name = "scorewindow", x = 0, y = 0, width = "100%", height = "100%"}, GUI.top
    )
  GUI.scorewindow.middle =
    Geyser.MiniConsole:new(
      {name = "scorewindow.middle", x = 0, y = 0, height = "100%", width = "100%", color = "black"},
      GUI.scorewindow
    )
  setMiniConsoleFontSize("scorewindow.middle", 14)
 
 

 
 
 
 
  -- ========
  --  Gauges
  -- ========
  -- here's your health bar
  GUI.hpbar =
    Geyser.Gauge:new({name = "hpbar", x = "0", y = "0", width = "20%", height = "100%"}, GUI.gauges)
  GUI.hpbar.front:setStyleSheet(
    [[background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #FF0000, stop: 0.2 #FF0000, stop: 0.8 #660000, stop: 1 #990000);
border-width: 1px;
border-color: black;
border-style: solid;
border-radius: 7;
]]
  )
  GUI.hpbar.back:setStyleSheet(
    [[background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #AA0000, stop: 0.2 #AA0000, stop: 0.9 #440000, stop: 1 #660000);
border-width: 2px;
border-color: black;
border-style: solid;
border-radius: 7;
]]
  )
  -- here's your mana bar
  GUI.mpbar =
    Geyser.Gauge:new(
      {name = "mpbar", x = "20%", y = "0", width = "20%", height = "100%"}, GUI.gauges
    )
  GUI.mpbar.front:setStyleSheet(
    [[background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #4C4CFF, stop: 0.2 #4C4CFF, stop: 0.8 #1E1E66, stop: 1 #2D2D99);
border-width: 1px;
border-color: black;
border-style: solid;
border-radius: 7;
]]
  )
  GUI.mpbar.back:setStyleSheet(
    [[background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #3131AA, stop: 0.2 #333399, stop: 0.8 #131344, stop: 1 #1D1D66);
border-width: 2px;
border-color: black;
border-style: solid;
border-radius: 7;
]]
  )
   -- here's youre willpower bar
  GUI.wpbar =
    Geyser.Gauge:new(
      {name = "wpbar", x = "40%", y = "0", width = "20%", height = "100%"}, GUI.gauges
    )
  GUI.wpbar.front:setStyleSheet(
    [[background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #FF00FF, stop: 0.2 #FF00FF, stop: 0.9 #660066, stop: 1 #990099);
border-width: 1px;
border-color: black;
border-style: solid;
border-radius: 7;
]]
  )
  GUI.wpbar.back:setStyleSheet(
    [[background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #AA00AA, stop: 0.2 #AA00AA, stop: 0.9 #440044, stop: 1 #660066);
border-width: 2px;
border-color: black;
border-style: solid;
border-radius: 7;
]]
  ) 
   -- here's your endurance bar
  GUI.epbar =
    Geyser.Gauge:new(
      {name = "epbar", x = "60%", y = "0", width = "20%", height = "100%"}, GUI.gauges
    )
  GUI.epbar.front:setStyleSheet(
    [[background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #FFFF38, stop: 0.2 #FFFF38, stop: 0.9 #666616, stop: 1 #999921);
border-width: 1px;
border-color: black;
border-style: solid;
border-radius: 7;
]]
  )
  GUI.epbar.back:setStyleSheet(
    [[background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #AAAA25, stop: 0.2 #777700, stop: 0.9 #44440F, stop: 1 #666616);
border-width: 2px;
border-color: black;
border-style: solid;
border-radius: 7;
]]
  )

  -- and here's your xp bar
  GUI.xpbar =
    Geyser.Gauge:new(
      {name = "xpbar", x = "80%", y = "0", width = "20%", height = "100%"}, GUI.gauges
    )
  GUI.xpbar.front:setStyleSheet(
    [[background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #C8C8C8, stop: 0.2 #C8C8C8, stop: 0.9 #515151, stop: 1 #7A7A7A);
border-width: 1px;
border-color: black;
border-style: solid;
border-radius: 7;
]]
  )
  GUI.xpbar.back:setStyleSheet(
    [[background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #898989, stop: 0.2 #898989, stop: 0.9 #383838, stop: 1 #515151);
border-width: 2px;
border-color: black;
border-style: solid;
border-radius: 7;
]]
  )
  
  
  
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>initializeTabWindows</name>
						<packageName></packageName>
						<script>function initializeTabWindows()
  Adjustable = Adjustable or {}
  Adjustable.TabWindow =
  Adjustable.TabWindow or Geyser.Container:new({name = "AdjustableTabWindowClass"})
  -- Save a reference to our parent constructor
  Adjustable.TabWindow.parent = Geyser.Container
  -- Create table to put every Adjustable.TabWindow in it
  Adjustable.TabWindow.all = Adjustable.TabWindow.all or {}
  Adjustable.TabWindow.all_windows = Adjustable.TabWindow.all_windows or {}
  Adjustable.TabWindow.allTabs = Adjustable.TabWindow.allTabs or {}
end
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>initializeGUIContainers</name>
						<packageName></packageName>
						<script>function initializeGUIContainers()
  -- Create containers
  GUI.top = Adjustable.Container:new({name = "top", y = "0%", height = "10%"})
  GUI.affbar = Adjustable.Container:new({name = "affbar", height = "20%", y = "-20%"})
  GUI.gauges = Adjustable.Container:new({name = "gauges", height = "20%", y = "-20%"})
  GUI.right =
    Adjustable.Container:new({name = "right", y = "0%", height = "100%", x = "-20%", width = "20%"})
  GUI.left =
    Adjustable.Container:new({name = "left", x = "0%", y = "0%", height = "100%", width = "20%"})
  GUI.main =
    Adjustable.Container:new({name = "main", x = "0%", y = "0%", width = "100%", height = "100%"})
  GUI.enemies =
    Adjustable.Container:new({name = "main", x = "0%", y = "0%", width = "100%", height = "100%"}, GUI.target)

  -- Attach containers to borders
  GUI.top:attachToBorder("top")
  GUI.affbar:attachToBorder("bottom")
  GUI.gauges:attachToBorder("bottom")
  GUI.left:attachToBorder("left")
  GUI.right:attachToBorder("right")

  -- Connect containers to borders
  GUI.top:connectToBorder("left")
  GUI.top:connectToBorder("right")
  GUI.affbar:connectToBorder("left")
  GUI.affbar:connectToBorder("right")
  GUI.gauges:connectToBorder("left")
  GUI.gauges:connectToBorder("right")


end


function initializeGUIContainers()
  -- Create containers
  GUI.top = Adjustable.Container:new({name = "top", y = "0%", height = "10%"})
  GUI.affbar = Adjustable.Container:new({name = "affbar", height = "20%", y = "-20%"})
  GUI.gauges = Adjustable.Container:new({name = "gauges", height = "20%", y = "-20%"})
  GUI.right =
    Adjustable.Container:new({name = "right", y = "0%", height = "100%", x = "-20%", width = "20%"})
  GUI.left =
    Adjustable.Container:new({name = "left", x = "0%", y = "0%", height = "100%", width = "20%"})
  GUI.main =
    Adjustable.Container:new({name = "main", x = "0%", y = "0%", width = "100%", height = "100%"})

  -- Attach containers to borders
  GUI.top:attachToBorder("top")
  GUI.affbar:attachToBorder("bottom")
  GUI.gauges:attachToBorder("bottom")
  GUI.left:attachToBorder("left")
  GUI.right:attachToBorder("right")

  -- Connect containers to borders
  GUI.top:connectToBorder("left")
  GUI.top:connectToBorder("right")
  GUI.affbar:connectToBorder("left")
  GUI.affbar:connectToBorder("right")
  GUI.gauges:connectToBorder("left")
  GUI.gauges:connectToBorder("right")


end





</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>initializeGUIGauges</name>
						<packageName></packageName>
						<script>function initializeGUIGauges()
  -- ==================
  --  Load Containers
  -- ==================
  GUI.scorewindow:load()
  GUI.affwindow:load()
  GUI.mapwindow:load()
  GUI.chatwindow:load()
  GUI.roomwindow:load()
  GUI.datawindow:load()
  -- ==================
  --  Load Guages
  -- ==================
  GUI.hpbar:setValue(50, 100)
  GUI.mpbar:setValue(50, 100)
  GUI.epbar:setValue(50, 100)
  GUI.wpbar:setValue(50, 100)
  GUI.xpbar:setValue(50, 100)
end</script>
						<eventHandlerList />
					</Script>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>containers</name>
						<packageName></packageName>
						<script></script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>updateScoreWindow</name>
							<packageName></packageName>
							<script>function updateScoreWindow()
if systemLoaded and zData and zData.me then
  clearWindow("scorewindow.middle")
  --GUI.scorewindow.middle:cecho(" &lt;sienna&gt;"..gmcp.Char.Status.name.."  ")
  --if failsafe then
   -- GUI.scorewindow.middle:cecho("&lt;white&gt;Enemy Class:&lt;orange&gt;" .. "[" .. checkclass() .. "]:  ")
   -- if table.contains({inv_room}, "a lightwall") then
    --  GUI.scorewindow.middle:cecho("&lt;yellow&gt; LW &lt;white&gt;")
   -- end
    --GUI.scorewindow.middle:cecho(
    --  "|" ..
    --  hitcount["head"] ..
    --  "|" ..
    --  hitcount["torso"] ..
    --  "|" ..
    --  hitcount["left leg"] ..
    --  "|" ..
    --  hitcount["right leg"] ..
    --  "|" ..
    --  hitcount["left arm"] ..
    --  "|" ..
    --  hitcount["right arm"] ..
    --  "|" ..
     -- " "
    --)
    --if gmcp.Char.Status.class=="Apostate" then
    --GUI.scorewindow.middle:cecho("&lt;red&gt;BH: &lt;white&gt;(&lt;red&gt;"..baalzhealth().."&lt;white&gt;) ")
    --end
    --if gmcp.Char.Status.class == "Blademaster" then
    --GUI.scorewindow.middle:cecho("&lt;white&gt; Stance: &lt;green&gt;"..myStance().." ")
    --GUI.scorewindow.middle:cecho("&lt;white&gt; Shin: "..myShin().." ")
    --end
    -- if gmcp.Char.Status.class == "Paladin" then
    -- if myWrathbal() == "Yes" then
    -- GUI.scorewindow.middle:cecho("&lt;white&gt; Wrathbal: &lt;green&gt;"..myWrathbal().." ")
    -- elseif myWrathbal() == "No" then
    -- GUI.scorewindow.middle:cecho("&lt;white&gt; Wrathbal: &lt;red&gt;"..myWrathbal().." ")
    -- else
    -- GUI.scorewindow.middle:cecho("&lt;white&gt; Wrathbal: &lt;white&gt;"..myWrathbal().." ")
    -- end
    -- GUI.scorewindow.middle:cecho("&lt;white&gt; Wrath: "..myWrath().." ")
    -- end
 --else
    if not (gmcp.Char.Status.level == nil) then
      --GUI.scorewindow.middle:cecho(" &lt;white&gt;Level:&lt;orange&gt;" .. zData.me.level .. " ")
      --GUI.scorewindow.middle:cecho(
      --  "&lt;white&gt;Gold:&lt;gold&gt;" ..
      --  zData.currency.gold)
     -- GUI.scorewindow.middle:cecho(
     --   "&lt;white&gt; Credits:&lt;gold&gt;" ..
     --   gmcp.Char.Status.unboundcredits ..
     --   "&lt;white&gt;(&lt;gold&gt;" ..
      --  gmcp.Char.Status.boundcredits ..
     --   "&lt;white&gt;) "
     -- )
      GUI.scorewindow.middle:cecho("&lt;white&gt;   Name: &lt;green&gt;" .. zData.me.fullname .. " ")
      GUI.scorewindow.middle:cecho("&lt;white&gt; Msgs: &lt;green&gt;" .. gmcp.Char.Status.unread_msgs .. " ")
      GUI.scorewindow.middle:cecho("&lt;white&gt; News: &lt;green&gt;" .. gmcp.Char.Status.unread_news .. " ")
      GUI.scorewindow.middle:cecho("&lt;white&gt; Class: &lt;cyan&gt;" .. gmcp.Char.Status.class .. " ")
      GUI.scorewindow.middle:cecho("&lt;white&gt; Race: &lt;cyan&gt;" .. zData.me.fullrace .. " ")
    end
  --end
end
end

registerAnonymousEventHandler("gmcp.Char.Status", updateScoreWindow)</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>updateGUIGauges</name>
							<packageName></packageName>
							<script>function interpolate(currentValue, targetValue, duration, callback, interpolationKey, guiElement, maxValue)
    -- Cancel ongoing interpolation for the same key
    if interpolationState[interpolationKey] then
        interpolationState[interpolationKey].cancelled = true
    end

    -- Clamp current and target values to maxValue
    currentValue = math.min(currentValue, maxValue)
    targetValue = math.min(targetValue, maxValue)

    -- Initialize interpolation state
    local startTime = os.clock()
    local initialValue = currentValue
    local delta = targetValue - currentValue

    interpolationState[interpolationKey] = {cancelled = false}

    -- Define update interval dynamically (60 updates per second)
    local updateInterval = 1 / 60

    -- Interpolation update function
    local function update()
        local now = os.clock()
        local elapsedTime = now - startTime
        local progress = math.min(elapsedTime / duration, 1) -- Clamp progress to [0, 1]

        -- Calculate interpolated value using linear interpolation
        local interpolatedValue = initialValue + delta * progress

        -- Clamp the interpolated value to ensure it does not exceed maxValue
        interpolatedValue = math.min(interpolatedValue, maxValue)

        -- Update GUI with clamped value
        guiElement:setValue(interpolatedValue, maxValue)

        -- Check for completion or cancellation
        if progress &gt;= 1 or (interpolationState[interpolationKey] and interpolationState[interpolationKey].cancelled) then
            interpolationState[interpolationKey] = nil -- Clear interpolation state

            -- Trigger callback with clamped final value
            callback(math.min(targetValue, maxValue))

            -- Ensure the GUI is updated with the exact clamped final value
            guiElement:setValue(math.min(targetValue, maxValue), maxValue)
        else
            tempTimer(updateInterval, update) -- Schedule next update
        end
    end

    update() -- Start interpolation
end



function updateGUIGauges()
    local duration = 0.25 -- Duration of the interpolation

    -- Helper function to update a single bar
    local function updateBar(previous, current, maxValue, guiElement, key, label)
        if previous and current and maxValue then
            -- Ensure current value does not exceed max value
            local clampedCurrent = math.min(current, maxValue)

            interpolate(previous, clampedCurrent, duration, function(value)
                if DEBUG_MODE then print("Interpolating " .. label .. ":", value) end
                guiElement:setValue(value, maxValue)
                guiElement:echo(string.format(
                    "&lt;center&gt;&lt;b&gt;&lt;font size='5' color='white'&gt;%.0f%%&lt;/font&gt;&lt;/b&gt;&lt;/center&gt;",
                    (value / maxValue) * 100
                ))
            end, key, guiElement, maxValue)
        end
    end

    -- Update each gauge with the helper function
    updateBar(vitals.health.previous, vitals.health.current, vitals.maxHealth, GUI.hpbar, "health", "health")
    updateBar(vitals.mana.previous, vitals.mana.current, vitals.maxMana, GUI.mpbar, "mana", "mana")
    updateBar(vitals.wp.previous, vitals.wp.current, vitals.maxWp, GUI.wpbar, "wp", "willpower")
    updateBar(vitals.ep.previous, vitals.ep.current, vitals.maxEp, GUI.epbar, "ep", "endurance")
    updateBar(vitals.rank.previous, vitals.rank.current, vitals.maxRank, GUI.xpbar, "rank", "rank")
    
    
end


</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>updateRoom</name>
							<packageName></packageName>
							<script>local roomexclude =
  {
    "a green slime",
    "a pathfinder",
    "a soulmaster",
    "a chimera",
    "a humbug",
    "a bubonis",
    "a chaos hound",
    "a dervish",
    "a worm",
    "a chaos orb",
    "a chaos storm",
    "a simpering sycophant",
    "a minion of chaos",
    "a bloodleech",
    "a withered crone",
    "a sharp-toothed gremlin",
    "a bloodleech",
    "a sewer grate",
    "a runic totem",
    "a monolith sigil",
    "a cube sigil",
    "an eye sigil",
    "a key-shaped sigil",
    "a mounted tsalmaveth",
    "a hooded nocturni",
    "a knight of the Atrament",
    "a runic totem",
    "a winged serpent",
    "a court constable",
    "a swami of the Cactus Clans",
    "a mangy old dog",
    "a bedraggled, bone-thin puppy dog",
    "a mighty earth golem",
    "a beehive",
  }

function updateRoom()
  -- clearWindow("InfoBoxRoom")
  cecho(
    "\n&lt;white&gt;" .. gmcp.Room.Info.name .. "\n&lt;dim_grey&gt;(" .. gmcp.Room.Info.environment .. ")\n"
  )
  cecho("&lt;white&gt; in " .. gmcp.Room.Info.area .. "\n")
  local todisplay = {denizens = {}, objects = {}}
  for k, v in pairs(gmcp.Char.Items.List.items) do
    local excluded = false
    for _, x in pairs(roomexclude) do
      if v.name == x then
        excluded = true
        break
      end
    end
    if not excluded then
      if v.properties and v.properties.denizen then
        todisplay.denizens[k] = v.name
      else
        todisplay.objects[k] = v.name
      end
    end
  end
  cecho("\n\n&lt;white&gt;Denizens:\n")
  for k, v in pairs(todisplay.denizens) do
    --cecho("&lt;white&gt;" .. string.format("%7s", k) .. "&lt;dim_grey&gt; - " .. v .. "\n")
    cecho(" &lt;dim_grey&gt; - " .. v .. "\n")
  end
  cecho("\n\n&lt;white&gt;Objects:\n")
  for k, v in pairs(todisplay.objects) do
    --cecho("&lt;white&gt;" .. string.format("%7s", k) .. "&lt;dim_grey&gt; - " .. v .. "\n")
    cecho(" &lt;dim_grey&gt; - " .. v .. "\n")
  end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>updateRoomItems</name>
							<packageName></packageName>
							<script>items = {rift = {}, room = {}, inv = {}}
items.properties =
  {
    m = "denizen",
    f = "filled",
    W = "wearable",
    w = "worn",
    c = "container",
    e = "edible",
    g = "groupable",
    r = "riftable",
    t = "takeable",
  }
items.setproperties =
  function(location, id)
    items[location][id].properties = {}
    for k, v in pairs(items.properties) do
      if string.match(items[location][id].attrib, k) then
        items[location][id].properties[v] = true
      end
      -- if
    end
    -- if
    if items[location][id].properties.container then
      items[location][id].contents =
        function()
          return items["rep" .. id]
        end
    end
    -- if
  end
-- if
GetItemsList =
  function()
    local x = gmcp.Char.Items.List
    items[x.location] = {}
    for k, v in ipairs(x.items) do
      items[x.location][v.id] = {}
      items[x.location][v.id].name = v.name
      if v.attrib then
        items[x.location][v.id].attrib = v.attrib
        items.setproperties(x.location, v.id)
        if items[x.location][v.id].properties.container then
          sendGMCP("Char.Items.Contents " .. v.id)
        end
        -- if
      end
      -- if
    end
    -- for
    --if systemLoaded and mindseye and gmcp.Room ~= nil then
    --UIUpdateRoom ()
    --end
  end
-- func
GetItemsAdd =
  function()
    local x = gmcp.Char.Items.Add
    if not items[x.location] then
      items[x.location] = {}
    end
    items[x.location][x.item.id] = {}
    items[x.location][x.item.id].name = x.item.name
    if x.item.attrib then
      items[x.location][x.item.id].attrib = x.item.attrib
      items.setproperties(x.location, x.item.id)
      if items[x.location][x.item.id].properties.container then
        sendGMCP("Char.Items.Contents " .. x.item.id)
      end
      -- if
    end
    -- if
    --if systemLoaded and mindseye then
    --UIUpdateRoom ()
    --end
  end
-- func
GetItemsRemove =
  function()
    local x = gmcp.Char.Items.Remove
    if not items[x.location] then
      items[x.location] = {}
    end
    items[x.location][x.item.id] = nil
    if items["rep" .. x.item.id] then
      items["rep" .. x.item.id] = nil
    end
    --if systemLoaded and mindseye then
    -- UIUpdateRoom ()
    --end
  end
-- func
registerAnonymousEventHandler("gmcp.Char.Items.List", GetItemsList)
registerAnonymousEventHandler("gmcp.Char.Items.Add", GetItemsAdd)
registerAnonymousEventHandler("gmcp.Char.Items.Remove", GetItemsRemove)</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>UIUpdateRoom</name>
							<packageName></packageName>
							<script>function UIUpdateRoom()
    if systemLoaded and gmcp and gmcp.Room.Info and gmcp.Room.Info.name then
        clearWindow("datawindow.middle")


        local function truncateString(str, maxLength)
            if not str then return "" end -- Handle nil values
           -- print("Original String: " .. str .. " (Length: " .. #str .. ")") -- Debug
            if #str &gt; maxLength then
              --  print("Truncating: " .. str .. " (length: " .. #str .. ")")
                return str:sub(1, maxLength) .. "..."
            end
            return str
        end
        
        local stringcut = 38


        local todisplay = {denizens = {}, objects = {}}
        for k, v in pairs(items.room) do
            local excluded = false
            for _, x in pairs(roomexclude) do
                if v.name == x then
                    excluded = true
                end
            end
            if not excluded then
                if v.properties and v.properties.denizen then
                    todisplay.denizens[k] = truncateString(v.name, stringcut)
                else
                    todisplay.objects[k] = truncateString(v.name, stringcut)
                end
            end
        end

    end
end


-- function
registerAnonymousEventHandler("gmcp.Room.Info", UIUpdateRoom)</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>chat_capture</name>
							<packageName></packageName>
							<script>--local window = "wilderness"
-- Echo the text to another window with the same text format
--cecho(window, text)

function determineWindow(channel, sender)
  local window = nil
  -- Logic to determine the appropriate window based on channel or sender
  -- For example, you can use a mapping similar to chat_channels.types
  -- to determine the window based on the channel name or sender
  
  -- Here's a simple example:
    --if channel == "ct" then
      --window = "city"
    --elseif channel == "party" then
      -- window = "party"
    --elseif channel == "market" then
      -- window = "market"
    --elseif channel:match("^clt") then
      -- window = "clan"
    --else
      --window = "city"
    --end
    
  window = "chatwindow.miniconsole"
  GUI.chatwindow:activateTab(string.title(window))
  return window
end

-- Function to map channel commands to colors

function mapChannelToColor(command)
  print(command)
  -- Example color mappings, you can modify as needed
  -- Add more channel commands and their corresponding colors here
  local colors = {newbie = "white", market = "green", ct = "orange", clt1 = "yellow", clt2 = "cyan"}
  return colors[command] or "white"
  -- Default to white if no mapping found
end

-- Function to parse ANSI escape codes and apply channel-specific color

function parseAndColorizeText(text, command)
  local color = mapChannelToColor(command)
  local coloredText = "&lt;" .. color .. "&gt;" .. text
  return coloredText
end

-- Function to convert RGB color codes to hexadecimal format

function RGBtoHex(r, g, b)
  return string.format("&lt;%02x%02x%02x&gt;", tonumber(r), tonumber(g), tonumber(b))
end

-- Function to capture GMCP chat messages

function chat_capture()
  local ch = gmcp.Comm.Channel.Text
  local text = ch.text or ""
  local command = ch.channel
  if command == "says" then
    return
  end
  -- Convert ANSI escape codes to Mudlet's decho format
  text = ansi2decho(text)
  -- Define regular expression patterns
  local ansiPattern = rex.new("\\e\\[(\\d+;)*\\d+m")
  local mxpPattern = rex.new("\\e\\[4z\\x3\.+?\\x4")
  local rgbPattern = "&lt;(%d+),(%d+),(%d+)&gt;"
  -- Remove MXP links
  text = rex.gsub(text, mxpPattern, "")
  -- Convert RGB color codes to hexadecimal format
  text =
    rex.gsub(
      text,
      rgbPattern,
      function(r, g, b)
        return RGBtoHex(r, g, b)
      end
    )
  -- Apply channel-specific color
  --text = parseAndColorizeText(text, command)
  -- Display the modified text in the appropriate window
  local window = determineWindow(ch.channel, ch.sender)
  if window then
    decho(window, text .. "\n")
    -- Use decho to display colored text
  end
end

-- Event handler registration
registerAnonymousEventHandler("gmcp.Comm.Channel.Text", chat_capture)</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>whoHere</name>
							<packageName></packageName>
							<script>--update GUI
--v1
-- Function to check if a value exists in a table
--function updateWhoHere()
  -- GUI.roomwindow.miniconsole:clear()
  -- GUI.roomwindow.miniconsole:cecho("\n  People Here:\n")
      --for key, value in pairs(WhoHereTable) do
          --if value == target then
          --  GUI.roomwindow.miniconsole:cecho("    &lt;dim_grey&gt;"..key.." &lt;red&gt;"..value .. "\n")
          --else
          --  GUI.roomwindow.miniconsole:cecho("    &lt;dim_grey&gt;"..key.." &lt;MediumSpringGreen&gt;"..value .. "\n")
          --end
      --end
--end

roomexclude =
  {
    "a green slime",
    "a pathfinder",
    "a soulmaster",
    "a chimera",
    "a humbug",
    "a bubonis",
    "a chaos hound",
    "a dervish",
    "a worm",
    "a chaos orb",
    "a chaos storm",
    "a simpering sycophant",
    "a minion of chaos",
    "a bloodleech",
    "a withered crone",
    "a sharp-toothed gremlin",
    "a bloodleech",
    "a sewer grate",
    "a runic totem",
    "a monolith sigil",
    "a cube sigil",
    "an eye sigil",
    "a key-shaped sigil",
    "a mounted tsalmaveth",
    "a hooded nocturni",
    "a knight of the Atrament",
    "a runic totem",
    "a winged serpent",
    "a court constable",
    "a swami of the Cactus Clans",
    "a mangy old dog",
    "a bedraggled, bone-thin puppy dog",
    "a mighty earth golem",
    "a beehive",
  }

--v2
-- Function to check if a value exists in a table
function updateWhoHere()
if systemLoaded then
  GUI.roomwindow.miniconsole:clear()
  --remove names from table
  for _, v in pairs(enemylist) do
    if not table.contains(WhoHereTable, v) then
      removeElement(enemylist, v)
      send("unenemy " .. v)
    end
  end
  for _, v in pairs(allylist) do
    if not table.contains(WhoHereTable, v) then
      removeElement(allylist, v)
      send("unally " .. v)
    end
  end
  --add names to tables
  for _, value in pairs(WhoHereTable) do
    if not table.contains(NDB.cityList, value) and table.contains(NDB.cityEnemies, value) --[[and gmcp.Room.Info.area == city_capture()]] then
      if not table.contains(enemylist, value) then
        table.insert(enemylist, value)
        send("enemy " .. value)
      end
    end
    if table.contains(NDB.cityList, value) and not (target == value) then
      if not (value == gmcp.Char.Status.name) then
        if not (table.contains(allylist, value)) then
          table.insert(allylist, value)
          send("ally " .. value)
        end
      end
    end
  end
  
        local function truncateString(str, maxLength)
            if not str then return "" end -- Handle nil values
           -- print("Original String: " .. str .. " (Length: " .. #str .. ")") -- Debug
            if #str &gt; maxLength then
              --  print("Truncating: " .. str .. " (length: " .. #str .. ")")
                return str:sub(1, maxLength) .. "..."
            end
            return str
        end
        
        local stringcut = 35
 
        local todisplay = {denizens = {}, objects = {}}
            for k, v in pairs(items.room) do
                local excluded = false
                for _, x in pairs(roomexclude) do
                    if v.name == x then
                        excluded = true
                        break  -- Break out of the loop once a match is found
                    end
                end
                if not excluded then
                    if v.properties and v.properties.denizen then
                        -- Ensure both k and hunttarget are treated as strings for comparison
                       -- display(k)
                       -- display(hunttarget)
                        if k == hunttarget then
                            todisplay.denizens[k] = "&lt;ansi_red&gt;" .. truncateString(v.name, stringcut) .. ""
                        else
                            todisplay.denizens[k] = truncateString(v.name, stringcut)
                        end
                    else
                        todisplay.objects[k] = truncateString(v.name, stringcut)
                    end
                end
            end

  
  
    if gmcp.Room.Info.area == "" and gmcp.Room.Info.num == -2 and gmcp.Room.Info.environment == "Vessel" then
      GUI.roomwindow.miniconsole:cecho("&lt;gold&gt;Area&lt;white&gt;: &lt;ansi_white&gt;A Ship!\n")
      GUI.roomwindow.miniconsole:cecho("&lt;gold&gt;Room&lt;white&gt;: &lt;ansi_white&gt;"..gmcp.Room.Info.name.."\n") 
    else
      GUI.roomwindow.miniconsole:cecho("&lt;gold&gt;Area&lt;white&gt;: &lt;ansi_white&gt;"..gmcp.Room.Info.area.."\n")
      GUI.roomwindow.miniconsole:cecho("&lt;gold&gt;Room&lt;white&gt;: &lt;ansi_white&gt;"..truncateString(gmcp.Room.Info.name, stringcut).." &lt;DimGrey&gt;(&lt;gold&gt;"..gmcp.Room.Info.num.."&lt;DimGrey&gt;)"..
                                                             "\n &lt;dim_grey&gt;(" .. truncateString(gmcp.Room.Info.environment, stringcut) ..
                                                              ")\n")
    end
      
  
  -- Print target, if available
  GUI.roomwindow.miniconsole:cecho("\n  Target:\n")
  local targetPrinted = false
  for key, value in pairs(WhoHereTable) do
    if value == target:title() then
      if not trueNamePrinted then
        GUI.roomwindow.miniconsole:cecho("   &lt;red&gt;" .. target:title() .. "\n")
        targetPrinted = true
      end
    end
  end


-- Initialize peopleList to an empty string at the start
local peopleList = ""

-- Print People in room
GUI.roomwindow.miniconsole:cecho("\n  People: &lt;OrangeRed&gt;(&lt;white&gt;"..math.floor(table.size(WhoHereTable)).."&lt;OrangeRed&gt;)\n")

for _, value in pairs(WhoHereTable) do
    -- Check if the player exists in NDB.players before accessing their info
    local player = value
    local city = ""
    local class = ""
    local level = ""
    
    if NDB.players[player] then
        -- Debugging output: Check the cityColor and level value
        city = NDB_getColour(player) or "white"
        
        class = tostring(NDB.players[player].class) or "Unknown Class"
        level = tostring(NDB.players[player].level) or "Unknown Level"
    end

    -- Now try to safely format the output
    local formattedString = string.format(
        "   &lt;%s&gt;%s&lt;DimGrey&gt; (&lt;dark_goldenrod&gt;%s&lt;DimGrey&gt;) &lt;DimGrey&gt;(&lt;grey&gt;%s&lt;DimGrey&gt;)\n",  -- Format: City Color -&gt; Name -&gt; Class -&gt; Level
        city, player, class, level  -- Use level here
    )

    -- Append the formatted string to the people list
    peopleList = peopleList .. formattedString
end

-- Check if we have people to display and print them
if peopleList ~= "" then
    GUI.roomwindow.miniconsole:cecho(peopleList)
else
    -- If no players, optionally show a message indicating no people in the room
    GUI.roomwindow.miniconsole:cecho("   &lt;white&gt;- &lt;DimGrey&gt;No people in the room.\n")
end


-- Initialize the allies string and counter
local allies = ""
local allcnt = 0  -- Initialize counter to zero

-- Loop through the city list and check if the ally is in WhoHereTable
for key, value in pairs(NDB.cityList) do
    if table.contains(WhoHereTable, value) then
        allies = allies .. "&lt;yellow&gt;" .. value .. "&lt;white&gt;, "
        allcnt = allcnt + 1  -- Increment the counter for each ally found
    end
end

-- Print the count of allies and the list
if allcnt &gt; 0 then
    -- Remove the last comma and space from the allies list string
    allies = allies:sub(1, -3)
    
    -- Print the count of allies
    GUI.roomwindow.miniconsole:cecho("\n  Allies: &lt;OrangeRed&gt;(&lt;white&gt;" .. allcnt .. "&lt;OrangeRed&gt;)\n")
    
    -- Print the list of allies
    GUI.roomwindow.miniconsole:cecho("\n   " .. allies .. "\n")
else
    -- Optional: Show a message if there are no allies
    GUI.roomwindow.miniconsole:cecho("\n  Allies: &lt;OrangeRed&gt;(&lt;white&gt;0&lt;OrangeRed&gt;)\n")
    GUI.roomwindow.miniconsole:cecho("   &lt;white&gt;- &lt;DimGrey&gt;No allies in the room.\n")
end
  
  
-- Initialize the enemies string and counter
local enemies = ""
local enemiesCount = 0  -- Initialize counter to zero

-- Loop through the enemy list and check if the enemy is in WhoHereTable
for key, value in pairs(enemylist) do
    if table.contains(WhoHereTable, value) then
        enemies = enemies .. "&lt;red&gt;" .. value .. "&lt;white&gt;, "
        enemiesCount = enemiesCount + 1  -- Increment the counter for each enemy found
    end
end

-- Print the count of enemies and the list
if enemiesCount &gt; 0 then
    -- Remove the last comma and space from the enemies list string
    enemies = enemies:sub(1, -3)
    
    -- Print the count of enemies
    GUI.roomwindow.miniconsole:cecho("\n  Enemies: &lt;OrangeRed&gt;(&lt;white&gt;" .. enemiesCount .. "&lt;OrangeRed&gt;)\n")
    
    -- Print the list of enemies
    GUI.roomwindow.miniconsole:cecho("\n   " .. enemies .. "\n")
else
    -- Optional: Show a message if there are no enemies
    GUI.roomwindow.miniconsole:cecho("\n  Enemies: &lt;OrangeRed&gt;(&lt;white&gt;0&lt;OrangeRed&gt;)\n")
    GUI.roomwindow.miniconsole:cecho("   &lt;white&gt;- &lt;DimGrey&gt;No enemies in the room.\n")
end



        GUI.roomwindow.miniconsole:cecho("\n  &lt;ansi_white&gt;Denizens:\n")
        
        -- Make sure we're printing the updated todisplay.denizens table after the loop
        for k, v in pairs(todisplay.denizens) do
            GUI.roomwindow.miniconsole:cecho(
                " &lt;white&gt;" .. string.format("%7s", k) .. "&lt;dim_grey&gt; - " .. v .. "\n"
            )
        end


        GUI.roomwindow.miniconsole:cecho("\n  &lt;ansi_white&gt;Objects:\n")
        for k, v in pairs(todisplay.objects) do
            GUI.roomwindow.miniconsole:cecho(
                " &lt;white&gt;" .. string.format("%7s", k) .. "&lt;dim_grey&gt; - " .. v .. "\n"
            )
        end   
     
      -- Define the base directory for the C: drive
    local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
    local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"
    
   -- ensureFileExists(tablesDir, "allylist.lua", "save", allylist)
   -- ensureFileExists(tablesDir, "enemylist.lua", "save", enemylist)
 end 
end

-- list all people in room

function updatePeople()
  WhoHereTable = {}
  for k, v in pairs(gmcp.Room.Players) do
    if gmcp.Room.Players[k].name ~= gmcp.Char.Status.name then
      table.insert(WhoHereTable, gmcp.Room.Players[k].name)
    end
    --if
  end
  --for
  updateWhoHere()
end

--function
-- person enters room

function addPerson()
  if not table.contains(NDB.cityList, gmcp.Room.AddPlayer.name) then
    if not table.contains(enemylist, gmcp.Room.AddPlayer.name) and table.contains(NDB.cityEnemies, gmcp.Room.AddPlayer.name) --[[and gmcp.Room.Info.area == city_capture()]] then
      table.insert(enemylist, gmcp.Room.AddPlayer.name)
      send("enemy " .. gmcp.Room.AddPlayer.name)
    end
  end
  if
    table.contains(NDB.cityList, gmcp.Room.AddPlayer.name) and not (target == gmcp.Room.AddPlayer.name)
  then
    if not (gmcp.Room.AddPlayer.name == gmcp.Char.Status.name) then
      if not (table.contains(allylist, gmcp.Room.AddPlayer.name)) then
        table.insert(allylist, gmcp.Room.AddPlayer.name)
        send("ally " .. gmcp.Room.AddPlayer.name)
      end
    end
  end
  table.insert(WhoHereTable, gmcp.Room.AddPlayer.name)
  updateWhoHere()
      -- Define the base directory for the C: drive
    local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
    local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"
    
    -- Save `cityenemylist.lua` in `C:/Users/YourUsername/Documents/Achaean System/Tables/`
   -- ensureFileExists(tablesDir, "allylist.lua", "save", allylist)
   -- ensureFileExists(tablesDir, "enemylist.lua", "save", enemylist)
end

-- person leaves room

function removePerson()
  if table.contains(enemylist, gmcp.Room.RemovePlayer) then
    --table.remove(enemylist, table.index_of(enemylist, gmcp.Room.RemovePlayer))
    removeElement(enemylist, gmcp.Room.RemovePlayer)
    send("unenemy " .. gmcp.Room.RemovePlayer)
    --tempTrigger(target, [[selectString("]] .. matches[2] .. [[", 1) fg("red") resetFormat()]])
  end
  if
    table.contains(allylist, gmcp.Room.RemovePlayer) and not (target == gmcp.Room.RemovePlayer)
  then
    if not (gmcp.Room.RemovePlayer == gmcp.Char.Status.name) then
      removeElement(allylist, gmcp.Room.RemovePlayer)
      send("unally " .. gmcp.Room.RemovePlayer)
    end
  end
  listRemove(WhoHereTable, gmcp.Room.RemovePlayer)
  updateWhoHere()
      -- Define the base directory for the C: drive
    local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
    local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"
    
    -- Save `cityenemylist.lua` in `C:/Users/YourUsername/Documents/Achaean System/Tables/`
   -- ensureFileExists(tablesDir, "allylist.lua", "save", allylist)
   -- ensureFileExists(tablesDir, "enemylist.lua", "save", enemylist)
end

-- event handlers
registerAnonymousEventHandler("gmcp.Room.AddPlayer", addPerson)
registerAnonymousEventHandler("gmcp.Room.RemovePlayer", removePerson)
registerAnonymousEventHandler("gmcp.Room.Players", updatePeople)</script>
							<eventHandlerList />
						</Script>
						<ScriptGroup isActive="yes" isFolder="yes">
							<name>adjustable containers</name>
							<packageName></packageName>
							<script>Adjustable = Adjustable or {}
Adjustable.TabWindow = Adjustable.TabWindow or Geyser.Container:new({name = "AdjustableTabWindowClass"})

-- Save a reference to our parent constructor
Adjustable.TabWindow.parent = Geyser.Container
-- Create table to put every Adjustable.TabWindow in it
Adjustable.TabWindow.all = Adjustable.TabWindow.all or {}
Adjustable.TabWindow.all_windows = Adjustable.TabWindow.all_windows or {}
Adjustable.TabWindow.allTabs = Adjustable.TabWindow.allTabs or {}</script>
							<eventHandlerList />
							<Script isActive="yes" isFolder="no">
								<name>noColorEcho</name>
								<packageName></packageName>
								<script>--Geyser.Label echo function overwritten to not have the color function in it
--needed for allowing stylesheet to control the text color

function noColorEcho(self, message, color, format)
  message = message or self.message
  self.message = message
  if format then
    self:processFormatString(format)
  end
  local ft = self.formatTable
  local fs = ft.fontSize
  local alignment = ft.alignment
  if alignment ~= "" then
    alignment = string.format([[align="%s" ]], alignment)
  end
  if ft.bold then
    message = "&lt;b&gt;" .. message .. "&lt;/b&gt;"
  end
  if ft.italics then
    message = "&lt;i&gt;" .. message .. "&lt;/i&gt;"
  end
  if ft.underline then
    message = "&lt;u&gt;" .. message .. "&lt;/u&gt;"
  end
  if ft.strikethrough then
    message = "&lt;s&gt;" .. message .. "&lt;/s&gt;"
  end
  if self.font and self.font ~= "" then
    message = string.format('&lt;font face ="%s"&gt;%s&lt;/font&gt;', self.font, message)
  end
  if not fs then
    fs = tostring(self.fontSize)
  end
  fs = "font-size: " .. fs .. "pt; "
  message = [[&lt;div ]] .. alignment .. [[ style=" ]] .. fs .. [["&gt;]] .. message .. [[&lt;/div&gt;]]
  echo(self.name, message)
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>createBaseContainers</name>
								<packageName></packageName>
								<script>function Adjustable.TabWindow:createBaseContainers()
  self.tabBar =
    self.tabBar or
    Geyser.Label:new(
      {name = self.name .. "tabBar", x = 0, y = 0, width = "100%", height = self.tabBarHeight}, self
    )
  self.tabBar:setStyleSheet(self.tabBarStyle)
  self.header =
    self.header or
    Geyser.HBox:new(
      {name = self.name .. "header", x = 0, y = 0, width = "100%", height = "100%"}, self.tabBar
    )
  self.overlay =
    self.overlay or
    Geyser.Label:new(
      {name = self.name .. "overlay", x = 0, y = 0, width = "100%", height = "100%"}, self.tabBar
    )
  self.overlay:setStyleSheet(self.overlayStyle)
  self.overlay:setMoveCallback(
    function(event)
      self:onOverlayMove(event)
    end
  )
  self.overlay:setOnLeave(
    function(event)
      self:onOverlayLeave(event)
    end
  )
  self.overlay:setClickCallback(
    function(event)
      self:onOverlayClick(event)
    end
  )
  self.overlay:hide()
  self.footerContainer =
    self.footerContainer or
    Geyser.Container:new(
      {
        name = self.name .. "footerContainer",
        x = 0,
        y = self.tabBarHeight,
        width = "100%",
        height = "-0",
      },
      self
    )
  self.footer =
    self.footer or
    Geyser.Label:new(
      {name = self.name .. "footer", x = 0, y = self.gap, width = "100%", height = "-0"},
      self.footerContainer
    )
  self.footer:setStyleSheet(self.footerStyle)
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>setTabToolTip</name>
								<packageName></packageName>
								<script>function setTabToolTip(tab)
  -- put ToolTip on Label if TabText is to long to display
  local w, h = calcFontSize(tab.adjLabel.fontSize)
  local txt_width = #tab.tabText * w
  if tab.adjLabel:get_width() &lt; txt_width then
    tab.adjLabel:setToolTip(tab.tabText)
  else
    tab.adjLabel:resetToolTip()
  end
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>createTabs</name>
								<packageName></packageName>
								<script>-- function to create new tabs in tabs table or to rewrite/readjust them

function Adjustable.TabWindow:createTabs()
  for k, v in ipairs(self.tabs) do
    self[v .. "center"] =
      self[v .. "center"] or
      Geyser.Label:new(
        {name = v .. "center", x = 0, y = 0, width = "100%", height = "100%"}, self.footer
      )
    self[v .. "center"]:setStyleSheet(self.centerStyle)
    local tabText = self[v] and self[v].tabText or v
    self[v] =
      self[v] or
      Adjustable.Container:new(
        {
          name = self.name .. " Tab: " .. v,
          tabname = v,
          origin = self,
          noLimit = true,
          tabText = tabText,
          padding = 0,
          locked = true,
          autoSave = false,
          autoLoad = false,
          raiseOnClick = false,
          adjLabelstyle = self.inactiveTabStyle,
          titleTxtColor = self.tabTxtColor,
        },
        self.header
      )
    self[v].adjLabel.echo = noColorEcho
    self[v]:setTitle(tabText)
    self[v]:newLockStyle(
      "tab",
      function(self)
        self.Inside:resize("-" .. self.padding, "-" .. self.padding)
        self.Inside:move(self.padding, self.padding * 2)
      end
    )
    self[v].lockStyle = "tab"
    self[v].unlockContainer =
      function()
        Adjustable.Container.unlockContainer(self[v])
        self[v].adjLabel:echo(self[v].tabText, nil, "c")
      end
    Adjustable.TabWindow.allTabs[v] = self
    self[v]:newCustomItem(
      "Tabify",
      function()
        Adjustable.TabWindow.allTabs[v]:createTempWindow(self[v])
      end
    )
    self[v].reposition = self.reposition
    local delIndex = table.index_of(Adjustable.Container.all_windows, self[v].name)
    if delIndex then
      table.remove(Adjustable.Container.all_windows, delIndex)
    end
    Adjustable.Container.all[self[v].name] = nil
    self[v].adjLabelstyle = self.inactiveTabStyle
    self[v].titleTxtColor = self.tabTxtColor
    self[v].adjLabel:setStyleSheet(self.inactiveTabStyle)
    self[v].adjLabel:echo(self[v].tabText, nil, "c")
    self[v].adjLabel:setClickCallback(
      function(event)
        self:onClick(v, event)
      end
    )
    self[v].adjLabel:setReleaseCallback(
      function(event)
        self:onRelease(v, event)
      end
    )
    self[v].adjLabel:setMoveCallback(
      function(event)
        self:onMove(v, event)
      end
    )
    self[v].adjLabel:setDoubleClickCallback(
      function(event)
        self:onDoubleClick(v, event)
      end
    )
    self[v].minimizeLabel:setClickCallback(
      function()
        self:onMinimizeClick(v)
      end
    )
    self[v].minimizeLabel:echo("&lt;center&gt;🗗&lt;/center&gt;")
    self[v].minLabel:setClickCallback(
      function()
        self:onMinimizeClick(v)
      end
    )
    self[v .. "center"]:hide()
    -- put ToolTip on Label if TabText is to long to display
    setTabToolTip(self[v])
  end
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>setGap</name>
								<packageName></packageName>
								<script>--- Sets the amount of space to use between the tabs and the consoles
-- @tparam number gap Number of pixels to keep between the tabs and consoles

function Adjustable.TabWindow:setGap(gap)
  local gapNumber = tonumber(gap)
  local gapType = type(gap)
  assert(gapType == "number", "gap expected as number, got " .. gapType)
  self.gap = gapNumber
  self.footer:move(0, gapNumber)
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>setTabHeight</name>
								<packageName></packageName>
								<script>--- Sets the height of the tabs in pixels/percent
-- @tparam number tabHeight the height of the tabs for the object, in pixels/percent

function Adjustable.TabWindow:setTabHeight(tabHeight)
  self.tabBarHeight = tabHeight
  self.tabBar:resize("100%", tabHeight)
  self.footerContainer:move(0, tabHeight)
  self.footerContainer:resize("100%", "-0")
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>setTabBarCSS</name>
								<packageName></packageName>
								<script>--- Sets the CSS to use for the tab box which contains the tabs for the object
-- @tparam string css The css styling to use for the tab box

function Adjustable.TabWindow:setTabBarCSS(css)
  local cssType = type(css)
  assert(cssType == "string", "css as string expected, got " .. cssType)
  self.tabBarStyle = css
  self.tabBar:setStyleSheet(self.tabBarStyle)
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>scriptsetTabBarColor</name>
								<packageName></packageName>
								<script>--- Sets the color to use for the tab box background
-- @param color Color string suitable for decho or hecho, or color name eg "purple", or table of colors {r,g,b}

function Adjustable.TabWindow:setTabBarColor(color)
  self.tabBarColor = color
  self.tabBarStyle = ""
  self.tabBar:setStyleSheet(self.tabBarStyle)
  self.tabBar:setColor(self.tabBarColor)
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>setActiveTabFGColor</name>
								<packageName></packageName>
								<script>--- Sets the FG color for the active tab
-- @param color Color string suitable for decho or hecho, or color name eg "purple", or table of colors {r,g,b}

function Adjustable.TabWindow:setActiveTabFGColor(color)
  local found
  local add_css
  local r, g, b = Geyser.Color.parse(color)
  local rgb = string.format("rgb(%s, %s, %s)", r, g, b)
  self.activeTabFGColor = color
  self.activeTabStyle, found =
    string.gsub(" " .. self.activeTabStyle, "(%scolor:).-(;)", "%1" .. rgb .. "%2")
  if found == 0 then
    if string.match(self.activeTabStyle, "QLabel{") then
      add_css = "\nQLabel{color:" .. rgb .. ";}"
    else
      add_css = "\ncolor:" .. rgb .. ";"
    end
    self.activeTabStyle = self.activeTabStyle .. add_css
  end
  self:adjustTabStyle()
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>setActiveTabBGColor</name>
								<packageName></packageName>
								<script>--- Sets the BG color for the active tab.
-- &lt;br&gt;NOTE: If you set CSS for the active tab, it will override this setting.
-- @param color Color string suitable for decho or hecho, or color name eg "purple", or table of colors {r,g,b}

function Adjustable.TabWindow:setActiveTabBGColor(color)
  self.activeTabBGColor = color
  local r, g, b = Geyser.Color.parse(color)
  local rgba = string.format("rgba(%s, %s, %s, %s)", r, g, b, "100%%")
  self.activeTabStyle =
    string.gsub(self.activeTabStyle, "(background%-color:.-).-(;)", "%1 " .. rgba .. "%2")
  self:adjustTabStyle()
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>setInactiveTabFGColor</name>
								<packageName></packageName>
								<script>-- Sets the FG color for the inactive tab
-- @param color Color string suitable for decho or hecho, or color name eg "purple", or table of colors {r,g,b}

function Adjustable.TabWindow:setInactiveTabFGColor(color)
  local found
  local add_css
  self.inactiveTabFGColor = color
  local r, g, b = Geyser.Color.parse(color)
  local rgb = string.format("rgb(%s, %s, %s)", r, g, b)
  self.inactiveTabStyle, found =
    string.gsub(" " .. self.inactiveTabStyle, "(%scolor:).-(;)", "%1" .. rgb .. "%2")
  if found == 0 then
    if string.match(self.inactiveTabStyle, "QLabel{") then
      add_css = "\nQLabel{color:" .. rgb .. ";}"
    elseif string.match(self.inactiveTabStyle, "QLabel::!hover{") then
      add_css = ""
      self.inactiveTabStyle =
        string.gsub(
          self.inactiveTabStyle, "(QLabel::!.-)(})", "%1" .. "color:" .. rgb .. ";" .. "%2"
        )
    else
      add_css = "\ncolor:" .. rgb .. ";"
    end
    self.inactiveTabStyle = self.inactiveTabStyle .. add_css
  end
  self:adjustTabStyle()
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>setInactiveTabBGColor</name>
								<packageName></packageName>
								<script>--- Sets the BG color for the inactive tab.
-- &lt;br&gt;NOTE: If you set CSS for the inactive tab, it will override this setting.
-- @param color Color string suitable for decho or hecho, or color name eg "purple", or table of colors {r,g,b}

function Adjustable.TabWindow:setInactiveTabBGColor(color)
  self.inactiveTabBGColor = color
  local r, g, b = Geyser.Color.parse(color)
  local rgba = string.format("rgba(%s, %s, %s, %s)", r, g, b, "100%%")
  self.inactiveTabStyle =
    string.gsub(self.inactiveTabStyle, "(background%-color:.-).-(;)", "%1 " .. rgba .. "%2")
  self:adjustTabStyle()
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>adjustTabStyle</name>
								<packageName></packageName>
								<script>function Adjustable.TabWindow:adjustTabStyle()
  local abg_rgb = string.match(self.activeTabBGColor, "%d+.-%d+.-%d+")
  local ibg_rgb = string.match(self.inactiveTabBGColor, "%d+.-%d+.-%d+")
  for k, v in ipairs(self.tabs) do
    if v == self.current then
      self[v].adjLabelstyle = self.activeTabStyle
      self[v].adjLabel:setStyleSheet(self.activeTabStyle)
      if abg_rgb then
        self[v].adjLabel:setColor("&lt;" .. abg_rgb .. "&gt;")
      else
        self[v].adjLabel:setColor(self.activeTabBGColor)
      end
    else
      self[v].adjLabelstyle = self.inactiveTabStyle
      self[v].adjLabel:setStyleSheet(self.inactiveTabStyle)
      if ibg_rgb then
        self[v].adjLabel:setColor("&lt;" .. ibg_rgb .. "&gt;")
      else
        self[v].adjLabel:setColor(self.inactiveTabBGColor)
      end
    end
  end
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>setTabFont</name>
								<packageName></packageName>
								<script>--- sets the font for all tabs
--- @tparam string font the font to use.

function Adjustable.TabWindow:setTabFont(font)
  self.tabFont = font
  for k, v in ipairs(self.tabs) do
    self[v].adjLabel:setFont(font)
  end
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>setSingleTabFont</name>
								<packageName></packageName>
								<script>--- sets the font for a single tab. If you use setTabFont this will be overridden
--- @tparam string tabName the tab to change the font of
--- @tparam string font the font to use for that tab

function Adjustable.TabWindow:setSingleTabFont(tabName, font)
  local funcName = "EMCO:setSingleTabFont(tabName, font)"
  if not table.contains(self.tabs, tabName) then
    error("tabName must be an existing tab")
  end
  self[tabName].adjLabel:setFont(font)
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>findPosition</name>
								<packageName></packageName>
								<script>-- finds the right position to drop the tab into

function Adjustable.TabWindow:findPosition(tab)
  local myWindow = Adjustable.TabWindow.currentWindow or self
  local x, w = myWindow.get_x(), myWindow.get_width()
  local total = w / #myWindow.tabs
  local tab_x = tab.get_x() - x
  local position = (tab_x / total) + 1
  position = math.floor(position + 0.5)
  if position &lt; 1 then
    position = 1
  end
  if position &gt; #myWindow.tabs then
    position = #myWindow.tabs + 1
  end
  return position
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>checkCollision</name>
								<packageName></packageName>
								<script>-- checks if 2 elements collide

function checkCollision(x1, y1, w1, h1, x2, y2, w2, h2)
  if x1 &lt; x2 + w2 and x2 &lt; x1 + w1 and y1 &lt; y2 + h2 and y2 &lt; y1 + h1 then
    return true
  end
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>getFloatingWindows</name>
								<packageName></packageName>
								<script>function getFloatingWindows()
  local floatingWindows = {}
  for k, v in pairs(Adjustable.TabWindow.allTabs) do
    if v[k].floating then
      floatingWindows[k] = v[k]
    end
  end
  return floatingWindows
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>checkMultiCollision</name>
								<packageName></packageName>
								<script>-- checks if your tab collides with one of the tabwindows

function Adjustable.TabWindow:checkMultiCollision(tab)
  local floatingWindows = getFloatingWindows()
  local x1, y1, w1, h1 = tab:get_x(), tab:get_y(), tab:get_width(), tab:get_height()
  for k, v in pairs(floatingWindows) do
    local x2, y2, w2, h2 = v:get_x(), v:get_y(), v:get_width(), v:get_height()
    if
      checkCollision(x1, y1, w1, h1, x2, y2, w2, h2) and
      v.windowname == self.windowname and
      not (v.hidden or v.auto_hidden) and
      not (v == tab) and
      not v.locked
    then
      return "floating", v
    end
  end
  for k, v in pairs(Adjustable.TabWindow.all) do
    local x2, y2, w2, h2 = v:get_x(), v:get_y(), v:get_width(), v:get_height()
    if
      checkCollision(x1, y1, w1, h1, x2, y2, w2, h2) and
      v.windowname == self.windowname and
      not (v.hidden or v.auto_hidden)
    then
      return "TabWindow", v
    end
  end
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>onMove</name>
								<packageName></packageName>
								<script>-- onMove function
-- contains all the functionality to move the tab (collision check, make space ...)

function Adjustable.TabWindow:onMove(tab, event)
  self[tab]:onMove(self[tab].adjLabel, event)
  self[tab].adjLabel:setAlignment("c")
  if self[tab].floating or not Adjustable.TabWindow.clicked then
    return
  end
  local result, value = self:checkMultiCollision(self[tab])
  if
    Adjustable.TabWindow.currentWindow and
    Adjustable.TabWindow.currentWindow ~= value and
    not Adjustable.TabWindow.currentWindow.floating
  then
    -- reset the tab space
    self:makeSpace(Adjustable.TabWindow.currentWindow, nil, true)
  end
  if result == "TabWindow" then
    Adjustable.TabWindow.currentWindow = value
    tab_pos = value:findPosition(self[tab])
    self:makeSpace(value, tab_pos)
    return
  end
  if result == "floating" and not (value.locked) then
    Adjustable.TabWindow.currentWindow = value
    return
  end
  if Adjustable.TabWindow.currentWindow then
    Adjustable.TabWindow.currentWindow = nil
  end
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>createTempWindow</name>
								<packageName></packageName>
								<script>--- Transforms a floating Tab into a temporary TabWindow
-- @tparam tab the tab which will be transformed

function Adjustable.TabWindow:createTempWindow(tab, tempName)
  if tab and not (tab.floating) then
    return
  end
  local rnd_nr = 0
  for i = 0, #Adjustable.TabWindow.all_windows do
    if not Adjustable.TabWindow.all["tempTabWindow" .. i] then
      rnd_nr = i
      break
    end
  end
  local window =
    tab and
    tab.windowname ~= "main" and
    Geyser.windowList[tab.windowname .. "Container"].windowList[tab.windowname] or
    Geyser
  local tempWindowName =
    tempName and "tempWindow" .. string.match(tempName, "%d+") or "tempWindow" .. rnd_nr
  local tempTabWindowName = tempName or "tempTabWindow" .. rnd_nr
  local x, y, width, height = 0, 0, 100, 100
  if tab then
    x, y, width, height = tab:get_x(), tab:get_y(), tab:get_width(), tab:get_height()
  end
  local tempWindowConf =
    {
      name = tempWindowName,
      titleText = "",
      x = x,
      y = y,
      width = width,
      height = height,
      autoSave = false,
      autoLoad = false,
    }
  tempWindowConf = table.union(tempWindowConf, self.tempWindowConf)
  local windowCont = Adjustable.Container:new(tempWindowConf)
  windowCont:move(x, y)
  windowCont:resize(width, height)
  table.remove(
    Adjustable.Container.all_windows,
    table.index_of(Adjustable.Container.all_windows, windowCont.name)
  )
  Adjustable.Container.all[windowCont.name] = nil
  local tabWindow =
    Adjustable.TabWindow:new(
      {
        name = tempTabWindowName,
        x = 0,
        y = 0,
        width = "100%",
        height = "100%",
        tabTxtColor = self.tabTxtColor,
        tabPadding = self.tabPadding,
        activeTabFGColor = self.activeTabFGColor,
        inactiveTabFGColor = self.inactiveTabFGColor,
        activeTabBGColor = self.activeTabBGColor,
        inactiveTabBGColor = self.inactiveTabBGColor,
        tabBarColor = self.tabBarColor,
        tabBarStyle = self.tabBarStyle,
        color1 = self.color1,
        color2 = self.color2,
        tabBarHeight = self.tabBarHeight,
        footerStyle = self.footerStyle,
        centerStyle = self.centerStyle,
        inactiveTabStyle = self.inactiveTabStyle,
        activeTabStyle = self.activeTabStyle,
        chosenTabStyle = self.chosenTabStyle,
        overlayStyle = self.overlayStyle,
        gap = self.gap,
        temporary = true,
      },
      windowCont
    )
  --save name to get the style on loading
  tabWindow.tempStyle = self.tempStyle or self.name
  if tab then
    self:restoreTab(tab.tabname, tabWindow)
    tab.tempWindow = windowCont
    tab.tempTabWindow = tabWindow
    tab.tempWindow:changeContainer(window)
    tab.tempWindow:setPercent(true, true)
  end
  windowCont:show()
  windowCont.tabWindow = tabWindow
  return windowCont
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>onOverlayMove</name>
								<packageName></packageName>
								<script>-- mouse movement on the overlay label

function Adjustable.TabWindow:onOverlayMove(event)
  Adjustable.TabWindow.currentWindow = self
  local tab = Adjustable.TabWindow.clickedTab.name
  if Adjustable.TabWindow.clickedTab ~= self.header.windowList[tab] then
    -- need to feed values to findPosition
    local fakeTab = {}
    fakeTab.get_x =
      function()
        return event.x + self.header.get_x()
      end
    tab_pos = self:findPosition(fakeTab)
    self:makeSpace(self, tab_pos)
  end
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>onOverlayLeave</name>
								<packageName></packageName>
								<script>-- reset tabspace after mouse leaves overlay label and resets the currentWindow

function Adjustable.TabWindow:onOverlayLeave(event)
  Adjustable.TabWindow.currentWindow = nil
  if not (Adjustable.TabWindow.doubleClick) then
    return
  end
  local tab = Adjustable.TabWindow.clickedTab.name
  if Adjustable.TabWindow.clickedTab ~= self.header.windowList[tab] then
    self:makeSpace(nil, nil, true)
  end
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>resetOverlay</name>
								<packageName></packageName>
								<script>-- reset the Overlay label to be hidden

function resetOverlay()
  local tab = Adjustable.TabWindow.clickedTab
  if Adjustable.TabWindow.overlayTimer then
    killTimer(Adjustable.TabWindow.overlayTimer)
    Adjustable.TabWindow.overlayTimer = nil
  end
  for k, v in pairs(Adjustable.TabWindow.all) do
    v.overlay:setStyleSheet("background-color: rgba(0,0,0,0%);")
    v.overlay:hide()
  end
  if Adjustable.TabWindow.currentWindow then
    Adjustable.TabWindow.currentWindow:makeSpace(nil, nil, true)
  end
  Adjustable.TabWindow.doubleClick = nil
  tab_pos = nil
  -- reset Style if overlay is resetet without action
  if tab then
    tab.adjLabel:setStyleSheet(tab.adjLabelstyle)
  end
  if Adjustable.TabWindow.MouseEventID then
    killAnonymousEventHandler(Adjustable.TabWindow.MouseEventID)
    Adjustable.TabWindow.MouseEventID = nil
  end
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>onOverlayClick</name>
								<packageName></packageName>
								<script>-- handles on overlay click event

function Adjustable.TabWindow:onOverlayClick(event)
  Adjustable.TabWindow.doubleClick = nil
  local tab = Adjustable.TabWindow.clickedTab
  local container = Adjustable.TabWindow.allTabs[tab.tabname] or self
  tab.adjLabel:setStyleSheet(container.activeTabStyle)
  if container[tab.tabname].floating then
    container:restoreTab(tab.tabname, self)
    self:addTab(tab.tabname, tab_pos)
  else
    container:onRelease(tab.tabname, event)
  end
  resetOverlay()
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>activateTab</name>
								<packageName></packageName>
								<script>-- activates the tab tab (doesn't deactivate the previous tab)
-- @see Adjustable.TabWindow:deactivateTab()

function Adjustable.TabWindow:activateTab(tab)
  self:deactivateTab()
  tab = self[tab] and tab or self.tabs[1]
  self.current = tab
  if self.current then
    self[tab].adjLabelstyle = self.activeTabStyle
    self[tab].adjLabel:setStyleSheet(self.activeTabStyle)
    self[self.current .. "center"]:show()
  end
  self:raiseAll()
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>onMinimizeClick</name>
								<packageName></packageName>
								<script>-- if clicked on the minimize label the tab will be
-- restored to be in a tabwindow again

function Adjustable.TabWindow:onMinimizeClick(tab)
  local result, value = self:checkMultiCollision(self[tab])
  if result == "floating" then
    value = nil
  end
  self:restoreTab(tab, value)
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>deactivateTab</name>
								<packageName></packageName>
								<script>-- deactivates and hides the current active tab

function Adjustable.TabWindow:deactivateTab()
  if self.current and self[self.current] then
    self[self.current].adjLabelstyle = self.inactiveTabStyle
    self[self.current].adjLabel:setStyleSheet(self.inactiveTabStyle)
    self[self.current .. "center"]:hide()
  end
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>onClick</name>
								<packageName></packageName>
								<script>-- handles click event on tab

function Adjustable.TabWindow:onClick(tab, event)
  if Adjustable.TabWindow.doubleClick then
    return
  end
  Adjustable.TabWindow.currentWindow = self
  Adjustable.TabWindow.clicked = true
  Adjustable.TabWindow.clickedTab = self[tab]
  if event.button == "LeftButton" and not self[tab].floating then
    self[tab]:resize(self[tab].get_width(), self[tab].get_height())
    self[tab].container = Geyser
    -- set minimized to true to prevent resizing
    self[tab].minimized = true
    self[tab]:unlockContainer()
    self[tab]:onClick(self[tab].adjLabel, event)
    self[tab].exitLabel:hide()
    self[tab].minimizeLabel:hide()
    Adjustable.TabWindow.clicked = true
    Adjustable.TabWindow.clickedTab = self[tab]
    self[tab].adjLabel:echo(self[tab].tabText, nil, "c")
  end
  if self[tab].floating then
    self[tab]:onClick(self[tab].adjLabel, event)
  end
  if not self[tab].floating then
    self:activateTab(tab)
    self[tab].adjLabel:raise(false)
  end
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>onDoubleClick</name>
								<packageName></packageName>
								<script>-- handles double click event on getAreaTable
-- activates the tab overlay

function Adjustable.TabWindow:onDoubleClick(tab, event)
  Adjustable.TabWindow.currentWindow = self
  Adjustable.TabWindow.doubleClick = true
  Adjustable.TabWindow.clickedTab = self[tab]
  self[tab].adjLabel:setStyleSheet(self.chosenTabStyle)
  for k, v in pairs(Adjustable.TabWindow.all) do
    v.overlay:show()
    v.overlay:raise()
    v.overlay:setStyleSheet(v.overlayStyle)
  end
  Adjustable.TabWindow.overlayTimer =
    Adjustable.TabWindow.overlayTimer or
    tempTimer(
      10,
      function()
        resetOverlay()
      end
    )
  Adjustable.TabWindow.MouseEventID =
    Adjustable.TabWindow.MouseEventID or
    registerAnonymousEventHandler(
      "sysWindowMousePressEvent", "Adjustable.TabWindow.onMouseClick", true
    )
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>onMouseClick</name>
								<packageName></packageName>
								<script>-- handles the mouseclick event
-- used for sending windows to the main or userwindow after using doubleclick on a tab

function Adjustable.TabWindow.onMouseClick(event, button, x, y, windowname)
  local newContainer = Geyser
  if windowname ~= "main" then
    newContainer = Geyser.windowList[windowname .. "Container"].windowList[windowname]
  end
  local tab = Adjustable.TabWindow.clickedTab
  local container = Adjustable.TabWindow.allTabs[tab.tabname]
  container:transformTabContainer(tab.tabname)
  local width, height =
    math.min(newContainer.get_width(), tab:get_width()),
    math.min(newContainer.get_height(), tab:get_height())
  tab:changeContainer(newContainer)
  tab:raiseAll()
  local x = math.min(newContainer.get_width() - width, math.max(0, x - width / 2))
  local y = math.min(newContainer.get_height() - height, math.max(0, y))
  tab:move(x, y)
  tab:resize(width, height)
  tab:setPercent(true, true)
  killAnonymousEventHandler(Adjustable.TabWindow.MouseEventID)
  Adjustable.TabWindow.MouseEventID = nil
  resetOverlay()
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>transformTabContainer</name>
								<packageName></packageName>
								<script>-- transforms the tab to a window

function Adjustable.TabWindow:transformTabContainer(tab)
  local myWindow = Adjustable.TabWindow.allTabs[tab] or self
  local container = self[tab]
  if container.windowname == "main" then
    Geyser:add(container)
  else
    Geyser.windowList[container.windowname .. "Container"].windowList[container.windowname]:add(
      container
    )
  end
  container:unlockContainer()
  container:resize(self.get_width(), self.get_height())
  container:add(self[tab .. "center"])
  myWindow:removeTab(tab)
  myWindow:createTabs()
  container:setPadding(self.tabPadding)
  container:show()
  container:raiseAll()
  myWindow[tab].floating = true
  container.raiseOnClick = true
  container.adjLabel:echo(self[tab].tabText, nil, "c")
  container.adjLabel:resetToolTip()
  container.minimized = false
  container:setPercent(true, true)
  myWindow:activateTab(tab)
  if #myWindow.tabs &gt; 0 then
    myWindow:activateTab(myWindow.tabs[1])
  else
    myWindow.current = nil
  end
  local found
  container.adjLabelstyle, found =
    string.gsub(self.activeTabStyle, "(qproperty%-alignment%:.-).-(;)", "%1 'AlignTop' %2")
  if found == 0 then
    container.adjLabelstyle = container.adjLabelstyle .. "\nqproperty-alignment: 'AlignTop' ;\n"
  end
  container.adjLabel:setStyleSheet(container.adjLabelstyle)
  self[tab .. "center"]:show()
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>restoreTab</name>
								<packageName></packageName>
								<script>--restores the window to be a tab again

function Adjustable.TabWindow:restoreTab(tab, myWindow)
  myWindow = myWindow or self
  local container = self[tab]
  container.container:remove(container)
  container:remove(self[tab .. "center"])
  container:setPadding(0)
  container:lockContainer()
  container:detach()
  container:disconnect()
  container.adjLabel:echo(self[tab].tabText, nil, "c")
  self:changeTabContainer(tab, myWindow)
  self[tab].floating = false
  container.raiseOnClick = false
  tempTimer(
    0,
    function()
      myWindow:activateTab(tab)
    end
  )
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>makeSpace</name>
								<packageName></packageName>
								<script>-- function to make a gap where the tab can be dropped in

function Adjustable.TabWindow:makeSpace(myWindow, position, resetSpace)
  myWindow = myWindow or self
  position = position or #myWindow.header.windows
  if position &lt; 1 then
    position = 1
  end
  local current_Tab = Adjustable.TabWindow.clickedTab or {}
  local total_count = #myWindow.header.windows + 1
  -- close the space if resetSpace is true
  if resetSpace then
    position = -1
    total_count = total_count - 1
  end
  if myWindow == self and current_Tab.name and not (Adjustable.TabWindow.doubleClick) then
    total_count = total_count - 1
  end
  local new_width = myWindow.get_width() / total_count
  local new_x = 0
  local counter = 1
  for k, v in ipairs(myWindow.header.windows) do
    if v ~= current_Tab.name then
      if counter == position then
        new_x = new_x + new_width
      end
      myWindow.header.windowList[v]:resize(new_width)
      myWindow.header.windowList[v]:move(new_x)
      new_x = new_x + new_width
      counter = counter + 1
    end
  end
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>onRelease</name>
								<packageName></packageName>
								<script>-- handles the release event

function Adjustable.TabWindow:onRelease(tab, event, position)
  if Adjustable.TabWindow.doubleClick then
    return
  end
  local myWindow = Adjustable.TabWindow.currentWindow or self
  local floating = self[tab].floating
  if
    event.button == "LeftButton" and
    Adjustable.TabWindow.currentWindow and
    myWindow.type == "adjustabletabwindow" and
    not floating
  then
    self[tab]:lockContainer()
    self[tab].container = self.header
    self[tab]:onRelease(self[tab].adjLabel, event)
    self[tab].adjLabel:echo(self[tab].tabText, nil, "c")
    tab_pos = tab_pos or myWindow:findPosition(self[tab])
    if myWindow ~= self then
      self:changeTabContainer(tab, myWindow)
    end
    myWindow:addTab(tab, tab_pos)
    myWindow:raiseAll()
  end
  if event.button == "LeftButton" and myWindow.type == "adjustablecontainer" then
    local tabname = myWindow.tabname
    local tabwindow = Adjustable.TabWindow.allTabs[tabname]
    local mytab = tabwindow[tabname]
    local tempWindow = tabwindow:createTempWindow(mytab)
    self:changeTabContainer(tab, tempWindow.tabWindow)
    tempTimer(
      0,
      function()
        tempWindow.tabWindow:activateTab(tab)
      end
    )
    tempWindow:raiseAll()
    self[tab]:onRelease(self[tab].adjLabel, event)
    Adjustable.TabWindow.currentWindow = tempWindow.tabWindow
  end
  if event.button == "LeftButton" and not (Adjustable.TabWindow.currentWindow) and not floating then
    self:transformTabContainer(tab)
    self[tab]:onRelease(self[tab].adjLabel, event)
  end
  if floating then
    self[tab]:onRelease(self[tab].adjLabel, event)
  end
  Adjustable.TabWindow.clicked = false
  Adjustable.TabWindow.currentWindow = nil
  if not (Adjustable.TabWindow.doubleClick) then
    Adjustable.TabWindow.clickedTab = nil
  end
  tab_pos = nil
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>changeTabContainer</name>
								<packageName></packageName>
								<script>-- function to change the parent window of the tab

function Adjustable.TabWindow:changeTabContainer(tab, myWindow, position)
  if self ~= myWindow or self[tab].floating then
    myWindow[tab] = self[tab]
    myWindow[tab .. "center"] = self[tab .. "center"]
    self[tab].container = not (self[tab].floating) and self.header or Geyser
    self[tab .. "center"]:changeContainer(myWindow.footer)
    self[tab]:changeContainer(myWindow.header)
    if not (self[tab].floating) then
      self:removeTab(tab)
      self:createTabs()
    end
    myWindow:createTabs()
    myWindow[tab]:show()
    if not (myWindow.hidden or myWindow.auto_hidden) then
      myWindow:show()
    end
  end
  myWindow:addTab(tab, position)
  if self.current then
    self[self.current]:show()
  end
  if #self.tabs &gt; 0 then
    if not (self[tab].floating) then
      self:activateTab(self.tabs[1])
    end
  else
    self.current = nil
  end
  myWindow:activateTab(tab)
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>setTabText</name>
								<packageName></packageName>
								<script>-- change the text a tab displays

function Adjustable.TabWindow:setTabText(which, text)
  assert(
    type(which) == "string" or type(which) == "number",
    "setTabText: bad argument #1 type (tab name/position as string or number expected, got " ..
    type(which) ..
    "!)"
  )
  assert(
    type(text) == "string",
    "setTabText: bad argument #2 type (tab text as string expected, got " .. type(text) .. "!)"
  )
  if not (type(which) == "number" and which &lt;= #self.tabs) then
    which = table.index_of(self.tabs, which)
  end
  if which then
    self[self.tabs[which]].tabText = text
    self[self.tabs[which]]:setTitle(text)
    self[self.tabs[which]].adjLabel:echo(text, nil, "c")
    setTabToolTip(self[self.tabs[which]])
    return true
  end
  return nil, "setTabText: Couldn't find tab to set a new text"
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>removeTab</name>
								<packageName></packageName>
								<script>-- removes a tab (this won't be saved)

function Adjustable.TabWindow:removeTab(which)
  assert(
    type(which) == "string" or type(which) == "number",
    "removeTab: bad argument #1 type (tab name/position as string or number expected, got " ..
    type(which) ..
    "!)"
  )
  local index
  if type(which) == "number" and which &lt;= #self.tabs then
    index = which
  else
    index = table.index_of(self.tabs, which)
  end
  if index then
    local tabname = self.tabs[index]
    self[tabname]:hide()
    self.header:remove(self[tabname])
    self.header:organize()
    table.remove(self.tabs, index)
    self:activateTab(self.tabs[1])
    if self.temporary then
      -- destroy empty tempTabWindow
      if table.is_empty(self.tabs) then
        self[tabname].tempWindow:changeContainer("main")
        Adjustable.TabWindow.all[self.name] = nil
        table.remove(
          Adjustable.TabWindow.all_windows, table.index_of(Adjustable.TabWindow.all_windows, self)
        )
        self[tabname].tempWindow:detach()
        self[tabname].tempWindow:disconnect()
        self[tabname].tempWindow:hide()
        -- delete all references to this tab to avoid it being sent to nirwana if restored
        for k, v in pairs(Adjustable.TabWindow.allTabs) do
          if v.name == self.name then
            local styleOrigin = Adjustable.TabWindow.all[self.tempStyle]
            Adjustable.TabWindow.allTabs[k] = styleOrigin
            styleOrigin[k] = styleOrigin[k] or self[k]
            styleOrigin[k .. "center"] = styleOrigin[k .. "center"] or self[k .. "center"]
            styleOrigin[k].minimizeLabel:setClickCallback(
              function()
                styleOrigin[k]:onMinimizeClick(k)
              end
            )
            styleOrigin[k].minLabel:setClickCallback(
              function()
                styleOrigin[k]:onMinimizeClick(k)
              end
            )
          end
        end
      end
      self[tabname].tempWindow = nil
      self[tabname].tempTabWindow = nil
    end
    return true
  end
  return nil, "removeTab: Couldn't find tab to remove"
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>addTab</name>
								<packageName></packageName>
								<script>-- adds a tab (this won't be saved)

function Adjustable.TabWindow:addTab(name, pos)
  assert(
    type(name) == "string",
    "addTab: bad argument #1 type (tab name as string expected, got " .. type(name) .. "!)"
  )
  pos = pos or #self.tabs
  pos = pos &gt; #self.tabs and #self.tabs or pos
  assert(
    type(pos) == "number",
    "addTab: bad argument #2 type (tab position as number expected, got " .. type(pos) .. "!)"
  )
  --check if tabName exists already
  local index = table.index_of(self.tabs, name)
  -- check if postion is valid
  if pos &lt; 1 and #self.tabs ~= 0 then
    return nil, "addTab: not a valid position"
  end
  pos =
    index and
    pos &gt; #self.tabs and
    #self.tabs or
    not (index) and
    pos == #self.tabs and
    pos +
    1 or
    pos
  -- if tab exists and is at the same position already, do nothing
  if index == pos then
    self.header:organize()
    return true
  end
  -- if tab exists and position is different, then change the position
  if index then
    table.remove(self.tabs, index)
    table.remove(self.header.windows, index)
  end
  table.insert(self.tabs, pos, name)
  -- if tab is new create a new Label
  if not index then
    self:createTabs()
  end
  --If the container isn't the right one change it (useful if removed in one adj tabwindow and added to another)
  self[name .. "center"]:changeContainer(self.footer)
  self[name]:changeContainer(self.header)
  local headername = self[name].name
  -- if name is already in windows delete it to put it into the right position
  local headerIndex = table.index_of(self.header.windows, headername)
  if headerIndex then
    table.remove(self.header.windows, headerIndex)
  end
  table.insert(self.header.windows, pos, headername)
  self.header.windowList[headername] = self[name]
  self[name]:show()
  self.header:organize()
  self:activateTab(name)
  if self.temporary then
    self[name].tempWindow = self.container.container
    self[name].tempTabWindow = self
  end
  -- put ToolTip on Label if TabText is to long to display
  setTabToolTip(self[name])
  return true
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>addToTabWindow</name>
								<packageName></packageName>
								<script>function Adjustable.TabWindow:addToTabWindow(container)
  local name = container.name
  self:addTab(name)
  container:detach()
  container:disconnect()
  container:changeContainer(self[name .. "center"])
  container:resize("100%", "100%")
  container:move(0, 0)
  self[name].tabified = true
  if container.type == "adjustablecontainer" then
    container:lockContainer("full")
    if container.autoSave then
      container:disableAutoSave()
    end
    local titleText = string.gsub(container.titleText, "&amp;nbsp;", "")
    self:setTabText(name, titleText)
    self:createTabs()
  end
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>tabify windows</name>
								<packageName></packageName>
								<script>--transforms adjcontainer to a floating tab

function Adjustable.TabWindow:tabify(container)
  local x, y, width, height =
    container:get_x(), container:get_y(), container:get_width(), container:get_height()
  local parent = container.container
  self:addToTabWindow(container)
  self:transformTabContainer(container.name)
  self[container.name]:move(x, y)
  self[container.name]:resize(width, height)
  self[container.name]:changeContainer(parent)
  self:createTempWindow(self[container.name])
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>addTabifyMenu</name>
								<packageName></packageName>
								<script>function Adjustable.TabWindow:addTabifyMenu(adjcontainer)
  if adjcontainer.type ~= "adjustablecontainer" then
    return "not an adjustable container"
  end
  adjcontainer:newCustomItem(
    "Tabify",
    function()
      self:tabify(adjcontainer)
    end
  )
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>save window</name>
								<packageName></packageName>
								<script>--- saves your container settings
-- like tab position and some other variables in your Mudlet Profile Dir/ Adjustable.TabWindow
-- to be reliable it is important that every Adjustable.TabWindow has an unique 'name'
-- @see Adjustable.TabWindow:load

function Adjustable.TabWindow:save(slot, dir)
  if type(self) ~= "table" then
    dir = slot
    slot = self
  end
  assert(
    slot == nil or type(slot) == "string" or type(slot) == "number",
    "Adjustable.TabWindow.save: bad argument #1 type (slot as string or number expected, got " ..
    type(slot) ..
    "!)"
  )
  assert(
    dir == nil or type(dir) == "string",
    "Adjustable.TabWindow.save: bad argument #2 type (directory as string expected, got " ..
    type(dir) ..
    "!)"
  )
  dir = dir or self.defaultDir
  slot = slot or ""
  local saveDir = string.format("%s%s%s.lua", dir, "TabWindowTabs", slot)
  local mytable = {}
  -- save fixed tabs
  for k, v in pairs(Adjustable.TabWindow.all) do
    mytable[k] = {}
    mytable[k].tabs = v.tabs
    mytable[k].current = v.current
    mytable[k].temporary = v.temporary
  end
  -- save floating tabs, tempTabWindows and tabified containers
  for k, v in pairs(Adjustable.TabWindow.allTabs) do
    --floating tabs
    if v[k].floating then
      -- save the tabs adjustable container settings
      v[k]:save(slot, dir)
      -- get all floating tabs and their windownames
      mytable[v.name].floatingTabs = mytable[v.name].floatingTabs or {}
      mytable[v.name].floatingTabs[k] = "main"
      if v[k].windowname ~= "main" then
        mytable[v.name].floatingTabs[k] = v[k].windowname
      end
    end
    --tempTabWindows
    if v[k].tempWindow then
      --save tempWindow adjustable container settings
      v[k].tempWindow:save(slot, dir)
      mytable[v.name].windowname = v[k].tempWindow.windowname
      --save window where tempStyle came from
      mytable[v.name].tempStyle = v[k].tempTabWindow.tempStyle
    end
    --tabified containers
    if v[k].tabified then
      mytable.tabifiedContainers = mytable.tabifiedContainers or {}
      mytable.tabifiedContainers[#mytable.tabifiedContainers + 1] = k
    end
  end
  if not (io.exists(dir)) then
    lfs.mkdir(dir)
  end
  table.save(saveDir, mytable)
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>load window</name>
								<packageName></packageName>
								<script>--- restores/loads the before saved settings
-- it is very important to load after all TabWindows are created
-- @see Adjustable.TabWindow:save

function Adjustable.TabWindow:load(slot, dir)
  if type(self) ~= "table" then
    dir = slot
    slot = self
  end
  assert(
    slot == nil or type(slot) == "string" or type(slot) == "number",
    "Adjustable.TabWindow.load: bad argument #1 type (slot as string or number expected, got " ..
    type(slot) ..
    "!)"
  )
  assert(
    dir == nil or type(dir) == "string",
    "Adjustable.TabWindow.load: bad argument #2 type (directory as string expected, got " ..
    type(dir) ..
    "!)"
  )
  dir = dir or self.defaultDir
  local slot = slot or ""
  local loadDir = string.format("%s%s%s.lua", dir, "TabWindowTabs", slot)
  local mytable = {}
  if io.exists(loadDir) then
    table.load(loadDir, mytable)
  else
    return "No saved settings found at: " .. loadDir
  end
  -- find the tabified container by name

  local function findWindow(cont, name)
    cont = cont or Geyser
    for k, v in pairs(cont.windowList) do
      if name == v.name then
        return v
      end
      if findWindow(v, name) then
        return findWindow(v, name)
      end
    end
  end

  -- create Tabified Windows
  if mytable.tabifiedContainers then
    for k, v in ipairs(mytable.tabifiedContainers) do
      local container = findWindow(nil, v)
      if not (Adjustable.TabWindow.allTabs[v]) then
        Adjustable.TabWindow.all[Adjustable.TabWindow.all_windows[1]]:addToTabWindow(container)
      end
    end
    mytable.tabifiedContainers = nil
  end
  -- create TempWindows and TempTabWindows
  for k, v in pairs(mytable) do
    if v.temporary then
      if not Adjustable.TabWindow.all[k] then
        local tempStyleWindow = Adjustable.TabWindow.all[v.tempStyle]
        tempStyleWindow:createTempWindow(nil, k)
      end
      Adjustable.TabWindow.all[k].container.container:load(slot, dir)
      if v.windowname ~= "main" then
        Adjustable.TabWindow.all[k].container.container:changeContainer(
          Geyser.windowList[v.windowname .. "Container"].windowList[v.windowname]
        )
      end
    end
  end
  for k, v in pairs(mytable) do
    -- load fixed Tabs
    local myWindow = Adjustable.TabWindow.all[k]
    for k1, v1 in ipairs(v.tabs) do
      local myTabWindow = Adjustable.TabWindow.allTabs[v1]
      if myTabWindow then
        local myTab = myTabWindow[v1]
        if myTab.floating then
          myTabWindow:restoreTab(v1)
        end
        if not myWindow.header.windowList[v1] then
          myTabWindow:changeTabContainer(v1, myWindow)
        end
        myWindow:addTab(v1, k1)
      end
    end
    if myWindow then
      myWindow:deactivateTab()
      myWindow.current = v.current
      tempTimer(
        0,
        function()
          myWindow:activateTab(v.current)
        end
      )
      myWindow:raiseAll()
    end
    -- load floating Tabs
    if v.floatingTabs then
      for k1, v1 in pairs(v.floatingTabs) do
        local myTabWindow = Adjustable.TabWindow.allTabs[k1]
        local styleTabWindow = Adjustable.TabWindow.all[k]
        if myTabWindow and styleTabWindow then
          local myTab = myTabWindow[k1]
          if myTabWindow ~= styleTabWindow then
            myTabWindow:changeTabContainer(k1, styleTabWindow)
            myTabWindow = styleTabWindow
          end
          myTabWindow:transformTabContainer(k1)
          -- send my Tab to a UserWindow if saved there
          if v1 ~= "main" then
            myTab:changeContainer(Geyser.windowList[v1 .. "Container"].windowList[v1])
          end
          -- load Adjustable Container settings
          myTab:load(slot, dir)
        end
      end
    end
  end
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>EMCO</name>
								<packageName></packageName>
								<script>-- EMCO by demonnic https://github.com/demonnic/EMCO

function Adjustable.TabWindow:transferEMCO(emco)
  local EMCO = EMCO or require("MDK-1.EMCO")
  emco:hide()
  local emco_tabs = emco.tabs
  local emco_tabwindows = emco.consoles
  local emco_windows = emco.mc
  -- xEcho override
  local myXEcho =
    function(s, tabName, message, xtype, excludeAll)
      s.currentTab = self.current
      if s.blink and tabName ~= s.currentTab then
        if not (s.allTabName == s.currentTab and not s.blinkFromAll) then
          s.tabsToBlink[tabName] = true
        end
      end
      EMCO.xEcho(s, tabName, message, xtype, excludeAll)
    end
  -- Flash override
  local myFlash =
    function(s)
      Geyser.Container.flash(s)
      raiseWindow(s.name .. "_dimensions_flash")
    end
  -- doBlink override
  local myDoBlink =
    function(s)
      s.currentTab = self.current
      if s.blink then
        if
          s.allTab and
          not s.blinkFromAll and
          (s.currentTab == s.allTabName or self[s.allTabName .. "center"].hidden == false)
        then
          s.tabsToBlink = {}
        elseif s.tabsToBlink[s.currentTab] then
          s.tabsToBlink[s.currentTab] = nil
        end
      end
      for tab, _ in pairs(s.tabsToBlink) do
        if not self[tab].floating and self[tab .. "center"].hidden then
          s.tabs[tab]:flash()
        else
          s.tabsToBlink[tab] = nil
        end
      end
    end
  -- Function for transferring tab and console
  local function transferTab(tabwindow)
    emco_windows[tabwindow]:show()
    emco_windows[tabwindow]:changeContainer(self[tabwindow .. "center"])
    emco_tabs[tabwindow]:changeContainer(self[tabwindow])
    emco_tabs[tabwindow]:move(0, 0)
    emco_tabs[tabwindow]:resize("100%", "100%")
    emco_tabs[tabwindow]:hide()
    emco_tabs[tabwindow].flash = myFlash
    if emco_tabs[tabwindow].font then
      self[tabwindow].adjLabel:setFont(emco_tabs[tabwindow].font)
    end
    -- Explicitly set background color to black for tabs
    emco_tabs[tabwindow]:setStyleSheet("background-color: black;")
  end

  -- addTab override
  local myAddTab =
    function(s, tabName, position)
      EMCO.addTab(s, tabName)
      self:addTab(tabName, position)
      transferTab(tabName)
      self:activateTab(tabName)
    end
  -- removeTab override
  local myRemoveTab =
    function(s, tabName)
      EMCO.removeTab(s, tabName)
      if self[tabName].floating then
        self:restoreTab(tabName)
      end
      Adjustable.TabWindow.allTabs[tabName]:removeTab(tabName)
    end
  -- Transfer process
  self.tabs = table.n_union(self.tabs, emco_tabwindows)
  self:createTabs()
  for k, v in ipairs(emco_tabwindows) do
    transferTab(v)
  end
  self:activateTab(emco.currentTab)
  emco.reset = function() end
  emco.removeTab = myRemoveTab
  emco.addTab = myAddTab
  emco.xEcho = myXEcho
  emco.doBlink = myDoBlink
  emco.setGap =
    function(s, gap)
      EMCO.setGap(s, gap)
      self:setGap(math.max(2, gap) - 2)
    end
  emco.setTabHeight =
    function(s, height)
      EMCO.setTabHeight(s, height)
      self:setTabHeight(height + 2)
    end
  emco.setTabBoxColor =
    function(s, color)
      EMCO.setTabBarColor(s, color)
      self:setTabBarColor(color)
    end
  emco.setTabBoxCSS =
    function(s, css)
      EMCO.setTabBoxCSS(s, css)
      self:setTabBarCSS(css)
    end
  emco.setActiveTabBGColor =
    function(s, color)
      self:setActiveTabBGColor(color)
      EMCO.setActiveTabBGColor(s, color)
    end
  emco.setInactiveTabBGColor =
    function(s, color)
      self:setInactiveTabBGColor(color)
      EMCO.setInactiveTabBGColor(s, color)
    end
  emco.setActiveTabFGColor =
    function(s, color)
      EMCO.setActiveTabFGColor(s, color)
      self:setActiveTabFGColor(color)
    end
  emco.setInactiveTabFGColor =
    function(s, color)
      EMCO.setInactiveTabFGColor(s, color)
      self:setInactiveTabFGColor(color)
    end
  emco.setSingleTabFont =
    function(s, tab, font)
      EMCO.setSingleTabFont(s, tab, font)
      self:setSingleTabFont(tab, font)
    end
  emco.setTabFont =
    function(s, font)
      EMCO.setTabFont(s, font)
      self:setTabFont(font)
    end
  emco.save =
    function(s, slot, dir)
      EMCO.save(s)
      self:save(slot, dir)
    end
  emco.load =
    function(s, slot, dir)
      EMCO.load(s)
      self:load(slot, dir)
    end
end

-- EMCO by demonnic https://github.com/demonnic/EMCO
-- convert EMCO to Adjustable TabWindow

function Adjustable.TabWindow.convertEMCO(emco)
  if emco.myTabWindow then
    return
  end
  emco.myTabWindow =
    emco.myTabWindow or
    Adjustable.TabWindow:new(
      {
        name = emco.name .. "TabWindow",
        x = emco.x,
        y = emco.y,
        width = emco.width,
        height = emco.height,
        centerStyle = "background-color: black;", -- Ensure black background
        footerStyle = "background-color: black;", -- Ensure black background
        activeTabStyle = "background-color: black; border: 2px solid white;",
        inactiveTabStyle = "background-color: black; border: 2px solid white;",
        tabBarHeight = emco.tabHeight + 2,
        gap = emco.gap - 2,
      },
      emco.container
    )
  emco.myTabWindow:setActiveTabFGColor(emco.activeTabFGColor or "white")
  emco.myTabWindow:setInactiveTabFGColor(emco.inactiveTabFGColor or "gray")
  emco.myTabWindow:setActiveTabBGColor(emco.activeTabBGColor or "black")
  emco.myTabWindow:setInactiveTabBGColor(emco.inactiveTabBGColor or "black")
  emco.myTabWindow:transferEMCO(emco)
  emco.hide =
    function()
      Geyser.Container.hide(emco.myTabWindow)
    end
  emco.show =
    function()
      Geyser.Container.show(emco.myTabWindow)
    end
  emco:show()
end
</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>create new window</name>
								<packageName></packageName>
								<script>function Adjustable.TabWindow:new(cons, container)
  Geyser.HBox.organize = Geyser.HBox.organize or Geyser.HBox.reposition
  local me = self.parent:new(cons, container)
  cons = cons or {}
  setmetatable(me, self)
  self.__index = self
  me.type = "adjustabletabwindow"
  me.defaultDir = me.defaultDir or getMudletHomeDir() .. "/AdjustableTabWindow/"
  me.tabs = me.tabs or {}
  me.tabTxtColor = me.tabTxtColor or "white"
  me.tabPadding = me.tabPadding or 12

  -- Ensure default colors are black
  me.color1 = me.color1 or "black" -- Black background
  me.color2 = me.color2 or "black" -- Black background
  me.activeTabBGColor = me.activeTabBGColor or me.color1
  me.inactiveTabBGColor = me.inactiveTabBGColor or me.color2
  me.tabBarHeight = me.tabBarHeight or "35"
  me.gap = me.gap or 0

  -- Update styles to use black backgrounds
  me.footerStyle =
    me.footerStyle or
    [[
    background-color: ]] .. me.color1 .. [[;
    border: 2px solid white;
    border-bottom-left-radius: 10px;
    border-bottom-right-radius: 10px;
    ]]

  me.centerStyle =
    me.centerStyle or
    [[
    background-color: ]] .. me.color2 .. [[;
    border: 2px solid white;
    border-radius: 10px;
    margin: 5px;
    ]]

  me.inactiveTabStyle =
    me.inactiveTabStyle or
    [[QLabel::hover{
        background-color: ]] ..
    me.activeTabBGColor ..
    [[;
        color: ]] ..
    me.tabTxtColor ..
    [[;
        border: 2px solid white;
        border-top-left-radius: 10px;
        border-top-right-radius: 10px;
        margin-right: 1px;
        margin-left: 1px;
        qproperty-alignment: 'AlignVCenter';
    }
    QLabel::!hover{
        background-color: ]] ..
    me.inactiveTabBGColor ..
    [[;
        color: ]] ..
    me.tabTxtColor ..
    [[;
        border: 2px solid white;
        border-top-left-radius: 10px;
        border-top-right-radius: 10px;
        margin-right: 1px;
        margin-left: 1px;
        qproperty-alignment: 'AlignVCenter';
    }
    ]]

  me.activeTabStyle =
    me.activeTabStyle or
    [[
    background-color: ]] ..
    me.activeTabBGColor ..
    [[;
    color: ]] ..
    me.tabTxtColor ..
    [[;
    border: 2px solid white;
    border-top-left-radius: 10px;
    border-top-right-radius: 10px;
    margin-right: 1px;
    margin-left: 1px;
    qproperty-alignment: 'AlignVCenter';
    ]]

  me.overlayStyle =
    me.overlayStyle or [[
    background-color: rgba(0,0,0,0%);
    border: 2px solid white;
    ]]
    
  me.tabBarStyle = me.tabBarStyle or [[
    background-color: ]] .. me.color2 .. [[;
    border: 2px solid white;
    ]]

  me.tempWindowConf =
    me.tempWindowConf or
    {
      buttonsize = "12",
      buttonFontSize = "7",
      padding = 9,
      buttonstyle =
        [[
        QLabel{ border-radius: 4px; background-color: rgba(0,0,0,90%); }
        QLabel::hover{ background-color: rgba(30,30,30,50%); }
        ]],
      adjLabelstyle = [[
        background-color: black; 
        border: 2px solid white;
      ]],
    }

  me:createBaseContainers()
  me:createTabs()

  if me.tabBarColor then
    me:setTabBarColor(me.tabBarColor)
  else
    me.tabBarColor = "black"
  end

  local found = string.match(" " .. me.activeTabStyle, "(%scolor:).-(;)")
  if not (found) then
    me.activeTabFGColor = me.activeTabFGColor or me.tabTxtColor
  end
  found = string.match(" " .. me.inactiveTabStyle, "(%scolor:).-(;)")
  if not (found) then
    me.inactiveTabFGColor = me.inactiveTabFGColor or me.tabTxtColor
  end

  if me.activeTabFGColor then
    me:setActiveTabFGColor(me.activeTabFGColor)
  end
  if me.inactiveTabFGColor then
    me:setInactiveTabFGColor(me.inactiveTabFGColor)
  end

  me.current = me.current or me.tabs[#me.tabs]
  if me.tabs[1] then
    me:activateTab(me.tabs[1])
  end

  tempTimer(
    0,
    function()
      if me.tabs[1] then
        me[me.tabs[#me.tabs] .. "center"]:hide()
      end
    end
  )
  if not Adjustable.TabWindow.all[me.name] then
    Adjustable.TabWindow.all_windows[#Adjustable.TabWindow.all_windows + 1] = me.name
  end
  Adjustable.TabWindow.all[me.name] = me
  return me
end
</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>setActiveTab</name>
								<packageName></packageName>
								<script>function Adjustable.TabWindow:setActiveTab(tabName)
  -- Ensure the tab exists in the tabs list
  for _, tab in ipairs(self.tabs) do
    if tab == tabName then
      self.current = tabName -- Set the current tab
      self:adjustTabStyle() -- Apply the updated styles
      return true -- Indicate success
    end
  end
  return false -- Tab not found
end
</script>
								<eventHandlerList />
							</Script>
						</ScriptGroup>
					</ScriptGroup>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>movement</name>
					<packageName></packageName>
					<script></script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>handleMovement</name>
						<packageName></packageName>
						<script>function handleMovement()
 
  if not (systemLoaded) then
    return
  end
  
  if systemPaused then
    return
  end

  if inslowcuringmode() then 
    return 
  end

  if balance_data.stunned.in_use then
    return
  end
 
  -- Check if there's a valid speed walk direction
  if not mmp.speedWalkDir[mmp.speedWalkCounter] then
    return
  end
  -- Extract the direction
  local direction =
    mmp.speedWalkDir[mmp.speedWalkCounter]:gsub("sprint ", ""):gsub("dash ", ""):gsub("gallop ", ""):gsub(
      "runaway ", ""
    )
  -- handle leap
  if myclass() == "dragon" or myclass() == "blademaster" then
    send("leap " .. direction, false)
    if mmp.settings.showcmds then
      cecho(
        string.format(
          "&lt;red&gt;(&lt;maroon&gt;%d - &lt;dark_slate_grey&gt;leap %s&lt;red&gt;)",
          #mmp.speedWalkDir - mmp.speedWalkCounter + 1,
          direction
        )
      )
    end
    mmp.setmovetimer(1.6)
  else
    -- handle mount jump
    if mounted then
      send("mj " .. direction, false)
      if mmp.settings.showcmds then
        cecho(
          string.format(
            "&lt;red&gt;(&lt;maroon&gt;%d - &lt;dark_slate_grey&gt;mj %s&lt;red&gt;)",
            #mmp.speedWalkDir - mmp.speedWalkCounter + 1,
            direction
          )
        )
      end
      mmp.setmovetimer(1.6)
      -- handle evade
    elseif gmcp.Char.Status.class:lower():trim() == "serpent" then
      evaderequested = true
      enableTimer("evade requested")
      send("evade " .. direction, false)
      if mmp.settings.showcmds then
        cecho(
          string.format(
            "&lt;red&gt;(&lt;maroon&gt;%d - &lt;dark_slate_grey&gt;evade %s&lt;red&gt;)",
            #mmp.speedWalkDir - mmp.speedWalkCounter + 1,
            direction
          )
        )
      end
      mmp.setmovetimer(1.6)
    else
      expandAlias("mstop")
    end
  end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>captureDirection</name>
						<packageName></packageName>
						<script>function captureDirection()
  if table.is_empty(mmp.speedWalkDir) then
    return false
  end
  local possible_directions =
    {"n", "e", "s", "w", "se", "sw", "ne", "nw", "up", "down", "in", "out"}
  local direction =
    mmp.speedWalkDir[mmp.speedWalkCounter]:gsub("sprint ", ""):gsub("dash ", ""):gsub("gallop ", ""):gsub(
      "runaway ", ""
    )
  -- Check if the movement direction is in the list of possible directions
  if table.concat(possible_directions, " "):find(direction) then
    local string = "Valid Direction: " .. direction
    myDebugEcho("green", string)
    return true
  else
    local string = "Invalid Direction: " .. direction
    myDebugEcho("red", string)
    return false
  end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>movemethod</name>
						<packageName></packageName>
						<script>function movemethod()
  if mounted then
    movementmethod = "mj"
  elseif gmcp.Char.Status.class:lower():trim() == "serpent" then
    movementmethod = "evade"
  elseif gmcp.Char.Status.class:lower():trim() == "blademaster" then
    movementmethod = "shin meditate|evade"
  end
end

function tumblemethod()
  if gmcp.Char.Status.class:lower():trim() == "bard" then
    movementmethod = "somersault"
  else
    movementmethod = "tumble"
  end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>moveDir</name>
						<packageName></packageName>
						<script>--regular movement script
function moveDir(dir)

  --hunt record route
  if recordmode then
    dirtable =
      {
        n = "s",
        ne = "sw",
        e = "w",
        se = "nw",
        s = "n",
        sw = "ne",
        w = "e",
        nw = "se",
        u = "d",
        d = "u",
        out = "in",
      }
    dirtable["in"] = "out"
    justmoved = dir
    fleedir = dirtable[dir]
  end


  if myclass()=="dragon" and flying then
    movementmethod = "glide"
  elseif mounted then
    movementmethod = "gallop"
  else
    movementmethod = "go"
  end

  if blockage or hindered or watercheck() or evaderequested then
    movemethod()
  end

  if hinderedcheck() or inslowcuringmode() then
    tumblemethod()
  end
  
  send("queue addclear eqbal " .. movementmethod .. " " .. dir .. " 11")
  
end

</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>moveNext</name>
						<packageName></packageName>
						<script>--move script for hunting
function moveNext(dir)
    local cs = cmdsep
    local direction =
      "queue add eqbal " ..
      gatherGold() ..
      ""..cs.."put gold in pack"..cs.."open door " ..
      dir ..
      ""..cs.."go " ..
      dir
      
    if not isCommandInQueue("eqbal", direction) then
       if table.contains(myaffs, "brokenleftleg") or
          table.contains(myaffs, "brokenrightleg") or
          table.contains(myaffs, "prone")
       then
          return
       else
          addToQueue("eqbal", direction)
          processQueue("eqbal")
       end
    end

end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>moveconfirm</name>
						<packageName></packageName>
						<script>function moveconfirm()
  if not (justmoved == "") then
    if recordmode then
      table.insert(currentpath, {justmoved, gmcp.Room.Info.num})
      huntingpointer = huntingpointer + 1
    end
    if hunting and not (fleemode) then
      huntingpointer = huntingpointer + 1
    end
  end
  if fleemode then
    huntingpointer = huntingpointer - 1
    fleemode = false
    fleecd = os.clock() + 3
  end
  justmoved = ""
end
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>combinedMove</name>
						<packageName></packageName>
						<script>function combinedMove(dir)
 
  if not (systemLoaded) then
    return
  end
  
  if systemPaused then
    return
  end

  if inslowcuringmode() then 
    return 
  end

  if balance_data.stunned.in_use then
    return
  end
 
  clearQueue("eqbal")
  send("clearqueue eqbal")
 
 if hunting then
    moveNext(dir)
  else
    moveDir(dir)
  end
end
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>watercheck</name>
						<packageName></packageName>
						<script>function watercheck()
  if enemyclass["waterlord"].enabled then
    if
      table.contains(myaffs, "lethargy") and
      table.contains(myaffs, "haemophilia") and
      table.contains(myaffs, "nausea")
    then
      if bleedcheck() &gt;= 400 then
        return true
      end
    end
  end
  return false
end
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>hinderedcheck</name>
						<packageName></packageName>
						<script>function hinderedcheck()
  afftest =
    {
      "mangledleftleg",
      "mangledrightleg",
      "bound",
      "impaled",
      "webbed",
      "roped",
      "disrupted",
      "prone",
      "pacified",
      "peace",
      "lovers",
      "entangled",
      "transfixation",
      "retardation",
    }
  if not enemyclass["blademaster"].enabled then
    for i = 1, #afftest, 1 do
      if table.contains(myaffs, afftest[i]) then
        return true
      end
    end
  end
  if
    table.contains(myaffs, "brokenleftleg") or
    table.contains(myaffs, "brokenrightleg") and
    balance_data.tree.in_use
  then
    return true
  end
  return false
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>partySizeCheck</name>
						<packageName></packageName>
						<script>function partySizeCheck()
  if gmcp.Char.Status.class:lower():trim() == "serpent" and not(defenses.hiding.active) then
    return partysize - 1
  else
    return partysize
  end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>peopletracker</name>
						<packageName></packageName>
						<script>local labels = {}
-- default to numerals when we run out
-- while defining this as a function would be nicer, it's easier for most people to mod if it's in this format
local multiplegroups =
  {
    "a",
    "b",
    "c",
    "d",
    "e",
    "f",
    "g",
    "h",
    "i",
    "j",
    "k",
    "l",
    "m",
    "n",
    "o",
    "p",
    "q",
    "r",
    "s",
    "t",
    "u",
    "v",
    "w",
    "x",
    "y",
    "z",
  }

function clean_old_labels()
  for areanum, arealabels in pairs(labels) do
    for _, label in pairs(arealabels) do
      deleteMapLabel(areanum, label)
    end
  end
  labels = {}
end

registerAnonymousEventHandler("sysExitEvent", clean_old_labels)

function clear_labels()
  if not mmp then
    return
  end

  local function clearlabels(areaid)
    local t = getMapLabels(areaid)
    if type(t) ~= "table" then
      return
    end
    local starts, ends = string.starts, string.ends
    for labelid, text in pairs(t) do
      if starts(text, '(') and ends(text, ')') then
        deleteMapLabel(areaid, labelid)
      end
    end
  end

  for areaid in pairs(mmp.areatabler or {}) do
    clearlabels(areaid)
  end
end

function update_people_labels()
  local s, m =
    pcall(
      function()
        if not mmp then
          return
        end
        -- build a 'location = people' reverse map
        local r = {}
        -- keeps track at which index of multiplegroups are we at
        local multiplescount = 1
        local fr, fg, fb = unpack(color_table.white)
        local br, bg, bb = unpack(color_table.black)
        for k, v in pairs(mmp.pdb) do
          if mmp.pdb_lastupdate[k] then
            r[v] = r[v] or {};
            r[v][#r[v] + 1] = k
          end
        end
        clean_old_labels()
        if not mmp.pdb_lastupdate or not mmp.roomexists(mmp.currentroom) then
          return
        end
        local getRoomArea, createMapLabel, getRoomCoordinates, concat, sort =
          getRoomArea, createMapLabel, getRoomCoordinates, table.concat, table.sort
        -- if we have a unique location, draw fancy labels in all rooms on 60% opacity
        for room, persons in pairs(r) do
          sort(persons)
          local ids = mmp.getnums(room, true)
          -- multiples? special case then. Current method implemented is #3
          if ids and #ids &gt; 1 and #ids &lt;= 3 then
            -- make a table of roomid = {x,y,z}
            -- in a separate variable, track the right-most room ID and x coordinate per-Z level
            local coords, rightmost = {}, {}
            for _, exactroomid in pairs(ids) do
              coords[exactroomid] = {getRoomCoordinates(exactroomid)}
              coords[exactroomid][4] = getRoomArea(exactroomid)
              if
                not rightmost[coords[exactroomid][3]] or
                coords[exactroomid][1] &gt;= rightmost[coords[exactroomid][3]][1]
              then
                -- &gt;= so rightmostroom is set at least once
                rightmost[coords[exactroomid][3]] = {coords[exactroomid][1], exactroomid}
                -- we don't account for the Y coordinate if the X's are the same atm, though
              end
            end
            -- now, draw!
            for roomid, l in pairs(coords) do
              local area = l[4]
              labels[area] = labels[area] or {}
              if rightmost[l[3]] and roomid == rightmost[l[3]][2] then
                -- doesn't account for multiplescount overflowing atm
                labels[area][#labels[area] + 1] =
                  createMapLabel(
                    area,
                    '(' .. multiplegroups[multiplescount] .. " " .. concat(persons, ", ") .. ')',
                    l[1],
                    l[2],
                    l[3],
                    fr,
                    fg,
                    fb,
                    br,
                    bg,
                    bb,
                    0,
                    12
                  )
              else
                labels[area][#labels[area] + 1] =
                  createMapLabel(
                    area,
                    '(' .. multiplegroups[multiplescount] .. ')',
                    l[1],
                    l[2],
                    l[3],
                    fr,
                    fg,
                    fb,
                    br,
                    bg,
                    bb,
                    0,
                    12
                  )
              end
            end
            multiplescount = multiplescount + 1
          elseif ids and #ids == 1 then
            local x, y, z = getRoomCoordinates(ids[1])
            local area = getRoomArea(ids[1])
            if area then
              -- somehow area can still be returned as nil
              labels[area] = labels[area] or {}
              labels[area][#labels[area] + 1] =
                createMapLabel(
                  area, '(' .. concat(persons, ", ") .. ')', x, y, z, fr, fg, fb, br, bg, bb, 0, 12
                )
            end
          end
        end
      end
    )
  if not s then
    echoLink(
      "(e!)",
      string.format("echo([=[The problem was: %q]=])", m),
      'Oy - there was a problem with the peopletracker. Click on this link and submit a bug report with what it says.'
    )
  end
end

function refresh_labels()
  clear_labels()
  update_people_labels()
end

registerAnonymousEventHandler("mmapper updated pdb", refresh_labels)</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>locate enemy</name>
						<packageName></packageName>
						<script>--Locate Enemy Position
local oldEchonums = mmp.echonums
mmp.echonums =
  function(roomname)
    oldEchonums(roomname)
    local rooms = mmp.searchRoomExact(roomname)
    if not next(rooms) then
      echo("?")
      return nil
    end
    -- transform the kv table into a table of tables for cleaner code.
    -- + perhaps Mudlet in future will give this us anyway, sorted by relevancy
    local dt = {}
    for roomid, room in pairs(rooms) do
      dt[#dt + 1] = {name = room, id = roomid}
    end
    jane.target.roomname = roomname
    jane.target.roomid = dt[1].id
    doblink(jane.target.roomid)
    jane.target.area = getRoomAreaName(getRoomArea(jane.target.roomid))
  end

function roomIDExact(rname)
  local rooms = mmp.searchRoom(rname)
  local finalroom = {}
  for k, v in pairs(rooms) do
    if v == rname then
      table.insert(finalroom, k)
    end
  end
  return table.concat(finalroom, ", ")
end

--blink location

function doblink(room, color, duration)
  local colorn, durationn
  local r, g, b, br, bg, bb
  room = tonumber(room)
  if type(color) == "table" then
    r, g, b, br, bg, bb = unpack(color)
  end
  if not color then
    r, g, b, br, bg, bb = 220, 0, 0, 255, 186, 23
  end
  if not duration then
    durationn = 5
  else
    durationn = duration
  end
  highlightRoom(room, r, g, b, br, bg, bb, 1, 255, 255)
  for i = 0.5, durationn do
    tempTimer(
      i,
      function()
        highlightRoom(room, r, g, b, br, bg, bb, 1, 255, 255)
      end
    )
    tempTimer(
      i + 0.5,
      function()
        unHighlightRoom(room)
      end
    )
  end
  tempTimer(
    durationn + 1,
    function()
      unHighlightRoom(room)
    end
  )
end</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Mudlet Mapper</name>
					<packageName></packageName>
					<script></script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>external mapper settings</name>
						<packageName></packageName>
						<script>disableTrigger("Wall")
disableTrigger("Polished skull locater")
disableAlias("Check wholist")
disableAlias("Go to ID or area")</script>
						<eventHandlerList>
							<string>sysMapDownloadEvent</string>
						</eventHandlerList>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>roomFindEchoArea</name>
						<packageName></packageName>
						<script>function mmp.roomFindEchoArea(query)
    if query:ends('.') then
        query = query:sub(1, -2)
    end

    local result = mmp.searchRoom(query)
    if not next(result) then
        return
    end

    local roomsTable = {}

    -- Build roomsTable with area data
    for roomID, roomName in pairs(result) do
        local areaID = getRoomArea(roomID) -- Get the area ID from the room ID
        local roomArea = areaID and mmp.areatabler[areaID] or "Unknown Area"
        table.insert(roomsTable, {num = tonumber(roomID), area = roomArea, name = roomName})
    end

    -- Sort roomsTable by area name
    table.sort(roomsTable, function(a, b) return a.area &lt; b.area end)


    for _, roomData in ipairs(roomsTable) do
        roomID = roomData.num
        roomName = roomData.name
        roomArea = roomData.area
    end
    
      cechoLink(
            string.format("\n &lt;DarkSlateGray&gt;[ &lt;%s&gt;%s &lt;DarkSlateGray&gt;]","white", roomArea),
            string.format([[mmp.gotoRoom(%d)]], roomID),
            string.format("Go to %s in %s", roomName, roomArea),
            true
        )


end

function mmp.roomFindEchoNumber(query)
    if query:ends('.') then
        query = query:sub(1, -2)
    end

    local result = mmp.searchRoom(query)
    if not next(result) then
        return
    end

    local roomsTable = {}

    -- Build roomsTable with area data
    for roomID, roomName in pairs(result) do
        local areaID = getRoomArea(roomID) -- Get the area ID from the room ID
        local roomArea = areaID and mmp.areatabler[areaID] or "Unknown Area"
        table.insert(roomsTable, {num = tonumber(roomID), area = roomArea, name = roomName})
    end

    -- Sort roomsTable by area name
    table.sort(roomsTable, function(a, b) return a.area &lt; b.area end)


    for _, roomData in ipairs(roomsTable) do
        roomID = roomData.num
        roomName = roomData.name
        roomArea = roomData.area
    end
    
      cechoLink(
            --string.format("\n &lt;DarkSlateGray&gt;[ &lt;%s&gt;%s &lt;DarkSlateGray&gt;]","white", roomArea),
            string.format([[mmp.gotoRoom(%d)]], roomID),
            --string.format("Go to %s in %s", roomName, roomArea),
            true
        )


end

function mmp.getAreaNameFromQuery(query)
    if query:ends('.') then
        query = query:sub(1, -2)
    end

    local result = mmp.searchRoom(query)
    if not next(result) then
       -- cecho("&lt;red&gt;No results found for query: " .. query .. "\n")
        return "Unknown Area"
    end

    -- Iterate through the rooms found by the query
    for roomID, _ in pairs(result) do
        local areaID = getRoomArea(roomID)
        
        -- Debugging output to check the room ID and area ID
        --cecho("&lt;yellow&gt;Room ID: " .. roomID .. ", Area ID: " .. tostring(areaID) .. "\n")
        
        if areaID then
            -- Debugging to check the area name
            local areaName = mmp.areatabler[areaID]
           -- cecho("&lt;green&gt;Area Name: " .. tostring(areaName) .. "\n")
            return areaName or "Unknown Area"
        end
    end

    return "Unknown Area" -- Fallback if no valid area found
end


function mmp.getRoomNumber(query)
    if query:ends('.') then
        query = query:sub(1, -2)
    end

    local result = mmp.searchRoom(query)
    if not next(result) then
        return
    end

    local roomsTable = {}

    -- Build roomsTable with area data
    for roomID, roomName in pairs(result) do
        local areaID = getRoomArea(roomID) -- Get the area ID from the room ID
        local roomArea = areaID and mmp.areatabler[areaID] or "Unknown Area"
        table.insert(roomsTable, {num = tonumber(roomID), area = roomArea, name = roomName})
    end

    -- Sort roomsTable by area name
    table.sort(roomsTable, function(a, b) return a.area &lt; b.area end)


    for _, roomData in ipairs(roomsTable) do
        roomID = roomData.num
        if roomID then
          return roomID
        end
    end
    
      return "Unknown Room Number"


end


-- Function to find the room associated with a person's name
function findRoomByPerson(personName)
    -- Iterate through areas
    for areaName, locations in pairs(groupedByArea) do
        -- Iterate through locations in each area
        for _, locationData in ipairs(locations) do
            -- Check if the person exists in the 'people' list
            if table.contains(locationData.people, personName) then
                return locationData.room -- Return room ID if found
            end
        end
    end
    return "room not found" -- Return a default value if person is not found
end
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>getClickableLink</name>
						<packageName></packageName>
						<script>function mmp.getClickableLink(room, area)
  
  --display(room)
  
  -- Perform the same search and filtering steps
  local t = mmp.searchRoomExact(room)
  if area then
    t = mmp.filterRooms(t, area)
  end
  
  -- Prepare the result
  local result = "  ("
  mmp.echonums(room, area)
  result = result .. ")"
  
  -- Lowercase results
  for k, v in pairs(t) do
    if tonumber(k) then
      t[k] = v:lower()
    else
      t[k:lower()] = v
    end
  end

  if not (t[room:lower()] or table.contains(t, room:lower())) then
    return result
  end
  
  result = result .. "\n"
  
  -- If only one match, return the formatted clickable link
  if table.size(t) == 1 then
    local k, v = next(t)
    result = result .. "&lt;red&gt;From your knowledge, that room is in &lt;orange_red&gt;" ..
      mmp.cleanAreaName(mmp.areatabler[getRoomArea(type(k) == "number" and k or v)] or "?") .. "&lt;red&gt;."
  else
    -- If multiple matches, provide all the possible areas
    local k, v = next(t)
    local areas = {}
    if type(k) == "number" then
      for k, _ in pairs(t) do
        areas[mmp.areatabler[getRoomArea(k)] or "?"] = true
      end
    else
      for _, k in pairs(t) do
        areas[mmp.areatabler[getRoomArea(k)] or "?"] = true
      end
    end
    local flattened_areas = {}
    for k, _ in pairs(areas) do
      if k ~= "" then
        flattened_areas[#flattened_areas + 1] = mmp.cleanAreaName(k)
      end
    end
    result = result .. "&lt;red&gt;From your knowledge, that room might be in &lt;orange_red&gt;" ..
      table.concat(flattened_areas, ", or ") .. "&lt;red&gt;."
  end
  
  -- Return the final result with the clickable link
  return result
end
</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>utility</name>
					<packageName></packageName>
					<script></script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>prompt</name>
						<packageName></packageName>
						<script>function prompt()
  
  if table.contains(myaffs, "blackout") then return end 
  
  local promptstring = ""    
  
  if promptEnabled then    
  
    if systemLoaded then
     
       if systemPaused then
          moveCursor(0, getLineNumber())
          cinsertText("&lt;red&gt;[P] ")
          moveCursorEnd()
       end
     
        --defmode
        if defupmode then
          moveCursor(0, getLineNumber())
          cinsertText("&lt;red&gt;[DEFMODE] ")
          moveCursorEnd()
        end              
              
                
        if failsafe then
            promptstring = promptstring .. "&lt;white&gt;Enemy Class:" .. "&lt;white&gt;[&lt;orange&gt;" .. NDB_getClass(target):lower() .. "&lt;white&gt;]  "
              if table.contains({inv_room}, "a lightwall") then
                promptstring = promptstring .. "&lt;yellow&gt; LW &lt;white&gt;  "
              end
               
               promptstring = promptstring ..
                "|" ..
                hitcount["head"] ..
                "|" ..
                hitcount["torso"] ..
                "|" ..
                hitcount["left leg"] ..
                "|" ..
                hitcount["right leg"] ..
                "|" ..
                hitcount["left arm"] ..
                "|" ..
                hitcount["right arm"] ..
                "|" ..                " "
         
        end
        
        if defenses.selfishness.keepup then
            promptstring = promptstring .. "&lt;green&gt;  $ &lt;white&gt; "
        else
            promptstring = promptstring .. "&lt;red&gt;  $ &lt;white&gt; "
        end
        
        if table.contains(inv_room, "a monolith sigil") then
            promptstring = promptstring .. "&lt;purple&gt; MONO &lt;white&gt;"
        end            
        
        -- Calculate and display MP difference
        oldMP = oldMP or tonumber(gmcp.Char.Vitals.mp)
        if oldMP ~= tonumber(gmcp.Char.Vitals.mp) then
            local mpDifference = (tonumber(gmcp.Char.Vitals.mp) or 0) - (oldMP or 0)
            if mpDifference ~= 0 then
                if mpDifference &gt; 0 then
                    promptstring = promptstring .. "&lt;cyan&gt; [m:+" .. mpDifference .. "]"
                else
                    promptstring = promptstring .. "&lt;red&gt; [m:" .. mpDifference .. "]"
                    
                    if hunting and autohunting and not (table.contains({myaffs}, "bleeding")) then
                       -- shielded = false
                        clearQueue("eqbal")
                        send("clearqueue eqbal")
                        huntNext()
                    end
                    
                    -- Add more conditions if needed for other actions
                end
                oldMP = tonumber(gmcp.Char.Vitals.mp)
            end
        end
        
        -- Calculate and display HP difference
        oldHP = oldHP or tonumber(gmcp.Char.Vitals.hp)
        if oldHP ~= tonumber(gmcp.Char.Vitals.hp) then
            local hpDifference = (tonumber(gmcp.Char.Vitals.hp) or 0) - (oldHP or 0)
            if hpDifference ~= 0 then
                if hpDifference &gt; 0 then
                    promptstring = promptstring .. "&lt;green&gt; [h:+" .. hpDifference .. "]"
                else
                    promptstring = promptstring .. "&lt;red&gt; [h:" .. hpDifference .. "]"
                    
                    if hunting and autohunting and not (table.contains({myaffs}, "bleeding")) then
                        clearQueue("eqbal")
                        send("clearqueue eqbal")
                        huntNext()
                    end
                    
                    -- Add more conditions if needed for other actions
                end
                oldHP = tonumber(gmcp.Char.Vitals.hp)
            end
        end
        
        cecho(promptstring)
    end
  end
end

function affPromptString()
    local herblist = {
        ["kelp"] = {"asthma", "clumsiness", "hypochondria", "sensitivity", "weariness", "healthleech", "parasite", "rebbies"},
        ["ginseng"] = {"unweavingbody", "addiction", "darkshade", "haemophilia", "lethargy", "nausea", "scytherus", "flushings"},
        ["goldenseal"] = {"unweavingmind", "dizziness", "epilepsy", "impatience", "shyness", "stupidity", "depression", "dissonance", "shadowmadness", "mycalium", "sandfever", "horror"},
        ["lobelia"] = {"agoraphobia", "guilt", "spiritburn", "tenderskin", "claustrophobia", "loneliness", "masochism", "recklessness", "vertigo"},
        ["ash"] = {"confusion", "dementia", "hallucinations", "hypersomnia", "paranoia"},
        ["bellwort"] = {"pyre", "retribution", "timeloop", "peace", "justice", "lovers", "pacified", "generosity", "indifference"},
        ["ginger"] = {"temperedcholeric", "temperedmelancholic", "temperedphlegmatic", "temperedsanguine"},
    }

    local result = ""
    local anyHerbAfflictions = false  -- Flag to track if any afflictions are found
  
    for herb, afflictions in pairs(herblist) do
        local count = 0
        
        for _, affliction in ipairs(afflictions) do
            if table.contains(myaffs, affliction)then 
               if (herb == "goldenseal" and (string.starts(affliction, "unweavingm") or affliction == "horror")) or 
               (herb == "ginseng" and string.starts(affliction, "unweavingb")) then
                count = count + 1
                end
            end
        end
        
        if count &gt; 0 then
            result = result .. '["' .. herb .. '" [' .. count .. ']] '
            anyHerbAfflictions = true  -- Set the flag if we found afflictions
        end
    end

    return anyHerbAfflictions and result or ""  -- Return result only if we found any afflictions
end

function afflictionlist()
    local affstring = ""
    
    clearWindow("affwindow.middle")
    
    -- Append initial prompts
    affstring = affstring .. bleedcheckprompt()
    
    -- Append herb-related afflictions using affPromptString()
    local herbAffString = affPromptString()
    if herbAffString ~= "" then
        affstring = affstring .. herbAffString
    end
    
    -- Iterate over additional afflictions not in herblist
    for affliction, details in pairs(afflictions) do
        -- Check if affliction is in myaffs
        if table.contains(myaffs, affliction) then
            -- Append the prompt from the afflictions table
            affstring = affstring .. details.prompt .. " "
        end
    end
    
    -- Handle empty myaffs case
    if table.is_empty(myaffs) then
        affstring = affstring .. "&lt;white&gt; - "
    end
    
    -- Display or debug output
    if DEBUG_MODE then
        cecho(affstring)
    end
    GUI.affwindow.middle:cecho(affstring)
end
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>rift check</name>
						<packageName></packageName>
						<script>function updaterift()
  if not gmcp.IRE then
    return
  end
  if systemLoaded then
    for k, v in pairs(gmcp.IRE.Rift.List) do
      inrift[v.name] = {amount = tonumber(v.amount)}
    end
  end
end

function riftcheck()
  updaterift()
  if systemLoaded then
    for k, v in pairs(inrift) do
      if v.amount &lt; 15 and tonumber(gmcp.Char.Vitals.hp) &gt;= 1 then
        if table.contains(riftables, v.name) then
          cecho(
            "\n&lt;white&gt;Your &lt;purple&gt;" ..
            k ..
            " stash is low &lt;white&gt;[&lt;red&gt;" ..
            v.amount ..
            "&lt;white&gt;] "
          )
        end
      end
    end
  end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>ab cheat</name>
						<packageName></packageName>
						<script>abcheat = abcheat or {}
 
abcheat.doab = false
 
abcheat.ab = function(group, name)
        if not name then
                sendGMCP([[Char.Skills.Get {"group" : "]] .. group .. [["}]])
        else
                sendGMCP([[Char.Skills.Get {"group" : "]] .. group .. [[", "name" : "]] .. name .. [["}]])
        end
        abcheat.doab = true
        send("\n", false)
end
 
abcheat.list = function()
        if not abcheat.doab then return end
        abcheat.doab = false
        local abs = gmcp.Char.Skills.List.list
        local descs = gmcp.Char.Skills.List.descs
        local n = 21--4 + abcheat.longest(abs)
        for i, ab in ipairs(abs) do
                echo(ab .. string.rep(" ", n - #ab) .. descs[i] .. "\n")
        end
end
 
abcheat.longest = function(abs)
        local l = 0
        for _, ab in ipairs(abs) do
                if l &lt; #ab then l = #ab end
        end
        return l
end
 
abcheat.info = function()
        if not abcheat.doab then return end
        abcheat.doab = false
        echo(gmcp.Char.Skills.Info.info)
end
 
registerAnonymousEventHandler("gmcp.Char.Skills.List", abcheat.list)
 
registerAnonymousEventHandler("gmcp.Char.Skills.Info", abcheat.info)</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>ping &amp; latency</name>
						<packageName></packageName>
						<script>--Calculate average ping.
function getPing()
  local x, y = #pingCalculation, 0
  for i, p in pairs(pingCalculation) do
    y = y + p
  end
  return y/x
end

function pingCheck()
  table.insert(pingCalculation, 1, getNetworkLatency())
  if #pingCalculation &gt; 15 then
    table.remove(pingCalculation, 16)
  end
end

registerAnonymousEventHandler("sysDataSendRequest", pingCheck)</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>keepAlive</name>
						<packageName></packageName>
						<script>function keepAlive()
	sendGMCP("Core.KeepAlive")
	if keepAliveTimer then
		killTimer(keepAliveTimer)
	end

	keepAliveTimer = tempTimer(120, [[keepAlive()]])	
end

registerAnonymousEventHandler("gmcp.Char.Vitals", keepAlive)</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>moss toggle</name>
						<packageName></packageName>
						<script>function useMossToggle()
  if mossenabled then
  	cecho("\n&lt;DarkSlateGrey&gt;(&lt;red&gt;-&lt;DarkSlateGrey&gt;) &lt;red&gt;Moss ") 
  	mossenabled = false
  else
  	cecho("\n&lt;DarkSlateGrey&gt;(&lt;green&gt;+&lt;DarkSlateGrey&gt;) &lt;green&gt;Moss") 
  	mossenabled = true
  end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>gatherGold</name>
						<packageName></packageName>
						<script>function gatherGold()
  if #gmcp.Room.Players &lt;= partySizeCheck() then
    return "get gold"
  end
  return ""
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>precache</name>
						<packageName></packageName>
						<script>function precacheCheck()
  for k, v in pairs(precache) do
    if precache[k] &lt; desired_precache[k] then
      precache_delta = desired_precache[k] - precache[k]
      if
        not inslowcuringmode() and
        not table.contains(myaffs, "paralysis") and
        tonumber(gmcp.Char.Vitals.hp) &gt; 0 and
        systemLoaded
      then
        if precache_delta &gt; 0 then
          send("outr " .. precache_delta .. " " .. k, false)
        end
      end
    end
  end
end

--registerAnonymousEventHandler("gmcp.Char.Vitals", precacheCheck)</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>updateCharStats</name>
						<packageName></packageName>
						<script>-- Update character stats
function updateCharStats()
  for _, v in pairs(gmcp.Char.Vitals.charstats) do
    local function updateStat(pattern, var)
      if v:match(pattern) then
        _G[var] = string.gsub(v, pattern .. ": ", "")
        return true
      end
      return false
    end

    updateStat("Karma", "karma")
    updateStat("Anathema", "anathema")
    updateStat("Manifestation", "manifestation")
    if updateStat("Rage", "rage") then
      _G.rage = tonumber(_G.rage)
    end
    updateStat("Morph", "morph")
    updateStat("Voice", "voice")
    updateStat("Age", "age")
    updateStat("Word", "word")
    if updateStat("Stance", "stance") then
      _G.stance = _G.stance:lower()
    end
    if updateStat("Kai", "kai") then
      _G.kai = tonumber(_G.kai)
    end
    updateStat("Kata", "kata")
    updateStat("Angelpower", "angelpower")
    updateStat("Devotion", "devotion")
    updateStat("conviction", "conviction")
    updateStat("prayer_length", "prayerlength")
    updateStat("Prayer", "prayer")
    updateStat("Wrath", "wrath")
    updateStat("wrathbal", "wrathbal")
    updateStat("Channels", "channels")
    updateStat("Shin", "shin")
    updateStat("Essence", "essence")
    updateStat("Spirits", "spirits")
    updateStat("epitaph_length", "epitaph")
    updateStat("Entity", "entity")
    updateStat("empower", "empower")
    updateStat("Venom", "venom")
    if updateStat("Form", "form") then
      _G.stance = _G.form:lower()
    end
  end
end
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>tattoos</name>
						<packageName></packageName>
						<script>function inkTattoo()
  tatQ = tatQ or {} -- Ensure the queue exists
  if #tatQ &gt; 0 then -- Check if there are tattoos in the queue
    if not inking then -- Proceed only if not currently inking
      local tattoo = tatQ[1]
      if tattoo then -- Additional safety check for a valid tattoo
        send(tattoo) -- Send the command for inking
        inking = true -- Set inking state to true
        table.remove(tatQ, 1) -- Remove the tattoo from the queue
      else
        --echo("\n&lt;red&gt;Error: Attempted to ink an invalid tattoo.")
      end
    end
  else
    --echo("\n&lt;yellow&gt;No tattoos in the queue to ink.")
  end
end




-- Function to check if a tattoo needs re-inking
function needsReink(tattoo)
    local charges = tattoo.charges
    echo("\nChecking tattoo: Charges: " .. tostring(charges))
    if charges == "art" then
       -- echo(" - Permanent, no re-inking needed.\n")
        return false
    elseif charges == "---" or (tonumber(charges) and tonumber(charges) &lt; 10) then
        --echo(" - Needs inking.\n")
        return true
    end
    --echo(" - Does not need inking.\n")
    return false
end

function processTattoos()
    local optimalList = {
        Back = {
            ["a ox tattoo"] = {charges = 10},
            ["a prism tattoo"] = {charges = 10}
        },
        Head = {
            ["a bell tattoo"] = {charges = 10},
            ["a mindseye tattoo"] = {charges = "art"}
        },
        ["Left arm"] = {
            ["a boar tattoo"] = {charges = "art"},
            ["a megalith tattoo"] = {charges = "n/a"}
        },
        ["Left leg"] = {
            ["a tentacle tattoo"] = {charges = 10},
            ["a tree tattoo"] = {charges = "art"}
        },
        ["Right arm"] = {
            ["a brazier tattoo"] = {charges = 10},
            ["a moss tattoo"] = {charges = "n/a"}
        },
        ["Right leg"] = {
            ["a cloak tattoo"] = {charges = 10},
            ["a web tattoo"] = {charges = 10}
        },
        Torso = {
            ["a shield tattoo"] = {charges = 10},
            ["a moon tattoo"] = {charges = 10}
        }
    }

    local tatConvert = {
        ["a ox tattoo"] = "ox",
        ["a prism tattoo"] = "prism",
        ["a bell tattoo"] = "bell",
        ["a mindseye tattoo"] = "mindseye",
        ["a boar tattoo"] = "boar",
        ["a megalith tattoo"] = "megalith",
        ["a tentacle tattoo"] = "tentacle",
        ["a tree tattoo"] = "tree",
        ["a brazier tattoo"] = "brazier",
        ["a moss tattoo"] = "moss",
        ["a cloak tattoo"] = "cloak",
        ["a web tattoo"] = "web",
        ["a shield tattoo"] = "shield",
        ["a moon tattoo"] = "moon"
    }
    

    for bodyPart, tattoosByPart in pairs(optimalList) do
        tattoos[bodyPart] = tattoos[bodyPart] or {}

        for tattooName, optimalData in pairs(tattoosByPart) do
            local currentTattoo = tattoos[bodyPart][tattooName]
            local tattooCommand = tatConvert[tattooName] -- Convert to command name

            --echo("\nProcessing tattoo: " .. tattooName .. " on " .. bodyPart)

            if tattooCommand and (not currentTattoo or needsReink(currentTattoo)) then
                if currentTattoo and tonumber(currentTattoo.charges) and tonumber(currentTattoo.charges) &lt; 10 then
                    local command = "wipe off " .. tattooCommand .. " | ink " .. tattooCommand .. " on " .. bodyPart .. " of me"
                    --echo(" - Adding command: " .. command .. "\n")
                    table.insert(tatQ, command)
                else
                    local command = "ink " .. tattooCommand .. " on " .. bodyPart .. " of me"
                    --echo(" - Adding command: " .. command .. "\n")
                    table.insert(tatQ, command)
                end
                tattoos[bodyPart][tattooName] = {charges = optimalData.charges}
            else
                --echo(" - No action needed.\n")
            end
        end
    end

    if #tatQ &gt; 0 then
      if not systemPaused then
        systemPaused = true
        send("curing off")
        cecho("\nSystem has been " .. (systemPaused and "&lt;red&gt;paused." or "&lt;green&gt;unpaused."))
      end

        inkTattoo()
    end
end



-- Trigger to reset `inking` state when inking completes
function onInkingComplete()
  inking = false -- Reset inking state
  tatQ = tatQ or {}
    local tats2ignore = {"talon", "shield", "crystal", "tree", "chameleon", "hammer", "firefly", "tentacle", "web", "hourglass", "brazier" } 
    if matches[2] then
    if not table.contains(tats2ignore, matches[2]) then
      send("touch "..matches[2])
    end
    if #tatQ &gt; 0 then
      inkTattoo()
    else
      if systemPaused then
        systemPaused = false
        send("curing on")
        cecho("\nSystem has been " .. (systemPaused and "&lt;red&gt;paused." or "&lt;green&gt;unpaused."))
      end
    end
    else
      if systemPaused then
        systemPaused = false
        send("curing on")
        cecho("\nSystem has been " .. (systemPaused and "&lt;red&gt;paused." or "&lt;green&gt;unpaused."))
      end
    end

end


</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>timers</name>
					<packageName></packageName>
					<script></script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>my timers</name>
						<packageName></packageName>
						<script>-- Start tracking personal balance time for a specific type
function startPersonalBalanceAction(balanceType)
    personalBalanceStartTimes[balanceType] = os.clock()
    if DEBUG_MODE then cecho(string.format("\n&lt;cyan&gt;Starting balance timer for %s at time: %f", balanceType, personalBalanceStartTimes[balanceType])) end
end

-- Get remaining time for a specific personal balance type
function getRemainingPersonalTimerTime(balanceType)

    -- Check if the specified balance type exists in balanceTimes
    local balanceInfo = balance_data[balanceType]
    if not balanceInfo then
        if DEBUG_MODE then cecho(string.format("\n&lt;red&gt;Invalid balance type specified: %s", balanceType)) end
        return -1 -- Using -1 to indicate an error
    end
    
    -- Retrieve the start time for the specific personal balance action
    local start_time = personalBalanceStartTimes[balanceType]
    if not start_time then
        if DEBUG_MODE then cecho(string.format("\n&lt;yellow&gt;No start time set for %s, returning -1", balanceType)) end
        return -1 -- Return -1 if the start time hasn't been set
    end
    
    -- Calculate remaining time based on default time and elapsed time
    local current_time = os.clock()
    local elapsed_time = current_time - start_time
    local remaining_time = balanceInfo.avg_time - elapsed_time
    remaining_time = math.max(remaining_time, 0) -- Ensure remaining time is not negative
    
    -- Round remaining time to two decimal places
    remaining_time = tonumber(string.format("%.2f", remaining_time))
    
    if DEBUG_MODE then cecho(string.format("\n&lt;green&gt;Remaining time for %s: %f", balanceType, remaining_time)) end
    
    return remaining_time
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>enemy timers</name>
						<packageName></packageName>
						<script>-- Function to reset all enemy balance times
function resetAllEnemyBalanceTimes()
    Enemy_Balance_Data = {} -- Clear the table
    if systemLoaded then
        if DEBUG_MODE then cecho("\n&lt;green&gt;ENEMY BALANCE DATA RESET") end
    end
end

-- Function to start tracking an enemy's balance action
function startEnemyBalanceAction(actionType)
    local current_time = os.clock()

    -- Initialize entry in Enemy_Balance_Data if not present
    if not Enemy_Balance_Data[actionType] then
        Enemy_Balance_Data[actionType] = {
            last_start_time = current_time,
            balance_times = {}, -- Track individual balance times
            avg_time = 0 -- Initial average time
        }
    else
        -- Update the start time
        Enemy_Balance_Data[actionType].last_start_time = current_time
    end

    if DEBUG_MODE then
        cecho(string.format("\n&lt;yellow&gt;Enemy balance action '%s' started at %.2f seconds.", actionType, current_time))
    end
end

-- Function to stop tracking an enemy's balance action and update balance data
function stopEnemyBalanceAction(actionType)
    local current_time = os.clock()

    if not Enemy_Balance_Data[actionType] or not Enemy_Balance_Data[actionType].last_start_time then
        if DEBUG_MODE then
            cecho(string.format("\n&lt;red&gt;Enemy balance action '%s' has no start time.", actionType))
        end
        return
    end

    -- Calculate elapsed time
    local elapsed_time = current_time - Enemy_Balance_Data[actionType].last_start_time

    -- Record this balance time and update average
    table.insert(Enemy_Balance_Data[actionType].balance_times, elapsed_time)

    -- Determine static actions (herb, smoke, tree) with pre-defined avg_time
    local static_actions = { "herb", "smoke", "tree" }
    local is_static_action = false
    for _, action in ipairs(static_actions) do
        if action == actionType then
            is_static_action = true
            break
        end
    end

    -- Update the average time based on whether it is static or dynamic
    if is_static_action then
        -- Assign pre-configured avg_time for static actions
        local static_avg_times = {
            herb = 2.3,
            smoke = 1.55,
            tree = 16.0
        }
        
        Enemy_Balance_Data[actionType].avg_time = static_avg_times[actionType]
    else
        -- Recalculate average balance time for dynamic actions
        local total_time = 0
        for _, time in ipairs(Enemy_Balance_Data[actionType].balance_times) do
            total_time = total_time + time
        end
        Enemy_Balance_Data[actionType].avg_time = total_time / #Enemy_Balance_Data[actionType].balance_times
    end

    if DEBUG_MODE then
        cecho(string.format(
            "\n&lt;cyan&gt;Enemy balance action '%s' completed in %.2f seconds. New average: %.2f seconds.",
            actionType, elapsed_time, Enemy_Balance_Data[actionType].avg_time
        ))
    end
end


-- Function to get the remaining balance time for an action type
function getRemainingEnemyTimerTime(actionType)
    -- Check if the actionType is static (herb, smoke, tree)
    local static_actions = { "herb", "smoke", "tree" }
    local static_avg_times = {
        herb = 2.3,
        smoke = 1.55,
        tree = 16.0
    }

    -- If the actionType is static, return the remaining countdown time
    if static_avg_times[actionType] then
        -- Ensure initialization of Enemy_Balance_Data[actionType]
        if not Enemy_Balance_Data[actionType] then
            Enemy_Balance_Data[actionType] = { last_start_time = os.clock() }
        end

        -- Static timers decrease over time, so we calculate the remaining time
        local elapsed_time = os.clock() - (Enemy_Balance_Data[actionType].last_start_time or 0)
        local remaining_time = static_avg_times[actionType] - elapsed_time

        if remaining_time &lt; 0 then
            remaining_time = 0 -- Prevent negative times
        end

        return tonumber(string.format("%.2f", remaining_time)) -- Return the countdown value formatted
    end

    -- Fallback to normal logic for dynamic actions
    if not Enemy_Balance_Data[actionType] then
        -- Initialize dynamic actions if not present
        Enemy_Balance_Data[actionType] = { last_start_time = os.clock(), balance_times = {}, avg_time = 0 }
    end

    -- Calculate remaining time based on the average for dynamic actions
    local elapsed_time = os.clock() - (Enemy_Balance_Data[actionType].last_start_time or 0)
    local remaining_time = Enemy_Balance_Data[actionType].avg_time - elapsed_time

    if remaining_time &lt; 0 then remaining_time = 0 end -- Ensure no negative values

    return tonumber(string.format("%.2f", remaining_time)) -- Format to two decimal places
end


</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>curing</name>
					<packageName></packageName>
					<script></script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>pipes</name>
						<packageName></packageName>
						<script>function parse_plist()
    local pipenames = {
        ["slippery elm"] = "elm",
        ["a valerian leaf"] = "valerian",
        ["a skullcap flower"] = "skullcap",
        ["a pinch of ground malachite"] = "malachite",
        ["a pinch of realgar crystals"] = "realgar",
        ["a pinch of ground cinnabar"] = "cinnabar",
    }
    
    local id = tonumber(matches[3])
    local herb = pipenames[matches[4]]
    local puffs = tonumber(matches[5])
    local status = matches[2]

    if not pipes then
        pipes = {}
    end

    if herb and id and puffs and status then  
        pipes[herb] = { id = id, puffs = puffs, lit = status, names = herb }

        -- Initialize names array if it doesn't exist
        if not pipes.names then
            pipes.names = {}
        end
        
        if not table.contains(pipes.names, herb) then
          table.insert(pipes.names, herb)  -- Add the herb name to the names array
        end

        if not (pipes[herb].lit == "artf") and (pipes[herb].lit == "out") then
            send("light " .. pipes[herb].id, false)
            pipes[herb].lit = "lit"
        end
    end
end


function refilled_pipe(herb)

  local pipenames =
    {
      ["slippery elm"] = "elm",
      ["a valerian leaf"] = "valerian",
      ["a skullcap flower"] = "skullcap",
      ["a pinch of ground malachite"] = "malachite",
      ["a pinch of realgar crystals"] = "realgar",
      ["a pinch of ground cinnabar"] = "cinnabar",
    }

  local herb = pipenames[herb] 

  pipes[herb].puffs = 10 
   
  if pipes[herb].lit ~= "artf" then
      send("light " .. pipes[herb].id, false)
      pipes[herb].lit = "lit"
  end
end

-- func
--parselist parses, this is the end of parselist

function parse_plist_end()
  -- fill up at least one of each first
  if not pipes or not pipes.names then return end
  for id = 1, #pipes.names do
    local i = pipes.names[id]
    if pipes[i] and pipes[i].id == 0 and next(pipes.empties) then
      pipes[i].id = pipes.empties[#pipes.empties].id
      if pipes.empties[#pipes.empties].status == "Lit" then
        pipes[i].lit = true
      else
        pipes[i].lit = false
      end
      -- if
      if pipes.empties[#pipes.empties].arty then
        pipes[i].arty = true
      end
      -- if
      pipes.empties[#pipes.empties] = nil
    end
    -- if
  end
  -- for
end

-- func

function puff_count(herb)

  if pipes[herb] == nil then
    send("plist")
  end

  pipes[herb].puffs = pipes[herb].puffs - 1
  cecho("\n&lt;tomato&gt; " .. herb:title() .. " &lt;white&gt;(&lt;green&gt;" .. pipes[herb].puffs .. "&lt;white&gt;) &lt;green&gt;puffs left")
  
end


-- empty out pipes
function empty_pipes()

  if not (systemLoaded) then
    return
  end
  
  if systemPaused then
    return
  end

  if inslowcuringmode() then 
    return 
  end

  if balance_data.stunned.in_use then
    return
  end

  for herb, data in pairs(pipes) do
    if type(data) == "table" then
    
        if not (selfishness) and not (table.contains(myaffs, "paralysis")) and not(failsafe) then
          send("empty " .. data.id .. " out ")
        end
      end
   end
   
   refill_pipes()
   
end

function refill_pipes()

  if not (systemLoaded) then
    return
  end
  
  if systemPaused then
    return
  end

  if inslowcuringmode() then 
    return 
  end

  if balance_data.stunned.in_use then
    return
  end

  for herb, data in pairs(pipes) do
    -- Ensure 'data' is a table and contains a 'puffs' key
      if type(data) == "table" and data.puffs then
        if not table.contains(mydefs, "selfishness") 
           and not table.contains(myaffs, "paralysis") 
           and not failsafe 
           and not hunting then
          if data.puffs &lt;= pipes.refill then
            send("empty " .. data.id .. " out")
          end
        end
      end
    end
   

   
end


-- func</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>vitals</name>
						<packageName></packageName>
						<script>function vitalsGMCP()

  --GMCP LOADED
  if not (systemLoaded) then
    return
  end    
  
  
vitals.health.previous = vitals.health.current
vitals.health.current = tonumber(gmcp.Char.Vitals.hp) or vitals.health.halflife
vitals.mana.previous = vitals.mana.current
vitals.mana.current = tonumber(gmcp.Char.Vitals.mp) or vitals.mana.halflife
vitals.ep.previous = vitals.ep.current
vitals.ep.current = tonumber(gmcp.Char.Vitals.ep) or vitals.ep.halflife
vitals.wp.previous = vitals.wp.current
vitals.wp.current = tonumber(gmcp.Char.Vitals.wp) or vitals.wp.halflife
vitals.rank.previous = vitals.rank.current
vitals.rank.current = tonumber(string.cut(gmcp.Char.Status.xp, 2)) or .5

  --GMCP UPDATES
  updateCharStats()
  updateGUIGauges()


  if systemPaused then
    return
  end

  if inslowcuringmode() then 
    return 
  end

  if balance_data.stunned.in_use then
    return
  end

  
  -- Ensure values are not nil
  if fullsipping then
    siphealth =
      (
        vitals.health.current == vitals.health.halflife and
        vitals.mana.current == vitals.mana.halflife
      ) and
      vitals.maxHealth or
      (vitals.maxHealth * 0.99)
    sipmana =
      (
        vitals.health.current == vitals.health.halflife and
        vitals.mana.current == vitals.mana.halflife
      ) and
      vitals.maxMana or
      (vitals.maxMana * 0.99)
  else
    siphealth =
      (
        vitals.health.current == vitals.health.halflife and
        vitals.mana.current == vitals.mana.halflife
      ) and
      vitals.maxHealth or
      (vitals.maxHealth - (vitals.maxHealth * 0.17))
    --0.2968
    sipmana =
      (
        vitals.health.current == vitals.health.halflife and
        vitals.mana.current == vitals.mana.halflife
      ) and
      vitals.maxMana or
      (vitals.maxMana * 0.73)
  end

      
      if vitals.health.current &gt; 0 then
        if dead then
          dead = false
          raiseEvent("characterRespawn")
        end
        if vitals.health.current &lt; healthdanger and vitals.mana.current &lt; manadanger then
          promptcd = promptcd or 0
          if isPrompt() and promptcd &lt; os.clock() and not table.contains(myaffs, "blackout") then
            cecho("&lt;red&gt;!!! YOU ARE IN INSTAKILL RANGE !!! ")
            promptcd = os.clock() + 2
          end
        end
      else
        if not dead then
          dead = true
          raiseEvent("characterDeath")
        end
      end
      
      --RECKLESS CHECK
      recklessCheck()

  
end

registerAnonymousEventHandler("gmcp.Char.Vitals", vitalsGMCP)</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>sipper</name>
						<packageName></packageName>
						<script>function sipper()
  if not (systemLoaded) then
    return
  end
  
  if systemPaused then
    return
  end

  if inslowcuringmode() then 
    return 
  end

  if balance_data.stunned.in_use then
    return
  end

  -- Check if we are bleeding and need to prioritize mana
  if bleedcheck() &gt; 200 then
    if not (healthaffsabove == 99) then
      healthaffsabove = 99
      send("CURING HEALTHAFFSABOVE 99")
    end
    -- Prioritize mana to clot bleeding
    handleSipping("mana")
    return
  end

  -- Prioritize health or mana based on health and mana status
  local affToHeal = maxLimbDamage()
  if affToHeal and vitals.health.current &gt;= siphealth then
    if not(healthaffsabove == 49) then
      healthaffsabove = 49
      send("CURING HEALTHAFFSABOVE 39")
    end
    --applyHealthToLimb(affToHeal)
  else
    -- Not a priority health case, handle mana sipping if necessary
    if not (healthaffsabove == 99) then
      healthaffsabove = 99
      send("CURING HEALTHAFFSABOVE 99")
    end
    handleSipping("health")
  end
end


function handleSipping(sipPriority)
  if not (systemLoaded) then
    return
  end
  
  if systemPaused then
    return
  end

  if inslowcuringmode() then 
    return 
  end

  if balance_data.stunned.in_use then
    return
  end

  if not sipbalance then
    return
  end
  
  -- Default to health if no sip priority provided
  if not sipPriority then
    sipPriority = "health"
  end
  
  local sipCommand = determineSipCommand(sipPriority)
  if sipCommand then
    sipbalance = false
    if sippriority ~= sipCommand then
      sippriority = sipCommand
      send(sipCommand)
    end
    silentTempTimer(
      4.5,
      function()
        sipbalance = true
      end
    )
  end
end

function determineSipCommand(sipPriority)
  local healthLow = vitals.health and vitals.health.current and siphealth and vitals.health.current &lt;= siphealth or false
  local manaLow = vitals.mana and vitals.mana.current and sipmana and vitals.mana.current &lt;= sipmana or false
  
  if sipPriority == "health" then
    if healthLow then
      return "curing priority health"
    elseif manaLow then
      return "curing priority mana"
    end
  else
    if manaLow then
      return "curing priority mana"
    elseif healthLow then
      return "curing priority health"
    end
  end
  return nil
end


function handleMoss()
  local cs = cmdsep
  
  if not mossbalance or not mossenabled or balance_data.stunned.in_use or systemPaused or inslowcuringmode() then
    return
  end
    
  mosshealth = vitals.maxHealth - 800
  mossmana = vitals.maxMana - 800
  
  if (vitals.health.current &lt;= mosshealth) or (vitals.mana.current &lt;= mossmana) then
    local command =
      cureMethod == "alchemical" and "outr potash"..cs.."eat potash" or "outr moss"..cs.."eat moss"
    send(command)
    mossbalance = false
  end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>fractures</name>
						<packageName></packageName>
						<script>-- function to get highest limb damage, fractures, tendons, etc check.

function maxLimbDamage()
  local highestCount = 0
  local highestAff = nil
  local relevantAffs =
    {
      burning = false,
      pressure = false,
      temperedcholeric = false,
      temperedmelancholic = false,
      temperedphlegmatic = false,
      temperedsanguine = false,
      torntendons = true,
      wristfractures = true,
      skullfractures = true,
      crackedribs = true,
    }
  for aff, count in pairs(mystackableaffs) do
    if relevantAffs[aff] and count &gt; 2 and count &gt; highestCount then
      highestCount = count
      highestAff = aff
    end
  end
  return highestAff
end

-- Function to apply health to the corresponding limb

function applyHealthToLimb(affliction)

  if not (systemLoaded) then
    return
  end
  
  if systemPaused then
    return
  end

  if inslowcuringmode() then 
    return 
  end

  if balance_data.stunned.in_use then
    return
  end

 local limbMapping = {
      crackedribs = "torso",
      torntendons = "legs",
      wristfractures = "arms",
      skullfractures = "head"
  }

  local limb = limbMapping[affliction]
  if limb then
      send("apply health to " .. limb)
  end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>clotting</name>
						<packageName></packageName>
						<script>	--elseif aff[1] == "corruption" then
		--send("curing clotat 180",false)

function clotcheck()

  if not (systemLoaded) then
    return
  end
  
  if systemPaused then
    return
  end

  if inslowcuringmode() then 
    return 
  end

  if balance_data.stunned.in_use then
    return
  end
  
  if table.contains(myaffs, "blackout") then
    return
  end
  
    if table.contains(myaffs, "paralysis") or table.contains(myaffs, "haemophilia") and vitals.wp.current &gt; 30 then
      return
    end
    
    if
      not table.contains(myaffs, "haemophilia") and
      not table.contains(myaffs, "corruption") and
      not table.contains(myaffs, "aeon") and
      not table.contains(myaffs, "blackout") and
      not inslowcuringmode()
    then
      if enemyclass["alchemist"].enabled then
        if
          tonumber(gmcp.Char.Vitals.hp) &gt;= tonumber(healthdanger) and
          tonumber(gmcp.Char.Vitals.mp) &gt;= tonumber(manadanger)
        then
          clotcalc()
        end
      else
        clotcalc()
      end
    end
end


function clotcalc()
  local cs = cmdsep
  bleeddanger = clotat
  local magirobesmult = 0
  if magirobes then
    magirobesmult = (60 * 0.33333333333)
  end
  --instakill at 60%
  local classreference =
    {
      alchemist = {bleed = 140, mana = .7, health = .66},
      bard = {bleed = 90, mana = .25, health = .75},
      priest = {bleed = 220, mana = .8, health = .66},
      shaman = {bleed = 180, mana = .51, health = .66},
      apostate = {bleed = 220, mana = .51, health = .25},
      blademaster = {bleed = 90, mana = 0, health = .75},
      waterlord = {bleed = 90, mana = .25, health = .75},
      depthswalker = {bleed = 90, mana = .61, health = .50},
      dragon = {bleed = 90, mana = .25, health = .50},
      druid = {bleed = 90, mana = .25, health = .50},
      jester = {bleed = 90, mana = .25, health = .75},
      magi = {bleed = 90, mana = .25, health = .50},
      monk = {bleed = 90, mana = .25, health = .25},
      occultist = {bleed = 90, mana = .25, health = .75},
      sentinel = {bleed = 90, mana = .25, health = .66},
      serpent = {bleed = 90, mana = .25, health = .75},
      sylvan = {bleed = 90, mana = .25, health = .75},
      unnamable = {bleed = 90, mana = .25, health = .50},
      runewarden = {bleed = 90, mana = .25, health = .50},
      infernal = {bleed = 90, mana = .25, health = .50},
      paladin = {bleed = 90, mana = .25, health = .50},
      airlord = {bleed = 90, mana = .25, health = .75},
      firelord = {bleed = 90, mana = .60, health = .66},
      earthlord = {bleed = 90, mana = .25, health = .50},
    }
    
  healthdanger = (tonumber(gmcp.Char.Vitals.maxhp) or 7500) * 0.5
  manadanger = (tonumber(gmcp.Char.Vitals.maxmp) or 11000) * 0.5  

  local tenclots = 0
  local clotcount = 0
  local clotstring = ""
  local dangerflag = false
  local manaperclot = 60 - magirobesmult
  if gmcp.Char.Vitals.maxmp then
    last_manadanger = manadanger
  elseif last_manadanger ~= nil and gmcp.Char.Vitals.maxmp == nil then
    manadanger = last_manadanger
  end
  if gmcp.Char.Vitals.maxhp then
    last_healthdanger = healthdanger
  elseif last_healthdanger ~= nil and gmcp.Char.Vitals.maxhp == nil then
    healthdanger = last_healthdanger
  end
  local bleedperclot = 30
  local possibleclot = 0
  local availablemana = tonumber(gmcp.Char.Vitals.mp)
  local bleeding = bleedcheck()
  local clotnum = math.floor(bleeding / bleedperclot)
  local clotmana = clotnum * manaperclot
  if clotcd &lt; os.clock() then
    clotcd = os.clock() + 0.5
    for k, v in pairs(classreference) do
      if enemyclass[k].enabled then
        bleeddanger = v.bleed
        manadanger = tonumber(gmcp.Char.Vitals.maxmp) * v.mana
        healthdanger = tonumber(gmcp.Char.Vitals.maxhp) * v.health
      else
        bleeddanger = 0
        manadanger = 2500
        healthdanger = 2500
      end
    end
    math.floor(clotnum)
    if clotnum &gt; 0 then
      for i = 1, clotnum, 1 do
        clotstring = clotstring .. "clot"..cs..""
        clotcount = clotcount + 1
        if clotcount &gt; 9 then
          clotcount = 0
          clotstring = ""
          tenclots = tenclots + 1
        end
      end
    end
    if tenclots &gt;= 1 or clotcount &gt;= 1 then
      myDebugEcho(
        "white", string.format("Clot Count: %s %s", tostring(tenclots), tostring(clotstring))
      )
    end
    clotcd = os.clock() + .5
    if not (clotstring == "") then
      clotcd = os.clock() + .5
      if bleeding &gt;= bleeddanger and (tonumber(gmcp.Char.Vitals.mp) - clotmana) &gt; manadanger then
        for i = 1, tenclots, 1 do
          send("clot"..cs.."clot"..cs.."clot"..cs.."clot"..cs.."clot"..cs.."clot"..cs.."clot"..cs.."clot"..cs.."clot"..cs.."clot")
        end
        send(clotstring)
      end
    end
  end
end

function bleedcheck()
  if systemLoaded then
    if
      tonumber(string.sub(gmcp.Char.Vitals.charstats[1], 8, #gmcp.Char.Vitals.charstats[1])) &gt; 0
    then
      return tonumber(string.sub(gmcp.Char.Vitals.charstats[1], 8, #gmcp.Char.Vitals.charstats[1]))
    else
      return 0
    end
  end
end

function bleedcheckprompt()
  if systemLoaded then
    if
      tonumber(string.sub(gmcp.Char.Vitals.charstats[1], 8, #gmcp.Char.Vitals.charstats[1])) &gt; 0
    then
      return
        "&lt;white&gt;bld(&lt;yellow&gt;" ..
        tonumber(string.sub(gmcp.Char.Vitals.charstats[1], 8, #gmcp.Char.Vitals.charstats[1])) ..
        "&lt;white&gt;) "
    elseif
      tonumber(string.sub(gmcp.Char.Vitals.charstats[1], 8, #gmcp.Char.Vitals.charstats[1])) &gt; bleeddanger
    then
      return
        "&lt;white&gt;bld(&lt;red&gt;" ..
        tonumber(string.sub(gmcp.Char.Vitals.charstats[1], 8, #gmcp.Char.Vitals.charstats[1])) ..
        "&lt;white&gt;) "
    else
      --return "&lt;white&gt;bld(0) "
      return ""
    end
  else
    return ""
  end
end

-- register the affliction add event handler
registerAnonymousEventHandler("gmcp.Char.Vitals", clotcheck)</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>limbBroken</name>
						<packageName></packageName>
						<script>function limbBroken(limb)  
  for k,v in pairs(myaffs) do
    if (k:match("mangled") or k:match("broken") or k:match("damaged")) and k:match(limb) then
      return true
    end
  end
  return false
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>retardation</name>
						<packageName></packageName>
						<script>function inslowcuringmode()
  if table.contains(myaffs, "retardation") or table.contains(myaffs, "aeon") then
    return true
  else
    return false
  end
end

function retard_mode(mode)
  if mode then
    cansend = true
    retard_check_count = 0
    if not table.contains(myaffs, "retardation") then
      table.insert(myaffs, "retardation")
      if not (clotat) == 5000 then
        clotat = 5000
      end
    end
  else
    retard_check_count = 0
    if table.contains(myaffs, "retardation") then
      removeElement(myaffs, "retardation")
      if not (clotat) == 70 then
        clotat = 70
      end
    end
  end
end

function wrong_dir()
  gmcp.Room.WrongDir = ""
  -- resets wrong direction room check
  movementmethod = ""
end

function tumble_dir_end()
  gmcp.Room.WrongDir = ""
  -- resets wrong direction room check
  movementmethod = ""
end

function tumble_dir_start()
  movementmethod = ""
end

function room_num_check()
  local room_num = gmcp.Room.Info.num
  local wildernesslist = {"Hills", "Mountains"}
  if room_num ~= current_room_num then
    current_room_num = room_num
    gmcp.Room.WrongDir = ""
    darktimer = 0
    hindered = false
    blocking = false
    retard_mode(false)
    captureDirection()
    evaderequested = false
    disableTimer("evade requested")
  end
end

function room_num_reset()
  gmcp.Room.WrongDir = ""
  if evading then
    evading = false
    movementmethod = ""
    boxDisplay("EVADING CANCELLED", "red")
  elseif tumbling == 1 then
    tumbling = 0
    movementmethod = ""
    boxDisplay("TUMBLING CANCELLED", "red")
  end
end

registerAnonymousEventHandler("gmcp.Room.Info", room_num_check)</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>recklessCheck</name>
						<packageName></packageName>
						<script>function recklessCheck()
    local cs = cmdsep

    -- Early exit if system is not loaded, paused, in slow curing mode, or stunned
    if not systemLoaded or systemPaused or inslowcuringmode() or balance_data.stunned.in_use then
        return
    end

    if failsafe or hunting then
    
    -- Debugging: Print health and mana to check their values
    --cecho("&lt;yellow&gt;Health: " .. vitals.health.current .. " / " .. (vitals.maxHealth or "N/A") .. "\n")
    --cecho("&lt;yellow&gt;Mana: " .. vitals.mana.current .. " / " .. (vitals.maxMana or "N/A") .. "\n")
    
    -- Check if health and mana are either at critical half-life or max
    if (vitals.health.current == vitals.health.halflife and vitals.mana.current == vitals.mana.halflife) or
       (vitals.health.current == vitals.maxHealth and vitals.mana.current == vitals.maxMana and
        vitals.wp.current == vitals.maxWp and vitals.ep.current == vitals.maxEp ) then
        --cecho("&lt;green&gt;Reckless Check triggered! Health and Mana at critical or max.\n")

        -- Handle different reckless check stages
        if reckless_check == 30 or reckless_check == 60 or reckless_check == 90 then
            cecho("\n&lt;orange&gt;Reckless Check: &lt;red&gt;" .. reckless_check)
        end

        -- Reset reckless_check if health or mana is not maxed or at half-life
        if reckless_check &gt; 0 and
           (gmcp.Char.Vitals.hp ~= gmcp.Char.Vitals.maxhp or gmcp.Char.Vitals.mp ~= gmcp.Char.Vitals.maxmp) then
            reckless_check = 0
        end
        
        -- Increment the reckless check counter (try increasing the increment to 1 to speed it up)
        reckless_check = reckless_check + 1
        
        -- When reckless_check reaches or exceeds 30 and recklessness isn't present, trigger prediction
        if reckless_check &gt;= 90 and not table.contains(myaffs, "recklessness") then
            -- Predict recklessness only if neither focus nor herb is in use
            if not balance_data.focus.in_use then
               -- send("focus")
            elseif not balance_data.herb.in_use then
                send("curing predict recklessness")
            end
            
            -- Reset the reckless_check counter
            reckless_check = 0
        end
    else
        -- Reset reckless_check if health or mana conditions aren't met
        reckless_check = 0
    end
    
    end
end
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>numberOfAffs</name>
						<packageName></packageName>
						<script>function numberOfAffs()
  local dangerLimbs = {"brokenleftleg", "brokenrightleg", "brokenleftarm", "brokenrightarm"}
  local i = 0
  for _, v in pairs(dangerLimbs) do
    if table.contains(myaffs, v) then
      i = i + 1
    end
  end
  return i + affcount()
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>mystackableaffs</name>
						<packageName></packageName>
						<script>function stackableaffprompt()
  local affprompt = ""
  if systemLoaded then
  
    --psion
    if mystackableaffs.unweavingmind &gt; 0 then
      affprompt = affprompt .. "&lt;white&gt; [unwmnd &lt;white&gt;" .. mystackableaffs.unweavingmind .. "], "
    end
    
    if mystackableaffs.unweavingbody &gt; 0 then
      affprompt = affprompt .. "&lt;white&gt; [unwbdy &lt;white&gt;" .. mystackableaffs.unweavingbody .. "], "
    end    

    if mystackableaffs.unweavingspirit &gt; 0 then
      affprompt = affprompt .. "&lt;white&gt; [unwspr &lt;white&gt;" .. mystackableaffs.unweavingspirit .. "], "
    end      
  
    --airlord
    if mystackableaffs.pressure &gt; 0 then
      affprompt = affprompt .. "&lt;white&gt; [prs &lt;white&gt;" .. mystackableaffs.pressure .. "], "
    end
    --magi
    if mystackableaffs.burning &gt; 0 then
      affprompt =
        affprompt .. "&lt;dark_orange&gt;brn(&lt;white&gt;" .. mystackableaffs.burning .. "&lt;dark_orange&gt;) "
    end
    --twohander
    if mystackableaffs.torntendons &gt; 0 then
      affprompt =
        affprompt .. "&lt;cyan&gt; (ten &lt;white&gt;" .. mystackableaffs.torntendons .. "&lt;cyan&gt;)&lt;white&gt;, "
    end
    if mystackableaffs.wristfractures &gt; 0 then
      affprompt =
        affprompt .. "&lt;cyan&gt; (wri &lt;white&gt;" .. mystackableaffs.wristfractures .. "&lt;cyan&gt;)&lt;white&gt;, "
    end
    if mystackableaffs.skullfractures &gt; 0 then
      affprompt =
        affprompt .. "&lt;cyan&gt; (sku &lt;white&gt;" .. mystackableaffs.skullfractures .. "&lt;cyan&gt;)&lt;white&gt;, "
    end
    if mystackableaffs.crackedribs &gt; 0 then
      affprompt =
        affprompt .. "&lt;cyan&gt;(bru &lt;white&gt;" .. mystackableaffs.crackedribs .. "&lt;cyan&gt;)&lt;white&gt;, "
    end
    --alchemist
    if mystackableaffs.temperedsanguine &gt; 0 then
      affprompt =
        affprompt .. "&lt;cyan&gt;(SaH &lt;white&gt;" .. mystackableaffs.temperedsanguine .. "&lt;cyan&gt;)&lt;white&gt;, "
    end
    if mystackableaffs.temperedmelancholic &gt; 0 then
      affprompt =
        affprompt .. "&lt;cyan&gt;(MeH &lt;white&gt;" .. mystackableaffs.temperedmelancholic .. "&lt;cyan&gt;)&lt;white&gt;, "
    end
    if mystackableaffs.temperedcholeric &gt; 0 then
      affprompt =
        affprompt .. "&lt;cyan&gt;(ChH &lt;white&gt;" .. mystackableaffs.temperedcholeric .. "&lt;cyan&gt;)&lt;white&gt;, "
    end
    if mystackableaffs.temperedphlegmatic &gt; 0 then
      affprompt = affprompt .. "&lt;cyan&gt;(PlH &lt;white&gt;" .. mystackableaffs.temperedphlegmatic .. "&lt;cyan&gt;)&lt;white&gt;, "
    end
    if mystackableaffs.horror &gt; 0 then
      affprompt = affprompt .. "&lt;cyan&gt;(PlH &lt;white&gt;" .. mystackableaffs.horror .. "&lt;cyan&gt;)&lt;white&gt;, "
    end    
  end
  return affprompt
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>burnapply</name>
						<packageName></packageName>
						<script>function burnapply()
  local hppercent = tonumber(gmcp.Char.Vitals.hp) / tonumber(gmcp.Char.Vitals.maxhp)
		if hppercent &lt; (mystackableaffs.burning * .25) then
			return true
		else
			return false
		end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>restoreScenarios</name>
						<packageName></packageName>
						<script>function restoreScenarios()
  local myAffs = myaffs
  local contains = table.contains

  if not (systemLoaded) then
    return
  end
  
  if systemPaused then
    return
  end

  if inslowcuringmode() then 
    return 
  end

  local function shouldRestore()
    return not restoring and not balance_data.equilibrium.in_use
  end

  local function attemptRestore()
    tryingtodo("RESTORE")
    send("restore")
  end

  -- Scenario 1: Multiple specific afflictions
  if (contains(myAffs, "brokenrightarm") or contains(myAffs, "brokenleftarm")) and 
     (contains(myAffs, "damagedleftarm") or contains(myAffs, "damagedrighttarm")) and 
     contains(myAffs, "paralysis") and contains(myAffs, "slickness") and contains(myAffs, "asthma") then
    attemptRestore()
  end

  -- Scenario 2: Damaged legs and broken arm
  if (contains(myAffs, "damagedleftleg") and contains(myAffs, "damagedrightleg")) and 
     (contains(myAffs, "brokenleftarm") or contains(myAffs, "brokenrightarm")) and 
     shouldRestore() then
    attemptRestore()
  end

  -- Scenario 3: Damaged arms and broken leg
  if (contains(myAffs, "damagedleftarm") and contains(myAffs, "damagedrightarm")) and 
     (contains(myAffs, "brokenleftleg") or contains(myAffs, "brokenrightleg")) and 
     shouldRestore() then
    attemptRestore()
  end

  -- Vivimode scenario
  if vivimode and shouldRestore() then
    attemptRestore()
    vivimode = false
  end

  -- Broken arm scenario
  if (contains(myAffs, "brokenleftarm") or contains(myAffs, "brokenrightarm")) and 
     not vivimode and shouldRestore() then
    attemptRestore()
    vivimode = false
  end
end


 
 
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>balances</name>
						<packageName></packageName>
						<script>function balanceGMCP()

    if not (systemLoaded) then
      return
    end
    
    if systemPaused then
      return
    end
  
    --if inslowcuringmode() then 
      --return 
    --end
  
    --if balance_data.stunned.in_use then
     -- return
    --end

    -- Handle balance
    if gmcp.Char.Vitals.bal ~= "1" and not(balance_data.balance.in_use) then
            
        meditating = false
        balanceStart("balance",false)   
    else
        if hunting and autohunting then
          if table.contains(myaffs, "blackout") then
            huntNext()
          end
        end
         
    end

    -- Handle equilibrium
    if gmcp.Char.Vitals.eq ~= "1" and not(balance_data.equilibrium.in_use) then
         balanceStart("equilibrium",false)
    end
       
    
end

-- Function to start a balance update
function balanceStart(balanceType, highlight)
    -- Check if balance is already in use
    
    if balance_data[balanceType].in_use then
        local remaining_time = getRemainingPersonalTimerTime(balanceType)
        if remaining_time &gt; 0 then
            myTimerEcho(DEBUG_MODE, balanceType, "&lt;white&gt;" .. remaining_time, "white")
            return
        end
    end   
    
    --reset all timer stopwatches' on stun
    if balanceType == "stunned" then
        sipStopwatch = nil
        treeStopwatch = nil
        smokeStopwatch = nil
        fitnessStopwatch = nil
        herbStopwatch = nil
        salveStopwatch = nil
        focusStopwatch = nil
        balanceStopwatch = nil
        equilibriumStopwatch = nil
        shruggingStopwatch = nil
        stunStopwatch = nil
        dragonhealStopwatch = nil
        restoreStopwatch = nil 
        antidoteStopwatch = nil 
     end      
    
    -- Start balance process
    balance_data[balanceType].in_use = true
    
    silentTempTimer(balance_data[balanceType].avg_time, function() balance_data[balanceType].in_use = false end)
    
    -- create stopwatch
    balance_data[balanceType .. "Stopwatch"] = createStopWatch()
    --local stopwatch = balanceType .. "Stopwatch"
    --stopwatch = createStopWatch()
    -- Set up timer to trigger recoverFunction after average balance time
    local time_to_wait = 0
    
    -- Adjust time to wait for specific afflictions
    if table.contains(myaffs, "lethargy") then
        time_to_wait = (balance_data[balanceType].avg_time * 1.25)
    else
        time_to_wait = balance_data[balanceType].avg_time
    end
    
    if time_to_wait &gt; 0 and table.contains(myaffs, "blackout") then
        tempTimer(
            time_to_wait,
            function()
                if balance_data[balanceType].in_use and table.contains(myaffs, "blackout") then
                    balanceRecover(balanceType)
                end
            end
        )
    end

    -- Track last started type for health or mana
    if balanceType == "health" or balanceType == "mana" then
        lastSipType = balanceType
        sipbalance = false
    end 

    if balance_data[balanceType].in_use then
      remedy:clearPipelineOnCommand(balanceType)
    end
    
   --if balanceType == "tree" then
      --remedy:clearPipelineOnCommand("tree")
   --end
    
   -- if balanceType == "shrugging" then
    -- remedy:clearPipelineOnCommand("shrugging")
   -- end
    
   -- if balanceType == "dragonheal" then
    --  remedy:clearPipelineOnCommand("dragonheal")
  -- end
    
   -- if balanceType == "fitness" then
    --  remedy:clearPipelineOnCommand("fitness")
  --  end    


  if highlight then
    highlightline(selectString(line, 1) &gt; -1, "black", "orange", false, true)  
  end
    
end

-- Function to recover from a balance update
function balanceRecover(balanceType, highlight)

   
    -- Reset balance in_use status and handle stopwatch
    balance_data[balanceType].in_use = false
    
    remedy:clearPipelineOnCommand(balanceType)
    
    local stopwatch = balance_data[balanceType .. "Stopwatch"]
    
    
    if not(balanceType == "free") then
      -- Check if stopwatch exists before proceeding
      if stopwatch then
          -- Call stopStopWatch and check if it returns a valid number
          local stopwatchValue = stopStopWatch(stopwatch)
          
          if stopwatchValue then
              local balanceTime = trimDecimal(stopwatchValue - getNetworkLatency())
              
              -- Print balanceTime if no blackout affliction
              if not table.contains(myaffs, "blackout") then
                  cecho("&lt;white&gt; :&lt;PowderBlue&gt;(&lt;DarkSlateGray&gt;" .. balanceTime .. "&lt;PowderBlue&gt;)")
              end
          else
             if DEBUG_MODE then cecho("&lt;red&gt;Warning: stopStopWatch returned nil for stopwatch " .. tostring(stopwatch)) end
          end
          
          -- Clean up the stopwatch
          deleteStopWatch(stopwatch)
      else
          if DEBUG_MODE then cecho("\n&lt;red&gt;Warning: Stopwatch does not exist for balanceType: " .. tostring(balanceType)) end
      end
      
    end

    if getRemainingPersonalTimerTime(balanceType) &gt; 0 then
        getRemainingPersonalTimerTime(balanceType)
    end

    -- Determine the correct balance type for health or mana
    if balanceType == "health" or balanceType == "mana" then
        balanceType = lastSipType or balanceType
        sipbalance = true
    end

    if balanceType == "stunned" or balanceType == "balance" then
       commandSent = false
       if hunting and autohunting then
          huntNext()
       end   
    end

   if highlight then 
      highlightline(selectString(line, 1) &gt; -1, "black", "green", false, true)
   end
end

-- Main function to handle balance updates
function balanceTracker()
    local balances = {
        free = {
            ["start"] = {"NO DATA FOUND"},
            ["end"] = {"^You stand up%.$"},
            ["used"] = {"SAME AS START LINE"},        
        
        },
        wake = {
            ["start"] = {"^You begin your struggle to escape from the dreamworld%.$"},
            ["end"] = {
              "^You open your eyes and stretch languidly, feeling deliciously well-rested%.$",
              "^You open your eyes and yawn mightily%.$",
            },
            ["used"] = {"SAME AS START LINE"},
        }, 
        writhe = {
            ["start"] = {"^You begin to struggle free of your entanglement%.$"},
            ["end"] = {"^You have writhed free of your entanglement by %w+%.$"},
            ["used"] = {"^You twist and turn as you attempt to escape from your entanglement%.$"},
        },        
        stunned = {
            ["start"] = {"^You are too stunned to be able to do anything%.$"},
            ["end"] = {"^You are no longer stunned%.$"},
            ["used"] = {"SAME AS START LINE"},
        }, 
        balance = {
            ["start"] = {"USING GMCP"},
            ["end"] = {"^You have recovered balance on all limbs%.$"},
            ["used"] = {"^You must regain balance first%.$"},
        }, 
        equilibrium = {
            ["start"] = {"USING GMCP"},
            ["end"] = {"^You have recovered equilibrium%.$"},
            ["used"] = {
                "^You must regain equilibrium first%.$",
                "^You are recovering equilibrium and cannot move yet%.$"
            },            
        },
        health = {
            ["start"] = {
                "^The elixir heals and soothes you%.$",
                "^You take some elixir from .+ and rub it into your %w+%.$"
            },
            ["end"] = {"^You may drink another health or mana elixir%.$"},
            ["used"] = {
                "^The elixir flows down your throat without effect%.$",
                "^The health elixir fizzles away without any discernable effect%.$",
                "^The elixir fizzles uselessly%.$"
            },            
        }, 
        mana = {
            ["start"] = {"^Your mind feels stronger and more alert%.$"},
            ["end"] = {"^You may drink another health or mana elixir%.$"},
            ["used"] = {"^The elixir flows down your throat without effect%.$"},
        },                               
        tree = {
            ["start"] = {"^You touch the tree of life tattoo%.$"},
            ["end"] = {"^You may utilise the tree tattoo again%.$"},
            ["used"] = {"^Your tree of life tattoo glows faintly for a moment then fades, leaving you unchanged%.$"},
        },     
        focus = {
            ["start"] = {"^You focus your mind intently on curing your mental maladies%.$"},
            ["end"] = {"^Your mind is able to focus once again%.$"},
            ["used"] = {"^You concentrate, but your mind is too tired to focus%.$"},
        }, 
        smoke = {
            ["start"] = {"^You take a long drag of %w+ off your pipe%.$"},
            ["end"] = {"^Your lungs have recovered enough to smoke another mineral or plant%.$"},
            ["used"] = {"^Your lungs have not yet recovered enough to allow you to smoke%.$"},
        }, 
        antidote = {
            ["start"] = {"^Mercifully, the voyria venom has been cleansed from your body%.$"},
            ["end"] = {"^Your system is able to absorb antidotes once again%.$"},
            ["used"] = {"SAME AS HEALTH AND MANA"},            
        },        
        salve = {
            ["start"] = {"^You take out some salve and quickly rub it on your %w+%.$"},
            ["end"] = {"^You may apply another salve to yourself%.$"},
            ["used"] = {"^You messily spread the salve over your body, to no effect%.$"},
        },                
        herb = {
            ["start"] = {
                "^You eat [aA]n? .+flake%.$",
                "^You eat [aA]n? .+chip%.$",
                "^You eat [aA]n? .+grain%.$",
                "^You eat [aA]n? .+root%.$",
                "^You eat [aA]n? .+leaf%.$",
                "^You eat [aA]n? .+pellet%.$"
            },            
            ["end"] = {"^You may eat another plant or mineral%.$"},
            ["used"] = {"^The plant has no effect%.$"},
        },
        shrugging = {
            ["start"] = {"^Focusing inward, you purge your body of afflictions%.$"},
            ["end"] = {"^Your body has recovered enough to shrug afflictions once again%.$"},
            ["used"] = {"^You may not shrug again so soon%.$"},
        },        
        fitness = {
            ["start"] = {"^You inhale deeply, purging yourself of your asthmatic condition%.$"},
            ["end"] = {"^You may purge your lungs once again%.$"},
            ["used"] = {"^You may not purge your lungs again as of this time%.$"},
        }, 
        dragonheal = {
            ["start"] = {"^You let out a great keening, and cast the impurities from your form%.$"},
            ["end"] = {"^You may purge your great form of afflictions once again%.$"},
            ["used"] = {"^You have not yet recovered enough to purge your great form of afflictions%.$"},
        }
    }

    local currentLine = getCurrentLine()
    
    if currentLine == "You may eat another bit of irid moss or potash." then

      mossbalance = false
       if mossStopwatch then
          local mossTime = trimDecimal(stopStopWatch(mossStopwatch) - getNetworkLatency()) 
          cecho("&lt;white&gt; :&lt;PowderBlue&gt;(&lt;DarkSlateGray&gt;" .. mossTime .. "&lt;PowderBlue&gt;)")
          deleteStopWatch(mossStopwatch)
       end      
      highlightline(selectString(line, 1) &gt; -1, "black", "orange", false, true)
      return

    elseif currentLine == "You feel your health and mana replenished." then

      mossbalance = true
      mossStopwatch = createStopWatch()
      highlightline(selectString(line, 1) &gt; -1, "black", "green", false, true)
      return
     
    else
    
      for balanceType, actions in pairs(balances) do
          for action, patterns in pairs(actions) do
              for _, pattern in ipairs(patterns) do
                  -- Check for an exact match with the pattern
                  if string.match(currentLine, pattern) then
                      if action == "start" then
                          balanceStart(balanceType,true)
                          return
                      elseif action == "end" then
                          balanceRecover(balanceType,true)
                          return
                      elseif action == "used" then
                          balance_data[balanceType].in_use = true
                          return
                      end
                  end
              end
          end
       end
   end
end

function balanceTime(balanceType)
    
    if balanceType == "nil" then
      cecho("\n&lt;red&gt;There is no balance tyep for:" .. balanceType)
      return
    end
    
    local baseTime = balance_data[balanceType].avg_time
    local modifiers = get_aff_modifiers(balanceType)
    local modified = false
    local foundAffliction = ""
    local myaffsSet = {}

    -- Check if there are any recorded balance times of given type
    if baseTime ~= 0 then
        -- Check if there are any modifiers for the given balance type
        for _, modifier in pairs(modifiers) do
            if myaffsSet[modifier.affliction] then
                foundAffliction = modifier.affliction
                baseTime = baseTime * (modifier.multiplier or 1) + (modifier.offset or 0)
                modified = true
                break  -- Exit the loop as soon as an affliction is found
            end
        end
    end

    if modified then
        myTimerEcho(
            DEBUG_MODE,
            balanceType,
            "\n&lt;red&gt;" ..
            balance_data[balanceType].echo_title ..
            "&lt;red&gt; has been modified by &lt;white&gt;" ..
            (baseTime - balance_data[balanceType].avg_time) ..
            " &lt;red&gt; seconds due to the affliction &lt;white&gt;" ..
            foundAffliction:upper() ..
            ".",
            "red"
        )
    end

    return baseTime
end

registerAnonymousEventHandler("gmcp.Char.Vitals", balanceGMCP)</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>afflictions</name>
					<packageName></packageName>
					<script></script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>add</name>
						<packageName></packageName>
						<script>-- Function to handle the addition of afflictions
function handleAfflictionAdd()

    local templist = {
        insomnia = true,
        blindness = true,
        deafness = true,
       -- ["burning [1]"] = true
    }

    local affName = gmcp.Char.Afflictions.Add.name

    -- Check if affName is not in templist and not already in myaffs
    if not templist[affName] and not table.contains(myaffs, affName) then
        -- Check if affName contains a number in parentheses
        local num = string.match(affName, "%((%d+)%)")
        if num then
            -- Extract the affliction name without the number and store the number
            local baseName = string.match(affName, "^(.-)%s")
            if baseName then
                mystackableaffs[baseName] = tonumber(num)
            end
        else
            -- Otherwise, insert affName into myaffs (direct assignment)
                myaffs[#myaffs + 1] = affName
                remedy:process()
                
                if affName == "blackout" then
                  if not table.contains(predictions, "disrupted") then
                    table.insert(predictions, "disrupted")
                    send("CURING PREDICT DISRUPTED")
                   end
                   
                         if hunting and autohunting and not commandSent then
                            huntNext()
                         end
                   
                end

            -- Debugging: Only construct the message if DEBUG_MODE is enabled
            if DEBUG_MODE then
                remedy:echo("\nYou have " .. #myaffs .. " afflictions.")
            end
        end
    end
end

registerAnonymousEventHandler("gmcp.Char.Afflictions.Add", handleAfflictionAdd)

</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>remove</name>
						<packageName></packageName>
						<script>-- Function to handle the removal of afflictions
function handleAfflictionRemove()
    local cs = cmdsep
    local affInfo = gmcp.Char.Afflictions.Remove
    local affInfoTable = {}  -- Create lookup table for affInfo

    -- Populate affInfoTable for O(1) lookups
    for _, aff in ipairs(affInfo) do
        affInfoTable[aff] = true
    end

    -- Iterate backwards through myaffs to safely remove items while looping
    for i = #myaffs, 1, -1 do
        local removal = myaffs[i]

        -- Check if the affliction exists in affInfoTable
        if affInfoTable[removal] then
            onCureSuccess(removal)  -- Handle curing success
            table.remove(myaffs, i)  -- Remove from myaffs directly


             if removal == "blackout" and hunting and autohunting and not commandSent then
                huntNext()
             end


            -- Check and reset priority in curinglist
            if afflictions and afflictions[removal] then
                local defaultPriority = afflictions[removal].priority

                -- Check if curinglist[removal] is set correctly before resetting
                if curinglist[removal] then
                    -- Only reset if the current priority is not the same as the default
                    if curinglist[removal] ~= defaultPriority then
                        -- Generate priority command
                        local command = "curing prio " .. removal .. " " .. defaultPriority

                        -- Add to sentPriorityCommands if not already sent
                        if not sentPriorityCommands[removal] then
                            sentPriorityCommands[removal] = defaultPriority  -- Store the priority value
                            if tumbling then 
                                -- do nothing
                            else
                              send(command)
                            end
                        end
                    end
                end
            end
        end
    end

    -- **Failsafe check**: Ensure all afflictions in curinglist match their default priorities
    onCureFailsafe()

    -- Reset mystackableaffs if myaffs is empty
    if #myaffs == 0 then
        mystackableaffs = {
            torntendons = 0,
            skullfractures = 0,
            crackedribs = 0,
            wristfractures = 0,
            pressure = 0,
            burning = 0,
            temperedsanguine = 0,
            temperedmelancholic = 0,
            temperedphlegmatic = 0,
            temperedcholeric = 0,
            unweavingmind = 0,
            unweavingbody = 0,
            unweavingspirit = 0,
            horror = 0,
        }
    end
end




-- Function to handle failsafe check and ensure curinglist matches default priorities
function onCureFailsafe()
    local cs = cmdsep
    local priorityCommandList = {}  -- List to accumulate commands

    -- **Failsafe check**: Ensure all afflictions in curinglist match their default priorities
    for affliction, currentPriority in pairs(curinglist) do
        -- Make sure the affliction is not in the `myaffs` table (not already cured)
        if afflictions[affliction] and not table.contains(myaffs, affliction) then
            local defaultPriority = afflictions[affliction].priority
            -- If curinglist priority is not the same as the default, queue the reset command
            if currentPriority ~= defaultPriority then
                local command = "curing prio " .. affliction .. " " .. defaultPriority

                -- Only add the command if it hasn't been sent already
                if not sentPriorityCommands[affliction] or sentPriorityCommands[affliction] ~= defaultPriority then
                    sentPriorityCommands[affliction] = defaultPriority  -- Mark as sent globally
                    table.insert(priorityCommandList, command)
                end

            end
        end
    end

    -- Ensure we send all necessary commands
    if #priorityCommandList &gt; 0 then
        send(table.concat(priorityCommandList, cs))
    end
end




function onPriorityResetSent(affliction, priority)
    -- This function will be triggered once we receive confirmation that the priority has been set
    -- Example: "You have set the 'brokenrightarm' affliction to the 19 priority."

    -- Clear the affliction from the sentPriorityCommands table after confirmation
    if sentPriorityCommands[affliction] then
        --cecho("&lt;green&gt;Confirmed: " .. affliction .. " priority set to " .. priority .. "\n")
        sentPriorityCommands[affliction] = nil  -- Remove the affliction from the table after confirmation
    end
end



-- Register the GMCP event for removing afflictions
registerAnonymousEventHandler("gmcp.Char.Afflictions.Remove", handleAfflictionRemove)
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>diagnose</name>
						<packageName></packageName>
						<script>function diagnose()
  if systemLoaded then
   -- initializeCureBalance()
    myaffs = {}
    pipeline.afflictions = {}
    hiddenaff = 0
    mystackableaffs =
      {
        torntendons = 0,
        skullfractures = 0,
        crackedribs = 0,
        wristfractures = 0,
        pressure = 0,
        burning = 0,
        temperedsanguine = 0,
        temperedmelancholic = 0,
        temperedphlegmatic = 0,
        temperedcholeric = 0,
      }      
    local templist = {"insomnia", "blindness", "deafness"}
    for i = 1, #gmcp.Char.Afflictions.List, 1 do
      if not table.contains(templist, gmcp.Char.Afflictions.List[i].name) then
        --and not table.contains(stackables, gmcp.Char.Afflictions.List[i].name) then
        if not table.contains(myaffs, gmcp.Char.Afflictions.List[i].name) then
          if string.find(gmcp.Char.Afflictions.List[i].name, "%(") then
            mystackableaffs[
              string.sub(
                gmcp.Char.Afflictions.List[i].name,
                1,
                string.find(gmcp.Char.Afflictions.List[i].name, " ") - 1
              )
            ] =
              tonumber(
                string.sub(
                  gmcp.Char.Afflictions.List[i].name,
                  string.find(gmcp.Char.Afflictions.List[i].name, "%(") + 1,
                  string.find(gmcp.Char.Afflictions.List[i].name, "%(") + 1
                )
              )
          else
            table.insert(myaffs, gmcp.Char.Afflictions.List[i].name)           
          end
        end
      end
    end
  end 
 

 
 
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>afflictionCount</name>
						<packageName></packageName>
						<script>function afflictionCount(herb, amount)
    local herblist = { 
        kelp = {"asthma", "clumsiness", "hypochondria", "sensitivity", "weariness", "healthleech", "parasite", "rebbies"},
        ginseng = {"unweavingbody","addiction", "darkshade", "haemophilia", "lethargy", "nausea", "scytherus", "flushings"},
        goldenseal = {"unweavingmind","dizziness", "epilepsy", "impatience", "shyness", "stupidity", "depression","dissonance", "shadowmadness", "mycalium", "sandfever", "horror"},
        lobelia = {"agoraphobia", "guilt", "spiritburn", "tenderskin", "claustrophobia", "loneliness", "masochism", "recklessness", "vertigo"},
        ash = {"confusion", "dementia", "hallucinations", "hypersomnia", "paranoia"},
        bellwort = {"pyre","retribution","timeloop", "peace","justice","lovers","pacified","generosity","indifference"},
        ginger = {"temperedcholeric","temperedmelancholic","temperedphlegmatic","temperedsanguine"},
    }

    local stack = herblist[herb:lower()]
    local count = 0
    local amount = amount or 4
  
    for k, _ in pairs(myaffs) do
        if (herb:lower() == "goldenseal" and (table.contains(stack, k) or string.starts(k, "unweavingm") or k == "horror")) or
           (herb:lower() == "ginseng" and (table.contains(stack, k) or string.starts(k, "unweavingb"))) or
           (herb:lower() ~= "goldenseal" and herb:lower() ~= "ginseng" and table.contains(stack, k)) then
            count = count + 1
        end
        if count == amount then
            return true
        end
    end
    
    return false
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>handleAfflictionPriority</name>
						<packageName></packageName>
						<script>-- Define a table to hold class-affliction priorities
-- Define a table to hold class-affliction priorities
local classAfflictionPriorities = {
    airlord = {
        herb= {             
            pressure = {key = false, temp = 1, primary = afflictions["pressure"].priority},
            paralysis = {key = false, temp = 2, primary = afflictions["paralysis"].priority}
        }, 
    },  
    apostate = {
        herb= {             
            asthma = {key = true, temp = 1, primary = afflictions["asthma"].priority},
            slickness = {key = false, temp = 2, primary = afflictions["slickness"].priority},
            paralysis = {key = false, temp = 3, primary = afflictions["paralysis"].priority}
        },
        smoke = {
            manaleech = {key = false, temp = 1, primary = afflictions["manaleech"].priority},
            hellsight = {key = false, temp = 2, primary = afflictions["hellsight"].priority},
            slickness = {key = false, temp = 3, primary = afflictions["slickness"].priority}
        },
    },     
    bard = {
        herb= {             
            asthma = {key = true, temp = 1, primary = afflictions["asthma"].priority},
            impatience = {key = false, temp = 2, primary = afflictions["impatience"].priority},
            paralysis = {key = false, temp = 3, primary = afflictions["paralysis"].priority}
        },
    },               
    serpent = {
        herb = {
            impatience = {key = true, temp = 1, primary = afflictions["impatience"].priority},
            asthma = {key = false, temp = 2, primary = afflictions["asthma"].priority},
            paralysis = {key = false, temp = 3, primary = afflictions["paralysis"].priority},
            darkshade = {key = false, temp = 4, primary = afflictions["darkshade"].priority}
        },
        smoke = {
            slickness = {key = true, temp = 1, primary = afflictions["slickness"].priority},
            aeon = {key = false, temp = 2, primary = afflictions["aeon"].priority},
            hellsight = {key = false, temp = 3, primary = afflictions["hellsight"].priority}
        },     
    },
    depthswalker = {
        herb = {
            timeloop = {key = true, temp = 1, primary = afflictions["timeloop"].priority},
            hypochondria = {key = true, temp = 2, primary = afflictions["hypochondria"].priority},
            depression = {key = true, temp = 3, primary = afflictions["depression"].priority},
            asthma = {key = true, temp = 4, primary = afflictions["asthma"].priority},
            impatience = {key = false, temp = 5, primary = afflictions["impatience"].priority},
            paralysis = {key = false, temp = 6, primary = afflictions["paralysis"].priority}
        },
        smoke = {
            aeon = {key = true, temp = 1, primary = afflictions["aeon"].priority},
            slickness = {key = false, temp = 2, primary = afflictions["slickness"].priority},
            hellsight = {key = false, temp = 3, primary = afflictions["hellsight"].priority}
        },
    },
    magi = {
        herb = {
            fulminated = {key = true, temp = 1, primary = afflictions["fulminated"].priority},
            asthma = {key = true, temp = 2, primary = afflictions["asthma"].priority},
            healthleech = {key = true, temp = 3, primary = afflictions["healthleech"].priority},
            paralysis = {key = false, temp = 4, primary = afflictions["paralysis"].priority}
        },
    },  
    pariah = {
        herb = {
            pyramides = {key = true, temp = 1, primary = afflictions["pyramides"].priority},
            sandfever = {key = true, temp = 2, primary = afflictions["sandfever"].priority},
            flushings = {key = true, temp = 3, primary = afflictions["flushings"].priority},
            rebbies = {key = true, temp = 4, primary = afflictions["rebbies"].priority},
            mycalium = {key = true, temp = 5, primary = afflictions["mycalium"].priority},
            haemophilia = {key = true, temp = 6, primary = afflictions["haemophilia"].priority},
            asthma = {key = true, temp = 7, primary = afflictions["asthma"].priority},
            paralysis = {key = false, temp = 8, primary = afflictions["paralysis"].priority}
        },
    }, 
    psion = {
        herb = {
            unweavingbody = {key = true, temp = 1, primary = afflictions["unweavingbody"].priority},
            paralysis = {key = false, temp = 2, primary = afflictions["paralysis"].priority}
        },
    },       
    sentinel = {
        herb = {
            haemophilia = {key = true, temp = 1, primary = afflictions["haemophilia"].priority},
            asthma = {key = true, temp = 2, primary = afflictions["asthma"].priority},
            impatience = {key = true, temp = 3, primary = afflictions["impatience"].priority},
            paralysis = {key = false, temp = 4, primary = afflictions["paralysis"].priority}
        },
    },  
    sylvan = {
        herb = {
            paralysis = {key = false, temp = 1, primary = afflictions["paralysis"].priority}
        },
        salve = {
            heartseed = {key = true, temp = 1, primary = afflictions["heartseed"].priority},
        }
    },
    shaman = {
        herb = {
            haemophilia = {key = true, temp = 1, primary = afflictions["haemophilia"].priority},
            asthma = {key = true, temp = 2, primary = afflictions["asthma"].priority},
            impatience = {key = true, temp = 3, primary = afflictions["impatience"].priority},
            paralysis = {key = false, temp = 4, primary = afflictions["paralysis"].priority}
        },
    },  
    paladin = {
        herb = {
            horror = {key = true, temp = 1, primary = afflictions["horror"].priority},
            paralysis = {key = false, temp = 2, primary = afflictions["paralysis"].priority}
        },
    },
    unnamable = {
        herb = {
            horror = {key = true, temp = 1, primary = afflictions["horror"].priority},
            paralysis = {key = false, temp = 2, primary = afflictions["paralysis"].priority}
        },
    },  
    infernal = {
        herb = {
            horror = {key = true, temp = 1, primary = afflictions["horror"].priority},
            paralysis = {key = false, temp = 6, primary = afflictions["paralysis"].priority}
        },
    },  
    runewarden = {
        herb = {
            horror = {key = true, temp = 1, primary = afflictions["horror"].priority},
            paralysis = {key = false, temp = 2, primary = afflictions["paralysis"].priority}
        },
    },
}

-- Add more classes and their corresponding affliction priorities here as needed


-- Function to swap priorities based on the current affliction
local function swapAfflictionPriorities(afflictionKey)
    for class, classData in pairs(classAfflictionPriorities) do
        if enemyclass[class] and enemyclass[class].enabled then
            for curativeType, afflictions in pairs(classData) do
                if afflictions[afflictionKey] and afflictions[afflictionKey].key then
                    -- Assign the highest priority to the swapped affliction
                    afflictions[afflictionKey].priority = 1

                    -- Reorder the other priorities
                    local tempPriority = 2
                    for affliction, prioData in pairs(afflictions) do
                        if affliction ~= afflictionKey then
                            afflictions[affliction].priority = tempPriority
                            tempPriority = tempPriority + 1
                        end
                    end
                end
            end
        end
    end
end


-- Function to reset priorities for afflictions
local function resetAfflictionPriorities(afflictionKey)
    for class, classData in pairs(classAfflictionPriorities) do
        if enemyclass[class] and enemyclass[class].enabled then
            for curativeType, afflictions in pairs(classData) do
                if afflictions[afflictionKey] and afflictions[afflictionKey].key then
                    afflictions[afflictionKey].priority = afflictions[afflictionKey].primary
                end
            end
        end
    end
end


-- Function to handle affliction priority
function handleAfflictionPriority(event, aff)
    if not (systemLoaded) or systemPaused or balance_data.stunned.in_use then
        return
    end

    if event == "gained affliction" then
        -- Handle specific affliction cases
        if enemyclass.airlord.enabled and mystackableaffs.pressure &gt; 3 then
            swapAfflictionPriorities("pressure")
        end
        
        if enemyclass.apostate.enabled and table.contains(myaffs, "asthma") and table.contains(myaffs, "manaleech") then
            swapAfflictionPriorities("asthma")
            return
        end
        
        if enemyclass.bard.enabled then
            if table.contains(myaffs, "asthma") and table.contains(myaffs, "impatience") then
                swapAfflictionPriorities("impatience")
                return
            end
            swapAfflictionPriorities(aff)
        end

        -- Other classes and their logic...

    elseif event == "removed affliction" then
        resetAfflictionPriorities(aff)

        -- Handle specific cases for afflictions...
    end
end

-- Register event handlers
--registerAnonymousEventHandler("gained affliction", handleAfflictionPriority)
--registerAnonymousEventHandler("removed affliction", handleAfflictionPriority)
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>save</name>
						<packageName></packageName>
						<script>function saveCurativeTable()
      -- Define the base directory for the C: drive
    local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
    local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"
    
    -- Save `cityenemylist.lua` in `C:/Users/YourUsername/Documents/Achaean System/Tables/`
    ensureFileExists(tablesDir, "curinglist.lua", "save", curinglist)

end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>afflictionTableList</name>
						<packageName></packageName>
						<script>local afflictionTableList = {
    "freezing",
    "coldfate",
    "manaleech",
    "anorexia",
    "calcifiedskull",
    "epilepsy",
    "hatred",
    "fear",
    "internalbleeding",
    "rebbies",
    "loneliness",
    "enlightenment",
    "degenerate",
    "pressure",
    "impatience",
    "dizziness",
    "silver",
    "blackout",
    "webbed",
    "mangledrightarm",
    "solarburn",
    "shadowmadness",
    "guilt",
    "haemophilia",
    "shivering",
    "deteriorate",
    "temperedsanguine",
    "calcifiedtorso",
    "inquisition",
    "demonstain",
    "lapsingconsciousness",
    "addiction",
    "burning",
    "slimeobscure",
    "skullfractures",
    "masochism",
    "disloyalty",
    "unconciousness",
    "clumsiness",
    "darkshade",
    "aeon",
    "peace",
    "stupidity",
    "healthleech",
    "agoraphobia",
    "bound",
    "concussion",
    "tenderskin",
    "airfisted",
    "mangledleftleg",
    "claustrophobia",
    "brokenleftarm",
    "torntendons",
    "flamefisted",
    "mangledrightleg",
    "indifference",
    "shyness",
    "heartseed",
    "numbedleftarm",
    "hypersomnia",
    "flushings",
    "generosity",
    "icefisted",
    "sleeping",
    "blistered",
    "confusion",
    "damagedleftleg",
    "bruisedribs",
    "vertigo",
    "recklessness",
    "hellsight",
    "hecatecurse",
    "voyria",
    "latched",
    "deathsickness",
    "pacified",
    "ablaze",
    "wristfractures",
    "brokenrightleg",
    "weariness",
    "waterbonds",
    "paralysis",
    "vitrified",
    "vitiated",
    "prone",
    "crackedribs",
    "vinewreathed",
    "damagedrightleg",
    "selarnia",
    "unweavingmind",
    "unweavingbody",
    "retribution",
    "damagedhead",
    "numbedrightarm",
    "horror",
    "slickness",
    "kaisurge",
    "entangled",
    "transfixation",
    "tonguetied",
    "timeflux",
    "timeloop",
    "asphyxiating",
    "impaled",
    "dazzled",
    "temperedmelancholic",
    "spiritburn",
    "stuttering",
    "frozen",
    "trueblind",
    "palpatarfeed",
    "slashedthroat",
    "fulminated",
    "brokenrightarm",
    "silenced",
    "serioustrauma",
    "unweavingspirit",
    "scalded",
    "sensitivity",
    "scrambledbrains",
    "scytherus",
    "sandfever",
    "disrupted",
    "lovers",
    "revealed",
    "damagedrightarm",
    "disfigurement",
    "pyre",
    "deadening",
    "pyramides",
    "pinshot",
    "phlogisticated",
    "petrified",
    "voidfisted",
    "cremated",
    "parasite",
    "paranoia",
    "grievouswounds",
    "nausea",
    "hypothermia",
    "mycalium",
    "dehydrated",
    "mindravaged",
    "dementia",
    "mangledhead",
    "mangledleftarm",
    "lightbind",
    "lethargy",
    "enmesh",
    "laceratedthroat",
    "dazed",
    "kkractlebrand",
    "crushedthroat",
    "itching",
    "temperedphlegmatic",
    "ensorcelled",
    "dissonance",
    "condemned",
    "daeggerimpale",
    "mildtrauma",
    "hypochondria",
    "hamstrung",
    "hallucinations",
    "depression",
    "muddled",
    "temperedcholeric",
    "damagedleftarm",
    "asthma",
    "justice",
    "brokenleftleg",
}
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>changeHandlePriorities</name>
						<packageName></packageName>
						<script>function changeHandlePriorities(curativeName, action, type)
    local foundHandles = {}

    -- Iterate through the afflictions to find handles for the specified curative
    for afflictionName, details in pairs(afflictions) do
        -- Check if the current affliction has a name matching the curativeName
        if details.name == curativeName then
            for _, cure in ipairs(details.cures) do  -- Accessing cures
                -- Store handles by type
                foundHandles[cure.type] = foundHandles[cure.type] or {}
                table.insert(foundHandles[cure.type], {handle = cure.handle, name = details.name})
                --cecho("&lt;green&gt;Found handle: " .. cure.handle .. " for " .. curativeName .. "&lt;green&gt;\n")
            end
        end
    end

    -- Check if we found any handles
    if next(foundHandles) == nil then
        cecho("&lt;red&gt;No handles found for curative '" .. curativeName .. "'!&lt;red&gt;\n")

        -- Link to reopen main priority list
        cechoLink(
            "[Priority List]",
            function()
                curativePriorityList(type)
            end,
            "open main priority list",
            true
        )

        echo "\n"
        return
    else
        cecho("\n&lt;green&gt;Handles for curative '" .. curativeName .. "':&lt;green&gt;\n")

        -- Link to reopen main priority list
        cechoLink(
            "[Priority List]",
            function()
                curativePriorityList(type)
            end,
            "open main priority list",
            true
        )

        echo "\n"
    end

    -- Print the handles and their clickable options for each type
    for handleType, handles in pairs(foundHandles) do
        for _, handleData in ipairs(handles) do
            local handle = handleData.handle
            local name = handleData.name

            cecho("\n&lt;white&gt;Handle: [" .. handleType .. "] " .. handle .. " for " .. name .. "&lt;white&gt;\n")

            -- Link to raise the handle value
            cechoLink(
                "[Raise]",
                function()
                    changeHandlePriority(name, "raise", handleType)
                end,
                "Raise Handle for " .. name,
                true
            )

            echo " "

            -- Link to lower the handle value
            cechoLink(
                "[Lower]",
                function()
                    changeHandlePriority(name, "lower", handleType)
                end,
                "Lower Handle for " .. name,
                true
            )

            echo "\n"
        end
    end
end



function changeHandlePriority(curativeName, action, type)
  local found = false

  -- Iterate through the afflictions to find the specified curative
  for afflictionName, details in pairs(afflictions) do
    if details.name == curativeName then
      for _, cure in ipairs(details.cures) do
        if cure.type == type then
          found = true
          if action == "raise" then
            -- Raise handle decreases the value (but no lower than 1)
            cure.handle = math.max((cure.handle or 1) - 1, 1)
            cecho("\n&lt;green&gt;Handle for " .. curativeName .. " raised to " .. cure.handle .. "&lt;green&gt;\n")
          elseif action == "lower" then
            -- Lower handle increases the value (but no higher than 100)
            cure.handle = math.min((cure.handle or 1) + 1, 100)
            cecho("\n&lt;red&gt;Handle for " .. curativeName .. " lowered to " .. cure.handle .. "&lt;red&gt;\n")
          end
          break
        end
      end
      if found then break end  -- Exit the outer loop if found
    end
  end

  if not found then
    cecho("\n&lt;red&gt;Curative '" .. curativeName .. "' not found for type '" .. type .. "'!&lt;red&gt;\n")
    return
  end

    -- Define the base directory for the C: drive
    local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
    local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables" 
    local filename = myclass()  .. "prios.lua"
    ensureFileExists(tablesDir, filename, "save", afflictions)

    -- Refresh the display after changing handle priority
    changeHandlePriorities(curativeName, "refresh", type)
    


    
end


</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>curativePriorityList</name>
						<packageName></packageName>
						<script>function curativePriorityList(type)
    -- Debugging: Print the type received
    cecho("\n&lt;green&gt;Type Received: " .. type .. "&lt;green&gt;\n")

    local foundCuratives = {}

    -- Iterate through the afflictions to find matching types
    for afflictionName, details in pairs(afflictions) do
        for _, cure in ipairs(details.cures) do  -- Accessing the cures from the new structure
            if cure.type == type then
                -- Insert the name and priority from the affliction details
                table.insert(foundCuratives, {
                    name = details.name,
                    priority = details.priority or 0  -- Default to 0 if not present
                })
            end
        end
    end

    -- Debugging: Check if we found any curatives
    if #foundCuratives == 0 then
        cecho("\n&lt;red&gt;No curatives found for type '" .. type .. "'!&lt;red&gt;\n")
        return
    else
        cecho("\n&lt;green&gt;Found curatives for type '" .. type .. "':&lt;green&gt;\n")
    end

    -- Sort the found curatives by priority and name
    table.sort(foundCuratives, function(a, b)
        if a.priority == b.priority then
            return a.name &lt; b.name
        else
            return a.priority &lt; b.priority
        end
    end)

    -- Print the sorted list
    for _, curativeData in ipairs(foundCuratives) do
        local curative = curativeData.name
        local priority = curativeData.priority

        cechoLink(
            "[Raise]",
            function()
                changeCurativePriority(curative, "raise", type)
            end,
            "Raise Priority for " .. curative:title(),
            true
        )
        
        echo " "
        
        cechoLink(
            "[Lower]",
            function()
                changeCurativePriority(curative, "lower", type)
            end,
            "Lower Priority for " .. curative:title(),
            true
        )
        
        cecho(" &lt;white&gt;[&lt;green&gt;" .. priority .. "&lt;white&gt;] " .. curative .. "")
        
        cechoLink(
            " [-]",
            function()
                changeHandlePriorities(curative, "refresh", type)
            end,
            "Open handles for " .. curative:title(),
            true
        )
 
        echo "\n"
    end
end



function changeCurativePriority(curativeName, action, type)
    local curativeFound = false

    -- Iterate through all afflictions to find the matching curative
    for afflictionName, details in pairs(afflictions) do
        for _, cure in ipairs(details.cures) do  -- Accessing the cures
            if cure.type == type and details.name == curativeName then
                curativeFound = true
                if action == "raise" then
                    -- Raise priority decreases the value (but no lower than 1)
                    details.priority = math.max((details.priority or 1) - 1, 1)
                    cecho("\n&lt;green&gt;Priority for " .. curativeName .. " raised to " .. details.priority .. "&lt;green&gt;\n")
                elseif action == "lower" then
                    -- Lower priority increases the value (but no higher than 26)
                    details.priority = math.min((details.priority or 1) + 1, 26)
                    cecho("\n&lt;red&gt;Priority for " .. curativeName .. " lowered to " .. details.priority .. "&lt;red&gt;\n")
                end
                send("curing prio "..curativeName.." "..details.priority)
                break
            end
        end
        if curativeFound then break end
    end

    if not curativeFound then
        cecho("\n&lt;red&gt;Curative '" .. curativeName .. "' not found for type '" .. type .. "'!&lt;red&gt;\n")
        return
    end

    -- Optionally save the updated curative list
    -- saveCurativeTable()

        -- Define the base directory for the C: drive
    local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
    local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables" 
    local filename = myclass()  .. "prios.lua"
    ensureFileExists(tablesDir, filename, "save", afflictions)

    -- Refresh the display after changing priority
    curativePriorityList(type)
    

    
    
end
</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>defenses</name>
					<packageName></packageName>
					<script></script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>armour</name>
						<packageName></packageName>
						<script>function armour()
local Cloth      = {"Dragon", "Magi", "Psion", "Pariah"}
local Leather    = {"Bard", "Monk"}
local Ringmail   = {"Alchemist", "Apostate"}
local Scalemail  = {"Serpent", "Jester", "Shaman", "Occultist", "Depthswalker", "Blademaster"}
local Chainmail  = {"Druid", "Sentinel", "Sylvan", "Classless"}
local Splintmail = {"Priest"}
local Fullplate  = {"Paladin", "Infernal", "Runewarden", "Unnamable"}

  if gmcp.Char.Status.class:match("Dragon") then
    return "clotharmour"
  elseif gmcp.Char.Status.race == "Horkval" then
    return "clotharmour"
  elseif table.contains(Fullplate, gmcp.Char.Status.class) then
    return "fullplate"
  elseif table.contains(Splintmail, gmcp.Char.Status.class) then
    return "splintmail"
  elseif table.contains(Chainmail, gmcp.Char.Status.class) then
    return "chainmail"
  elseif table.contains(Scalemail, gmcp.Char.Status.class) then
    return "scalemail"
  elseif table.contains(Ringmail, gmcp.Char.Status.class) then
    return "ringmail"
  elseif table.contains(Leather, gmcp.Char.Status.class) then
    return "leather"
  elseif table.contains(Cloth, gmcp.Char.Status.class) then
    return "clotharmour"
  
  end
  
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>add</name>
						<packageName></packageName>
						<script>function handleDefenseAdd()
    if systemLoaded and gmcp.Char.Defences.Add and type(gmcp.Char.Defences.Add) == "table" then
        local defenseName = gmcp.Char.Defences.Add.name
        if defenseName then
            if defenseName ~= "morph" and defenseName ~= "harmony" and not string.match(defenseName, "parrying") then
                if not table.contains(mydefs, defenseName) then
                    table.insert(mydefs, defenseName)
                     if DEBUG_MODE then cecho("\n&lt;green&gt;You have "..#mydefs.." active defenses.")  end
                end
                if defenses[defenseName] then
                    defenses[defenseName].active = true
                else
                    if DEBUG_MODE then cecho("\n&lt;DarkSlateGray&gt;Warning: &lt;PowderBlue&gt;" .. tostring(defenseName) .. " &lt;DarkSlateGray&gt;is not found in defenses.\n") end
                end
                if pipeline.defenses[defenseName] then
                  pipeline.defenses[defenseName] = nil
                end                              

                if table.is_empty(pipeline.defenses) then
                  --defupmode = false
                end
               
            end
        end
    end
end

registerAnonymousEventHandler("gmcp.Char.Defences.Add", handleDefenseAdd)


</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>remove</name>
						<packageName></packageName>
						<script>function handleDefenseRemove()
    if systemLoaded and gmcp.Char.Defences.Remove and type(gmcp.Char.Defences.Remove) == "table" then
        local defenseName = gmcp.Char.Defences.Remove[1]
        if defenseName then
            if table.contains(mydefs, defenseName) then
                table.remove(mydefs, table.index_of(mydefs, defenseName))
                if defenses[defenseName] then
                    defenses[defenseName].active = false
                else
                    if DEBUG_MODE then cecho("\n&lt;DarkSlateGray&gt;Warning: Defense &lt;PowderBlue&gt;" .. defenseName .. " &lt;DarkSlateGray&gt;not found in defenses table.\n") end
                end
            end
        end
    end
end

registerAnonymousEventHandler("gmcp.Char.Defences.Remove", handleDefenseRemove)

</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>list</name>
						<packageName></packageName>
						<script>function handleDefenseList()
    if systemLoaded and gmcp.Char.Defences.List and type(gmcp.Char.Defences.List) == "table" then
      
      for k, v in pairs(defenses) do 
           v.active = false 
      end
   
   
        for _, v in pairs(gmcp.Char.Defences.List) do
            local defenseName = v.name

            if defenseName ~= "morph" and defenseName ~= "harmony" and not string.match(defenseName, "parrying") then
                if not table.contains(mydefs, defenseName) then                   
                    table.insert(mydefs, defenseName)                    
                end
                if defenses[defenseName] then
                    defenses[defenseName].active = true  -- Set active to true in defenses table
                else
                    if DEBUG_MODE then cecho("\n&lt;DarkSlateGray&gt;Warning: &lt;PowderBlue&gt;" .. tostring(defenseName) .. " &lt;DarkSlateGray&gt;is not found in defenses.\n") end
                end
                if pipeline.defenses[defenseName] then
                  pipeline.defenses[defenseName] = nil
                end
                
           
            end
        end

          if table.is_empty(pipeline.defenses) then
            --defupmode = false
          end
                  
    else
    end
end

registerAnonymousEventHandler("gmcp.Char.Defences.List", handleDefenseList)
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>dragon breath</name>
						<packageName></packageName>
						<script>-- Function to determine the breath weapon type based on the dragon race
function dragon_breath()
    -- Split the dragon race string to get the color
    breath = "Silver"
    if myclass() == "dragon" then
      local dragoncolor = string.match(gmcp.Char.Status.race, "%a+")
      --Get the breath weapon type corresponding to the color
      breath = dragoncolor
    end
    if breath_types then
        return "summon " .. breath_types[breath]
    end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>displayDefenses</name>
						<packageName></packageName>
						<script>function displayDefenses(displayType)
    -- Validate displayType argument
    if displayType ~= "keepups" and displayType ~= "defups" then
        return
    end

    -- Normalize `displayType`
    if displayType == "defups" then
        displayType = "enabled"
    elseif displayType == "keepups" then
        displayType = "keepup"
    end

    echo("\n")

    local columnWidth = 30 -- Adjust the width as needed
    local columnCount = 3 -- Number of columns to display
    local rowIndex = 0 -- Tracks the current row index

    -- List of defense categories to display
    local list = table.n_union(skillTreeList[myclass()], {"vision", "free", "survival", "herb", "salve", "smoke", "tattoo"})

    -- Create tables to store defenses categorized by their types
    local categorizedDefenses = {}

    -- Categorize defenses that are in the `list`
    for category, details in pairs(defenses) do
        -- Check if details.type is a string or a table
        if type(details.type) == "table" then
            -- Loop through each value in details.type if it's a table
            for _, defenseType in ipairs(details.type) do
                if table.contains(list, defenseType) then
                    categorizedDefenses[defenseType] = categorizedDefenses[defenseType] or {}
                    table.insert(categorizedDefenses[defenseType], details)
                end
            end
        else
            -- If details.type is a string, simply check and categorize it
            if table.contains(list, details.type) then
                categorizedDefenses[details.type] = categorizedDefenses[details.type] or {}
                table.insert(categorizedDefenses[details.type], details)
            end
        end
    end

    -- Iterate over each defense type and its associated defenses
    for index, defenseTypeName in ipairs(list) do
        local defenseType = defenseTypeName
        local defenseList = categorizedDefenses[defenseType]

        if defenseList then
            -- Add a single blank line before each section (except the first one)
            if index &gt; 1 then
                echo("\n")
            end

            -- Display the defense type as a header
            echo(defenseType:title() .. ":\n")

            -- Reset row index for this section
            rowIndex = 0

            -- Iterate over each defense in the defense list
            for _, details in ipairs(defenseList) do
                -- Adjust row and column
                if rowIndex % columnCount == 0 and rowIndex &gt; 0 then
                    echo("\n") -- Move to the next row after completing a set of columns
                end

                -- Display opening bracket
                setFgColor(0, 150, 150)
                echo("[")

                -- Display defense icon based on `displayType` and `details`
                if details[displayType] then
                    if details.drain == "mana" then
                        setFgColor(0, 0, 255)
                        cechoLink("M", function() executeDefenseFunction(details, displayType) end, details.name, true)
                    elseif details.drain == "endurance" then
                        setFgColor(0, 255, 0)
                        cechoLink("E", function() executeDefenseFunction(details, displayType) end, details.name, true)
                    else
                        setFgColor(255, 255, 255)
                        cechoLink("X", function() executeDefenseFunction(details, displayType) end, details.name, true)
                    end
                else
                    setFgColor(200, 200, 200)
                    cechoLink(" ", function() executeDefenseFunction(details, displayType) end, details.name, true)
                end

                -- Display closing bracket
                setFgColor(0, 150, 150)
                echo("] ")

                -- Display defense name
                setFgColor(200, 200, 200)
                echo(details.name)

                -- Add padding to align columns
                local padding = columnWidth - utf8.len(details.name) - 4
                echo(string.rep(" ", math.max(padding, 0)))

                -- Increment row index
                rowIndex = rowIndex + 1
            end

            -- Ensure proper spacing between sections
            --if rowIndex % columnCount ~= 0 then
            if getCurrentLine ~= "" then
                echo("\n") -- Add a new line at the end of a section
            end
        end
          
    end
    echo"\n"
end

function executeDefenseFunction(details, displayType)
    local data = details
    if displayType == "keepup" or displayType == "enabled" then
        if data[displayType] then
            data[displayType] = false
            cecho("\n&lt;white&gt;" .. string.format("%s removed for %s", displayType:title(), data.name))
        else
            data.keepup = true
            data.enabled = true
            cecho("\n&lt;white&gt;" .. string.format("%s added for %s", displayType:title(), data.name))
        end
    end

    -- Save changes, but don't refresh the display immediately to prevent overlap
    saveDefensiveTable()
     -- Normalize displayType
    if displayType == "enabled" then
        displayDefenses("defups")
    elseif displayType == "keepup" then
        displayDefenses("keepups")
    end
    

end
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>setDefensePrios</name>
						<packageName></packageName>
						<script>function setDefensePrios()


  for k,v in pairs(defenses) do
    --v.active = false
    if k == "speed" then
        v.priority = 1
    else
      if table.contains(v.cooldown, "free") or 
         table.contains(v.cooldown, "herb") or 
         table.contains(v.cooldown, "salve") or
         table.contains(v.cooldown, "smoke") 
      then
          v.priority = 2
      elseif k == "mindseye" then
            v.priority = 3
      elseif table.contains(v.cooldown, "equilibrium") then
          v.priority = 4
      elseif table.contains(v.cooldown, "balance") then
          v.priority = 5   
       end 
    end

  end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>resetActiveDefenses</name>
						<packageName></packageName>
						<script>function resetActiveDefenses()
    for k,v in pairs(defenses) do
      v.active = false
    end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>save</name>
						<packageName></packageName>
						<script>function saveDefensiveTable()
      -- Define the base directory for the C: drive
    local userHome = os.getenv("USERPROFILE") or "C:/Users/Default"
    local tablesDir = userHome .. "/Documents/" .. gmcp.Char.Status.name:title() .. " System/Tables"
    
    -- Save `cityenemylist.lua` in `C:/Users/YourUsername/Documents/Achaean System/Tables/`
    ensureFileExists(tablesDir, "defuplist.lua", "save", defenses)
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>tryToDefup</name>
						<packageName></packageName>
						<script>function tryToDefup()
     
  -- If the pipeline is empty, check for new afflictions to process
  if not meditating and not(settings.defences) then 
    fortify:process()
  else
    if defupmode and settings.defences then
      defupmode = false
      cecho("\n&lt;red&gt;Can't put up defenses while meditating.")
    end
  end
        
end</script>
						<eventHandlerList />
					</Script>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>parrying</name>
						<packageName></packageName>
						<script></script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>checkForParry</name>
							<packageName></packageName>
							<script>--This function checks for the parry decision and updates the parry string if needed.

function checkForParry()
  nowparrying = nowparrying or "parry none"
  
  if DEBUG_MODE then
    myDebugEcho("white", string.format("\nNow Parrying: %s", tostring(nowparrying)))
    myDebugEcho("white", string.format("\nParry Decision: %s", tostring(parrydecide())))
  end
  
  if nowparrying ~= parrydecide() then
    if isEnemyLocked then
      parrystring = "parry nothing" -- Ensure a valid fallback
    else
      parrystring = parrydecide() or "parry nothing" -- Fallback to "parry nothing"
    end
  end
  
  return parrystring or "parry none" -- Ensure the function never returns nil
end
</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>parrydecide</name>
							<packageName></packageName>
							<script>-- This function decides when to parry based on various conditions and returns the parry string.

function parrydecide()
  if parrymethod == "manual" then
    return nil -- Explicitly return nil for manual mode
  end

  local preppoint = myclass() == "dragon" and 5 or 4
  local fallbackParry = "torso" -- Default fallback parry
  
  -- Debug: Print current hit counts
  if DEBUG_MODE then
    for limb, count in pairs(hitcount) do
      myDebugEcho("white", "Hit count for " .. limb .. ": " .. count .. "\n")
    end
  end

  -- Handle "defend" method
  if parrymethod == "defend" then
    -- Check for first attack
    local firstAttack = true
    for _, count in pairs(hitcount) do
      if count &gt; 0 then
        firstAttack = false
        break
      end
    end
    if firstAttack then
      local limbWithHighestHitCount = findLimbWithHighestHitCount()
      if limbWithHighestHitCount then
        myDebugEcho("white", "First attack detected. Parrying limb with highest hit count.\n")
        return determineParryStringBasedOnClassOrRace(limbWithHighestHitCount)
      end
    end

    -- Check for lower limb preparation
    if preppedLowerLimbs["left leg"] then
      myDebugEcho("white", "Left leg prepped. Parrying right leg.\n")
      return determineParryStringBasedOnClassOrRace("right leg")
    elseif preppedLowerLimbs["right leg"] then
      myDebugEcho("white", "Right leg prepped. Parrying left leg.\n")
      return determineParryStringBasedOnClassOrRace("left leg")
    end

    -- Handle class-specific parrying
    local classselected = NDB_getClass(target):lower() or "none"
    if classselected:lower() ~= "none" and parrylist[classselected] then
      local parry = determineParryWhenClassIsSelected(preppoint, classselected)
      if parry then
        return determineParryStringBasedOnClassOrRace(parry)
      end
    else
      -- Handle default parry when no class is selected
      local parry = determineParryWhenNoClassSelected(preppoint)
      if parry then
        return determineParryStringBasedOnClassOrRace(parry)
      end
    end
  end

  -- Handle "stand" method
  if parrymethod == "stand" then
    if not preppedLowerLimbs["left leg"] and not preppedLowerLimbs["right leg"] then
      -- No lower limbs prepped, perform educated guess
      local guessedLimb = performEducatedGuess(preppoint)
      if guessedLimb then
        myDebugEcho("white", "Educated Guess: " .. guessedLimb .. "\n")
        return determineParryStringBasedOnClassOrRace(guessedLimb)
      end
    else
      -- One lower limb is prepped, parry the opposite limb
      if preppedLowerLimbs["left leg"] then
        myDebugEcho("white", "Left leg prepped. Parrying right leg preemptively.\n")
        return determineParryStringBasedOnClassOrRace("right leg")
      elseif preppedLowerLimbs["right leg"] then
        myDebugEcho("white", "Right leg prepped. Parrying left leg preemptively.\n")
        return determineParryStringBasedOnClassOrRace("left leg")
      end
    end
  end

  -- Default fallback if no other conditions match
  myDebugEcho("red", "No valid parry decision. Defaulting to fallback parry: " .. fallbackParry .. "\n")
  return determineParryStringBasedOnClassOrRace(fallbackParry)
end
</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>resetLimbs</name>
							<packageName></packageName>
							<script>--This function resets the hit count for each limb, sets the player's history for the set, and defines tables for prepped upper and lower limbs.

function resetLimbs()
  for _, y in ipairs({"left arm", "right arm", "left leg", "right leg", "head", "torso"}) do
    hitcount[y] = 0
  end
  -- Reset player history for this set.
  player2History = {}
  -- Define preppedUpperLimbs and preppedLowerLimbs tables
  preppedUpperLimbs = {["left arm"] = false, ["right arm"] = false}
  preppedLowerLimbs = {["left leg"] = false, ["right leg"] = false}
  if DEBUG_MODE then cecho("\n&lt;green&gt;LIMBS RESET") end
end

--This function checks the enemy's class and returns it.

function checkclass()
  if parrymethod == "manual" then
    return
  end
  for i, v in pairs(enemyclass) do
    if v.enabled then
      return i
    end
  end
  return "none"
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>attackAvoided</name>
							<packageName></packageName>
							<script>-- This function checks if an attack has been avoided based on the input line.
function attackAvoided(line, last_limb)
    -- Define common avoidance patterns for easier management
    local avoidancePatterns = {
        "You move inside ",
        "One of your reflections has been destroyed!",
        "You twist your body out of harm's way.",
        "You dodge nimbly out of the way.",
        "You quickly jump back, avoiding the attack."
    }

    -- Check if the line matches any of the avoidance patterns
    for _, pattern in ipairs(avoidancePatterns) do
        if string.starts(line, pattern) then
            return true
        end
    end

    -- Special handling for parrying
    if string.starts(line, "You parry the attack with a deft manoeuvre.") then
        local bodyPart = last_limb
        if bodyPart then
            -- Record the parry in player2History
            player2History[bodyPart] = (player2History[bodyPart] or 0) + 1
        end

        -- Check if there's a better parry option
        if parrymethod ~= "manual" then
            local newParry = checkForParry()
            if newParry and newParry ~= nowparrying then -- Ensure newParry is not nil
                if failsafe then
                    requestparry = true
                else
                    send("queue add eqbal " .. newParry)
                end
            elseif newParry == nowparrying then
                myDebugEcho("white", "Already parrying " .. parryshortname .. ".\n")
            else
                myDebugEcho("red", "Parry check returned nil. No parry action taken.\n")
            end
        end
        return true
    end

    -- If the attack wasn't avoided or parried, record it as a hit
    local bodyPart = last_limb
    if bodyPart then
        recordHit(bodyPart)
    end
    return false
end
</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>recordHit</name>
							<packageName></packageName>
							<script>-- Enhanced recordHit function with Enemy_Balance_Data integration
function recordHit(bodyPart)
    local preppoint = myclass() == "dragon" and 5 or 4

    -- Record the hit in player2History
    player2History[bodyPart] = (player2History[bodyPart] or 0) + 1

    -- Update hitcount for the body part
    hitcount[bodyPart] = (hitcount[bodyPart] or 0) + 1

    -- Record the timestamp of this hit for attack interval tracking
    table.insert(enemyAttackTimes, os.clock()) -- Use os.clock for higher precision
    if #enemyAttackTimes &gt; 10 then -- Keep only the last 10 attack intervals
        table.remove(enemyAttackTimes, 1)
    end

    -- Calculate average attack interval and update Enemy_Balance_Data
    updateAverageAttackInterval()
    local enemyClass = target and target:title() and NDB_getClass(target:title())
    if enemyClass and not Enemy_Balance_Data[enemyClass] then
        Enemy_Balance_Data[enemyClass] = { avg_time = 2.75 } -- Initialize if not present
    end
    if enemyClass then
        Enemy_Balance_Data[enemyClass].avg_time = averageAttackInterval
    end

    -- Preapply logic
    if hitcount[bodyPart] == preppoint - 1 then
        -- Use either calculated average time or default to 2.75 if no data
        local preapplyTime = math.max(
            (enemyClass and Enemy_Balance_Data[enemyClass] and Enemy_Balance_Data[enemyClass].avg_time or 2.75) - 1.5,
            1.75
        ) -- Ensure within range

        if DEBUG_MODE then
            myDebugEcho(
                "white",
                string.format(
                    "Preapplying on %s with estimated interval %.2f seconds (Preapply in %.2f seconds)",
                    bodyPart, averageAttackInterval, preapplyTime
                )
            )
        end

        tempTimer(preapplyTime, function()
            if bodyPart == "left leg" or bodyPart == "right leg" then
                send("apply restoration to legs")
            elseif bodyPart == "left arm" or bodyPart == "right arm" then
                send("apply restoration to arms")
            elseif bodyPart == "head" then
                send("apply restoration to head")
            elseif bodyPart == "torso" then
                send("apply restoration to torso")
            end
        end)
    end

    -- Debugging output
    myDebugEcho(
        "white",
        string.format(
            "Hit recorded on %s. \nTotal hits on %s: %d. Avg interval: %.2f seconds",
            bodyPart, bodyPart, hitcount[bodyPart], averageAttackInterval
        )
    )

    -- Mark limbs as prepped when hitcount reaches preppoint
    if hitcount[bodyPart] == preppoint then
        if bodyPart == "left arm" or bodyPart == "right arm" then
            preppedUpperLimbs[bodyPart] = true
        elseif bodyPart == "left leg" or bodyPart == "right leg" then
            preppedLowerLimbs[bodyPart] = true
        end
    end
end
</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>educatedGuess</name>
							<packageName></packageName>
							<script>-- Helper function to calculate the educated guess based on player2History
-- This function calculates an educated guess based on the player's history and a preppoint.

--function educatedGuess(player2History, preppoint)
  --local highestPriority = -1
  --local chosenLimb
  --for limb, priority in pairs(player2History) do
    --if hitcount[limb] and hitcount[limb] &lt;= preppoint and priority &gt; highestPriority then
      --chosenLimb = limb
      --highestPriority = priority
    --end
  --end
  --return chosenLimb
--end

function educatedGuess(player2History, preppoint)
  if not player2History or type(player2History) ~= "table" or not preppoint then
    return nil -- No valid data to process
  end

  local highestPriority = -1
  local chosenLimb
  local fallbackLimb
  local lowestDamage = math.huge -- Start with a very high damage value

  for limb, priority in pairs(player2History) do
    local limbHits = hitcount[limb]

    -- Ensure limbHits is valid and check if limb can be targeted
    if limbHits and limbHits &lt;= preppoint then
      -- Update the chosen limb based on priority
      if priority &gt; highestPriority then
        chosenLimb = limb
        highestPriority = priority
      end
    end

    -- Track the fallback limb (least damaged)
    if limbHits and limbHits &lt; lowestDamage then
      fallbackLimb = limb
      lowestDamage = limbHits
    end
  end

  -- Return the chosen limb based on priority or the least damaged limb as fallback
  return chosenLimb or fallbackLimb
end
</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>performEducatedGuess</name>
							<packageName></packageName>
							<script>-- Helper function to perform educated guess based on player2History
-- This function performs an educated guess based on the player's history and a preppoint.

function performEducatedGuess(preppoint)
    if next(player2History) then
        local guessedLimb = educatedGuess(player2History, preppoint)
        if DEBUG_MODE then
            cecho("\n&lt;yellow&gt;Educated Guess Result: " .. guessedLimb)
        end
        return guessedLimb
    end

    local fallback = parrymethod == "defend" and "torso" or "left leg"
    if DEBUG_MODE then
        self:echo("Fallback Result: " .. fallback)
    end
end  
</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>resetEducatedGuessHistory</name>
							<packageName></packageName>
							<script>-- This function resets the player's history for educated guesses.

--function resetEducatedGuessHistory()
  --player2History = {}
  --if DEBUG_MODE then cecho("\n&lt;green&gt;RESET PARRY HISTORY") end
--end

-- This function resets the player's history and related data for educated guesses.
function resetEducatedGuessHistory()
    -- Reset history of opponent's limb targeting
    player2History = {}

    -- Reset hitcount for tracking limb damage (if applicable)
    initializeHitCount()

    -- Reset parry method to a default value (optional)
    parrymethod = "defend"

    -- Optional: Reset any cached decision values (e.g., guessed limb or timers)
    lastGuessedLimb = nil -- Example variable, if used

    -- Debug output for visibility
    if DEBUG_MODE then
        cecho("\n&lt;green&gt;RESET PARRY HISTORY")
        cecho("\n&lt;yellow&gt;player2History, hitcount, and parrymethod reset to default values.")
    end
end
</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>findLimbWithHighestHitCount</name>
							<packageName></packageName>
							<script>-- Helper function to find the limb with the highest hit count
-- This function finds the limb with the highest hit count.

function findLimbWithHighestHitCount()
  local highestHitCount = -1
  local chosenLimb
  for limb, count in pairs(hitcount) do
    if count &gt; highestHitCount then
      highestHitCount = count
      chosenLimb = limb
    end
  end
  return chosenLimb
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>determineParryWhenNoClassSelected</name>
							<packageName></packageName>
							<script>-- Helper function to determine the parry decision when class is not selected
-- This function determines the parry decision when no class is selected

function determineParryWhenNoClassSelected(preppoint)
    local chosenLimb = nil
    local lastLimbHit = ""

    -- If there is player2History data, calculate an educated guess.
    if next(player2History) then
        chosenLimb = performEducatedGuess(preppoint)

        if chosenLimb then
            lastLimbHit = chosenLimb
            myDebugEcho("white", string.format("Educated Guess: %s", tostring(chosenLimb)))
        else
            -- If no educated guess, find the limb with the highest hit count.
            chosenLimb = findLimbWithHighestHitCount()
            lastLimbHit = chosenLimb
            myDebugEcho("white", string.format("Highest Hit Count: %s", tostring(chosenLimb)))
        end
    end

    -- If no valid limb was selected, default to parrying the torso.
    if not chosenLimb then
        chosenLimb = "torso"
        myDebugEcho("white", "Default to torso as all limbs are at 0.")
    end

    return chosenLimb
end
</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>determineParryWhenClassIsSelected</name>
							<packageName></packageName>
							<script>-- Helper function to determine the parry decision when a class is selected

function determineParryWhenClassIsSelected(preppoint, classselected)
    local parry = "torso" -- Default value
    local lastLimbHit = "" -- Track the last limb hit

    -- Helper function to find the limb with the highest priority from parrylist
    local function findLimbWithHighestPriority(class)
        if not parrylist[class] then
            return "torso" -- Default if no parrylist exists for the class
        end

        local limbWithHighestPriority = "torso" -- Default value
        for limb, priority in pairs(parrylist[class]) do
            -- Parry prepped limbs first, otherwise parry the limb with the highest priority
            if hitcount[limb] and hitcount[limb] &gt;= preppoint then
                return limb -- Immediately return the first prepped limb
            elseif priority == 1 then
                limbWithHighestPriority = limb -- Fallback to highest priority limb
            end
        end
        return limbWithHighestPriority
    end

    -- Step 1: Use educated guess if player2History exists and is not empty
    if next(player2History) then
        local guessedLimb = educatedGuess(player2History, preppoint)
        if guessedLimb then
            parry = guessedLimb
            lastLimbHit = guessedLimb
            if DEBUG_MODE then
                myDebugEcho("green", string.format("Educated Guess Chosen: %s", guessedLimb))
            end
        else
            -- If no valid educated guess, fall back to parrylist
            parry = findLimbWithHighestPriority(classselected)
            lastLimbHit = parry
            if DEBUG_MODE then
                myDebugEcho("yellow", string.format("Fallback to Parrylist: %s", parry))
            end
        end
    else
        -- Step 2: No player2History, directly use parrylist logic
        parry = findLimbWithHighestPriority(classselected)
        lastLimbHit = parry
        if DEBUG_MODE then
            myDebugEcho("yellow", string.format("No Player2 History, Parrylist Chosen: %s", parry))
        end
    end

    -- Debugging the final decision
    if DEBUG_MODE then
        myDebugEcho("white", string.format("Final Parry Decision: %s (Class: %s)", parry, tostring(classselected)))
    end

    return parry
end
</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>determineParryStringBasedOnClassOrRace</name>
							<packageName></packageName>
							<script>--This function determines the parry string based on the class or race of the player.

-- This function determines the parry string based on the class or race of the player.
function determineParryStringBasedOnClassOrRace(parry)
    -- Default mapping for Bard-specific parry selection
    local bardParryMapping = {
        ["left leg"] = "left",
        ["right leg"] = "right",
        ["left arm"] = "left",
        ["right arm"] = "right",
        ["torso"] = "centre",
        ["head"] = "centre"
    }

    -- Ensure `parry` has a valid value or fall back to "torso"
    parry = parry or "torso"

    -- Determine the parry string based on class or race
    if myclass() == "bard" then
        -- Logic for the Bard class
        local bardParry = bardParryMapping[parry]
        if not bardParry then
            if DEBUG_MODE then
                myDebugEcho("red", string.format("Unexpected parry value for Bard: %s. Defaulting to 'centre'.", parry))
            end
            bardParry = "centre" -- Fallback for invalid parry values
        end
        return "trueparry " .. bardParry

    elseif gmcp.Char.Status.class == "monk" then
        -- Logic for the Monk class
        return "guard " .. parry

    elseif myclass() == "dragon" then
        -- Logic for the Dragon race
        return "clawparry " .. parry

    else
        -- Default logic for other classes/races
        return "parry " .. parry
    end
end
</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>raiding</name>
					<packageName></packageName>
					<script></script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>Illusion check - Party calls</name>
						<packageName></packageName>
						<script>function isTrueCall(where, who, what)


local text = gmcp.Comm.Channel.Text.text or ""
local caller = gmcp.Comm.Channel.Text.talker or ""
local channel = gmcp.Comm.Channel.Text.channel or ""

  if text == nil then 
    return false 
  elseif text ~= nil then
    if who == caller and where == channel and text:match(what) then
    return true
    end
  end
end
</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>ship trade</name>
					<packageName>Ship Trade Path Finder 2</packageName>
					<script>shiptrade=shiptrade or {}</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>Ship Trade Options</name>
						<packageName></packageName>
						<script>--[[ Sets the max number of harbours a trade can have and be displayed normally, 7 or 8 is standard - Change to preference ]]
--
shiptrade.maxHarbourCount = 8
--[[ Paths containing the following harbours will not be displayed normally - Change to preference ]]
--
shiptrade.harbourIgnore = {"SulielW", "Karbaz", "Ageiro"}
--[[ Colors for output - Change to preference ]]
--
shiptrade.harbourColor = "DeepSkyBlue"
shiptrade.offColor = "LightGray"</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Ship Trade Path Logic</name>
						<packageName></packageName>
						<script>--[[ Contains the information with trades - Do not modify ]]
--
shiptrade.Routes = shiptrade.Routes or {}
shiptrade.ignoredRoutes = shiptrade.ignoredRoutes or {}
shiptrade.selectedRoute = shiptrade.selectedRoute or ""

function startTrade(amount, goal)
  if not table.contains(validResults, goal) then
    cecho("\n&lt;firebrick&gt;That's not something you can trade for, sorry!\n\n")
    return
  end
  cecho("\n&lt;MintCream&gt;                 \--\--\--\--\--\--\--\--\--\--\n\n")
  local route = ""
  local lastgoal = ""
  local harbourCount = 1
  local dockfees = 0
  local oldgoals = {goal}
  shiptrade.Routes = {}
  shiptrade.ignoredRoutes = {}
  shipTrade(tonumber(amount), goal, route, harbourCount, dockfees, oldgoals)
  for i, v in ipairs(shiptrade.Routes) do
    cecho("(")
    cechoLink(
      "&lt;gold&gt;" .. i,
      [[cecho("&lt;green&gt;Route Selected!") shiptrade.selectedRoute = "]] ..
      v[1] ..
      [[\n]] ..
      v[2] ..
      [["]],
      "Select this route",
      true
    )
    cecho(") " .. v[1] .. "\n" .. v[2] .. "\n\n")
  end
  if #shiptrade.ignoredRoutes &gt; 0 then
    cecho("&lt;firebrick&gt;" .. #shiptrade.ignoredRoutes .. " routes hidden\n")
  end
  cecho("&lt;MintCream&gt;                 \--\--\--\--\--\--\--\--\--\--\n")
end

function shipTrade(amount, goal, route, harbourCount, dockfees, oldgoals)
  for k, v in pairs(shipTrades) do
    for i, j in ipairs(v) do
      if j[2] == goal then
        local actualamount = amount
        while actualamount % j[1] ~= 0 do
          actualamount = actualamount + 1
        end
        if j[4] == "gold" then
          local finishroute
          local finalfees = dockfees + harbourFees[k]
          if route == "" then
            finishroute =
              "&lt;" ..
              shiptrade.harbourColor ..
              "&gt;" ..
              k ..
              ": &lt;" ..
              shiptrade.offColor ..
              "&gt;Buy " ..
              actualamount ..
              " " ..
              j[2] ..
              " for " ..
              actualamount *
              j[3] ..
              " " ..
              j[4] ..
              route
          else
            finishroute =
              "&lt;" ..
              shiptrade.harbourColor ..
              "&gt;" ..
              k ..
              ": &lt;" ..
              shiptrade.offColor ..
              "&gt;Buy " ..
              actualamount ..
              " " ..
              j[2] ..
              " for " ..
              actualamount *
              j[3] ..
              " " ..
              j[4] ..
              " &gt; " ..
              route
          end
          shipTradeEcho(finishroute, harbourCount, finalfees)
          break
        elseif table.contains(oldgoals, j[4]) then
          break
        else
          shipTradeUpdate(
            actualamount,
            j[4],
            route,
            harbourCount,
            dockfees,
            deepcopy(oldgoals),
            k,
            j[2],
            j[3] / j[1]
          )
        end
      end
    end
  end
end

function shipTradeUpdate(
  amount, goal, route, harbourCount, dockfees, oldgoals, newHarbour, lastgoal, ratio
)
  if route == "" then
    route =
      "&lt;" ..
      shiptrade.harbourColor ..
      "&gt;" ..
      newHarbour ..
      ": &lt;" ..
      shiptrade.offColor ..
      "&gt;Trade for " ..
      amount ..
      " " ..
      lastgoal ..
      route
  else
    route =
      "&lt;" ..
      shiptrade.harbourColor ..
      "&gt;" ..
      newHarbour ..
      ": &lt;" ..
      shiptrade.offColor ..
      "&gt;Trade for " ..
      amount ..
      " " ..
      lastgoal ..
      " &gt; " ..
      route
  end
  dockfees = dockfees + harbourFees[newHarbour]
  harbourCount = harbourCount + 1
  table.insert(oldgoals, goal)
  amount = math.ceil(amount * ratio)
  shipTrade(amount, goal, route, harbourCount, dockfees, oldgoals)
end

function shipTradeEcho(route, harbourCount, dockfees)
  local badRoute = false
  for i, v in ipairs(shiptrade.harbourIgnore) do
    if string.match(route, v) then
      badRoute = true
    end
  end
  if harbourCount &gt; shiptrade.maxHarbourCount or badRoute then
    table.insert(
      shiptrade.ignoredRoutes,
      {
        route,
        "(Harbours: " ..
        harbourCount ..
        ") (Fees:" ..
        dockfees ..
        ") (IT Fees: " ..
        (dockfees * 0.75) ..
        ")",
      }
    )
  else
    table.insert(
      shiptrade.Routes,
      {
        route,
        "(Harbours: " ..
        harbourCount ..
        ") (Fees:" ..
        dockfees ..
        ") (IT Fees: " ..
        (dockfees * 0.75) ..
        ")",
      }
    )
  end
end

function shipTradeHidden()
  cecho("\n&lt;firebrick&gt;                 \--\--\--\--\--\--\--\--\--\--\n\n")
  for i, v in ipairs(shiptrade.ignoredRoutes) do
    cecho("(")
    cechoLink(
      "&lt;gold&gt;" .. i,
      [[cecho("&lt;green&gt;Route Selected!") shiptrade.selectedRoute = "]] ..
      v[1] ..
      [[\n]] ..
      v[2] ..
      [["]],
      "Select this route",
      true
    )
    cecho(") " .. v[1] .. "\n" .. v[2] .. "\n\n")
  end
  for i, v in ipairs(shiptrade.Routes) do
    cecho("(")
    cechoLink(
      "&lt;gold&gt;" .. i + #shiptrade.ignoredRoutes,
      [[cecho("&lt;green&gt;Route Selected!") shiptrade.selectedRoute = "]] ..
      v[1] ..
      [[\n]] ..
      v[2] ..
      [["]],
      "Select this route",
      true
    )
    cecho(") " .. v[1] .. "\n" .. v[2] .. "\n\n")
  end
  cecho("&lt;firebrick&gt;                 \--\--\--\--\--\--\--\--\--\--\n")
end

function showSelectedRoute()
  cecho("\n&lt;gold&gt;                 \--\--\--\--\--\--\--\--\--\--\n\n")
  cecho(shiptrade.selectedRoute)
  cecho("\n\n&lt;gold&gt;                 \--\--\--\--\--\--\--\--\--\--\n")
end

shipTrades =
  {
    ["Shastaan"] =
      {
        {1, "cotton", 1000, "gold"},
        {3, "hemp", 4, "furs"},
        {1, "gems", 2, "perfume"},
        {3, "wine", 2, "perfume"},
        {1, "sandstone", 1000, "gold"},
      },
    ["Tasur'ke"] =
      {{1, "wool", 1000, "gold"}, {3, "granite", 4, "sandstone"}, {2, "kawhe", 3, "sugar"}},
    ["Thraasi"] =
      {
        {1, "ore", 1000, "gold"},
        {2, "glass", 3, "fruits"},
        {2, "armaments", 1, "spices"},
        {1, "grain", 1000, "gold"},
      },
    ["Umbrin"] =
      {{2, "porcelain", 3, "ceramics"}, {2, "armaments", 3, "wine"}, {3, "kawhe", 2, "wine"}},
    ["Mysia"] =
      {
        {2, "tabac", 3, "porcelain"},
        {2, "tabac", 3, "silk"},
        {3, "ceramics", 2, "porcelain"},
        {3, "ceramics", 2, "silk"},
      },
    ["Karbaz"] =
      {
        {2, "ceramics", 3, "honey"},
        {2, "ceramics", 3, "hemp"},
        {2, "marble", 3, "hemp"},
        {2, "marble", 3, "granite"},
      },
    ["Colchis"] =
      {{2, "silk", 3, "marble"}, {2, "perfume", 3, "incense"}, {3, "glass", 2, "incense"}},
    ["Minos"] = {{3, "honey", 4, "salt"}, {2, "wine", 3, "marble"}, {2, "wine", 3, "tea"}},
    ["SulielW"] = {{1, "furs", 1, "wool"}, {2, "incense", 3, "kawhe"}},
    ["Zanzibaar"] =
      {
        {3, "fruits", 4, "ore"},
        {2, "tea", 3, "terracotta"},
        {1, "spices", 2, "armaments"},
        {2, "perfume", 1, "gems"},
        {3, "incense", 2, "armaments"},
      },
    ["Zaphar"] = {{1, "salt", 1000, "gold"}, {3, "sugar", 4, "grain"}},
    ["Ageiro"] = {{1, "gems", 2, "tabac"}, {3, "silk", 2, "tabac"}},
    ["Shala-Khulia"] = {{2, "incense", 3, "glass"}},
    ["Orilla"] = {{3, "terracotta", 4, "cotton"}},
  }
validResults =
  {
    "tabac",
    "incense",
    "wine",
    "ceramics",
    "marble",
    "gems",
    "salt",
    "sugar",
    "terracotta",
    "silk",
    "perfume",
    "porcelain",
    "armaments",
    "honey",
    "fruits",
    "tea",
    "spices",
    "furs",
    "ore",
    "glass",
    "grain",
    "wool",
    "granite",
    "kawhe",
    "cotton",
    "hemp",
    "sandstone",
  }
harbourFees =
  {
    ["Shastaan"] = 500,
    ["Tasur'ke"] = 2000,
    ["Thraasi"] = 2000,
    ["Colchis"] = 0,
    ["Mysia"] = 1000,
    ["Orilla"] = 0,
    ["Shala-Khulia"] = 500,
    ["SulielW"] = 500,
    ["Umbrin"] = 0,
    ["Zanzibaar"] = 2000,
    ["Zaphar"] = 100,
    ["Minos"] = 0,
    ["Lothos"] = 0,
    ["Ilyrean"] = 0,
    ["EasternShore"] = 500,
    ["Mysia"] = 1000,
    ["Ageiro"] = 0,
    ["Karbaz"] = 200,
  }</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Table Copy Function</name>
						<packageName></packageName>
						<script>function deepcopy(orig)
  local orig_type = type(orig)
  local copy
  if orig_type == 'table' then
    copy = {}
    for orig_key, orig_value in next, orig, nil do
      copy[deepcopy(orig_key)] = deepcopy(orig_value)
    end
    setmetatable(copy, deepcopy(getmetatable(orig)))
  else
    -- number, string, boolean, etc
    copy = orig
  end
  return copy
end</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>inventory</name>
					<packageName></packageName>
					<script></script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>gold</name>
						<packageName></packageName>
						<script>function storeGold()
  send("get 574429 from 431298"..cmdsep.."get gold from pack"..cmdsep.."put gold in 574429"..cmdsep.."put 574429 in 431298")
end

function getGold()
  send("get 574429 from 431298"..cmdsep.."get gold from 574429"..cmdsep.."put 574429 in 431298")
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>room items</name>
						<packageName></packageName>
						<script>registerAnonymousEventHandler("gmcp.Char.Items.List", "invhandler")
registerAnonymousEventHandler("gmcp.Char.Items.Add", "invhandler")
registerAnonymousEventHandler("gmcp.Char.Items.Remove", "invhandler")
registerAnonymousEventHandler("gmcp.Char.Items.Update", "invhandler")
invhandler =
  function(event, arg)
    --print(event, arg)
    if event:find(".List") then
      -- ROOM ITEMS
      if gmcp.Char.Items.List.location == "room" then
        inv_room = {}
        for key, value in pairs(gmcp.Char.Items.List.items) do
          if value.name then
            inv_room[value.id] = {name = value.name, highlight = highlight, attrib = value.attrib}
          end
        end
      elseif gmcp.Char.Items.List.location == "inv" then
        inv = {}
        for key, value in pairs(gmcp.Char.Items.List.items) do
          if value.name then
            inv[value.id] = {name = value.name, highlight = highlight, attrib = value.attrib}
          end
        end
      end
    end
    if event:find(".Add") then
      -- ROOM ITEMS
      if gmcp.Char.Items.Add.location == "room" then
        local value = gmcp.Char.Items.Add.item
        inv_room[value.id] = {name = value.name, highlight = highlight, attrib = value.attrib}
      elseif gmcp.Char.Items.Add.location == "inv" then
        local value = gmcp.Char.Items.Add.item
        inv[value.id] = {name = value.name, highlight = highlight, attrib = value.attrib}
      end
    end
    if event:find(".Update") then
      -- Only INV Items
      local value = gmcp.Char.Items.Update.item
      inv[value.id] = {name = value.name, highlight = highlight, attrib = value.attrib}
      if value.attrib then
        inv[value.id].attrib = value.attrib
      end
    end
    if event:find(".Remove") then
      -- ROOM ITEMS
      if gmcp.Char.Items.Remove.location == "room" then
        itemKey = gmcp.Char.Items.Remove.item.id
        inv_room["" .. itemKey] = nil
      elseif gmcp.Char.Items.Remove.location == "inv" then
        itemKey = gmcp.Char.Items.Remove.item.id
        inv["" .. itemKey] = nil
      end
    end
  end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>inventory_display</name>
						<packageName></packageName>
						<script>function display_inventory(match)
  local worn_items = {}
  local my_items = {}
  if not inventory then
    inventory = {}
  end
  tempTimer(5, [[if inventory then inventory.pager = nil end]])
  if inventory and inventory.pager then
    inventory.pager['held']['__orderedIndex'] = nil
    worn_items = inventory.pager['worn']
    my_items = inventory.pager['held']
  else
    wield = {}
    wtc = nil
    worn_table = {}
    local count = 0
    for k, v in pairs(inv) do
      if not my_items[v['name']] then
        my_items[v['name']] = {['ids'] = {}, ['amount'] = 0}
      end
      my_items[v['name']]['amount'] = my_items[v['name']]['amount'] + 1
      table.insert(my_items[v['name']]['ids'], v['id'])
      if v['attrib'] then
        if
          string.find(v['attrib'], 'l') or
          string.find(v['attrib'], 'L') or
          string.find(v['attrib'], 'lL')
        then
          --wield[v['id']] = {['name'] = v['name'],['loc']=''}
          wield[k] = {['name'] = v['name'], ['loc'] = ''}
          if string.find(v['attrib'], 'l') then
            wield[k].loc = 'left'
            wtc = 'left'
          elseif string.find(v['attrib'], 'L') then
            wield[k].loc = 'right'
            wtc = "right"
          elseif string.find(v['attrib'], 'lL') then
            wield[k].loc = 'both'
            wtc = "right"
          else
            wield[k].loc = 'both'
            wtc = nil
          end
          my_items[v['name']] = nil
        end
        if string.find(v['attrib'], 'w') then
          table.insert(worn_items, v['name'])
          worn_table[v['name']] = k
          my_items[v['name']] = nil
        end
      end
    end
  end
  echo("\n")
  if not inventory.pager then
    if len(wield) == 2 then
      local wtc = 0
      cecho("&lt;olive_drab&gt;You are wielding:&lt;grey&gt;\n")
      for k, v in pairs(wield) do
        cecho(string.format("        (%i) %s in your %s hand.\n", k, v.name, v.loc))
      end
    elseif len(wield) == 1 then
      local num = ''
      local status = {}
      cecho("&lt;olive_drab&gt;You are wielding:&lt;grey&gt;\n")
      for k, v in pairs(wield) do
        num = k
        status = v
      end
      if
        string.find(status.name, 'Bow') or
        string.find(status.name, 'warhammer') or
        string.find(status.name, 'bastard') or
        string.find(status.name, 'halberd') or
        string.find(status.name, 'bardiche') or
        string.find(status.name, 'bow' or string.find(status.name, 'quarterstaff'))
      then
        cecho(string.format("        (%s) %s in both hands.\n", num, status.name))
      else
        cecho(string.format("        (%s) %s in your %s hand.\n", num, status.name, status.loc))
      end
    else
      cecho("&lt;olive_drab&gt;You are wielding:&lt;grey&gt;\n")
      cecho(string.format("        Nothing in either hand.\n"))
    end
    echo("\n")
  end
  inventory.pager = {}
  inventory.pager['held'] = my_items
  inventory.pager['worn'] = worn_items
  inventory.pager['matches3'] = match[3]
  cecho("&lt;olive_drab&gt;You are holding:\n")
  local count = 0
  local ln_count = 0
  for k, v in orderedPairs(my_items) do
    local name = k
    if match[3] then
      if string.find(k, match[3]:trim()) then
        fg("medium_aquamarine")
        echo("(")
        fg("white")
        echo(string.format("%s", rpad(tostring(v.amount), 3)))
        fg("medium_aquamarine")
        echo(")")
        resetFormat()
        cecho(string.format(" %s&lt;grey&gt;\n", align(name, {width = 30, alignment = 'left'})))
        resetFormat()
        cecho(string.format("        ID: "))
        for num, value in ipairs(my_items[k]['ids']) do
          setUnderline(true)
          echoLink(
            string.format("%s", value),
            [[appendCmdLine("]] .. value .. [[")]],
            "Append to Command line",
            true
          )
          resetFormat()
          if num ~= table.size(my_items[k]['ids']) then
            echo(", ")
          end
        end
        echo("\n")
      end
    else
      inventory.pager['held'][k] = nil
      if #name &gt;= 25 then
        name = truncate(k, 25)
      else
        name = k
      end
      count = count + 1
      fg("medium_aquamarine")
      echo("(")
      fg("white")
      echo(string.format("%s", rpad(tostring(v.amount), 3)))
      fg("medium_aquamarine")
      echo(")")
      resetFormat()
      cecho(string.format(" %s", align(name, {width = 30, alignment = 'left'})))
    end
    if count == 2 then
      echo("\n")
      count = 0
      ln_count = ln_count + 1
    end
    if ln_count == 20 then
      echo("\n")
      cecho(align("Type &lt;green&gt;MORE&lt;grey&gt; to continue", {alignment = "center"}))
      echo("\n")
      return
    end
  end
  echo("\n\n")
  cecho("&lt;olive_drab&gt;You are wearing:\n")
  ln_count = nil
  local count = 0
  table.sort(worn_items)
  for _, v in ipairs(worn_items) do
    local name = v
    if match[3] then
      if string.find(v, match[3]:trim()) then
        cecho(string.format("&lt;white&gt;*&lt;grey&gt;("))
        setUnderline(true)
        echoLink(
          string.format("%s", rpad(worn_table[name], 6)),
          [[appendCmdLine("]] .. worn_table[name] .. [[")]],
          "Append to Command line",
          true
        )
        resetFormat()
        cecho(string.format(") %s\n", name))
      end
    else
      if #name &gt;= 34 then
        name = truncate(v, 34)
      else
        name = v
      end
      count = count + 1
      cecho(string.format("&lt;white&gt;*&lt;grey&gt; %s", align(name, {width = 38, alignment = 'left'})))
    end
    if count == 2 then
      echo("\n")
      count = 0
    end
  end
  if inventory.pager['held'] and table.size(inventory.pager['held']) &lt;= 1 then
    inventory.pager = nil
    inventory.page_command = nil
    send('show gold', false)
  end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>inventory_utility</name>
						<packageName></packageName>
						<script>-- Table functions

function len(t)
  -- Count the items in a table
  local count
  count = 0
  for ii, xx in pairs(t) do
    count = count + 1
  end
  -- for
  return count
end

-- tcount

function __genOrderedIndex(t)
  -- Generates index for ordering a table
  -- DO NOT CALL THIS FUNCTION
  local orderedIndex = {}
  for key in pairs(t) do
    table.insert(orderedIndex, key)
  end
  table.sort(orderedIndex)
  return orderedIndex
end

-- genOrderedIndex

function orderedNext(t, state)
  -- Same as 'next' function, except returns the keys in the alphabetic order
  if state == nil then
    --generate index
    t.__orderedIndex = __genOrderedIndex(t)
    key = t.__orderedIndex[1]
    return key, t[key]
  end
  key = nil
  for i = 1, table.getn(t.__orderedIndex) do
    if t.__orderedIndex[i] == state then
      key = t.__orderedIndex[i + 1]
    end
  end
  if key then
    return key, t[key]
  end
  t.__orderedIndex = nil
  return
end

-- orderedNext

function orderedPairs(t)
  -- Call THIS function
  return orderedNext, t, nil
end

-- orderedPairs
-- String functions

function trim(s)
  -- from PiL2 20.4
  return (s:gsub("^%s*(.-)%s*$", "%1"))
end

function pack2(...)
  return {n = select('#', ...), ...}
end

function unpack2(t)
  return unpack(t, 1, t.n)
end

rpad =
  function(str, len, char)
    if char == nil then
      char = ' '
    end
    return string.rep(char, len - #str) .. str
  end

function truncate(s, num)
  return string.format("%s...", string.sub(s, 1, num))
end

-- Alignment

function align(str, options)
  --str is a string, options is a table
  --[[ If they sent anything but a table as the second argument, return useful
info. But if they didn't send a second argument then that's ok, the defaults
will be enough to get by and just center the txt
]]
  --
  if (type(options) ~= "table") and (options ~= nil) then
    return
      "You call this with align(\"some text to format\", &lt;table of options&gt;. Pls check comments for what options and usage information"
  end
  options = options or {}
  --if they sent options, don't overwrite them
  options.width = options.width or 80
  --default line length of 80
  options.alignment = options.alignment or "center"
  --if we don't specify, it's centered
  options.cap = options.cap or ""
  --default endcap of nothing (an empty string, technically)
  options.spacer = options.spacer or " "
  --default spacer is.. well.. space
  options.inside = options.inside or false
  --by default, when centering, formation as spacers|cap|text|cap|spacers
  if not options.mirror == false then
    options.mirror = options.mirror or true
  end
  --by default, we do want to use mirroring for the caps
  local strLen = string.len(str)
  local leftCap = options.cap
  local rightCap = options.cap
  local leftPadLen = math.floor((options.width - strLen) / 2, 1) - 1
  local rightPadLen = leftPadLen + ((options.width - strLen) % 2)
  local maxPad = 0
  local capLen = string.len(options.cap)
  if capLen &gt; leftPadLen then
    --if the cap is bigger than the left total padding
    options.cap = options.cap:sub(1, leftPadLen)
    -- trim it up right!
    capLen = string.len(options.cap)
  end
  --otherwise, don't mess with it
  if options.alignment == "center" then
    --we're going to center something
    leftPadLen = math.floor((options.width - strLen) / 2, 1) - 1
    --get the padding needed on the left
    rightPadLen = leftPadLen + ((options.width - strLen) % 2)
    --and on the right
    if options.mirror then
      --if we're reversing the left cap and the right cap (IE {{[[ turns into ]]}} )
      rightCap = string.gsub(rightCap, "&lt;", "&gt;")
      rightCap = string.gsub(rightCap, "%[", "%]")
      rightCap = string.gsub(rightCap, "{", "}")
      rightCap = string.gsub(rightCap, "%(", "%)")
      rightCap = string.reverse(rightCap)
    end
    --otherwise, they'll be the same, so don't do anything
    str = string.format(" %s ", str)
  elseif options.alignment == "right" then
    --we'll right-align the text
    leftPadLen = options.width - strLen - 1
    rightPadLen = 0
    rightCap = ""
    str = string.format(" %s", str)
  else
    --Ok, so if it's not center or right, we assume it's left. We don't do justified. Sorry.
    leftPadLen = 0
    rightPadLen = options.width - strLen - 1
    leftCap = ""
    str = string.format("%s ", str)
  end
  --that's it, took care of both left, right, and center formattings, now to output the durn thing.
  if options.inside then
    --if we're placing the repated spacer inside
    --"=====endcap some text endcap====="
    --"=====endcap some text pacdne====="
    --"=================endcap some text"
    --"some text endcap================="
    return
      leftCap ..
      string.rep(options.spacer, (leftPadLen - capLen)) ..
      str ..
      string.rep(options.spacer, (rightPadLen - capLen)) ..
      rightCap
  else
    --otherwise, it''s be the spaces on the 'inside'
    -- "endcap===== some text =====endcap"
    -- "endcap===== some text =====pacdne"
    -- "endcap================= some text"
    -- "some text =================endcap"
    return
      string.rep(options.spacer, (leftPadLen - capLen)) ..
      leftCap ..
      str ..
      rightCap ..
      string.rep(options.spacer, (rightPadLen - capLen))
  end
end

function calign(str, options)
  --str is a string, options is a table
  --[[ If they sent anything but a table as the second argument, return useful 
info. But if they didn't send a second argument then that's ok, the defaults 
will be enough to get by and just center the txt
]]
  --
  if (not type(options) == "table") and (not options == nil) then
    return
      "You call this with align(\"some text to format\", &lt;table of options&gt;. Pls check comments for what options and usage information"
  end
  options = options or {}
  --if they sent options, don't overwrite them
  options.width = options.width or 80
  --default line length of 80
  options.alignment = options.alignment or "center"
  --if we don't specify, it's centered
  options.cap = options.cap or ""
  --default endcap of nothing (an empty string, technically)
  options.spacer = options.spacer or " "
  --default spacer is.. well.. space
  options.inside = options.inside or false
  --by default, when centering, formation as spacers|cap|text|cap|spacers
  options.capColor = options.capColor or "&lt;white&gt;"
  --by default, don't change the color of the caps
  options.spacerColor = options.spacerColor or "&lt;white&gt;"
  options.textColor = options.textColor or "&lt;white&gt;"
  --or the text
  if not options.mirror == false then
    options.mirror = options.mirror or true
  end
  --by default, we do want to use mirroring for the caps
  local strLen = string.len(str)
  local leftCap = options.cap
  local rightCap = options.cap
  local leftPadLen = math.floor((options.width - strLen) / 2, 1) - 1
  local rightPadLen = leftPadLen + ((options.width - strLen) % 2)
  local maxPad = 0
  local capLen = string.len(options.cap)
  if capLen &gt; leftPadLen then
    --if the cap is bigger than the left total padding
    options.cap = options.cap:sub(1, leftPadLen)
    -- trim it up right!
    capLen = string.len(options.cap)
  end
  --otherwise, don't mess with it
  if options.alignment == "center" then
    --we're going to center something
    leftPadLen = math.floor((options.width - strLen) / 2, 1) - 1
    --get the padding needed on the left
    rightPadLen = leftPadLen + ((options.width - strLen) % 2)
    --and on the right
    if options.mirror then
      --if we're reversing the left cap and the right cap (IE {{[[ turns into ]]}} )
      rightCap = string.gsub(rightCap, "&lt;", "&gt;")
      rightCap = string.gsub(rightCap, "%[", "%]")
      rightCap = string.gsub(rightCap, "{", "}")
      rightCap = string.gsub(rightCap, "%(", "%)")
      rightCap = string.reverse(rightCap)
    end
    --otherwise, they'll be the same, so don't do anything
    str = string.format(" %s ", str)
  elseif options.alignment == "right" then
    --we'll right-align the text
    leftPadLen = options.width - strLen - 1
    rightPadLen = 0
    rightCap = ""
    str = string.format(" %s", str)
  else
    --Ok, so if it's not center or right, we assume it's left. We don't do justified. Sorry.
    leftPadLen = 0
    rightPadLen = options.width - strLen - 1
    leftCap = ""
    str = string.format("%s ", str)
  end
  --that's it, took care of both left, right, and center formattings, now to output the durn thing.
  if options.inside then
    --if we're placing the repated spacer inside
    --"=====endcap some text endcap====="
    --"=====endcap some text pacdne====="
    --"=================endcap some text"
    --"some text endcap================="
    return
      options.capColor ..
      leftCap ..
      options.spacerColor ..
      string.rep(options.spacer, (leftPadLen - capLen)) ..
      options.textColor ..
      str ..
      options.spacerColor ..
      string.rep(options.spacer, (rightPadLen - capLen)) ..
      options.capColor ..
      rightCap
  else
    --otherwise, it''s be the spaces on the 'inside'
    -- "endcap===== some text =====endcap"
    -- "endcap===== some text =====pacdne"
    -- "endcap================= some text"
    -- "some text =================endcap"
    return
      options.spacerColor ..
      string.rep(options.spacer, (leftPadLen - capLen)) ..
      options.capColor ..
      leftCap ..
      options.textColor ..
      str ..
      options.capColor ..
      rightCap ..
      options.spacerColor ..
      string.rep(options.spacer, (rightPadLen - capLen))
  end
end

function dalign(str, options)
  --str is a string, options is a table
  --[[ If they sent anything but a table as the second argument, return useful 
info. But if they didn't send a second argument then that's ok, the defaults 
will be enough to get by and just center the txt
]]
  --
  if (not type(options) == "table") and (not options == nil) then
    return
      "You call this with align(\"some text to format\", &lt;table of options&gt;. Pls check comments for what options and usage information"
  end
  options = options or {}
  --if they sent options, don't overwrite them
  options.width = options.width or 80
  --default line length of 80
  options.alignment = options.alignment or "center"
  --if we don't specify, it's centered
  options.cap = options.cap or ""
  --default endcap of nothing (an empty string, technically)
  options.spacer = options.spacer or " "
  --default spacer is.. well.. space
  options.inside = options.inside or false
  --by default, when centering, formation as spacers|cap|text|cap|spacers
  options.capColor = options.capColor or "&lt;255,255,255&gt;"
  --by default, don't change the color of the caps
  options.spacerColor = options.spacerColor or "&lt;255,255,255&gt;"
  options.textColor = options.textColor or "&lt;255,255,255&gt;"
  --or the text
  if not options.mirror == false then
    options.mirror = options.mirror or true
  end
  --by default, we do want to use mirroring for the caps
  local strLen = string.len(str)
  local leftCap = options.cap
  local rightCap = options.cap
  local leftPadLen = math.floor((options.width - strLen) / 2, 1) - 1
  local rightPadLen = leftPadLen + ((options.width - strLen) % 2)
  local maxPad = 0
  local capLen = string.len(options.cap)
  if capLen &gt; leftPadLen then
    --if the cap is bigger than the left total padding
    options.cap = options.cap:sub(1, leftPadLen)
    -- trim it up right!
    capLen = string.len(options.cap)
  end
  --otherwise, don't mess with it
  if options.alignment == "center" then
    --we're going to center something
    leftPadLen = math.floor((options.width - strLen) / 2, 1) - 1
    --get the padding needed on the left
    rightPadLen = leftPadLen + ((options.width - strLen) % 2)
    --and on the right
    if options.mirror then
      --if we're reversing the left cap and the right cap (IE {{[[ turns into ]]}} )
      rightCap = string.gsub(rightCap, "&lt;", "&gt;")
      rightCap = string.gsub(rightCap, "%[", "%]")
      rightCap = string.gsub(rightCap, "{", "}")
      rightCap = string.gsub(rightCap, "%(", "%)")
      rightCap = string.reverse(rightCap)
    end
    --otherwise, they'll be the same, so don't do anything
    str = string.format(" %s ", str)
  elseif options.alignment == "right" then
    --we'll right-align the text
    leftPadLen = options.width - strLen - 1
    rightPadLen = 0
    rightCap = ""
    str = string.format(" %s", str)
  else
    --Ok, so if it's not center or right, we assume it's left. We don't do justified. Sorry.
    leftPadLen = 0
    rightPadLen = options.width - strLen - 1
    leftCap = ""
    str = string.format("%s ", str)
  end
  --that's it, took care of both left, right, and center formattings, now to output the durn thing.
  if options.inside then
    --if we're placing the repated spacer inside
    --"=====endcap some text endcap====="
    --"=====endcap some text pacdne====="
    --"=================endcap some text"
    --"some text endcap================="
    return
      options.capColor ..
      leftCap ..
      options.spacerColor ..
      string.rep(options.spacer, (leftPadLen - capLen)) ..
      options.textColor ..
      str ..
      options.spacerColor ..
      string.rep(options.spacer, (rightPadLen - capLen)) ..
      options.capColor ..
      rightCap
  else
    --otherwise, it''s be the spaces on the 'inside'
    -- "endcap===== some text =====endcap"
    -- "endcap===== some text =====pacdne"
    -- "endcap================= some text"
    -- "some text =================endcap"
    return
      options.spacerColor ..
      string.rep(options.spacer, (leftPadLen - capLen)) ..
      options.capColor ..
      leftCap ..
      options.textColor ..
      str ..
      options.capColor ..
      rightCap ..
      options.spacerColor ..
      string.rep(options.spacer, (rightPadLen - capLen))
  end
end

function halign(str, options)
  --str is a string, options is a table
  --[[ If they sent anything but a table as the second argument, return useful 
info. But if they didn't send a second argument then that's ok, the defaults 
will be enough to get by and just center the txt
]]
  --
  if (not type(options) == "table") and (not options == nil) then
    return
      "You call this with align(\"some text to format\", &lt;table of options&gt;. Pls check comments for what options and usage information"
  end
  options = options or {}
  --if they sent options, don't overwrite them
  options.width = options.width or 80
  --default line length of 80
  options.alignment = options.alignment or "center"
  --if we don't specify, it's centered
  options.cap = options.cap or ""
  --default endcap of nothing (an empty string, technically)
  options.spacer = options.spacer or " "
  --default spacer is.. well.. space
  options.inside = options.inside or false
  --by default, when centering, formation as spacers|cap|text|cap|spacers
  options.capColor = options.capColor or "|cFFFFFF"
  --by default, don't change the color of the caps
  options.spacerColor = options.spacerColor or "|cFFFFFF"
  options.textColor = options.textColor or "|cFFFFFF"
  --or the text
  if not options.mirror == false then
    options.mirror = options.mirror or true
  end
  --by default, we do want to use mirroring for the caps
  local strLen = string.len(str)
  local leftCap = options.cap
  local rightCap = options.cap
  local leftPadLen = math.floor((options.width - strLen) / 2, 1) - 1
  local rightPadLen = leftPadLen + ((options.width - strLen) % 2)
  local maxPad = 0
  local capLen = string.len(options.cap)
  if capLen &gt; leftPadLen then
    --if the cap is bigger than the left total padding
    options.cap = options.cap:sub(1, leftPadLen)
    -- trim it up right!
    capLen = string.len(options.cap)
  end
  --otherwise, don't mess with it
  if options.alignment == "center" then
    --we're going to center something
    leftPadLen = math.floor((options.width - strLen) / 2, 1) - 1
    --get the padding needed on the left
    rightPadLen = leftPadLen + ((options.width - strLen) % 2)
    --and on the right
    if options.mirror then
      --if we're reversing the left cap and the right cap (IE {{[[ turns into ]]}} )
      rightCap = string.gsub(rightCap, "&lt;", "&gt;")
      rightCap = string.gsub(rightCap, "%[", "%]")
      rightCap = string.gsub(rightCap, "{", "}")
      rightCap = string.gsub(rightCap, "%(", "%)")
      rightCap = string.reverse(rightCap)
    end
    --otherwise, they'll be the same, so don't do anything
    str = string.format(" %s ", str)
  elseif options.alignment == "right" then
    --we'll right-align the text
    leftPadLen = options.width - strLen - 1
    rightPadLen = 0
    rightCap = ""
    str = string.format(" %s", str)
  else
    --Ok, so if it's not center or right, we assume it's left. We don't do justified. Sorry.
    leftPadLen = 0
    rightPadLen = options.width - strLen - 1
    leftCap = ""
    str = string.format("%s ", str)
  end
  --that's it, took care of both left, right, and center formattings, now to output the durn thing.
  if options.inside then
    --if we're placing the repated spacer inside
    --"=====endcap some text endcap====="
    --"=====endcap some text pacdne====="
    --"=================endcap some text"
    --"some text endcap================="
    return
      options.capColor ..
      leftCap ..
      options.spacerColor ..
      string.rep(options.spacer, (leftPadLen - capLen)) ..
      options.textColor ..
      str ..
      options.spacerColor ..
      string.rep(options.spacer, (rightPadLen - capLen)) ..
      options.capColor ..
      rightCap
  else
    --otherwise, it''s be the spaces on the 'inside'
    -- "endcap===== some text =====endcap"
    -- "endcap===== some text =====pacdne"
    -- "endcap================= some text"
    -- "some text =================endcap"
    return
      options.spacerColor ..
      string.rep(options.spacer, (leftPadLen - capLen)) ..
      options.capColor ..
      leftCap ..
      options.textColor ..
      str ..
      options.capColor ..
      rightCap ..
      options.spacerColor ..
      string.rep(options.spacer, (rightPadLen - capLen))
  end
end</script>
						<eventHandlerList />
					</Script>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>city bounty list</name>
						<packageName>City Bounty List v2</packageName>
						<script></script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>grabPlayerClass</name>
							<packageName></packageName>
							<script>function grabPlayerClass(name)
  local class = ""
  if player_tracking then
    if player_tracking.names[name] then
      class = player_tracking.names[name].Class
    else
      class = "Unknown"
    end
  elseif ndb and ndb.exists(name) then
    class = ndb.getclass(name)
  else
    class = "Unknown"
  end
  return "None"
end</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>talisman</name>
					<packageName></packageName>
					<script></script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>talisman</name>
						<packageName></packageName>
						<script>talisman = talisman or {}

talisman.settings = talisman.settings or {}
talisman.settings.color = "CadetBlue"

talisman.pieces = talisman.pieces or {}

talisman.setorder = {"dragon", "azatlan", "wonders", "miscellane", "historical", "conclave", "marks", "seafaring", "death", "blackwave", "races", "forays", "cities", "monks", "elemental", "yggdrasil", "contenders", "underworld", "renegades", "invasion", "war", "planes", "eldergods", "moderngods", "logosmas"}

-- Order is optional, if not present it will be a random order as the talisman.info tables is unsorted.
talisman.setformat = {
	dragon = {titlewidth = 13, cellwidth = 7},
	azatlan = {titlewidth = 13, cellwidth = 7, order = {"eagleheaddress", "coati", "kinkajou", "quetzal", "transoceanic", "atlatl", "azatlanknife"}},
	wonders = {titlewidth = 13, cellwidth = 7, order = {"baitbucket", "dragonskinpack", "platinumwhistle", "ramshorn", "monocle", "globe"}},
	miscellane = {titlewidth = 13, cellwidth = 7, order = {"hookah", "tapestry", "vaultkey", "negationsphere", "clayfigurine"}},
	historical = {titlewidth = 13, cellwidth = 7, order = {"window", "mantle", "icicle", "helmet", "disc", "votive", "whisperstone", "lily", "ozhera", "turtle", "mongoose", "hellcat"}},
	conclave = {titlewidth = 13, cellwidth = 7, value = true, order = {"tophat", "hourglass", "tempestbrooch", "elementsprite", "lesservault", "flyingring", "celerity", "buckawns", "adaptgrimoire", "stygianpendant", "grandmagi", "atavianwings"}},
	marks = {titlewidth = 13, cellwidth = 7, value = true, order = {"ivoryatlantia", "ivoryspyglass", "ivorypennon", "ivorydummy", "ivorymedallion", "ivoryarmband", "ivorytower", "ivorywarhorn", "ivorybowstring", "quisalisderillin", "quisalislookingglass", "quisalismedallion", "quisalisdummy", "quisalisbone", "quisalisarmband", "quisalistombstone", "quisalismask", "quisalisdagger", "quisaliscloak"}},
	seafaring = {titlewidth = 13, cellwidth = 10, order = {"cloverbox", "maelstrom", "islandwings", "frostpail", "neatpail", "shipchit", "xpplaque", "monstermap", "crossbow", "glassbottle", "seaweedpail", "smokeflare"}},
	death = {titlewidth = 13, cellwidth = 7, value = true, order = {"mortalcoil", "vulturetalon", "deathcandle", "deathdummy", "gravestone", "crucible", "deathscall", "deathcape"}},
	blackwave = {titlewidth = 13, cellwidth = 7, value = true, order = {"taper", "finalityring", "grievouskeyring", "goblin", "blackspigot", "sunlesshope", "blackcirclet", "guise", "jewel", "canopic", "apperceptionstone", "blackgrimoire", "suremekh'neina"}},
	races = {titlewidth = 13, cellwidth = 7, value = true, order = {"lodestone", "arachnideye", "panpipes", "chitin", "rattle", "whispercloth", "sirensong", "demolitionsphere", "catapult", "dalamyrrclaws", "frogskin", "mayafigurine"}},
	forays = {titlewidth = 13, cellwidth = 7, order = {"arankeshfeather", "icossemirror", "ogrebroth", "boulder", "margamwheel", "foraymap"}},
	cities = {titlewidth = 13, cellwidth = 7, value = true, order = {"biscuit", "tumbleweed", "celescope", "musicbox", "wraithshackles", "alabasterurn"}},
	monks = {titlewidth = 13, cellwidth = 7, value = true, order = {"monkdummy", "odysseantongue", "monkheadband", "talonedring", "cranepennon", "monkbanner", "ashstaff", "olivebranch"}},
	elemental = {titlewidth = 13, cellwidth = 7, value = true, order = {"airelement", "airbrooch", "firependant", "jawbone", "seatears", "earthenshovel", "garashshackle", "mudbomb", "searedglyph", "firetank", "sceptre", "harness"}},
	yggdrasil = {titlewidth = 13, cellwidth = 7, order = {"dreadpilar", "squargon", "yggdrasiltablet", "valdblom", "earthshapingtome", "nexuscube", "firecrystal", "planarmote", "goldensnakeskin", "yggdrasilbranch", "criersbell"}},
	contenders = {titlewidth = 13, cellwidth = 7, value = true, order = {"contenderspig", "contendersjug", "contendersbouquet", "contendersfigurine", "contendersglass", "contendersjournal", "contendersstud", "contendersribbon"}},
	underworld = {titlewidth = 13, cellwidth = 7, value = true, order = {"cryptworm", "psychesplinter", "sanityskein", "custodytalisman", "unlifetotem", "soulsliver", "funeralshroud", "cullingblade"}},
	renegades = {titlewidth = 13, cellwidth = 7, value = true, order = {"mercenarychalk", "elementalinjunction", "moppet", "turncoatscoat", "shadowcloak", "betrayersmantle", "turncoatsmasque", "sunderedpennon"}},
	invasion = {titlewidth = 13, cellwidth = 7, value = true, order = {"darkearthfigrine", "batteringram", "caltrop", "cauldron", "shadowshackle", "hagseye", "icebrick", "scoutingmap"}},
	planes = {titlewidth = 13, cellwidth = 7, value = true, order = {"cowculator", "golemgateway", "hollowbook", "brainjar", "faemirror", "celestialcoronet", "chaosclaw", "iconstatuette", "kris", "crystalsword"}},
	war = {titlewidth = 13, cellwidth = 7, value = true, order = {"rottingremains", "gildedbit", "pigeon", "warcloud", "portalhoop", "observantsigil"}},
	eldergods = {titlewidth = 13, cellwidth = 7, value = true, order = {"gaia", "lorielan", "vulnurana", "twilight", "phaestus", "scarlatti", "prospero", "aegis", "vastar"}},
  moderngods = {titlewidth = 13, cellwidth = 7, value = true, order = {"neraeos", "aurora", "babel", "sartan", "deucalion", "pandora", "ourania", "tlalaiad"}},
  logosmas = {titlewidth = 13, cellwidth = 7, value = true, order = {"snowball", "halfnog", "popcorngarland", "taffy", "snowglobe", "logosmasscarf", "snowsack", "gifttag"}}
}

talisman.sets = {
  logosmas = {
    snowball = {short = "snowball", order = {"snowballsnow", "snowballreform", "snowballreturn", "snowballbinding"}, redeem = 6, tradein = 33},
    halfnog = {short = "halfnog", order = {"halfnogpot", "halfnogbrew", "halfnogladle", "halfnoghandle"}, redeem = 18, tradein = 100},
    popcorngarland = {short = "garland", order = {"garlandcorn", "garlandsilk", "garlandglitter", "garlandspell"}, redeem = 37, tradein = 200},
    taffy = {short = "taffy", order = {"taffysugar", "taffyspecial", "taffymagic", "taffybag"}, redeem = 56, tradein = 300},
    snowglobe = {short = "snowglobe", order = {"snowglobehouse", "snowglobebell", "snowglobesnow", "snowglobeglass"}, redeem = 75, tradein = 400},
    logosmasscarf = {short = "scarf", order = {"redscarfwool", "goldscarfwool", "scarfthread", "scarfcrystals"}, redeem = 112, tradein = 600},
    snowsack = {short = "sack", order = {"snowsackcloth", "snowsacksnow", "snowsackstring", "snowsackicicle"}, redeem = 150, tradein = 800},
    gifttag = {short = "gifttag", order = {"gifttaglabel", "gifttagwriting", "gifttageyelet", "gifttagribbon"}, redeem = 200, tradein = 1066},
  },
  moderngods = {
		neraeos = {short = "coin", order = {"tritoncoinsilver", "tritoncoinsalt", "tritoncoinmark", "tritoncoinscript"}, redeem = 6, tradein = 33},
		aurora = {short = "tear", order = {"ethiantearradiance", "ethiantearstone", "ethiantearlight", "ethiantearstrata"}, redeem = 25, tradein = 133},
		babel = {short = "bcloth", order = {"lightlessclothstrip", "lightlesscloththread", "lightlessclothpattern", "lightlessclothcorruption"}, redeem = 37, tradein = 200},
		deucalion = {short = "dcloth", order = {"deucalioncloththread", "deucalionclothsmoke", "deucalionclothcloth", "deucalionclothenchantment"}, redeem = 50, tradein = 266},
		pandora = {short = "eye", order = {"glasseyeiris", "glasseyeball", "glasseyelight", "glasseyepupil"}, redeem = 62, tradein = 333},
		sartan = {short = "fang", order = {"stalagmitefangspan", "stalagmitefangpoint", "stalagmitefangblood", "stalagmitefangcarvings"}, redeem = 100, tradein = 533},
		ourania = {short = "barb", order = {"cometbarbblade", "cometbarbglyphs", "cometbarbdarkness", "cometbarbsigils"}, redeem = 150, tradein = 800},
		tlalaiad = {short = "capsule", order = {"shadowcapsuletop", "shadowcapsulebase", "shadowcapsulemechanism", "shadowcapsuleanomaly"}, redeem = 187, tradein = 1000}
	},
	eldergods = {
		gaia = {short = "blossom", order = {"cherryblossomstem", "cherryblossomflower", "cherryblossomstamen", "cherryblossomscent"}, redeem = 12, tradein = 66},
		lorielan = {short = "filter", order = {"filtercrystal", "filterbronze", "filterfitting", "filterpolish"}, redeem = 31, tradein = 166},
		vulnurana = {short = "sache", order = {"sachetcloth", "sachetherbs", "sachetstring", "sachetscent"}, redeem = 37, tradein = 200},
		twilight = {short = "hound", order = {"houndcarvingeyes", "houndcarvinglegs", "houndcarvingfangs", "houndcarvingobsidian"}, redeem = 43, tradein = 233},
		phaestus = {short = "hammer", order = {"finishinghammerhead", "finishinghammerrunes", "finishinghammerhandle", "finishinghammergrip"}, redeem = 50, tradein = 266},
		scarlatti = {short = "citole", order = {"citolestrings", "citolebody", "citolebase", "citoletune"}, redeem = 62, tradein = 333},
		prospero = {short = "pan", order = {"batteredpanhandle", "batteredpandish", "batteredpangrip", "batteredpanspell"}, redeem = 150, tradein = 800},
		aegis = {short = "declaration", order = {"declarationpaper", "declarationtext", "declarationsignature", "declarationseal"}, redeem = 187, tradein = 1000},
		vastar = {short = "wings", order = {"vastarwingsfeathers", "vastarwingsstraps", "vastarwingsspan", "vastarwingslightning"}, redeem = 250, tradein = 1333},
	},
	dragon = {
		blackdragon = {short = "black", color = "white", order = {"blackdragonbone", "blackdragonclaw", "blackdragoneye", "blackdragonheart", "blackdragonleather", "blackdragonscale", "blackdragontooth", "blackdragonsac"}}, 
		reddragon = {short = "red", color = "red", order = {"reddragonbone", "reddragonclaw", "reddragoneye", "reddragonheart", "reddragonleather", "reddragonscale", "reddragontooth", "reddragonbelly"}}, 
		bluedragon = {short = "blue", color = "blue", order = {"bluedragonbone", "bluedragonclaw", "bluedragoneye", "bluedragonheart", "bluedragonleather", "bluedragonscale", "bluedragontooth", "bluedragonlung"}}, 
		greendragon = {short = "green", color = "green", order = {"greendragonbone", "greendragonclaw", "greendragoneye", "greendragonheart", "greendragonleather", "greendragonscale", "greendragontooth", "greendragonsac"}}, 
		golddragon = {short = "gold", color = "gold", order = {"golddragonbone", "golddragonclaw", "golddragoneye", "golddragonheart", "golddragonleather", "golddragonscale", "golddragontooth", "golddragonstem"}}, 
		silverdragon = {short = "silver", color = "LightSlateGray", order = {"silverdragonbone", "silverdragonclaw", "silverdragoneye", "silverdragonheart", "silverdragonleather", "silverdragonscale", "silverdragontooth", "silverdragonlarynx"}},
	},
	azatlan = {
		eagleheaddress = {short = "eagle", order = {"bluefeather", "greenfeather", "redfeather", "yellowfeather", "orangefeather", "purplefeather", "blackfeather"}},
		atlatl = {short = "atlatl", order = {"atlatlshaft", "atlatlcup", "atlatlspear"}},
		transoceanic = {short = "orb", order = {"orbleft", "orbright", "orbcenter"}},
		azatlanknife = {short = "knife", order = {"knifebladetop", "knifebladebottom", "knifeleather"}},
		quetzal = {short = "quetzal", order = {"quetzalbluefeather", "quetzalgreenfeather", "quetzalredfeather", "quetzalcage", "quetzaltalon", "quetzalegg"}},
		kinkajou = {short = "kinkajou", order = {"kinkajoutooth", "kinkajoucollar", "kinkajoubait", "kinkajouclaw", "kinkajoupaw", "kinkajoutail"}},
		coati = {short = "coati", order = {"coatibait", "coaticlaw", "coaticollar", "coatipaw", "coatitooth", "coatitail"}},
	},
	wonders = {
		baitbucket = {short = "bucket", order = {"buckethandle", "bucketleft", "bucketright", "bucketbase", "bucketwater"}},
		dragonskinpack = {short = "pack", order = {"packscales", "packstraps", "packlining", "packthread", "packleather"}},
		platinumwhistle = {short = "whistle", order = {"whistlemouth", "whistleflue", "whistlereed", "whistletoppipe", "whistlelowpipe"}},
		ramshorn = {short = "horn", order = {"ramshorn", "hornmouth", "hornleftstrap", "hornrightstrap", "hornfastener"}},
		monocle = {short = "monocle", order = {"monotop", "monobottom", "monoframe", "monocatch", "monoclasp"}},
		globe = {short = "globe", order = {"globetop", "globemiddle", "globebottom"}},
	},
	miscellane = {
		hookah = {short = "hookah", order = {"hookahbase", "hookahbowl", "hookahhood", "hookahchain", "hookahhoses", "hookahstem", "hookahplate"}},
		tapestry = {short = "tapestry", order = {"tapestryroller", "tapestryonyx", "tapestryvellum", "tapestryclaw"}},
		vaultkey = {short = "vaultkey", order = {"keyfragment"}},
		negationsphere = {short = "negsphere", order = {"spherefragment"}},
		clayfigurine = {short = "clayfigurine", order = {"clayfigurinebody", "clayfigurinehead", "clayfigurinelegs", "clayfigurinearms"}},
	},
	historical = {
		window = {short = "window", order = {"windowframe", "windowpane", "windowjamb", "windowshutters", "windowgrid"}},
		mantle = {short = "mantle", order = {"mantlecloth", "mantlethread", "mantlecentre", "mantlegems"}}, 
		icicle = {short = "icicle", order = {"icicletop", "iciclemiddle", "iciclebase", "icicletip", "iciclerunes"}},
		helmet = {short = "helmet", order = {"helmetskull", "helmetnose", "helmetstrap"}},
		disc = {short = "disc", order = {"disctop", "discside", "discmiddle", "discbottom", "discrunes", "disccentre"}},
		votive = {short = "votive", order = {"votivebase", "votivewick", "votivewax"}},
		whisperstone = {short = "whisperstone", order = {"stonetop", "stonebottom", "stonemiddle", "stoneside", "stonecore", "stoneemitter"}},
		lily =  {short = "lily", order = {"lilypetals", "lilystem", "lilystamen", "lilybulb", "lilypistil"}},
		ozhera =  {short = "ozhera", order = {"ozherabait", "ozheracollar", "ozheraegg", "ozheraclaw", "ozherabeak", "ozheranest"}},
		turtle =  {short = "turtle", order = {"turtleshell", "turtlebait", "turtlecollar", "turtletail", "turtlefoot", "turtletongue"}},
		mongoose =  {short = "mongoose", order = {"mongoosebait", "mongoosecollar", "mongoosetail", "mongoosepaw", "mongooseclaw", "mongoosefang"}},
		hellcat = {short = "hellcat", order = {"hellcatbait", "hellcatcollar", "hellcatclaw", "hellcatfang", "hellcattail", "hellcatpaw"}},
	},
	conclave = {
		tophat = {short = "tophat", order = {"tophatlining", "tophatbrim", "tophatthread", "tophatband"}, redeem = 3, tradein = 16},
		hourglass = {short = "hourglass", order = {"hourglasstop", "hourglassbottom", "hourglasssand", "hourglassbulb"}, redeem = 12, tradein = 66},
		tempestbrooch = {short = "brooch", order = {"broochgem", "broochclasp", "broochmetal", "broochhook"}, redeem = 18, tradein = 100},
		elementsprite = {short = "sprite", order = {"spritelegs", "spritearms", "spritetorso", "spritehead"}, redeem = 28, tradein = 150},
		lesservault = {short = "vault", order = {"vaultdoor", "vaulthinge", "vaulthandle", "vaultgems"}, redeem = 43, tradein = 233},
		flyingring = {short = "RoF", order = {"ringtop", "ringbottom", "ringinside", "ringoutside"}, redeem = 50, tradein = 266},
		celerity = {short = "celerity", order = {"armbandtop", "armbandbottom", "armbandinside", "armbandoutside"}, redeem = 62, tradein = 333},
		buckawns = {short = "buckawns", order = {"amuletthread", "amuletchain", "amuletball", "amuletclasp"}, redeem = 100, tradein = 533},
		adaptgrimoire = {short = "grimoire", order = {"grimoireleather", "grimoirepaper", "grimoiregems", "grimoirelock"}, redeem = 125, tradein = 666},
		stygianpendant = {short = "stygian", order = {"pendantbase", "pendantclasp", "pendantpearl", "pendanthook"}, redeem = 150, tradein = 800},
		grandmagi = {short = "grandmagi", order = {"robesthread", "robesneedle", "robestrim", "robesfabric"}, redeem = 312, tradein = 3000},
		atavianwings = {short = "wings", order = {"wingsthread", "wingsleft", "wingsright", "wingsfeathers"}, redeem = 250, tradein = 1333},
	},
	marks = {
		ivorywarhorn = {short = "warhorn", order = {"ivoryhornmouthpiece", "ivoryhornfittings", "ivoryhornleft", "ivoryhornright"}, redeem = 100, tradein = 533},
		ivorymedallion = {short = "ivory med", order = {"ivorymedalliondisc", "ivorymedallionclasp", "ivorymedallionaccent", "ivorymedallionribbon"}, redeem = 43, tradein = 233},
		ivoryspyglass = {short = "spyglass", order = {"ivoryspyglasslens", "ivoryspyglasseyepiece", "ivoryspyglassbody", "ivoryspyglassstrap"}, redeem = 18, tradein = 100},
		ivorypennon = {short = "pennon", order = {"ivorypennonsilk", "ivorypennonribbon", "ivorypennonthread", "ivorypennondye"}, redeem = 31, tradein = 166},
		ivoryarmband = {short = "iarmband", order = {"ivoryarmbandaccent", "ivoryarmbandouter", "ivoryarmbandinner", "ivoryarmbandclasp"}, redeem = 75, tradein = 400},
		ivoryatlantia = {short = "atlantia", order = {"ivoryatlantiabody", "ivoryatlantialegs", "ivoryatlantiahead", "ivoryatlantiaarms"}, redeem = 12, tradein = 66},
		ivorydummy = {short = "idummy", order = {"ivorydummylimbs", "ivorydummytorso", "ivorydummyclothing", "ivorydummyarmour"}, redeem = 37, tradein = 200},
		ivorytower = {short = "tower", order = {"ivorytowerbase", "ivorytowerlower", "ivorytowerupper", "ivorytowerlacquer"}, redeem = 81, tradein = 433},
		ivorybowstring = {short = "bowstring", order = {"ivorybowstringcore", "ivorybowstringwrapping", "ivorybowstringeyelet", "ivorybowstringenchant"}, redeem = 125, tradein = 666},

		quisalisdagger = {short = "anima", order = {"quisaisdaggerhilt", "quisalisdaggerblade", "quisalisdaggerpommel", "quisalisdaggergrip"}, redeem = 150, tradein = 800},
		quisalisbone = {short = "bone", order = {"quisalisbonelower", "quisalisboneupper", "quisalisbonerope", "quisalisbonestain"}, redeem = 43, tradein = 233},
		quisalismedallion = {short = "quis med", order = {"quisalismedallionchain", "quisalismedalliontop", "quisalismedallionbottom", "quisalismedallionclasp"}, redeem = 31, tradein = 166},
		quisalislookingglass = {short = "lookglass", order = {"quisalisglasscase", "quisalisglasslens", "quisalisglassiris", "quisalisglasseyepiece"}, redeem = 18, tradein = 100},
		quisalisderillin = {short = "derillin", order = {"quisalisderillinhair", "quisalisderillinclothing", "quisalisderillintorso", "quisalisderillinhead"}, redeem = 12, tradein = 66},
		quisalisdummy = {short = "qdummy", order = {"quisalisdummylimbs", "quisalisdummytorso", "quisalisdummyrobes", "quisalisdummytargets"}, redeem = 37, tradein = 200},
		quisalistombstone = {short = "tombstone", order = {"quisalistombstonetop", "quisalistombstonemiddle", "quisalistombstonebase", "quisalistombstonescript"}, redeem = 81, tradein = 433},
		quisalisarmband = {short = "qarmband", order = {"quisalisarmbandserpent", "quisalisarmbandeyes", "quisalisarmbandtop", "quisalisarmbandbottom"}, redeem = 75, tradein = 400},
		quisaliscloak = {short = "cloak", order = {"quisaliscloakcloth", "quisaliscloakembroidery", "quisaliscloaklining", "quisaliscloakhood"}, redeem = 187, tradein = 1000},
		quisalismask = {short = "deathmask", order = {"quisalismaskbone", "quisalismaskwire", "quisalismaskteeth", "quisalismaskrunes"}, redeem = 100, tradein = 533},
	},
	seafaring = {
		cloverbox = {short = "cloverbox", order = {"cloverboxclovers", "cloverboxsides", "cloverboxlid", "cloverboxbase"}},
		maelstrom = {short = "maelstrom", order = {"maelstromarms", "maelstromlegs", "maelstromhead", "maelstromtorso"}},
		islandwings = {short = "islandwings", order = {"islandwingsleft", "islandwingsright", "islandwingsthread", "islandwingsstraps"}},
		frostpail = {short = "frostpail", order = {"frostpailhandle", "frostpailleft", "frostpailright", "frostpailbase"}},
		neatpail = {short = "neatpail", order = {"neatpailhandle", "neatpailleft", "neatpailright", "neatpailbase"}},
		shipchit = {short = "shipchit", order = {"shipchittop", "shipchitbottom", "shipchitink", "shipchitseal"}},
		xpplaque = {short = "xpplaque", order = {"xpplaquemount", "xpplaquefascia", "xpplaquelacquer", "xpplaquelettering"}},
		monstermap = {short = "monstermap", order = {"monstermapink", "monstermapparchment", "monstermapcompass", "monstermapenchant"}},
		crossbow = {short = "crossbow", order = {"crossbowmount", "crossbowarms", "crossbowstring", "crossbowcrank"}},
		glassbottle = {short = "glassbottle", order = {"glassbottleneck", "glassbottlemiddle", "glassbottlebase", "glassbottleenchant"}},
		seaweedpail = {short = "seaweedpail", order = {"seaweedpailhandle", "seaweedpailleft", "seaweedpailright", "seaweedpailbase"}},
		smokeflare = {short = "flare", order = {"smokeflareshell", "smokeflarefins", "smokeflarelid", "smokeflarechamber"}},
	},
	death = {
		mortalcoil = {short = "coil", order = {"coiltop", "coilbottom", "coilstrand", "coilbinding"}, redeem = 10, tradein = 66},
		vulturetalon = {short = "talon", order = {"talontip", "talonstem", "talonbase", "talonpoison"}, redeem = 10, tradein = 66},
		deathcandle = {short = "candle", order = {"candlewax", "candleflame", "candlebase", "candlestring"}, redeem = 10, tradein = 66},
		deathdummy = {short = "dummy", order = {"deathdummyhead", "deathdummyarms", "deathdummytorso", "deathdummylegs"}, redeem = 10, tradein = 33},
		gravestone = {short = "gravestone", order = {"gravestonetop", "gravestonebottom", "gravestoneinscription", "gravestonelichen"}, redeem = 10, tradein = 264},
		crucible = {short = "crucible", order = {"cruciblebase", "cruciblehandle", "cruciblebowl", "crucibleflame"}, redeem = 10, tradein = 396},
		deathscall = {short = "call", order = {"deathscallmouth", "deathscallhorn", "deathscalltassels", "deathscallcoil"}, redeem = 10, tradein = 792},
		deathcape = {short = "cape", order = {"capebrocade", "capethread", "capeenchantment", "capevelvet"}, redeem = 10, tradein = 990},
	},
	blackwave = {
		taper = {short = "taper", order = {"tapertop", "taperbottom", "taperwax", "taperstring"}, redeem = 6, tradein = 33},
		finalityring = {short = "finality", order = {"signetband", "signetbezel", "signetcarving", "signetmarks"}, redeem = 6, tradein = 33},
		grievouskeyring = {short = "keyring", order = {"keyringlizard", "keyringtiger", "keyringslate", "keyringhoop"}, redeem = 12, tradein = 66},
		goblin = {short = "goblin", order = {"goblinlegs", "goblinarms", "goblinhead", "goblintorso"}, redeem = 16, tradein = 86},
		blackspigot = {short = "spigot", order = {"spigottop", "spigotbottom", "spigotstem", "spigottip"}, redeem = 50, tradein = 266},
		sunlesshope = {short = "sunless", order = {"sunlessband", "sunlessstone", "sunlessbinding", "sunlessenchantment"}, redeem = 75, tradein = 400},
		blackcirclet = {short = "circlet", order = {"circletfur", "circletblades", "circletband", "circletbinding"}, redeem = 106, tradein = 566},
		jewel = {short = "jewel", order = {"sanguinestone", "sanguineaura", "sanguineteardrop", "taintedblood"}, redeem = 125, tradein = 666},
		canopic = {short = "canopic", order = {"canopiclid", "canopicfluid", "canopicbase", "canopicpot"}, redeem = 125, tradein = 666},
		apperceptionstone = {short = "stone", order = {"crystalshard", "crystalbinding", "crystalportal", "crystalbase"}, redeem = 125, tradein = 666},
		guise = {short = "guise", order = {"guiseenchantment", "guisethread", "guisesmile", "guiseleather"}, redeem = 150, tradein = 800},
		blackgrimoire = {short = "grimoire", order = {"grimoiregut", "grimoirescroll", "grimoirecover", "grimoirebinding"}, redeem = 250, tradein = 1333},
		["suremekh'neina"] = {short = "mantle", order = {"mantleenchant", "mantleclasp", "mantlelining", "mantlefabric"}, redeem = 250, tradein = 1333},
	},
	races = {
		lodestone = {short = "lodestone", order = {"lodestonetop", "lodestonebase", "lodestoneright", "lodestoneleft"}, redeem = 12, tradein = 66},		-- 100
		arachnideye = {short = "arachnid", order = {"arachnidlens", "arachnideyeball", "arachnidenchantment", "arachnidcolour"}, redeem = 12, tradein = 66},		-- 100
		panpipes = {short = "panpipes", order = {"panpipepipes", "panpipefeathers", "panpipehair", "panpipeflutes"}, redeem = 35, tradein = 186},		-- 280
		chitin = {short = "chitin", order = {"chitincolour", "chitinname", "chitincarving", "chitinfragment"}, redeem = 37, tradein = 200},				-- 300
		rattle = {short = "rattle", order = {"rattlebones", "rattleantlers", "rattlerunes", "rattlestaff"}, redeem = 37, tradein = 200},				-- 300
		whispercloth = {short = "cloth", order = {"clothenchantment", "clothbinding", "clothblood", "whispersilk"}, redeem = 50, tradein = 266},		-- 400
		demolitionsphere = {short = "sphere", order = {"sphereglass", "spherefire", "spherespark", "sphererunes"}, redeem = 62, tradein = 333},	-- 500
		sirensong = {short = "sirensong", order = {"sirenglass", "sirenvoice", "sirencork", "sirensmoke"}, redeem = 62, tradein = 333},		-- 500
		catapult = {short = "catapult", order = {"catapultframe", "catapultbolts", "catapultwheel", "catapultarm"}, redeem = 75, tradein = 400},		-- 600
		dalamyrrclaws = {short = "claws", order = {"clawstraps", "clawbase", "clawpoints", "clawbarbs"}, redeem = 87, tradein = 466},		-- 700
		frogskin = {short = "frogskin", order = {"froghead", "frogcord", "frogbody", "frogfeet"}, redeem = 100, tradein = 533},		-- 800
		mayafigurine = {short = "maya", order = {"figurinehead", "figurinearms", "figurinetorso", "figurinelegs"}, redeem = 187, tradein = 1000},		-- 1500
	},
	forays = {
		arankeshfeather = {short = "feather", order = {"arankeshfeatherspine", "arankeshfeatherdown", "arankeshfeathercolour", "arankeshfeatheredge"}},
		icossemirror = {short = "mirror", order = {"goldmirrorframe", "mirrorglass", "mirrorcurse", "mirrorinscription"}},
		ogrebroth = {short = "broth", order = {"brothbowl", "brothbroth", "brothseasoning", "brothspice"}},
		boulder = {short = "boulder", order = {"boulderchipping", "bouldershell", "bouldercore", "boulderstone"}},
		margamwheel = {short = "wheel", order = {"margamwheelweeds", "margamwheelbolts", "margamwheelwood", "margamwheelcentre"}},
		foraymap = {short = "map", order = {"mapfragmenttop", "mapfragmentbottom", "mapfragmentleft", "mapfragmentright"}},
	},
	cities = {
		musicbox = {short = "musicbox", order = {"musicboxsong", "musicboxmechanism", "musicboxframe", "musicboxcrank"}, redeem = 10, tradein = 333},
		biscuit = {short = "biscuit", order = {"biscuitbase", "biscuitspecial", "biscuitsugar", "biscuitsalt"}, redeem = 10, tradein = 50},
		wraithshackles = {short = "wraith", order = {"wraithshacklesmoke", "wraithshacklechain", "wraithshacklemanacles", "wraithshacklelock"}, redeem = 10, tradein = 533},
		tumbleweed = {short = "tumbleweed", order = {"tumbleweedroots", "tumbleweedtendrils", "tumbleweedvines", "tumbleweedstem"}, redeem = 10, tradein = 100},
		alabasterurn = {short = "urn", order = {"alabasterurnlid", "alabasterurnpot", "alabasterurninscription", "alabasterurnash"}, redeem = 10, tradein = 600},
		celescope = {short = "celescope", order = {"celescopeglobe", "celescopecylinders", "celescopeeyepiece", "celescopeingraving"}, redeem = 10, tradein = 333},
	},
	monks = {
		monkdummy = {short = "dummy", order = {"monkdummyhead", "monkdummyarms", "monkdummytorso", "monkdummylegs"}, redeem = 6, tradein = 33},		-- 50
		odysseantongue = {short = "tongue", order = {"tongueflesh", "tonguecasing", "tonguepolish", "tonguecurse"}, redeem = 18, tradein = 100},		-- 150
		monkheadband = {short = "headband", order = {"monkheadbandthreads", "monkheadbandamethyst", "monkheadbandenchantment", "monkheadbandsupport"}, redeem = 25, tradein = 133},		-- 200
		talonedring = {short = "talonring", order = {"crimsonsteelband", "quartzsetting", "ringsteelclaws", "talonedringbinding"}, redeem = 50, tradein = 266},		-- 400
		cranepennon = {short = "pennon", order = {"pennoncloth", "pennoncranes", "pennonstaff", "pennonthread"}, redeem = 87, tradein = 466},		-- 700 			???
		monkbanner = {short = "banner", order = {"monkbannerflag", "monkbannerembroidery", "monkbannerspear", "monkbannerthread"}, redeem = 200, tradein = 1066},		-- 1600
		ashstaff = {short = "staff", order = {"ashstaffstave", "ashstaffstrapping", "ashstaffcap", "ashstaffshoe"}, redeem = 218, tradein = 1166},		-- 1750
		olivebranch = {short = "branch", order = {"olivewood", "olivebranchshoots", "oliveleaves", "olivebranchenchantment"}, redeem = 137, tradein = 733},		-- 1100
	},
	elemental = {
		airelement = {short = "pet", order = {"airelementalcyclone", "airelementalessence", "airelementalbinding", "airelementallightning"}, redeem = 7, tradein = 40},		-- 60
		airbrooch = {short = "brooch", order = {"airbroochclasp", "airbroochgem", "airbroochsetting", "airbroochenchantment"}, redeem = 18, tradein = 100},		-- 150
		firependant = {short = "pendant", order = {"firependantchain", "firependantflame", "firependantsetting", "firependantjewel"}, redeem = 25, tradein = 133},		-- 200
		jawbone = {short = "jawbone", order = {"jawboneteeth", "jawbonemandibles", "jawbonebone", "jawbonehinge"}, redeem = 25, tradein = 133},		-- 200
		earthenshovel = {short = "shovel", order = {"earthshovelwood", "earthshovelblade", "earthshovelbinding", "earthshovelminerals"}, redeem = 46, tradein = 250},		-- 375
		garashshackle = {short = "shackle", order = {"garashshacklelinks", "garashshackleorbs", "garashshackleenchantment", "garashshacklechains"}, redeem = 75, tradein = 400},		-- 600
		seatears = {short = "tears", order = {"seatearsphial", "seatearsstopper", "seatearspaint", "seatearstears"}, redeem = 37, tradein = 200},		-- 300
		mudbomb = {short = "mudbomb", order = {"mudbombbinding", "mudbombmud"}, redeem = 87, tradein = 466},		-- 700
		searedglyph = {short = "glyph", order = {"searedglyphplaque", "searedglyphemblem", "searedglyphtendrils", "searedglyphflame"}, redeem = 106, tradein = 566},		-- 850
		firetank = {short = "tank", order = {"firetankframe", "firetankflame", "firetankinsignia", "firetanklinks"}, redeem = 168, tradein = 900},		-- 1350
		sceptre = {short = "sceptre", order = {"sceptrescript", "sceptreenchantment", "sceptreheart", "sceptretusk"}, redeem = 250, tradein = 1333},		-- 2000
		harness = {short = "harness", order = {"airharnessstraps", "airharnessglyphs", "airharnessenchantment", "airharnessbuckles"}, redeem = 212, tradein = 1133},		-- 1133
	},
	yggdrasil = {
		dreadpilar = {short = "dreadpilar", order = {"dreadpilarplates", "dreadpilarbody", "dreadpilarhead", "dreadpilarlegs"}},
		squargon = {short = "squargon", order = {"squargonbody", "squargonhead", "squargonlegs", "squargonfangs"}},
		yggdrasiltablet = {short = "tablet", order = {"tabletwax", "tabletwood", "tabletstylus", "tablettwine"}},
		valdblom = {short = "valdblom", order = {"valdblomstem", "valdblomleaves", "valdblomessence", "valdblomroot"}},
		earthshapingtome = {short = "shapingtome", order = {"shapingtomeclay", "shapingtomgranite", "shapingtomeplates", "shapingtominsignia"}},
		nexuscube = {short = "nexuscube", order = {"nexuscubegold", "nexuscubeglass", "nexuscubemote", "nexuscubescript"}},
		firecrystal = {short = "firecrystal", order = {"firecrystalenchantment", "firecrystalstone", "firecrystalflame", "firecrystalspark"}},
		planarmote = {short = "planarmote", order = {"moteflame", "moteaura", "motebinding", "moteenchantment"}},
		goldensnakeskin = {short = "snakeskin", order = {"goldenscales", "goldenskin", "goldencolouring", "goldenenchantment"}},
		yggdrasilbranch = {short = "branch", order = {"yggdrasilbranchwood", "yggdrasilbranchmosaic", "yggdrasilbranchline", "yggdrasilbranchhook"}},
		criersbell = {short = "bell", order = {"criersshell", "criershandle", "crierschime", "crierscurse"}},
	},	
	contenders = {
		contenderspig = {short = "pig", order = {"pigclay", "pigears", "pigbelly", "pigtail"}, redeem = 7, tradein = 40},		-- 60
		contendersjug = {short = "jug", order = {"juglip", "jugbase", "jugbowl", "jughandle"}, redeem = 12, tradein = 66},		-- 100
		contendersbouquet = {short = "bouquet", order = {"bouquetstring", "bouquetknot", "bouquetbloom", "bouquetstem"}, redeem = 18, tradein = 100},		-- 150
		contendersfigurine = {short = "figurine", order = {"contenderfigurinehead", "contenderfigurinearms", "contenderfigurinelegs", "contenderfigurinebody"}, redeem = 31, tradein = 166},		-- 250
		contendersglass = {short = "glass", order = {"glasshandle", "glasspane", "glassfocus", "glassframe"}, redeem = 37, tradein = 200},		-- 300
		contendersjournal = {short = "journal", order = {"journalbinding", "journalpage", "journalcover", "journalindex"}, redeem = 62, tradein = 333},		-- 500
		contendersstud = {short = "stud", order = {"studgleam", "studpost", "studgem", "studback"}, redeem = 125, tradein = 666},		-- 1000
		contendersribbon = {short = "ribbon", order = {"ribbongilding", "ribbonpin", "ribbonstripe", "ribbonfold"}, redeem = 175, tradein = 933},		-- 1400
	},
	underworld = {
		cryptworm = {short = "worm", order = {"cryptwormhead", "cryptwormbody", "cryptwormfangs", "cryptwormbinding"}, redeem = 10, tradein = 40}, -- no tradein
		psychesplinter = {short = "splinter", order = {"psychesplinterchain", "psychesplinterframe", "psychesplinterlength", "psychesplintercurse"}, redeem = 10, tradein = 120}, -- 180
		sanityskein = {short = "skein", order = {"sanityskeinthread", "sanityskeincoil", "sanityskeincurse", "sanityskeinbinding"}, redeem = 10, tradein = 146}, -- 220
		custodytalisman = {short = "custody", order = {"custodyleft", "custodyright", "custodycentre", "custodybinding"}, redeem = 10, tradein = 266}, -- 400
		unlifetotem = {short = "totem", order = {"unlifetotembase", "unlifetotemwood", "unlifetotemskull", "unlifetotemtendrils"}, redeem = 10, tradein = 333}, -- 500
		soulsliver = {short = "sliver", order = {"soulsliverobsidian", "soulsliverfog", "soulsliversouls", "soulslivercurse"}, redeem = 10, tradein = 533}, -- 800
		cullingblade = {short = "blade", order = {"cullingbladehilt", "cullingbladeedge", "cullingblademetal", "cullingbladecurse"}, redeem = 10, tradein = 1000}, -- 1500
		funeralshroud = {short = "shroud", order = {"funeralshroudcloth", "funeralshroudthread", "funeralshroudbenediction", "funeralshroudclasp"}, redeem = 10, tradein = 1333}, -- 2000
	},
	renegades = {
		mercenarychalk = {short = "chalk", order = {"mercenarychalkbinding", "mercenarychalkchalk", "mercenarychalkdust", "mercenarychalkstick"}, redeem = 8 , tradein = 42}, -- 65 
		elementalinjunction = {short = "injunction", order = {"injunctionscript", "injunctionpaper", "injunctionseal", "injunctionsignature"}, redeem = 7 , tradein = 36}, -- 60
		moppet = {short = "moppet", order = {"moppetcloth", "moppeteyes", "moppetthread", "moppetbuttons"}, redeem = 25 , tradein = 132}, -- 200
		turncoatscoat = {short = "coat", order = {"turncoatscoatcloth", "turncoatscoatbinding", "turncoatscoatthread", "turncoatscoatbuttons"}, redeem = 43, tradein = 231}, -- 350
		shadowcloak = {short = "shadowcloak", order = {"shadowcloakcloth", "shadowcloakclasp", "shadowcloakthread", "shadowcloakcurse"}, redeem = 75, tradein = 396}, -- 600
		betrayersmantle = {short = "betrayers", order = {"betrayersmantlecloth", "betrayersmantlethread", "betrayersmantlestraps", "betrayersmantlecurse"}, redeem = 100, tradein = 528}, -- 800
		turncoatsmasque = {short = "masque", order = {"turncoatsmasquestone", "turncoatsmasqueetchings", "turncoatsmasquecurse", "turncoatsmasqueeyes"}, redeem = 125, tradein = 660}, -- 1000
		sunderedpennon = {short = "sundered", order = {"sunderedpennoncloth", "sunderedpennonthread", "sunderedpennonstaff", "sunderedpennonbinding"}, redeem = 200, tradein = 1056}, -- 1600
	},
	invasion = {
		darkearthfigrine = {short = "darkearth", order = {"darkearthhead", "darkearthtorso", "darkeartharms", "darkearthlegs"}, redeem = 6, tradein = 33}, --50
		batteringram = {short = "batteringram", order = {"batteringramwheels", "batteringramram", "batteringramgrips", "batteringrambolts"}, redeem = 25, tradein = 132}, --200
		caltrop = {short = "caltrop", order = {"caltropspikes", "caltropball", "caltropbinding", "caltropbarbs"}, redeem = 43, tradein = 233}, -- 350
		cauldron = {short = "cauldron", order = {"cauldronpot", "cauldronoil", "cauldronhandle", "cauldronbase"}, redeem = 50, tradein = 264}, --400
		shadowshackle = {short = "shadowshackle", order = {"shadowshacklelink", "shadowshacklemetal", "shadowshackleenchantment", "shadowshackleshadow"}, redeem = 75, tradein = 400}, -- 600
		hagseye = {short = "hagseye", order = {"hagseyelid", "hagseyeball", "hagseyefluid", "hagseyeenchantment"}, redeem = 87, tradein = 466}, -- 700
		icebrick = {short = "icebrick", order = {"magicice", "repeatingspell", "icebinding", "iceenchantment"}, redeem = 112, tradein = 600}, -- 900
		scoutingmap = {short = "scoutingmap", order = {"scoutingmapenchantment", "scoutingmapicons", "scoutingmapink", "scoutingmapvellum"}, redeem = 150, tradein = 800}, -- 1200
	},
	war = {
		rottingremains = {short = "remains", order = {"remainsbones", "remainsmuscles", "remainsblood", "remainsflesh"}, redeem = 10, tradein = 80},
		gildedbit = {short = "bit", order = {"bitpatterns", "bitgilding", "bitchain", "bitbar"}, redeem = 10, tradein = 80},
		pigeon = {short = "pigeon", order = {"pigeonhead", "pigeonbody", "pigeonlegs", "pigeonwings"}, redeem = 10, tradein = 80},
		warcloud = {short = "warcloud", order = {"warcloudfog", "warcloudstench", "warcloudcurse", "warcloudbinding"}, redeem = 10, tradein = 80},
		portalhoop = {short = "portalhoop", order = {"portalhoopsteel", "portalhooplight", "portalhoopenchantment", "portalhoopbinding"}, redeem = 10, tradein = 80},
		observantsigil = {short = "sigil", order = {"observantsigilmetal", "observantsigilstar", "observantsigileye", "observantsigillatice"}, redeem = 10, tradein = 80},
	},
  planes = {
    cowculator = {short = "cow", order = {"cowculatorwood", "cowculatornumbers", "cowculatorpaint", "cowculatorspectacles"}, redeem = 12, tradein = 66},
    golemgateway = {short = "golem", order = {"gatewayemblem", "gatewaygates", "gatewayframe", "gatewaybars"}, redeem = 31, tradein = 166},
    hollowbook = {short = "book", order = {"hollowbookcovers", "hollowbookeye", "hollowbookglyphs", "hollowbookscream"}, redeem = 37, tradein = 200},
    brainjar = {short = "brainjar", order = {"brainjarpot", "brainjarbrains", "brainjarpreserves", "brainjarlabel"}, redeem = 50, tradein = 266},
    faemirror = {short = "mirror", order = {"faemirrorglass", "faemirrorcrystal", "faemirrorhandle", "faemirrorscript"}, redeem = 56, tradein = 300},
    celestialcoronet = {short = "coronet", order = {"coronetband", "coronetangels", "coronetspheres", "coronetengravings"}, redeem = 87, tradein = 466},
    chaosclaw = {short = "claw", order = {"chaosclawedge", "chaosclawtip", "chaosclawcorruption", "chaosclawspan"}, redeem = 100, tradein = 533},
    iconstatuette = {short = "icon", order = {"statuetteglobe", "statuettesigils", "statuetteshards", "statuetteicon"}, redeem = 125, tradein = 666},
    kris = {short = "kris", order = {"krisblade", "krishaft", "krisrunes", "krissteel"}, redeem = 1, tradein = 1},
    crystalsword = {short = "sword", order = {"crystalswordhilt", "crystalswordguard", "crystalswordblade", "crystalswordgem"}, redeem = 250, tradein = 1333},
  },

}


-- Require this to map the line when you find a talisman back to the short name
talisman.names = {

-- Logosmas
  ["the snow for a reuseable snowball"] = "snowballsnow",
  ["the reforming spell for a reuseable snowball"] = "snowballreform",
  ["the returning spell for a reuseable snowball"] = "snowballreturn",
  ["the binding for a reuseable snowball"] = "snowballbinding",
  
  ["the pot for a kettle of halfnog"] = "halfnogpot",
  ["the brew for a kettle of halfnog"] = "halfnogbrew",
  ["the ladle for a kettle of halfnog"] = "halfnogladle",
  ["the handle for a kettle of halfnog"] = "halfnoghandle",
  
  ["the corn for a popcorn garland"] = "garlandcorn",
  ["the silk for a popcorn garland"] = "garlandsilk",
  ["the glitter for a popcorn garland"] = "garlandglitter",
  ["the spell for a popcorn garland"] = "garlandspell",
  
  ["the sugar for some sticky taffy"] = "taffysugar",
  ["the special ingredient for some sticky taffy"] = "taffyspecial",
  ["the magic for some sticky taffy"] = "taffymagic",
  ["the bag for some sticky taffy"] = "taffybag",
  
  ["the house for a snowglobe"] = "snowglobehouse",
  ["the bell for a snowglobe"] = "snowglobebell",
  ["the snow for a snowglobe"] = "snowglobesnow",
  ["the glass for a snowglobe"] = "snowglobeglass",
  
  ["the red wool for a Logosmas scarf"] = "redscarfwool",
  ["the gold wool for a Logosmas scarf"] = "goldscarfwool",
  ["the thread for a Logosmas scarf"] = "scarfthread",
  ["the crystals for a Logosmas scarf"] = "scarfcrystals",
  
  ["the cloth for a sack of snowflakes"] = "snowsackcloth",
  ["the snow for a sack of snowflakes"] = "snowsacksnow",
  ["the drawstring for a sack of snowflakes"] = "snowsackstring",
  ["the icicle for a sack of snowflakes"] = "snowsackicicle",
  
  ["the label for a Logosmas gift tag"] = "gifttaglabel",
  ["the writing for a Logosmas gift tag"] = "gifttagwriting",
  ["the eyelet for a Logosmas gift tag"] = "gifttageyelet",
  ["the ribbon for a Logosmas gift tag"] = "gifttagribbon",

-- Modern Gods
  ["the silver for a Tritonic coin"] = "tritoncoinsilver",
  ["the salt for a Tritonic coin"] = "tritoncoinsalt",
  ["the mark for a Tritonic coin"] = "tritoncoinmark",
  ["the script for a Tritonic coin"] = "tritoncoinscript",
  
  ["the radiance for Ethian's shining tear"] = "ethiantearradiance",
  ["the stone for Ethian's shining tear"] = "ethiantearstone",
  ["the light for Ethian's shining tear"] = "ethiantearlight",
  ["the strata for Ethian's shining tear"] = "ethiantearstrata",
  
  ["a strip of lightless cloth"] = "lightlessclothstrip",
  ["the thread for a wrap of lightless cloth"] = "lightlesscloththread",
  ["the pattern for a wrap of lightless cloth"] = "lightlessclothpattern",
  ["the corruption for a wrap of lightless cloth"] = "lightlessclothcorruption",
  
  ["the thread for a tattered swatch of cloth"] = "deucalioncloththread",
  ["the smoke for a tattered swatch of cloth"] = "deucalionclothsmoke",
  ["a piece of tattered cloth"] = "deucalionclothcloth",
  ["the enchantment for a tattered swatch of cloth"] = "deucalionclothenchantment",
  
  ["the pupil for a glass eye"] = "glasseyepupil",
  ["the iris for a glass eye"] = "glasseyeiris",
  ["the eyeball for a glass eye"] = "glasseyeball",
  ["the prismatic light for a glass eye"] = "glasseyelight",
  
  ["the span for a wicked stalagmite fang"] = "stalagmitefangspan",
  ["the point for a wicked stalagmite fang"] = "stalagmitefangpoint",
  ["the blood for a wicked stalagmite fang"] = "stalagmitefangblood",
  ["the carvings for a wicked stalagmite fang"] = "stalagmitefangcarvings",
  
  ["the blade for a comet-etched barb"] = "cometbarbblade",
  ["the glyphs for a comet-etched barb"] = "cometbarbglyphs",
  ["the darkness for a comet-etched barb"] = "cometbarbdarkness",
  ["the sigils for a comet-etched barb"] = "cometbarbsigils",
  
  ["the top of a shadowy capsule"] = "shadowcapsuletop",
  ["the base of a shadowy capsule"] = "shadowcapsulebase",
  ["the mechanism for a shadowy capsule"] = "shadowcapsulemechanism",
  ["the anomaly for a shadowy capsule"] = "shadowcapsuleanomaly",
  
-- Elder Gods
  ["the stem for a cherry blossom"] = "cherryblossomstem",
  ["the flower for a cherry blossom"] = "cherryblossomflower",
  ["the stamen for a cherry blossom"] = "cherryblossomstamen",
  ["the scent for a cherry blossom"] = "cherryblossomscent",
  
  ["the crystal for a translucent filter"] = "filtercrystal",
  ["the bronze for a translucent filter"] = "filterbronze",
  ["the fitting for a translucent filter"] = "filterfitting",
  ["the polish for a translucent filter"] = "filterpolish", 
  
  ["the cloth for a sachet"] = "sachetcloth",
  ["the herbs for a sachet"] = "sachetherbs",
  ["the string for a sachet"] = "sachetstring",
  ["the scent for a sachet"] = "sachetscent", 
  
  ["the eyes for an obsidian hound carving"] = "houndcarvingeyes",
  ["the legs for an obsidian hound carving"] = "houndcarvinglegs",
  ["the fangs for an obsidian hound carving"] = "houndcarvingfangs",
  ["the obsidian for a hound carving"] = "houndcarvingobsidian",
  
  ["the head for a finishing hammer"] = "finishinghammerhead",
  ["the runes for a finishing hammer"] = "finishinghammerrunes",
  ["the handle for a finishing hammer"] = "finishinghammerhandle",
  ["the grip for a finishing hammer"] = "finishinghammergrip", 
  
  ["the strings for a citole"] = "citolestrings",
  ["the body for a citole"] = "citolebody",
  ["the base for a citole"] = "citolebase",
  ["the tune for a citole"] = "citoletune",
  
  ["the handle for a battered pan"] = "batteredpanhandle",
  ["the dish for a battered pan"] = "batteredpandish",
  ["the grip for a battered pan"] = "batteredpangrip",
  ["the spell for a battered pan"] = "batteredpanspell",
  
  ["the paper for a declaration of hostility"] = "declarationpaper",
  ["the text for a declaration of hostility"] = "declarationtext",
  ["the signature for a declaration of hostility"] = "declarationsignature",
  ["the seal for a declaration of hostility"] = "declarationseal",
  
  ["the feathers for a set of stormforged wings"] = "vastarwingsfeathers",
  ["the straps for a set of stormforged wings"] = "vastarwingsstraps",
  ["the span for a set of stormforged wings"] = "vastarwingsspan",
  ["the lightning for a set of stormforged wings"] = "vastarwingslightning",

--Planes

  ["the wood for a cowculator carving"] = "cowculatorwood",
  ["the numbers for a cowculator carving"] = "cowculatornumbers",
  ["the paint for a cowculator carving"] = "cowculatorpaint",
  ["the spectacles for a cowculator carving"] = "cowculatorspectacles",

  ["the emblem for an iron gateway"] = "gatewayemblem",
  ["a set of iron gates"] = "gatewaygates",
  ["the frame for an iron gateway"] = "gatewayframe",
  ["the bars for an iron gateway"] = "gatewaybars",
    
  ["the pot for a jar of withered brains"] = "brainjarpot",
  ["the contents of a jar of withered brains"] = "brainjarbrains",
  ["the preserves for a jar of withered brains"] = "brainjarpreserves",
  ["the label for a jar of withered brains"] = "brainjarlabel",

  ["the covers for an empty book"] = "hollowbookcovers",
  ["the eye for an empty book"] = "hollowbookeye",
  ["the glyphs for an empty book"] = "hollowbookglyphs",
  ["the scream for an empty book"] = "hollowbookscream",

  ["the glass for a mirror of fae perception"] = "faemirrorglass",
  ["the crystal for a mirror of fae perception"] = "faemirrorcrystal",
  ["the handle for a mirror of fae perception"] = "faemirrorhandle",
  ["the script for a mirror of fae perception"] = "faemirrorscript",

  ["the band for a celestial coronet"] = "coronetband",
  ["the angels for a celestial coronet"] = "coronetangels",
  ["the spheres for a celestial coronet"] = "coronetspheres",
  ["the engravings for a celestial coronet"] = "coronetengravings",

  ["the edge for a jagged claw"] = "chaosclawedge",
  ["the tip for a jagged claw"] = "chaosclawtip",
  ["the corruption for a jagged claw"] = "chaosclawcorruption",
  ["the span for a jagged claw"] = "chaosclawspan",

  ["the globe for an icon statuette"] = "statuetteglobe",
  ["the sigils for an icon statuette"] = "statuettesigils",
  ["the shards for an icon statuette"] = "statuetteshards",
  ["the icon for a statuette"] = "statuetteicon",

  ["the blade for a sacrificial kris"] = "krisblade",
  ["the haft for a sacrificial kris"] = "krishaft",
  ["the runes for a sacrificial kris"] = "krisrunes",
  ["the steel for a sacrificial kris"] = "krissteel",

  ["the hilt for a crystal sword"] = "crystalswordhilt",
  ["the guard for a crystal sword"] = "crystalswordguard",
  ["the blade for a crystal sword"] = "crystalswordblade",
  ["the gem for a crystal sword"] = "crystalswordgem",
  
--Dragon

	["a Blue Dragon's claw"] = "bluedragonclaw",
	["Blue Dragon leather"] = "bluedragonleather",
	["a Blue Dragon's eye"] = "bluedragoneye",
	["a Blue Dragon's tooth"] = "bluedragontooth",
	["a Blue Dragon's heart"] = "bluedragonheart",
	["a Blue Dragon bone"] = "bluedragonbone",
	["a Blue Dragon's scale"] = "bluedragonscale",
	["a Blue Dragon's lung"] = "bluedragonlung",

	["a Red Dragon's claw"] = "reddragonclaw",
	["Red Dragon leather"] = "reddragonleather",
	["a Red Dragon's eye"] = "reddragoneye",
	["a Red Dragon's tooth"] = "reddragontooth",
	["a Red Dragon's heart"] = "reddragonheart",
	["a Red Dragon bone"] = "reddragonbone",
	["a Red Dragon's scale"] = "reddragonscale",
	["a Red Dragon's belly"] = "reddragonbelly",

	["a Black Dragon's claw"] = "blackdragonclaw",
	["Black Dragon leather"] = "blackdragonleather",
	["a Black Dragon's eye"] = "blackdragoneye",
	["a Black Dragon's tooth"] = "blackdragontooth",
	["a Black Dragon's heart"] = "blackdragonheart",
	["a Black Dragon bone"] = "blackdragonbone",
	["a Black Dragon's scale"] = "blackdragonscale",
	["a Black Dragon's acid sac"] = "blackdragonsac",

	["a Green Dragon's claw"] = "greendragonclaw",
	["Green Dragon leather"] = "greendragonleather",
	["a Green Dragon's eye"] = "greendragoneye",
	["a Green Dragon's tooth"] = "greendragontooth",
	["a Green Dragon's heart"] = "greendragonheart",
	["a Green Dragon bone"] = "greendragonbone",
	["a Green Dragon's scale"] = "greendragonscale",
	["a Green Dragon's poison sac"] = "greendragonsac",

	["a Gold Dragon's claw"] = "golddragonclaw",
	["Gold Dragon leather"] = "golddragonleather",
	["a Gold Dragon's eye"] = "golddragoneye",
	["a Gold Dragon's tooth"] = "golddragontooth",
	["a Gold Dragon's heart"] = "golddragonheart",
	["a Gold Dragon bone"] = "golddragonbone",
	["a Gold Dragon's scale"] = "golddragonscale",
	["a Gold Dragon's brain stem"] = "golddragonstem",

	["a Silver Dragon's claw"] = "silverdragonclaw",
	["Silver Dragon leather"] = "silverdragonleather",
	["a Silver Dragon's eye"] = "silverdragoneye",
	["a Silver Dragon's tooth"] = "silverdragontooth",
	["a Silver Dragon's heart"] = "silverdragonheart",
	["a Silver Dragon bone"] = "silverdragonbone",
	["a Silver Dragon's scale"] = "silverdragonscale",
	["a Silver Dragon's larynx"] = "silverdragonlarynx",
	
 --AZATLAN
  
	["a red eagle's feather"] = "redfeather",
	["a yellow eagle's feather"] = "yellowfeather",
	["a blue eagle's feather"] = "bluefeather",
	["a green eagle's feather"] = "greenfeather",
	["an orange eagle's feather"] = "orangefeather",
	["a purple eagle's feather"] = "purplefeather",
	["a black eagle's feather"] = "blackfeather",

	["a coati's tooth"] = "coatitooth",
	["a coati's collar"] = "coaticollar",
	["some coati bait"] = "coatibait",
	["a coati tail"] = "coatitail",
	["a coati's claw"] = "coaticlaw",
	["a coati's paw"] = "coatipaw",

	["a kinkajou's tooth"] = "kinkajoutooth",
	["a collar for a kinkajou"] = "kinkajoucollar",
	["some kinkajou bait"] = "kinkajoubait",
	["a kinkajou's tail"] = "kinkajoutail",
	["a kinkajou claw"] = "kinkajouclaw",
	["a kinkajou's paw"] = "kinkajoupaw",
	
	["a red quetzal feather"] = "quetzalredfeather",
	["a blue quetzal feather"] = "quetzalbluefeather",
	["a green quetzal feather"] = "quetzalgreenfeather",
	["a wooden quetzal cage"] = "quetzalcage",
	["a quetzal talon"] = "quetzaltalon",
	["a quetzal egg"] = "quetzalegg",

	["the left half of a Transoceanic Orb"] = "orbleft",
	["the right half of a Transoceanic Orb"] = "orbright",
	["the center of a Transoceanic Orb"] = "orbcenter",

	["the shaft of an atlatl"] = "atlatlshaft",
	["the cup of an atlatl"] = "atlatlcup",
	["a spear for an atlatl"] = "atlatlspear",

	["the broken tip of an obsidian knife"] = "knifebladetop",
	["the broken tang of an obsidian knife"] = "knifebladebottom",
	["some green leather"] = "knifeleather",
	
--Wonders

	["a bucket handle"] = "buckethandle",
	["a bucket's left side"] = "bucketleft",
	["a bucket's right side"] = "bucketright",
	["a bucket's base"] = "bucketbase",
	["a globe of enchanted water"] = "bucketwater",

	["blue Dragon scales"] = "packscales",
	["some backpack straps"] = "packstraps",
	["a backpack lining"] = "packlining",
	["backpack thread"] = "packthread",
	["backpack leather"] = "packleather",

	["a whistle mouthpiece"] = "whistlemouth",
	["a whistle's flue"] = "whistleflue",
	["a whistle reed"] = "whistlereed",
	["a whistle's top pipe"] = "whistletoppipe",
	["a whistle's bottom pipe"] = "whistlelowpipe",

	["a ram's horn"] = "ramshorn",
	["a horn mouthpiece"] = "hornmouth",
	["a left horn strap"] = "hornleftstrap",
	["a right horn strap"] = "hornrightstrap",
	["some fasteners"] = "hornfastener",

	["a lens top"] = "monotop",
	["a lens bottom"] = "monobottom",
	["a monocle frame"] = "monoframe",
	["a monocle's catch"] = "monocatch",
	["a monocle's clasp"] = "monoclasp",

	["a globe's top"] = "globetop",
	["a globe's middle"] = "globemiddle",
	["a globe's bottom"] = "globebottom",

--Misc
	
	["a hookah's base"] = "hookahbase",
	["a hookah's bowl"] = "hookahbowl",
	["a hookah's wind hood"] = "hookahhood",
	["a hookah's chain"] = "hookahchain",
	["a hookah's hoses"] = "hookahhoses",
	["a hookah's stem"] = "hookahstem",
	["a hookah's ash plate"] = "hookahplate",
	
	["the rollers for a tapestry"] = "tapestryroller",
	["an onyx pedestal"] = "tapestryonyx",
	["a piece of aged vellum"] = "tapestryvellum",	
	["the claw from a shadow dragon"] = "tapestryclaw",
	
	["the key to a vault"] = "keyfragment",
		
	["the fragment to a sphere"] = "spherefragment",
	
	["the body of a clay figurine"] = "clayfigurinebody",
	["the head of a clay figurine"] = "clayfigurinehead",
	["the legs of a clay figurine"] = "clayfigurinelegs",
	["the arms of a clay figurine"] = "clayfigurinearms",
	
--Historical

	["a Golden Window's frame"] = "windowframe",
	["a Golden Window's pane"] = "windowpane",
	["a Golden Window's jamb"] = "windowjamb",
	["a Golden Window's shutters"] = "windowshutters",
	["a Golden Window's grid"] = "windowgrid",
	
	["Mantle of Himalia cloth"] = "mantlecloth",
	["Mantle of Himalia thread"] = "mantlethread",
	["Mantle of Himalia centrepiece"] = "mantlecentre",
	["Mantle of Himalia gems"] = "mantlegems",
	
	
	[" an icicle's top"] = "icicletop",
	[" an icicle's middle"] = "iciclemiddle",
	[" an icicle's base"] = "iciclebase",
	[" an icicle's tip"] = "icicletip",
	["icicle runes"] = "iciclerunes",
	
	["an Ormyrr skull"] = "helmetskull",
	["a helmet nosepiece"] = "helmetnose",
	["a helmet strap"] = "helmetstrap",
	
	["a smooth piece of obsidian"] = "disctop",
	["a broken piece of obsidian"] = "discside",
	["a rough piece of obsidian"] = "discmiddle",
	["a smooth piece of obsidian"] = "discbottom",
	["obsidian runes"] = "discrunes",
	["a round piece of obsidian"] = "disccentre",
	
	["a votive's base"] = "votivebase",
	["a votive's wick"] = "votivewick",
	["votive wax"] = "votivewax",
	
	["a whisperstone top"] = "stonetop",
	["a whisperstone bottom"] = "stonebottom",
	["a rough whisperstone piece"] = "stonemiddle",
	["a jagged whisperstone piece"] = "stoneside",
	["a whisperstone core"] = "stonecore",
	["a whisperstone emitter"] = "stoneemitter",
	
	["glass lily petals"] = "lilypetals",
	["a glass lily stem"] = "lilystem",
	["a glass lily stamen"] = "lilystamen",
	["a glass lily bulb"] = "lilybulb",
	["a glass lily pistil"] = "lilypistil",
	
	["ozhera bait"] = "ozherabait",
	["an ozhera collar"] = "ozheracollar",
	["an ozhera egg"] = "ozheraegg",
	["an ozhera claw"] = "ozheraclaw",
	["an ozhera beak"] = "ozherabeak",
	["an ozhera nest"] = "ozheranest",
	
	["a polka-dotted turtle shell"] = "turtleshell",
	["turtle bait"] = "turtlebait",
	["a little turtle collar"] = "turtlecollar",
	["a polka-dot turtle tail"] = "turtletail",
	["a turtle foot"] = "turtlefoot",
	["a polka-dot turtle tongue"] = "turtletongue",
	
	["mongoose bait"] = "mongoosebait",
	["a mongoose collar"] = "mongoosecollar",
	["a mongoose claw"] = "mongooseclaw",
	["a mongoose paw"] = "mongoosepaw",
	["a mongoose tail"] = "mongoosetail",
	["a mongoose fang"] = "mongoosefang",
	
	["hellcat bait"] = "hellcatbait",
	["a hellcat collar"] = "hellcatcollar",
	["a hellcat claw"] = "hellcatclaw",
	["a hellcat fang"] = "hellcatfang",
	["a hellcat tail"] = "hellcattail",
	["a hellcat paw"] = "hellcatpaw",
	
--Conclave

	["a tophat's lining"] = "tophatlining",
	["a tophat's brim"] = "tophatbrim",
	["some thread"] = "tophatthread",
	["a tophat's hatband"] = "tophatband",

	["an hourglass's top"] = "hourglasstop",
	["an hourglass's bottom"] = "hourglassbottom",
	["hourglass sand"] = "hourglasssand",
	["an hourglass bulb"] = "hourglassbulb",

	["a beautiful gem"] = "broochgem",
	["a brooch's clasp"] = "broochclasp",
	["metal for a brooch"] = "broochmetal",
	["a brooch's hook"] = "broochhook",

	["an elemental sprite's legs"] = "spritelegs",
	["an elemental sprite's arms"] = "spritearms",
	["an elemental sprite's head"] = "spritehead",
	["an elemental sprite's torso"] = "spritetorso",

	["a vault's door"] = "vaultdoor",
	["a vault's hinge"] = "vaulthinge",
	["a vault's handle"] = "vaulthandle",
	["a vault's inlaid gems"] = "vaultgems",

	["a Ring of Flying's top"] = "ringtop",
	["a Ring of Flying's bottom"] = "ringbottom",
	["a Ring of Flying's inside"] = "ringinside",
	["a Ring of Flying's outside"] = "ringoutside",

	["the inside of an Armband of Celerity"] = "armbandinside",
	["the outside of an Armband of Celerity"] = "armbandoutside",
	["the top of an Armband of Celerity"] = "armbandtop",
	["the bottom of an Armband of Celerity"] = "armbandbottom",

	["a Buckawn Amulet's thread"] = "amuletthread",
	["A Buckawn Amulet's chain"] = "amuletchain",
	["a Buckawn Amulet's silver ball"] = "amuletball",
	["a Buckawn Amulet's thread"] = "amuletthread",

	["leather for a Grimoire of Adaptation"] = "grimoireleather",
	["paper for a Grimoire of Adaptation"] = "grimoirepaper",
	["gems for a Grimoire of Adaptation"] = "grimoiregems",
	["the lock for a Grimoire of Adaptation"] = "grimoirelock",

	["a Stygian Pendant's clasp"] = "pendantclasp",
	["a Stygian Pendant's pearl"] = "pendantpearl",
	["a Stygian Pendant's base"] = "pendantbase",
	["a Stygian Pendant's hook"] = "pendanthook",

	["thread for Grand Magi robes"] = "robesthread",
	["fabric for Grand Magi robes"] = "robesfabric",
	["trim for Grand Magi robes"] = "robestrim",
	["a needle for sewing Grand Magi robes"] = "robesneedle",

	["thread for Atavian wings"] = "wingsthread",
	["Atavian feathers"] = "wingsfeathers",
	["a left Atavian wing "] = "wingsleft",
	["a right Atavian wing"] = "wingsright",

--MARKS
  
	["a mouthpiece of a Warhorn of Heroes"] = "ivoryhornmouthpiece",
	["the fittings of a Warhorn of Heroes"] = "ivoryhornfittings",
	["the left side of a Warhorn of Heroes"] = "ivoryhornleft",
	["the right side of a Warhorn of Heroes"] = "ivoryhornright",

	["the disc of a Champion's medallion"] = "ivorymedalliondisc", 
	["the clasp of a Champion's medallion"] = "ivorymedallionclasp", 
	["the accent of a Champion's medallion"] = "ivorymedallionaccent", 
	["the ribbon of a Champion's medallion"] = "ivorymedallionribbon",
	
	["the lens of a Sangrean spyglass"] = "ivoryspyglasslens", 
	["the eye piece of a Sangrean spyglass"] = "ivoryspyglasseyepiece", 
	["the body of a Sangrean spyglass"] = "ivoryspyglassbody", 
	["the trap of a Sangrean spyglass"] = "ivoryspyglassstrap",

	["a piece of silk from an Ivory pennon"] = "ivorypennonsilk", 
	["a piece of ribbon from an Ivory pennon"] = "ivorypennonribbon", 
	["some thread from an Ivory pennon"] = "ivorypennonthread", 
	["some dye for an Ivory pennon"] = "ivorypennondye",

	[" the accent of an ivory armband"] = "ivoryarmbandaccent", 
	["the inner shell of a silver armband"] = "ivoryarmbandouter", 
	["the outer shell of a silver armband"] = "ivoryarmbandinner", 
	["a silver armband clasp"] = "ivoryarmbandclasp",
	
	["the body of an Atlantia dummy"] = "ivoryatlantiabody", 
	["the legs of an Atlantia dummy"] = "ivoryatlantialegs", 
	["the head of an Atlantia dummy"] = "ivoryatlantiahead", 
	["the arms of an Atlantia dummy"] = "ivoryatlantiaarms",

	["the limbs of a Champion's Training dummy"] = "ivorydummylimbs", 
	["the torso of a Champion's Training dummy"] = "ivorydummytorso", 
	["the clothing of a Champion's Training dummy"] = "ivorydummyclothing", 
	["the armour of a Champion's Training dummy"] = "ivorydummyarmour",
	
	["the base of a miniature ivory tower"] = "ivorytowerbase", 
	["the lower steps of a miniature ivory tower"] = "ivorytowerlower", 
	["the upper part of a miniature ivory tower"] = "ivorytowerupper", 
	["the laquer for a miniature ivory tower"] = "ivorytowerlacquer",

	["the core of an Atlantia bowstring"] = "ivorybowstringcore", 
	["the wrapping of an Atlantia bowstring"] = "ivorybowstringwrapping", 
	["the eyelet of an Atlantia bowstring"] = "ivorybowstringeyelet", 
	["the enchantment for an Atlantia bowstring"] = "ivorybowstringenchant",

	["the hilt of an Anima's Thirst"] = "quisaisdaggerhilt", 
	["the blade of an Anima's Thirst"] = "quisalisdaggerblade", 
	["the pommel of an Anima's Thirst"] = "quisalisdaggerpommel", 
	["the grip of an Anima's Thirst"] = "quisalisdaggergrip",

	["the lower fragment of a notched bone"] = "quisalisbonelower", 
	["the upper fragment of a notched bone"] = "quisalisboneupper", 
	["a piece of rope for a notched bone"] = "quisalisbonerope", 
	["the stain of a notched bone"] = "quisalisbonestain",

	["the chain of a Callibian medallion"] = "quisalismedallionchain", 
	["the top part of a Callibian medallion"] = "quisalismedalliontop", 
	["the bottom fragment of a Callibian medallion"] = "quisalismedallionbottom", 
	["the clasp of a Callibian medallion"] = "quisalismedallionclasp",

	["the case of the Grandmaster's looking glass"] = "quisalisglasscase", 
	["the lens of the Grandmaster's looking glass"] = "quisalisglasslens", 
	["the iris of the Grandmaster's looking glass"] = "quisalisglassiris", 
	["the eye piece of the Grandmaster's looking glass"] = "quisalisglasseyepiece",

	["the hair of a Derillin dummy"] = "quisalisderillinhair", 
	["the clothing of a Derillin dummy"] = "quisalisderillinclothing", 
	["the head of a Derillin dummy"] = "quisalisderillinhead", 
	["the torso of a Derillin dummy"] = "quisalisderillintorso",

	["the limbs of an Assassin's dummy"] = "quisalisdummylimbs", 
	["the torso of an Assassin's dummy"] = "quisalisdummytorso", 
	["the robes of an Assassin's dummy"] = "quisalisdummyrobes", 
	["the targets of an Assassin's dummy"] = "quisalisdummytargets",
	
	["the top of a Quisalis tombstone"] = "quisalistombstonetop", 
	["the middle of a Quisalis tombstone"] = "quisalistombstonemiddle", 
	["the base of a Quisalis tombstone"] = "quisalistombstonebase", 
	["the script of a Quisalis tombstone"] = "quisalistombstonescript",

	["the serpent insignia of a steel armband"] = "quisalisarmbandserpent", 
	["the eyes of a steel armband"] = "quisalisarmbandeyes", 
	["the top fragment of a steel armband"] = "quisalisarmbandtop", 
	["the bottom fragment of a steel armband"] = "quisalisarmbandbottom",

	["the cloth of a cloak of the Blood Maiden"] = "quisaliscloakcloth", 
	["the embroidery of a cloak of the Blood Maiden"] = "quisaliscloakembroidery", 
	["the lining of a cloak of the Blood Maiden"] = "quisaliscloaklining", 
	["the hood of a cloak of the Blood Maiden"] = "quisaliscloakhood",

	["the bone of a Death Keeper's mask"] = "quisalismaskbone", 
	["the wire of a Death Keeper's mask"] = "quisalismaskwire", 
	["the teeth of a Death Keeper's mask"] = "quisalismaskteeth", 
	["the runes of a Death Keeper's mask"] = "quisalismaskrunes",

-- SEAFARING

	["the contents of a cargo crate of clovers"] = "cloverboxclovers",
	["the sides from a cargo crate of clovers"] = "cloverboxsides",
	["the lid from a cargo crate of clovers"] = "cloverboxlid",
	["the base of a cargo crate of clovers"] = "cloverboxbase",
 
	["the arms of a figurine of Captain Maelstrom"] = "maelstromarms",
	["the legs of a figurine of Captain Maelstrom"] = "maelstromlegs",
	["the torso of a figurine of Captain Maelstrom"] = "maelstromtorso",
	["the head of a figurine of Captain Maelstrom"] = "maelstromhead",
 
	["the left wing of a scintillating pair of cascading wings"] = "islandwingsleft",
	["the right wing of a scintillating pair of cascading wings"] = "islandwingsright",
	["the binding thread of a scintillating pair of cascading wings"] = "islandwingsthread",
	["the shoulder straps of a scintillating pair of cascading wings"] = "islandwingsstraps",
 
	["the handle of a frosted pail of pitch"] = "frostpailhandle",
	["the left-hand side of a frosted pail of pitch"] = "frostpailleft",
	["the right-hand side of a frosted pail of pitch"] = "frostpailright",
	["the base of a frosted pail of pitch"] = "frostpailbase",
 
	["the handle of a neatly-appointed pail of pitch"] = "neatpailhandle",
	["the left-hand side of a neatly-appointed pail of pitch"] = "neatpailleft",
	["the right-hand side of a neatly-appointed pail of pitch"] = "neatpailright",
	["the base of a neatly-appointed pail of pitch"] = "neatpailbase",
 
	["the top half of a Shipwright's union chit"] = "shipchittop",
	["the bottom half of a Shipwright's union chit"] = "shipchitbottom",
	["the ink from a Shipwright's union chit"] = "shipchitink",
	["the official seal from a Shipwright's union chit"] = "shipchitseal",
 
	["the mounting plate for an etched and lacquered plaque"] = "xpplaquemount",
	["the fascia from an etched and lacquered plaque"] = "xpplaquefascia",
	["the lacquer for an etched and lacquered plaque"] = "xpplaquelacquer",
	["the lettering from an etched and lacquered plaque"] = "xpplaquelettering",
 
	["the ink from a stylised ocean map"] = "monstermapink",
	["the parchment from a stylised ocean map"] = "monstermapparchment",
	["the compass rose from a stylised ocean map"] = "monstermapcompass",
	["the magical enchantment from a stylised ocean map"] = "monstermapenchant",
 
	["the mounting plate of a crossbow of coconut lumber"] = "crossbowmount",
	["the draw arms of a crossbow of coconut lumber"] = "crossbowarms",
	["the string from a crossbow of coconut lumber"] = "crossbowstring",
	["the winding crank of a crossbow of coconut lumber"] = "crossbowcrank",
 
	["the neck from a polished green bottle"] = "glassbottleneck",
	["the main cylinder from a polished green bottle"] = "glassbottlemiddle",
	["the base of a polished green bottle"] = "glassbottlebase",
	["the magical enchantment from a polished green bottle"] = "glassbottleenchant",
 
	["the handle of an overgrown pail of pitch"] = "seaweedpailhandle",
	["the left-hand side of an overgrown pail of pitch"] = "seaweedpailleft",
	["the right-hand side of an overgrown pail of pitch"] = "seaweedpailright",
	["the base of an overgrown pail of pitch"] = "seaweedpailbase",
	
	["the shell of a smoke flare"] = "smokeflareshell",
	["the fins of a smoke flare"] = "smokeflarefins",
	["the lid of a smoke flare"] = "smokeflarelid",
	["the chamber of a smoke flare"] = "smokeflarechamber",
 
--Death

	["the top of a loop of mortal coil"] = "coiltop",
	["the bottom of a loop of mortal coil"] = "coilbottom",
	["a strand of mortal coil"] = "coilstrand",
	["the binding for a loop of mortal coil"] = "coilbinding",

	["the tip of a vulture's talon"] = "talontip",
	["the stem of a vulture's talon"] = "talonstem",
	["the base of a vulture's talon"] = "talonbase",
	["the poison for a vulture's talon"] = "talonpoison",

	["some candle wax"] = "candlewax",
	["the flame for a candle of cessation"] = "candleflame",
	["the base for a candle of cessation"] = "candlebase",
	["the string for a candle of cessation"] = "candlestring",
	
	["the head of a cowled dummy"] = "deathdummyhead",
	["the arms of a cowled dummy"] = "deathdummyarms",
	["the torso of a cowled dummy"] = "deathdummytorso",
	["the legs of a cowled dummy"] = "deathdummylegs",
	
	["the top of a gravestone"] = "gravestonetop",
	["the bottom of a gravestone"] = "gravestonebottom",
	["the inscription for a gravestone"] = "gravestoneinscription",
	["the lichen for a gravestone"] = "gravestonelichen",
	
	["the base of a soulfire crucible"] = "cruciblebase",
	["the handle of a soulfire crucible"] = "cruciblehandle",
	["the bowl of a soulfire crucible"] = "cruciblebowl",
	["the flame of a soulfire crucible"] = "crucibleflame",
	
	["the mouthpiece for death's call"] = "deathscallmouth",
	["the horn for death's call"] = "deathscallhorn",
	["the tassels for death's call"] = "deathscalltassels",
	["the coil for death's call"] = "deathscallcoil",
	
	["the brocade for a sycophantic shoulder cape"] = "capebrocade",
	["the thread for a sycophantic shoulder cape"] = "capethread",
	["the enchantment for a sycophantic shoulder cape"] = "capeenchantment",
	["the velvet for a sycophantic shoulder cape"] = "capevelvet",
	
--Blackwave

	["The top of a taper of eternity"] = "tapertop", 
	["The bottom of a taper of eternity"] = "taperbottom",
	["The wax for a taper of eternity"] = "taperwax",
	["The string for a taper of eternity"] = "taperstring",

	["The band for a ring of finality"] = "signetband",
	["The bezel for a ring of finality"] = "signetbezel",
	["The carving for a ring of finality"] = "signetcarving",
	["The marks for a ring of finality"] = "signetmarks",

	["The lizard for a grievous keyring"] = "keyringlizard",
	["The tiger for a grievous keyring"] = "keyringtiger",
	["The slate for a grievous keyring"] = "keyringslate",
	["The hoop for a grievous keyring"] = "keyringhoop",

	["The head of a goblin"] = "goblinhead",
	["The arms of a goblin"] = "goblinarms",
	["The torso of a goblin"] = "goblintorso",
	["The legs of a goblin"] = "goblinlegs",

	["The top of a subjectioner's spigot"] = "spigottop",
	["The bottom of a subjectioner's spigot"] = "spigotbottom",
	["The stem of a subjectioner's spigot"] = "spigotstem",
	["The tip of a subjectioner's spigot"] = "spigottip",

	["The band for sunless hope"] = "sunlessband",
	["The stone for sunless hope"] = "sunlessstone",
	["The binding for sunless hope"] = "sunlessbinding",
	["The enchantment for sunless hope"] = "sunlessenchantment",

	["The fur for Vakha's bribe"] = "circletfur",
	["The blades for Vakha's bribe"] = "circletblades",
	["The band for Vakha's bribe"] = "circletband",
	["The binding for Vakha's bribe"] = "circletbinding",

	["The stone for pedigree's jewel"] = "sanguinestone",
	["The aura for pedigree's jewel"] = "sanguineaura",
	["The teardrop for pedigree's jewel"] = "sanguineteardrop",
	["The blood for pedigree's jewel"] = "taintedblood",

	["The lid for a canopic jar"] = "canopiclid",
	["The fluid for a canopic jar"] = "canopicfluid",
	["The base for a canopic jar"] = "canopicbase",
	["The pot for a canopic jar"] = "canopicpot",

	["A shard for an apperception stone"] = "crystalshard",
	["The base of an apperception stone"] = "crystalbase",
	["The binding for an apperception stone"] = "crystalbinding",
	["The portal for an apperception stone"] = "crystalportal",

	["The leather for revelation's guise"] = "guiseleather",
	["The thread for revelation's guise"] = "guisethread",
	["The smile for revelation's guise"] = "guisesmile",
	["The enchantment for revelation's guise"] = "guiseenchantment",

	["The scroll for an experimenter's grimoire"] = "grimoirescroll",
	["The gut for an experimenter's grimoire"] = "grimoiregut",
	["The cover for an experimenter's grimoire"] = "grimoirecover",
	["The binding for an experimenter's grimoire"] = "grimoirebinding",

	["The enchantment for suremekh'neina"] = "mantleenchant",
	["The clasp for suremekh'neina"] = "mantleclasp",
	["The fabric for suremekh'neina"] = "mantlefabric",
	["The lining for suremekh'neina"] = "mantlelining",

-- RACES SET

	["The pipes for a set of crystalline panpipes"] = "panpipepipes",
	["the feathers for a set of crystalline panpipes"] = "panpipefeathers",
	["The hair for a set of crystalline panpipes"] = "panpipehair",
	["The flutes for a set of crystalline panpipes"] = "panpipeflutes",

	["The bones for a shamanistic rattle"] = "rattlebones",
	["The staff for a shamanistic rattle"] = "rattlestaff",
	["The antlers for a shamanistic rattle"] = "rattleantlers",
	["The runes for a shamanistic rattle"] = "rattlerunes",

	["The frame for a collapsable catapult"] = "catapultframe",
	["The bolts for a collapsable catapult"] = "catapultbolts",
	["The wheel for a collapsable catapult"] = "catapultwheel",
	["The arm for a collapsable catapult"] = "catapultarm",

	["Some blood spattered cloth"] = "clothblood",
	["A piece of whispersilk"] = "whispersilk",
	["The enchantment for a whispercloth"] = "clothenchantment",
	["The binding for a whispercloth"] = "clothbinding",

	["The glass for a demolition sphere"] = "sphereglass",
	["The fire for a demolition sphere"] = "spherefire",
	["The runes for a demolition sphere"] = "sphererunes",
	["The spark for a demolition sphere"] = "spherespark",

	["The carving for a piece of horkval chitin"] = "chitincarving",
	["A fragment of horkval chitin"] = "chitinfragment",
	["The colouring for a piece of horkval chitin"] = "chitincolour",
	["The name for a piece of horkval chitin"] = "chitinname",

	["The head for a flattened frogskin"] = "froghead",
	["The cord for a flattened frogskin"] = "frogcord",
	["The body for a flattened frog skin"] = "frogbody",
	["The feet for a flattened frog skin"] = "frogfeet",

	["The barbs for a pair of Dala'myrr claws"] = "clawbarbs",
	["The points for a set of Dala'myrr claws"] = "clawpoints",
	["The straps for a set of Dala'myrr claws"] = "clawstraps",
	["The base for a pair of Dala'myrr claws"] = "clawbase",

	["The glass for a bottled siren's song"] = "sirenglass",
	["The voice for a bottled siren's song"] = "sirenvoice",
	["The cork for a bottled siren's song"] = "sirencork",
	["The smoke for a bottled siren's song"] = "sirensmoke",

	["The lens for an arachnid eye"] = "arachnidlens",
	["The eyeball for an arachnid eye"] = "arachnideyeball",
	["The enchantment for an arachnid's eye"] = "arachnidenchantment",
	["The colouration for an arachnid's eye"] = "arachnidcolour",

	["The top of a dwarven lodestone"] = "lodestonetop",
	["The left fragment of a dwarven lodestone"] = "lodestoneleft",
	["The base of a dwarven lodestone"] = "lodestonebase",
	["The right fragment of a dwarven lodestone"] = "lodestoneright",

	["The head of a figurine of the suffering Maya"] = "figurinehead",
	["The arms of a figurine of the suffering Maya"] = "figurinearms",
	["The torso of a figurine of the suffering Maya"] = "figurinetorso",
	["The legs of a figurine of the suffering Maya"] = "figurinelegs",

-- FORAYS
 
	["the spine of a feather from Aran'Kesh"] = "arankeshfeatherspine",
	["the down from a feather of Aran'Kesh"] = "arankeshfeatherdown",
	["the colouration for a feather from Aran'Kesh"] = "arankeshfeathercolour",
	["the lethally sharp edge of a feather from Aran'Kesh"] = "arankeshfeatheredge",
 
	["a golden mirror frame"] = "goldmirrorframe",
	["silvery mirror class"] = "mirrorglass",
	["a cursed piece of glass"] = "mirrorcurse",
	["the inscription for a cursed mirror"] = "mirrorinscription",
 
	["the bowl for some ogre's broth"] = "brothbowl",
	["some basic ogre's broth"] = "brothbroth",
	["some seasoning for ogre's broth"] = "brothseasoning",
	["some special ogre spices"] = "brothspice",
 
	["the chipping for a large boulder"] = "boulderchipping",
	["the shell for a large boulder"] = "bouldershell",
	["the core of a large boulder"] = "bouldercore",
	["the stone for a large boulder"] = "boulderstone",
 
	["clumps of weeds"] = "margamwheelweeds",
	["the bolts for a ship's wheel"] = "margamwheelbolts",
	["the wood for a ship's wheel"] = "margamwheelwood",
	["a cursed ship's wheel centre"] = "margamwheelcentre",
 
	["the top of a map fragment"] = "mapfragmenttop",
	["the bottom of a map fragment"] = "mapfragmentbottom",
	["the left piece of a map fragment"] = "mapfragmentleft",
	["the right piece of a map fragment"] = "mapfragmentright",

-- Cities set

	["The chain for a set of wraith shackles"] = "wraithshacklechain",
	["The smoke for a set of wraith shackles"] = "wraithshacklesmoke",
	["The manacles for a set of wraith shackles"] = "wraithshacklemanacle",
	["The lock for a set of wraith shackles"] = "wraithshacklelock",

	["The globe for a celescope"] = "celescopeglobe",
	["The cylinders for a celescope"] = "celescopecylinders",
	["The eyepiece for a celescope"] = "celescopeeyepiece",
	["The ingraving for a celescope"] = "celescopeingraving",

	["The base for a disgusting biscuit"] = "biscuitbase",
	["The special ingredient for a disgusting biscuit"] = "biscuitspecial",
	["The sugar for a disgusting biscuit"] = "biscuitsugar",
	["The salt for a disgusting biscuit"] = "biscuitsalt",

	["The song for a music box"] = "musicboxsong",
	["The mechanism for a music box"] = "musicboxmechanism",
	["The frame for a broken music box"] = "musicboxframe",
	["The crank for a broken music box"] = "musicboxcrank",

	["The lid for an alabaster urn"] = "alabasterurnlid",
	["The pot for an alabaster urn"] = "alabasterurnpot",
	["The inscription for an alabaster urn"] = "alabasterurninscript",
	["The ash for an alabaster urn"] = "alabasterurnash",

	["The roots for a tumbleweed"] = "tumbleweedroots",
	["The tendrils for a tumbleweed"] = "tumbleweedtendrils",
	["The vines for a tumbleweed"] = "tumbleweedvines",
	["The roots for a tumbleweed"] = "tumbleweedstem",

-- Monks
	
	["The head of a monk dummy"] = "monkdummyhead",
	["The arms of a monk dummy"] = "monkdummyarms",
	["The torso of a monk dummy"] = "monkdummytorso",
	["The legs of a monk dummy"] = "monkdummylegs",

	["The fleshy part of a tongue"] = "tongueflesh",
	["The metal casing for a tongue"] = "tonguecasing",
	["The polish for the metal casing for a tongue"] = "tonguepolish",
	["The curse for an odyssean tongue"] = "tonguecurse",

	["The threads for a black headband"] = "monkheadbandthreads",
	["The amethyst for a black headband"] = "monkheadbandamethyst",
	["The enchantment for a black headband"] = "monkheadbandenchantment",
	["The support for a black headband"] = "monkheadbandsupport",

	["A crimson steel band"] = "crimsonsteelband",
	["A rough-cut quartz setting"] = "quartzsetting",
	["The claws for a taloned ring"] = "ringsteelclaws",
	["The binding for a taloned ring"] = "talonedringbinding",

	["The cloth for a pennon of cranes"] = "pennoncloth",
	["The cranes for a pennon"] = "pennoncranes",
	["The staff for a pennon of cranes"] = "pennonstaff",
	["The thread for a pennon of cranes"] = "pennonthread",

	["The flag for a rallying banner"] = "monkbannerflag",
	["The embroidery for a rallying banner"] = "monkbannerembroidery",
	["The spear for a rallying banner"] = "monkbannerspear",
	["The thread for a rallying banner"] = "monkbannerthread",

	["The stave for an ash wood staff"] = "ashstaffstave",
	["The strapping for an ash wood staff"] = "ashstaffstrapping",
	["The cap for an ash wood staff"] = "ashstaffcap",
	["The shoe for an ash wood staff"] = "ashstaffshoe",

	["The wood for an olive branch"] = "olivewood",
	["The shoots for an olive branch"] = "olivebranchshoots",
	["The leaves for an olive branch"] = "oliveleaves",
	["The enchantment for an olive branch"] = "olivebranchenchantment",

-- Elemental

	["The cyclone for an Air Elemental"] = "airelementalcyclone",
	["The essence for an Air Elemental"] = "airelementalessence",
	["The binding for an Air Elemental"] = "airelementalbinding",
	["The lightning for an Air Elemental"] = "airelementallightning",

	["The clasp for a brooch of the tempest"] = "airbroochclasp",
	["The gem for a brooch of the tempest"] = "airbroochgem",
	["The setting for a brooch of the tempest"] = "airbroochsetting",
	["The enchantment for a brooch of the tempest"] = "airbroochenchantment",

	["The chain for a fire pendant"] = "firependantchain",
	["The flame for a fire pendant"] = "firependantflame",
	["The setting for a fire pendant"] = "firependantsetting",
	["The jewel for a fire pendant"] = "firependantjewel",

	["The teeth for a warblefish's jawbone"] = "jawboneteeth",
	["The mandibles for a warblefish's jawbone"] = "jawbonemandibles",
	["The bone for a warblefish's jawbone"] = "jawbonebone",
	["The hinge for a warblefish's jawbone"] = "jawbonehinge",

	["The wood for a mineral-crusted shovel"] = "earthshovelwood",
	["The blade for a mineral-crusted shovel"] = "earthshovelblade",
	["The binding for a mineral-crusted shovel"] = "earthshovelbinding",
	["The minerals for a mineral-crusted shovel"] = "earthshovelminerals",

	["The phial for some tears of the sea"] = "seatearsphial",
	["The stopper for a phial of some tears of the sea"] = "seatearsstopper",
	["The paint for a phial for some tears of the sea"] = "seatearspaint",
	["Some tears of the sea"] = "seatearstears",

	["The links for a shackle of Garash"] = "garashshacklelinks",
	["The orbs for a shackle of Garash"] = "garashshackleorbs",
	["The enchantment for a shackle of Garash"] = "garashshackleenchantment",
	["The chains for a shackle of Garash"] = "garashshacklechains",

	["Some sticky mud"] = "mudbombmud",
	["The binding for a sticky mud bomb"] = "mudbombbinding",

	["The plaque for a seared glyph"] = "searedglyphplaque",
	["The emblem for a seared glyph"] = "searedglyphemblem",
	["The tendrils for a seared glyph"] = "searedglyphtendrils",
	["The flame for a seared glyph"] = "searedglyphflame",

	["The frame for an armoured charge tank"] = "firetankframe",
	["The flame for an armoured charge tank"] = "firetankflame",
	["The insignia for an armoured charge tank"] = "firetankinsignia",
	["The links for an armoured charge tank"] = "firetanklinks",

	["The script for a sceptre of aqueous mastery"] = "sceptrescript",
	["The enchantment for a sceptre of aqueous mastery"] = "sceptreenchantment",
	["The heart of a sceptre of aqueous mastery"] = "sceptreheart",
	["The tusk for a sceptre of aqueous mastery"] = "sceptretusk",

	["The straps for a stratospheric harness"] = "airharnessstraps",
	["The glyphs for a stratospheric harness"] = "airharnessglyphs",
	["The enchantment for a stratospheric harness"] = "airharnessenchantment",
	["The buckles for a stratospheric harness"] = "airharnessbuckles",

-- Yggdrasil
	
	["The plates for a dreadpilar figurine"] = "dreadpilarplates",
	["The body for a dreadpilar figurine"] = "dreadpilarbody",
	["The legs for a dreadpilar figurine"] = "dreadpilarlegs",
	["The head for a dreadpilar figurine"] = "dreadpilarhead",
	
	["a Squargon's head"] = "squargonhead",
	["The legs of a Squargon"] = "squargonlegs",
	["The body of a Squargon"] = "squargonbody",
	["The fangs for a Squargon"] = "squargonfangs",
	
	["The wax for a tablet"] = "tabletwax",
	["The wood for a tablet"] = "tabletwood",
	["The stylus for a tablet"] = "tabletstylus",
	["The twine	for a tablet"] = "tablettwine",
	
	["a valdblom stem"] = "valdblomstem",
	["Some valdblom leaves"] = "valdblomleaves",
	["Some valdblom essence"] = "valdblomessence",
	["a valdblom root"] = "valdblomroot",
	
	["The clay for a tash'la shaping tome"] = "shapingtomeclay",
	["The granite for a tash'la shaping tome"] = "shapingtomgranite",
	["The plates for a tash'la shaping tome"] = "shapingtomeplates",
	["The insignia for a tash'la shaping tome"] = "shapingtominsignia",
	
	["The script for a nexus cube"] = "nexuscube",
	["The gold for a nexus cube"] = "nexuscubegold",
	["The glass for a nexus cube"] = "nexuscubeglass",
	["The mote for a nexus cube"] = "nexuscubemote",
	
	["The stone for a fire crystal"] = "firecrystalstone",
	["The flame for a fire crystal"] = "firecrystalflame",
	["The enchantment for a fire crystal"] = "firecrystalenchantment",
	["The spark for a fire crystal"] = "firecrystalspark",
	
	["The flame for a planar mote"] = "moteflame",
	["The aura for a planar mote"] = "moteaura",
	["The binding for a planar mote"] = "motebinding",
	["The enchantment for a planar mote"] = "moteenchantment",
	
	["The scales from some snakeskin"] = "goldenscales",
	["a length of snakeskin"] = "goldensnakeskin",
	["The colouring from some snakeskin"] = "goldencolouring",
	["The enchantment from some snakeskin"] = "goldenenchantment",
	
	["Some wood for a branch Yggdrasil"] = "yggdrasilbranchwood",
	["A mosiac for a branch of Yggdrasil"] = "yggdrasilbranchmosaic",
	["Some enchancted fishing line"] = "yggdrasilbranchline",
	["An iron hook"] = "yggdrasilbranchhook",
	
	["The shell for a crier's bell"] = "criersshell",
	["The handle for a crier's bell"] = "criershandle",
	["The chime for a crier's bell"] = "crierschime",
	["The curse for a crier's bell"] = "crierscurse",
	
-- CONTENDERS
	
	["The clay for a piglet bank"] = "pigclay",
	["The ears of a piglet bank"] = "pigears",
	["The belly of a piglet bank"] = "pigbelly",
	["The tail of a piglet bank"] = "pigtail",

	["The lip for a jug of chum"] = "juglip",
	["The base for a jug of chum"] = "jugbase",
	["The bowl for a jug of chum"] = "jugbowl",
	["The handle for a jug of chum"] = "jughandle",

	["The string for a bouquet"] = "bouquetstring",
	["The knot for a bouquet"] = "bouquetknot",
	["The bloom for a bouquet"] = "bouquetbloom",
	["The stem for a bouquet"] = "bouquetstem",

	["The head for a featureless figurine"] = "contenderfigurinehead",
	["The arms for a featureless figurine"] = "contenderfigurinearms",
	["The legs for a featureless figurine"] = "contenderfigurinelegs",
	["The body for a featureless figurine"] = "contenderfigurinebody",

	["The handle for a magnifying glass"] = "glasshandle",
	["The pane for a magnifying glass"] = "glasspane",
	["The focus for a magnifying glass"] = "glassfocus",
	["The frame for a magnifying glass"] = "glassframe",

	["The binding for an adventurer's journal"] = "journalbinding",
	["The page for an adventurer's journal"] = "journalpage",
	["The cover for an adventurer's journal"] = "journalcover",
	["The index for an adventurer's journal"] = "journalindex",

	["The gleam for a prismatic stud"] = "studgleam",
	["The post for a prismatic stud"] = "studpost",
	["The gem for a prismatic stud"] = "studgem",
	["The back for a prismatic stud"] = "studback",

	["The gilding for a crimson ribbon bar"] = "ribbongilding",
	["The pin for a crimson ribbon bar"] = "ribbonpin",
	["The stripe for a crimson ribbon bar"] = "ribbonstripe",
	["The fold for a crimson ribbon bar"] = "ribbonfold",

-- UNDERWORLD

	["The head of a crypt worm"] = "cryptwormhead", 
	["The body of a crypt worm"] = "cryptwormbody", 
	["The fangs of a crypt worm"] = "cryptwormfangs", 
	["The binding for a crypt worm"] = "cryptwormbinding",
	
	["The chain for a splinter of shattered psyche"] = "psychesplinterchain", 
	["The frame for a splinter of shattered psyche"] = "psychesplinterframe", 
	["The length for a splinter of shattered psyche"] = "psychesplinterlength", 
	["The curse for a splinter of shattered psyche"] = "psychesplintercurse",
	
	["The thread for a skein of sanity"] = "sanityskeinthread", 
	["The coil for a skein of sanity"] = "sanityskeincoil", 
	["The curse for a skein of sanity"] = "sanityskeincurse", 
	["The binding for a skein of sanity"] = "sanityskeinbinding",
	
	["The left half of a custody talisman"] = "custodyleft", 
	["The right half of a custody talisman"] = "custodyright", 
	["The centre of a custody talisman"] = "custodycentre", 
	["The binding for a custody talisman"] = "custodybinding",
	
	["The base for a totem of unlife"] = "unlifetotembase", 
	["The wood for a totem of unlife"] = "unlifetotemwood", 
	["The skull for a totem of unlife"] = "unlifetotemskull", 
	["The tendrils for a totem of unlife"] = "unlifetotemtendrils",

	["The obsidian for a soul sliver"] = "soulsliverobsidian", 
	["The fog for a soul sliver"] = "soulsliverfog", 
	["The souls for a soul sliver"] = "soulsliversouls", 
	["The curse for a soul sliver"] = "soulslivercurse",
	
	["The hilt for a culling blade"] = "cullingbladehilt", 
	["The edge of a culling blade"] = "cullingbladeedge", 
	["The metal for a culling blade"] = "cullingblademetal", 
	["The curse for a culling blade"] = "cullingbladecurse",
	
	["The cloth for a funeral shroud"] = "funeralshroudcloth", 
	["The thread for a funeral shroud"] = "funeralshroudthread", 
	["The benediction for a funeral shroud"] = "funeralshroudbenediction", 
	["The clasp for a funeral shroud"] = "funeralshroudclasp",

-- Renegades

	["The stick for mercenary's chalk"] = "mercenarychalkstick",
	["The chalkdust for mercenary's chalk"] = "mercenarychalkdust",
	["The binding for mercenary's chalk"] = "mercenarychalkbinding",
	["The chalk for mercenary's chalk"] = "mercenarychalkchalk",
	
	["The signature for an elemental injunction"] = "injunctionsignature",
	["The script for an elemental injunction"] = "injunctionscript",
	["The paper for an elemental injunction"] = "injunctionpaper",
	["The seal for an elemental injunction"] = "injunctionseal",
	
	["The cloth for a moppet"] = "moppetcloth",
	["The eyes for a moppet"] = "moppeteyes",
	["The thread for a moppet"] = "moppetthread",
	["The buttons for a moppet"] = "moppetbuttons",
	
	["The buttons for a turncoat's coat"] = "turncoatscoat",
	["The thread for a turncoat's coat"] = "turncoatscoatthread",
	["The cloth for a turncoat's coat"] = "turncoatscoatcloth",
	["The binding for a turncoat's coat"] = "turncoatscoatbinding",
	
	["The cloth for a shadowcloak"] = "shadowcloakcloth",
	["The clasp for a shadowcloak"] = "shadowcloakclasp",
	["The thread for a shadowcloak"] = "shadowcloakthread",
	["The curse for a shadowcloak"] = "shadowcloakcurse",
	
	["The cloth for a betrayer's mantle"] = "betrayersmantlecloth",
	["The thread for a betrayer's mantle"] = "betrayersmantlethread",
	["The straps for a betrayer's mantle"] = "betrayersmantlestraps",
	["The curse for a betrayer's mantle"] = "betrayersmantlecurse",
	
	["The stone for a turncoat's masque"] = "turncoatsmasquestone",
	["The etchings for a turncoat's masque"] = "turncoatsmasqueetchings",
	["The curse for a turncoat's masque"] = "turncoatsmasquecurse",
	["The eyes for a turncoat's masque"] = "turncoatsmasqueeyes",
	
	["The cloth for a sundered pennon"] = "sunderedpennoncloth",
	["The thread for a sundered pennon"] = "sunderedpennonthread",
	["The staff for a sundered pennon"] = "sunderedpennonstaff",
	["The binding for a sundered pennon"] = "sunderedpennonbinding",

--Invasion

	["The head of a figurine of the Dark Earth"] = "darkearthhead",
	["The torso of a figurine of the Dark Earth"] = "darkearthtorso",
	["The arms of a figurine of the Dark Earth"] = "darkeartharms",
	["The legs for a figurine of the Dark Earth"] = "darkearthlegs",

	["The wheels for a battering ram"] = "batteringramwheels",
	["The ram for a battering ram"] = "batteringramram",
	["The grips for a battering ram"] = "batteringramgrips",
	["Some bolts for a battering ram"] = "batteringrambolts",
	
	["The spikes for a steel caltrop"] = "caltropspikes",
	["The ball for a steel caltrop"] = "caltropball",
	["The binding for a steel caltrop"] = "caltropbinding",
	["The barbs for a steel caltrop"] = "caltropbarbs",
	
	["The pot for an iron cauldron"] = "cauldronpot",
	["The oil for an iron cauldron"] = "cauldronoil",
	["The handle for an iron cauldron"] = "cauldronhandle",
	["The base for an iron cauldron"] = "cauldronbase",
	
	["The link for an adamantine shackle"] = "shadowshacklelink",
	["The metal for an adamantine shackle"] = "shadowshacklemetal",
	["The enchantment for an adamantine shackle"] = "shadowshackleenchantment",
	["The shadow for an adamantine shackle"] = "shadowshackleshadow",
	
	["The lid for a hag's eye"] = "hagseyelid",
	["The ball for a hag's eye"] = "hagseyeball",
	["The fluid for a hag's eye"] = "hagseyefluid",
	["The enchantment for a hag's eye"] = "hagseyeenchantment",
	
	["Some magic ice"] = "icebrickmagic",
	["The repeating spell for a block of ice"] = "icebrickspell",
	["The binding for a block of ice"] = "icebrickbinding",
	["The enchantment spell for a block of ice"] = "icebrickenchantment",
	
	["The enchantment for a map"] = "scoutingmapenchantment",
	["The icons	for a map"] = "scoutingmapicons",
	["The ink for a map"] = "scoutingmapink",
	["The vellum for a map"] = "scoutingmapvellum",

-- WAR
  
	["the bones for some rotting remains"] = "remainsbones",
	["the flesh for some rotting remains"] = "remainsflesh",
	["the muscles for some rotting remains"] = "remainsmuscles",
	["the blood for some rotting remains"] = "remainsblood",
 
	["the gilding for a gilded bit"] = "bitgilding",
	["the bar for a gilded bit"] = "bitbar",
	["the chain for a gilded bit"] = "bitchain",
	["the patterns for a gilded bit"] = "bitpatterns",
 
	["the head of a portly pigeon"] = "pigeonhead",
	["the body of a portly pigeon"] = "pigeonbody",
	["the legs of a portly pigeon"] = "pigeonlegs",
	["the wings of a portly pigeon"] = "pigeonwings",
 
	["the fog for a cloud of war"] = "warcloudfog",
	["the stench for a cloud of war"] = "warcloudstench",
	["the curse for a cloud of war"] = "warcloudcurse",
	["the binding for a cloud of war"] = "warcloudbinding",
 
	["the steel for a portal hoop"] = "portalhoopsteel",
	["the light for a portal hoop"] = "portalhooplight",
	["the enchantment for a portal hoop"] = "portalhoopenchantment",
	["the binding for a portal hoop"] = "portalhoopbinding",
 
	["the metal for an observant sigil"] = "observantsigilmetal",
	["the star for an observant sigil"] = "observantsigilstar",
	["the eye for an observant sigil"] = "observantsigileye",
	["the latice for an observant sigil"] = "observantsigillatice",

}

-- require this info for formatting and complete set management (note, can be extended)
-- frustratingly, being an unsorted table, this also required the additional order in the set data or I couldnt handle the formatting..
talisman.info = {
	blackdragon = {
			blackdragonbone = {required=64, short="bone"}, 
			blackdragonclaw = {required=64, short="claw"}, 
			blackdragoneye = {required=64, short="eye"}, 
			blackdragonheart = {required=64, short="heart"}, 
			blackdragonleather = {required=64, short="leather"}, 
			blackdragonscale = {required=64, short="scale"}, 
			blackdragontooth = {required=64, short="tooth"}, 
			blackdragonsac = {required=4, short="sac"}
		},
	greendragon = {
			greendragonbone = {required=64, short="bone"}, 
			greendragonclaw = {required=64, short="claw"}, 
			greendragoneye = {required=64, short="eye"}, 
			greendragonheart = {required=64, short="heart"}, 
			greendragonleather = {required=64, short="leather"}, 
			greendragonscale = {required=64, short="scale"}, 
			greendragontooth = {required=64, short="tooth"}, 
			greendragonsac = {required=4, short="sac"}
		},
	reddragon = {
			reddragonbone = {required=64, short="bone"}, 
			reddragonclaw = {required=64, short="claw"}, 
			reddragoneye = {required=64, short="eye"}, 
			reddragonheart = {required=64, short="heart"}, 
			reddragonleather = {required=64, short="leather"}, 
			reddragonscale = {required=64, short="scale"}, 
			reddragontooth = {required=64, short="tooth"}, 
			reddragonbelly = {required=4, short="belly"}
		},
	bluedragon = {
			bluedragonbone = {required=64, short="bone"}, 
			bluedragonclaw = {required=64, short="claw"}, 
			bluedragoneye = {required=64, short="eye"}, 
			bluedragonheart = {required=64, short="heart"}, 
			bluedragonleather = {required=64, short="leather"}, 
			bluedragonscale = {required=64, short="scale"}, 
			bluedragontooth = {required=64, short="tooth"}, 
			bluedragonlung = {required=4, short="lung"}
		},
	silverdragon = {
			silverdragonbone = {required=64, short="bone"}, 
			silverdragonclaw = {required=64, short="claw"}, 
			silverdragoneye = {required=64, short="eye"}, 
			silverdragonheart = {required=64, short="heart"}, 
			silverdragonleather = {required=64, short="leather"}, 
			silverdragonscale = {required=64, short="scale"}, 
			silverdragontooth = {required=64, short="tooth"}, 
			silverdragonlarynx = {required=4, short="larynx"}
		},
	golddragon = {
			golddragonbone = {required=64, short="bone"}, 
			golddragonclaw = {required=64, short="claw"}, 
			golddragoneye = {required=64, short="eye"}, 
			golddragonheart = {required=64, short="heart"}, 
			golddragonleather = {required=64, short="leather"}, 
			golddragonscale = {required=64, short="scale"}, 
			golddragontooth = {required=64, short="tooth"}, 
			golddragonstem = {required=4, short="stem"}
		},
-- AZATLAN
	eagleheaddress = {
			bluefeather = {required=64, short="blue"}, 
			greenfeather = {required=64, short="green"}, 
			redfeather = {required=64, short="red"}, 
			yellowfeather = {required=64, short="yellow"}, 
			orangefeather = {required=16, short="orange"}, 
			purplefeather = {required=16, short="purple"}, 
			blackfeather = {required=4, short="black"}, 
		},
	atlatl = {
			atlatlshaft = {required=1, short="shaft"}, 
			atlatlcup = {required=1, short="cup"}, 
			atlatlspear = {required=1, short="spear"}, 
	},
	transoceanic = {
			orbleft = {required=4, short="left"}, 
			orbright = {required=4, short="right"}, 
			orbcenter = {required=2, short="center"}, 
	},
	azatlanknife = {
			knifebladetop = {required=1, short="tip"}, 
			knifebladebottom = {required=1, short="tang"}, 
			knifeleather = {required=1, short="leather"}, 
	},
	quetzal = {
			quetzalredfeather = {required=64, short="red"}, 
			quetzalbluefeather = {required=64, short="blue"}, 
			quetzalgreenfeather = {required=64, short="green"}, 
			quetzalcage = {required=64, short="cage"}, 
			quetzaltalon = {required=16, short="talon"}, 
			quetzalegg = {required=4, short="egg"}, 
	},
	kinkajou= {
			kinkajoutooth = {required=64, short="tooth"}, 
			kinkajoucollar = {required=64, short="collar"}, 
			kinkajoubait = {required=64, short="bait"}, 
			kinkajouclaw = {required=32, short="claw"}, 
			kinkajoupaw = {required=16, short="paw"}, 
			kinkajoutail = {required=4, short="tail"}, 
	},
	coati= {
			coatitooth = {required=16, short="tooth"}, 
			coaticollar = {required=64, short="collar"}, 
			coatibait = {required=64, short="bait"}, 
			coaticlaw = {required=64, short="claw"}, 
			coatipaw = {required=32, short="paw"}, 
			coatitail = {required=4, short="tail"}, 
	},
--Wonders
	baitbucket = {
			buckethandle = {required=1, short="handle"}, 
			bucketleft = {required=1, short="left"},
			bucketright = {required=1, short="right"},
			bucketbase = {required=1, short="base"},
			bucketwater = {required=1, short="water"}
	},
	dragonskinpack = {
			packscales = {required=1, short="scales"},
			packstraps = {required=1, short="straps"},
			packlining = {required=1, short="lining"},
			packthread = {required=1, short="thread"},
			packleather = {required=1, short="leather"},
	},
	platinumwhistle = {
			whistlemouth = {required=1, short="mouth"},
			whistleflue = {required=1, short="flue"},
			whistlereed = {required=1, short="reed"},
			whistletoppipe = {required=1, short="top"},
			whistlelowpipe = {required=1, short="bottom"},
	},
	ramshorn = {
			ramshorn = {required=1, short="horn"},
			hornmouth = {required=1, short="mouth"},
			hornleftstrap = {required=1, short="left"},
			hornrightstrap = {required=1, short="right"},
			hornfastener = {required=1, short="fastener"},
	},
	monocle = {
			monotop = {required=1, short="top"},
			monobottom = {required=1, short="bottom"},
			monoframe = {required=1, short="frame"},
			monocatch = {required=1, short="catch"},
			monoclasp = {required=1, short="clasp"},
	},
  globe = {
    globetop = {required=1, short="top"},
    globemiddle = {required=1, short="middle"},
    globebottom = {required=1, short="bottom"},
  },
--Misc
	hookah = {
			hookahbase = {required=1, short="base"},
			hookahbowl = {required=1, short="bowl"},
			hookahhood = {required=1, short="hood"},
			hookahchain = {required=1, short="chain"},
			hookahhoses = {required=1, short="hose"},
			hookahstem = {required=1, short="stem"},
			hookahplate = {required=1, short="plate"},
	},
	tapestry = {
			tapestryclaw = {required=1, short="claw"},
			tapestryonyx = {required=1, short="onyx"},
			tapestryroller = {required=1, short="roller"},
			tapestryvellum = {required=1, short="vellum"},
	},
	vaultkey = {
			keyfragment = {required=1, short="keyfragment"},
	},
	negationsphere = {
			spherefragment = {required=1, short="spherefragment"},
	},
	clayfigurine = {
			clayfigurinearms = {required=1, short="arms"},
			clayfigurinelegs = {required=1, short="legs"},
			clayfigurinehead = {required=1, short="head"},
			clayfigurinebody = {required=1, short="body"},
	},
--Historical
	window = {
			windowframe = {required=1, short="frame"},
			windowpane = {required=1, short="pane"},
			windowjamb = {required=1, short="jamb"},
			windowshutters = {required=1, short="shutters"},
			windowgrid = {required=1, short="grid"},
	},
	mantle = {
			mantlecloth = {required=1, short="cloth"},
			mantlethread = {required=1, short="thread"},
			mantlecentre = {required=1, short="centre"},
			mantlegems = {required=1, short="gems"},
	},
	icicle = {
			icicletop = {required=1, short="top"},
			iciclemiddle = {required=1, short="middle"},
			iciclebase = {required=1, short="base"},
			icicletip = {required=1, short="tip"},
			iciclerunes = {required=1, short="runes"},
	},
	helmet = {
			helmetskull = {required=1, short="skull"},
			helmetnose = {required=1, short="nose"},
			helmetstrap = {required=1, short="strap"},
	},
	disc = {
			disctop = {required=1, short="top"},
			discside = {required=1, short="side"},
			discmiddle = {required=1, short="middle"},
			discbottom = {required=1, short="bottom"},
			discrunes = {required=1, short="runes"},
			disccentre = {required=1, short="centre"},
	},
	votive = {
			votivebase = {required=1, short="base"},
			votivewick = {required=1, short="wick"},
			votivewax = {required=1, short="wax"},
	},
	whisperstone = {
			stonetop = {required=1, short="top"},
			stonebottom = {required=1, short="bottom"},
			stonemiddle = {required=1, short="middle"},
			stoneside = {required=1, short="side"},
			stonecore = {required=1, short="core"},
			stoneemitter= {required=1, short="emitter"},
	},
	lily = {
			lilypetals = {required=1, short="petals"},
			lilystem = {required=1, short="stem"},
			lilystamen = {required=1, short="stamen"},
			lilybulb = {required=1, short="bulb"},
			lilypistil = {required=1, short="pistil"},
	},
	ozhera = {
			ozherabait = {required=1, short="bait"},
			ozheracollar = {required=1, short="collar"},
			ozheraegg = {required=1, short="egg"},
			ozheraclaw = {required=1, short="claw"},
			ozherabeak = {required=1, short="beak"},
			ozheranest = {required=1, short="nest"},
	},
	turtle = {
			turtleshell = {required=1, short="shell"},
			turtlebait = {required=1, short="bait"},
			turtlecollar = {required=1, short="collar"},
			turtletail = {required=1, short="tail"},
			turtlefoot= {required=1, short="foot"},
			turtletongue= {required=1, short="tongue"},
	},
	mongoose = {
			mongoosebait = {required=1, short="bait"},
			mongoosecollar = {required=1, short="collar"},
			mongoosetail = {required=1, short="tail"},
			mongoosepaw = {required=1, short="paw"},
			mongooseclaw = {required=1, short="claw"},
			mongoosefang = {required=1, short="fang"},
	},
	hellcat = {
			hellcatbait = {required=1, short="bait"},
			hellcatcollar = {required=1, short="collar"},
			hellcatclaw = {required=1, short="claw"},
			hellcatfang = {required=1, short="fang"},
			hellcattail = {required=1, short="tail"},
			hellcatpaw = {required=1, short="paw"},
	},
--Conclave
	tophat = {
			tophatlining = {required=1, short="lining"},
			tophatbrim= {required=1, short="brim"},
			tophatthread = {required=1, short="thread"},
			tophatband = {required=1, short="band"},
	},
	hourglass = {
			hourglasstop = {required=1, short="top"},
			hourglassbottom= {required=1, short="bottom"},
			hourglasssand = {required=1, short="sand"},
			hourglassbulb= {required=1, short="bulb"},
	},
	tempestbrooch = {
			broochgem= {required=1, short="gem"},
			broochclasp= {required=1, short="clasp"},
			broochmetal= {required=1, short="metal"},
			broochhook = {required=1, short="hook"},
	},
	elementsprite = {
			spritelegs= {required=1, short="legs"},
			spritearms= {required=1, short="arms"},
			spritetorso= {required=1, short="torso"},
			spritehead= {required=1, short="head"},
	},
	lesservault = {
			vaultdoor= {required=1, short="door"},
			vaulthinge= {required=1, short="hinge"},
			vaulthandle= {required=1, short="handle"},
			vaultgems= {required=1, short="gems"},
	},
	flyingring = {
			ringtop = {required=1, short="top"},
			ringbottom = {required=1, short="bottom"},
			ringinside = {required=1, short="inside"},
			ringoutside = {required=1, short="outside"},
	},
	celerity = {
			armbandtop = {required=1, short="top"},
			armbandbottom = {required=1, short="bottom"},
			armbandinside = {required=1, short="inside"},
			armbandoutside = {required=1, short="outside"},
	},
	buckawns = {
			amuletthread = {required=1, short="thread"},
			amuletchain = {required=1, short="chain"},
			amuletball = {required=1, short="ball"},
			amuletclasp = {required=1, short="clasp"},
	},
	adaptgrimoire = {
			grimoireleather = {required=1, short="leather"},
			grimoirepaper = {required=1, short="paper"},
			grimoiregems = {required=1, short="gems"},
			grimoirelock = {required=1, short="lock"},
	},
	stygianpendant = {
			pendantbase = {required=1, short="base"},
			pendantclasp = {required=1, short="clasp"},
			pendantpearl = {required=1, short="pearl"},
			pendanthook = {required=1, short="hook"},
	},
	grandmagi = {
			robesthread = {required=1, short="thread"},
			robesneedle = {required=1, short="needle"},
			robestrim = {required=1, short="trim"},
			robesfabric = {required=1, short="fabric"},
	},
	atavianwings = {
			wingsthread = {required=1, short="thread"},
			wingsleft = {required=1, short="left"},
			wingsright = {required=1, short="right"},
			wingsfeathers = {required=1, short="feathers"},
	},
--MARKS
	ivorywarhorn = {
			ivoryhornmouthpiece = {required=1, short="mouth"},
			ivoryhornfittings = {required=1, short="fittings"},
			ivoryhornleft = {required=1, short="left"},
			ivoryhornright = {required=1, short="right"},
	},
	ivorymedallion = {
			ivorymedalliondisc = {required=1, short="disc"},
			ivorymedallionclasp = {required=1, short="clasp"},
			ivorymedallionaccent = {required=1, short="accent"},
			ivorymedallionribbon = {required=1, short="ribbon"},
	},
	ivoryspyglass = {
			ivoryspyglasslens = {required=1, short="lens"},
			ivoryspyglasseyepiece = {required=1, short="eye"},
			ivoryspyglassbody = {required=1, short="body"},
			ivoryspyglassstrap = {required=1, short="strap"},
	},
	ivorypennon = {
			ivorypennonsilk = {required=1, short="silk"},
			ivorypennonribbon = {required=1, short="ribbon"},
			ivorypennonthread = {required=1, short="thread"},
			ivorypennondye = {required=1, short="dye"},
	},
	ivoryarmband = {
			ivoryarmbandaccent = {required=1, short="accent"},
			ivoryarmbandouter = {required=1, short="outer"},
			ivoryarmbandinner = {required=1, short="inside"},
			ivoryarmbandclasp = {required=1, short="clasp"},
	},
	ivoryatlantia = {
			ivoryatlantiabody = {required=1, short="body"},
			ivoryatlantialegs = {required=1, short="legs"},
			ivoryatlantiahead = {required=1, short="head"},
			ivoryatlantiaarms = {required=1, short="arms"},
	},
	ivorydummy = {
			ivorydummylimbs = {required=1, short="limbs"},
			ivorydummytorso = {required=1, short="torso"},
			ivorydummyclothing = {required=1, short="clothing"},
			ivorydummyarmour = {required=1, short="armour"},
	},
	ivorytower = {
			ivorytowerbase = {required=1, short="base"},
			ivorytowerlower = {required=1, short="lower"},
			ivorytowerupper = {required=1, short="upper"},
			ivorytowerlacquer = {required=1, short="laquer"},
	},
	ivorybowstring = {
			ivorybowstringcore = {required=1, short="core"},
			ivorybowstringwrapping = {required=1, short="wrap"},
			ivorybowstringeyelet = {required=1, short="eyelet"},
			ivorybowstringenchant = {required=1, short="enchant"},
	},
	quisalisdagger = {
			quisaisdaggerhilt = {required=1, short="hilt"},
			quisalisdaggerblade = {required=1, short="blade"},
			quisalisdaggerpommel = {required=1, short="pommel"},
			quisalisdaggergrip = {required=1, short="grip"},
	},
	quisalisbone = {
			quisalisbonelower = {required=1, short="lower"},
			quisalisboneupper = {required=1, short="upper"},
			quisalisbonerope = {required=1, short="rope"},
			quisalisbonestain = {required=1, short="stain"},
	},
	quisalismedallion = {
			quisalismedallionchain = {required=1, short="chain"},
			quisalismedalliontop = {required=1, short="top"},
			quisalismedallionbottom = {required=1, short="bottom"},
			quisalismedallionclasp = {required=1, short="clasp"},
	},
	quisalislookingglass = {
			quisalisglasscase = {required=1, short="case"},
			quisalisglasslens = {required=1, short="lens"},
			quisalisglassiris = {required=1, short="iris"},
			quisalisglasseyepiece = {required=1, short="eyepiece"},
	},
	quisalisderillin = {
			quisalisderillinhair = {required=1, short="hair"},
			quisalisderillinclothing = {required=1, short="clothing"},
			quisalisderillintorso = {required=1, short="torso"},
			quisalisderillinhead = {required=1, short="head"},
	},
	quisalisdummy = {
			quisalisdummylimbs = {required=1, short="limbs"},
			quisalisdummytorso = {required=1, short="torso"},
			quisalisdummyrobes = {required=1, short="robes"},
			quisalisdummytargets = {required=1, short="targets"},
	},
	quisalistombstone = {
			quisalistombstonetop = {required=1, short="top"},
			quisalistombstonemiddle = {required=1, short="middle"},
			quisalistombstonebase = {required=1, short="base"},
			quisalistombstonescript = {required=1, short="script"},
	},
	quisalisarmband = {
			quisalisarmbandserpent = {required=1, short="insignia"},
			quisalisarmbandeyes = {required=1, short="eyes"},
			quisalisarmbandtop = {required=1, short="top"},
			quisalisarmbandbottom = {required=1, short="bottom"},
	},
	quisalismask = {
			quisalismaskbone = {required=1, short="bone"},
			quisalismaskwire = {required=1, short="wire"},
			quisalismaskteeth = {required=1, short="teeth"},
			quisalismaskrunes = {required=1, short="runes"},
	},
	quisaliscloak = {
			quisaliscloakcloth = {required=1, short="cloth"},
			quisaliscloakembroidery = {required=1, short="embroid"},
			quisaliscloaklining = {required=1, short="lining"},
			quisaliscloakhood = {required=1, short="hood"},
	},
--Seafaring
	cloverbox = {
			cloverboxclovers = {required=1, short="clovers"},
			cloverboxlid = {required=1, short="lid"},
			cloverboxsides = {required=1, short="sides"},
			cloverboxbase = {required=1, short = "base"},
	},
	maelstrom = {
			maelstromarms = {required=1, short="arms"},
			maelstromlegs = {required=1, short="legs"},
			maelstromtorso = {required=1, short="torso"},
			maelstromhead = {required=1, short="head"},
	},
	islandwings = {
			islandwingsleft = {required=1, short="left"},
			islandwingsright = {required=1, short="right"},
			islandwingsthread = {required=1, short="thread"},
			islandwingsstraps = {required=1, short="straps"},
	},
	frostpail = {
			frostpailhandle = {required=1, short="handle"},
			frostpailleft = {required=1, short="left"},
			frostpailright = {required=1, short="right"},
			frostpailbase = {required=1, short="base"},
	},
	neatpail = {
			neatpailhandle = {required=1, short="handle"},
			neatpailleft = {required=1, short="left"},
			neatpailright = {required=1, short="right"},
			neatpailbase = {required=1, short="base"},
	},
	shipchit = {
			shipchittop = {required=1, short="top"},
			shipchitbottom = {required=1, short="bottom"},
			shipchitink = {required=1, short="ink"},
			shipchitseal = {required=1, short="seal"},
	},
	xpplaque = {
			xpplaquemount = {required=1, short="mount"},
			xpplaquefascia = {required=1, short="fascia"},
			xpplaquelacquer = {required=1, short="lacquer"},
			xpplaquelettering = {required=1, short="lettering"},
	},
	monstermap = {
			monstermapink = {required=1, short="ink"},
			monstermapparchment = {required=1, short="parchment"},
			monstermapcompass = {required=1, short="compass"},
			monstermapenchant = {required=1, short="enchant"},
	},
	crossbow = {
			crossbowmount = {required=1, short="mount"},
			crossbowarms = {required=1, short="arms"},
			crossbowstring = {required=1, short="string"},
			crossbowcrank = {required=1, short="crank"},
	},
	glassbottle = {
			glassbottleneck = {required=1, short="neck"},
			glassbottlemiddle = {required=1, short="middle"},
			glassbottlebase = {required=1, short="base"},
			glassbottleenchant = {required=1, short="enchant"},
	},
	seaweedpail = {
			seaweedpailhandle = {required=1, short="handle"},
			seaweedpailleft = {required=1, short="left"},
			seaweedpailright = {required=1, short="right"},
			seaweedpailbase = {required=1, short="base"},
	},
	smokeflare = {
			smokeflareshell = {required=1, short="shell"},
			smokeflarefins = {required=1, short="fins"},
			smokeflarelid = {required=1, short="lid"},
			smokeflarechamber = {required=1, short="chamber"},
	},
--Death
	mortalcoil = {
			coilbinding = {required=1, short="binding"},
			coilbottom = {required=1, short="bottom"},
			coilstrand = {required=1, short="strand"},
			coiltop = {required=1, short="top"},
	},
	vulturetalon = {
			talontip = {required=1, short="tip"},
			talonstem = {required=1, short="stem"},
			talonbase = {required=1, short="base"},
			talonpoison = {required=1, short="poison"},
	},
	deathcandle = {
			candlebase = {required=1, short="base"},
			candleflame = {required=1, short="flame"},
			candlestring = {required=1, short="string"},
			candlewax = {required=1, short="wax"},
	},
	deathdummy = {
			deathdummyarms = {required=1, short="arms"},
			deathdummyhead = {required=1, short="head"},
			deathdummytorso = {required=1, short="torso"},
			deathdummylegs = {required=1, short="legs"},
	},
	gravestone = {
			gravestonebottom = {required=1, short="bottom"},
			gravestoneinscription = {required=1, short="inscription"},
			gravestonelichen = {required=1, short="lichen"},
			gravestonetop = {required=1, short="top"},
	},
	crucible = {
			cruciblebase = {required=1, short="base"},
			cruciblebowl = {required=1, short="bowl"},
			crucibleflame = {required=1, short="flame"},
			cruciblehandle = {required=1, short="handle"},
	},
	deathscall = {
			deathscallcoil = {required=1, short="coil"},
			deathscallhorn = {required=1, short="horn"},
			deathscallmouth = {required=1, short="mouth"},
			deathscalltassels = {required=1, short="tassels"},
	},
	deathcape = {
			capebrocade = {required=1, short="brocade"},
			capeenchantment = {required=1, short="enchantment"},
			capethread = {required=1, short="thread"},
			capevelvet = {required=1, short="velvet"},
	},
--Blackwave
	taper = {
			tapertop = {required=1, short="top"}, 
			taperbottom = {required=1, short="bottom"},
			taperwax = {required=1, short="wax"},
			taperstring = {required=1, short="string"},
	},
	finalityring = {
			signetband = {required=1, short="band"},
			signetbezel = {required=1, short="bezel"},
			signetcarving = {required=1, short="carving"},
			signetmarks = {required=1, short="marks"},
	},
	grievouskeyring = {
			keyringlizard = {required=1, short="lizard"},
			keyringtiger = {required=1, short="tiger"},
			keyringslate = {required=1, short="slate"},
			keyringhoop = {required=1, short="hoop"},
	},
	goblin = {
			goblinlegs = {required=1, short="legs"},
			goblinarms = {required=1, short="arms"},
			goblinhead = {required=1, short="head"},
			goblintorso = {required=1, short="torso"},
	},
	blackspigot = {
			spigottop = {required=1, short="top"},
			spigotbottom = {required=1, short="bottom"},
			spigotstem = {required=1, short="stem"},
			spigottip = {required=1, short="tip"},
	},
	sunlesshope = {
			sunlessband = {required=1, short="band"},
			sunlessstone = {required=1, short="stone"},
			sunlessbinding = {required=1, short="binding"},
			sunlessenchantment = {required=1, short="enchant"},
	},
	blackcirclet = {
			circletfur = {required=1, short="fur"},
			circletblades = {required=1, short="blades"},
			circletband = {required=1, short="band"},
			circletbinding = {required=1, short="binding"},
	},
	jewel = {
			sanguinestone = {required=1, short="stone"},
			sanguineaura = {required=1, short="aura"},
			sanguineteardrop = {required=1, short="tear"},
			taintedblood = {required=1, short="blood"},
	},
	canopic = {
			canopiclid = {required=1, short="lid"},
			canopicfluid = {required=1, short="fluid"},
			canopicbase = {required=1, short="base"},
			canopicpot = {required=1, short="pot"},
	},
	apperceptionstone = {
			crystalshard = {required=1, short="shard"},
			crystalbinding = {required=1, short="binding"},
			crystalportal = {required=1, short="portal"},
			crystalbase = {required=1, short="base"},
	},
	guise = {
			guiseenchantment = {required=1, short="enchant"},
			guisethread = {required=1, short="thread"},
			guisesmile = {required=1, short="smile"},
			guiseleather = {required=1, short="leather"},
	},
	blackgrimoire = {
			grimoiregut = {required=1, short="gut"},
			grimoirescroll = {required=1, short="scroll"},
			grimoirecover = {required=1, short="cover"},
			grimoirebinding = {required=1, short="binding"},
	},
	["suremekh'neina"] = {
			mantleenchant = {required=1, short="enchant"},
			mantleclasp = {required=1, short="clasp"},
			mantlelining = {required=1, short="lining"},
			mantlefabric = {required=1, short="fabric"},
	},
--RACES
	lodestone = {
			lodestonetop = {required=1, short="top"},
			lodestonebase = {required=1, short="base"},
			lodestoneright = {required=1, short="right"},
			lodestoneleft = {required=1, short="left"},
	},
	arachnideye = {
			arachnidlens = {required=1, short="lens"},
			arachnideyeball = {required=1, short="eyeball"},
			arachnidenchantment = {required=1, short="enchant"},
			arachnidcolour = {required=1, short="colour"},
	},
	panpipes = {
			panpipepipes = {required=1, short="pipes"},
			panpipefeathers = {required=1, short="feathers"},
			panpipehair = {required=1, short="hair"},
			panpipeflutes = {required=1, short="flutes"},
	},
	chitin = {
			chitincolour = {required=1, short="colour"},
			chitinname = {required=1, short="name"},
			chitincarving = {required=1, short="carving"},
			chitinfragment = {required=1, short="fragment"},
	},
	rattle = {
			rattlebones = {required=1, short="bones"},
			rattleantlers = {required=1, short="antlers"},
			rattlerunes = {required=1, short="runes"},
			rattlestaff = {required=1, short="staff"},
	},
	whispercloth = {
			clothenchantment = {required=1, short="enchant"},
			clothbinding = {required=1, short="binding"},
			clothblood = {required=1, short="blood"},
			whispersilk = {required=1, short="silk"},
	},
	demolitionsphere = {
			sphereglass = {required=1, short="glass"},
			spherefire = {required=1, short="fire"},
			spherespark = {required=1, short="spark"},
			sphererunes = {required=1, short="runes"},
	},
	sirensong = {
			sirenglass = {required=1, short="glass"},
			sirenvoice = {required=1, short="voice"},
			sirencork = {required=1, short="cork"},
			sirensmoke = {required=1, short="smoke"},
	},
	catapult = {
			catapultframe = {required=1, short="frame"},
			catapultbolts = {required=1, short="bolts"},
			catapultwheel = {required=1, short="wheel"},
			catapultarm = {required=1, short="arm"},
	},
	dalamyrrclaws = {
			clawstraps = {required=1, short="straps"},
			clawbase = {required=1, short="base"},
			clawpoints = {required=1, short="points"},
			clawbarbs = {required=1, short="barbs"},
	},
	frogskin = {
			froghead = {required=1, short="head"},
			frogcord = {required=1, short="cord"},
			frogbody = {required=1, short="body"},
			frogfeet = {required=1, short="feet"},
	},
	mayafigurine = {
			figurinehead = {required=1, short="head"},
			figurinearms = {required=1, short="arms"},
			figurinetorso = {required=1, short="torso"},
			figurinelegs = {required=1, short="legs"},
	},
 -- Forays
  arankeshfeather = {
			arankeshfeatherspine = {required=4, short="spine"},
			arankeshfeatherdown = {required=4, short="down"},
			arankeshfeathercolour = {required=4, short="colouration"},
			arankeshfeatheredge = {required=4, short="edge"},
	},	
	icossemirror = {
			goldmirrorframe = {required=4, short="frame"},
			mirrorglass = {required=4, short="glass"},
			mirrorcurse = {required=4, short="curse"},
			mirrorinscription = {required=4, short="inscription"},
	},
	ogrebroth = {
			brothbowl = {required=4, short="bowl"},
			brothbroth = {required=4, short="broth"},
			brothseasoning = {required=4, short="seasons"},
			brothspice = {required=4, short="spice"},
	},
	boulder = {
			boulderchipping = {required=4, short="chipping"},
			bouldershell = {required=4, short="shell"},
			bouldercore = {required=4, short="core"},
			boulderstone = {required=4, short="stone"},
	},
	margamwheel = {
			margamwheelweeds = {required=2, short="weeds"},
			margamwheelbolts = {required=2, short="bolts"},
			margamwheelwood = {required=2, short="wood"},
			margamwheelcentre = {required=2, short="centre"},
	},
	foraymap = {
			mapfragmenttop = {required=8, short="top"},
			mapfragmentbottom = {required=8, short="bottom"},
			mapfragmentleft = {required=8, short="left"},
			mapfragmentright = {required=8, short="right"},
	},
--Cities
	musicbox = {
			musicboxsong = {required=2, short="song"},
			musicboxmechanism = {required=2, short="mechan"},
			musicboxframe = {required=2, short="frame"},
			musicboxcrank = {required=2, short="crank"},
	},
	biscuit = {
			biscuitbase = {required=1, short="base"},
			biscuitspecial = {required=2, short="spec"},
			biscuitsugar = {required=1, short="sugar"},
			biscuitsalt = {required=1, short="salt"},
	},
	wraithshackles = {
			wraithshacklesmoke = {required=1, short="smoke"},
			wraithshacklechain = {required=1, short="chain"},
			wraithshacklemanacles = {required=2, short="manac"},
			wraithshacklelock = {required=1, short="lock"},
	},
	tumbleweed = {
			tumbleweedroots = {required=1, short="roots"},
			tumbleweedtendrils = {required=1, short="tendril"},
			tumbleweedvines = {required=1, short="vines"},
			tumbleweedstem = {required=1, short="stem"},
	},
	alabasterurn = {
			alabasterurnlid = {required=1, short="lid"},
			alabasterurnpot = {required=1, short="pot"},
			alabasterurninscription = {required=1, short="inscr"},
			alabasterurnash = {required=1, short="ash"},
	},
	celescope = {
			celescopeglobe = {required=2, short="globe"},
			celescopecylinders = {required=2, short="cylin"},
			celescopeeyepiece = {required=2, short="eyep"},
			celescopeingraving = {required=2, short="ingra"},
	},
-- Monks
	monkdummy = {
			monkdummyhead = {required=1, short="head"},
			monkdummyarms = {required=1, short="arms"},
			monkdummytorso = {required=1, short="torso"},
			monkdummylegs = {required=1, short="legs"},
	},
	odysseantongue = {
			tongueflesh = {required=1, short="flesh"},
			tonguecasing = {required=1, short="casing"},
			tonguepolish = {required=1, short="polish"},
			tonguecurse = {required=1, short="curse"},
	},
	monkheadband = {
			monkheadbandthreads = {required=1, short="threads"},
			monkheadbandamethyst = {required=1, short="amethyst"},
			monkheadbandenchantment = {required=1, short="enchant"},
			monkheadbandsupport = {required=1, short="support"},
	},
	talonedring = {
			crimsonsteelband = {required=1, short="band"},
			quartzsetting = {required=1, short="setting"},
			ringsteelclaws = {required=1, short="claw"},
			talonedringbinding = {required=1, short="binding"},
	},
	cranepennon = {
			pennoncloth = {required=1, short="cloth"},
			pennoncranes = {required=1, short="cranes"},
			pennonstaff = {required=1, short="staff"},
			pennonthread = {required=1, short="thread"},
	},
	monkbanner = {
			monkbannerflag = {required=1, short="flag"},
			monkbannerembroidery = {required=1, short="embroidery"},
			monkbannerspear = {required=1, short="spear"},
			monkbannerthread = {required=1, short="thread"},
	},
	ashstaff = {
			ashstaffstave = {required=1, short="stave"},
			ashstaffstrapping = {required=1, short="strap"},
			ashstaffcap = {required=1, short="cap"},
			ashstaffshoe = {required=1, short="shoe"},
	},
	olivebranch = {
			olivewood = {required=1, short="wood"},
			olivebranchshoots = {required=1, short="shoots"},
			oliveleaves = {required=1, short="leaves"},
			olivebranchenchantment = {required=1, short="enchant"},
	},	
-- Elementals
	airelement = {
			airelementalcyclone = {required=1, short="cyclone"},
			airelementalessence = {required=1, short="essence"},
			airelementalbinding = {required=1, short="binding"},
			airelementallightning = {required=1, short="lightning"},
	},
	airbrooch = {
			airbroochclasp = {required=1, short="clasp"},
			airbroochgem = {required=1, short="gem"},
			airbroochsetting = {required=1, short="setting"},
			airbroochenchantment = {required=1, short="enchant"},
	},
	firependant = {
			firependantchain = {required=1, short="chain"},
			firependantflame = {required=1, short="flame"},
			firependantsetting = {required=1, short="setting"},
			firependantjewel = {required=1, short="jewel"},
	},
	jawbone = {
			jawboneteeth = {required=1, short="teeth"},
			jawbonemandibles = {required=1, short="mandibles"},
			jawbonebone = {required=1, short="bone"},
			jawbonehinge = {required=1, short="hinge"},
	},
	earthenshovel = {
			earthshovelwood = {required=1, short="wood"},
			earthshovelblade = {required=1, short="blade"},
			earthshovelbinding = {required=1, short="binding"},
			earthshovelminerals = {required=1, short="minerals"},
	},
	seatears = {
			seatearsphial = {required=1, short="phial"},
			seatearsstopper = {required=1, short="stopper"},
			seatearspaint = {required=1, short="paint"},
			seatearstears = {required=1, short="tears"},
	},
	garashshackle = {
			garashshacklelinks = {required=1, short="links"},
			garashshackleorbs = {required=1, short="orbs"},
			garashshackleenchantment = {required=1, short="enchant"},
			garashshacklechains = {required=1, short="chains"},
	},
	mudbomb = {
			mudbombbinding = {required=1, short="binding"},
			mudbombmud = {required=3, short="mud"},
	},
	searedglyph = {
			searedglyphplaque = {required=1, short="plaque"},
			searedglyphemblem = {required=1, short="emblem"},
			searedglyphtendrils = {required=1, short="tendrils"},
			searedglyphflame = {required=1, short="flame"},
	},
	firetank = {
			firetankframe = {required=1, short="frame"},
			firetankflame = {required=1, short="flame"},
			firetankinsignia = {required=1, short="insignia"},
			firetanklinks = {required=1, short="links"},
	},
	sceptre = {
			sceptrescript = {required=1, short="script"},
			sceptreenchantment = {required=1, short="enchant"},
			sceptreheart = {required=1, short="heart"},
			sceptretusk = {required=1, short="tusk"},
	},
	harness = {
			airharnessstraps = {required=1, short="straps"},
			airharnessglyphs = {required=1, short="glyphs"},
			airharnessenchantment = {required=1, short="enchant"},
			airharnessbuckles = {required=1, short="buckles"},
	},
--Yggdrasil
	dreadpilar = {
			dreadpilarbody = {required=1, short="body"},
			dreadpilarhead = {required=1, short="head"},
			dreadpilarlegs = {required=1, short="legs"},
			dreadpilarplates = {required=1, short="plates"},
	},
	squargon = {
			squargonbody = {required=1, short="body"},
			squargonfangs = {required=1, short="fangs"},
			squargonhead = {required=1, short="head"},
			squargonlegs = {required=1, short="legs"},
	},
	yggdrasiltablet = {
			tabletstylus = {required=1, short="stylus"},
			tablettwine = {required=1, short="twine"},
			tabletwax = {required=1, short="wax"},
			tabletwood = {required=1, short="wood"},
	},		 
	valdblom = {
			valdblomessence = {required=2, short="essence"},
			valdblomleaves = {required=2, short="leaves"},
			valdblomroot = {required=2, short="root"},
			valdblomstem = {required=2, short="stem"},
	},		 
	earthshapingtome = {
			shapingtomeclay = {required=1, short="clay"},
			shapingtomeplates = {required=1, short="plates"},
			shapingtomgranite = {required=1, short="granite"},
			shapingtominsignia = {required=1, short="insignia"},
	},		 
	nexuscube = {
			nexuscubeglass = {required=1, short="glass"},
			nexuscubegold = {required=1, short="gold"},
			nexuscubemote = {required=1, short="mote"},
			nexuscubescript = {required=1, short="script"},
	},		 
	firecrystal = {
			firecrystalenchantment = {required=1, short="enchantment"},
			firecrystalflame = {required=1, short="flame"},
			firecrystalspark = {required=1, short="spark"},
			firecrystalstone = {required=1, short="stone"},
	},		 
	planarmote = {
			moteaura = {required=1, short="aura"},
			motebinding = {required=1, short="binding"},
			moteenchantment = {required=1, short="enchantment"},
			moteflame = {required=1, short="flame"},
	},		 
	goldensnakeskin = {
			goldencolouring = {required=1, short="colouring"},
			goldenenchantment = {required=1, short="enchantment"},
			goldenscales = {required=1, short="scales"},
			goldenskin = {required=1, short="skin"},
	},		 
	yggdrasilbranch = {
			yggdrasilbranchhook = {required=1, short="hook"},
			yggdrasilbranchline = {required=1, short="line"},
			yggdrasilbranchmosaic = {required=1, short="mosiac"},
			yggdrasilbranchwood = {required=1, short="wood"},
	},		 
	criersbell = {
			crierschime = {required=1, short="chime"},
			crierscurse = {required=1, short="curse"},
			criershandle = {required=1, short="handle"},
			criersshell = {required=1, short="shell"},
	},		 
-- Contenders
	contenderspig = {
			pigclay = {required=1, short="clay"},
			pigears = {required=1, short="ears"},
			pigbelly = {required=1, short="belly"},
			pigtail = {required=1, short="tail"},
	},	
	contendersjug = {
			juglip = {required=1, short="lip"},
			jugbase = {required=1, short="base"},
			jugbowl = {required=1, short="bowl"},
			jughandle = {required=1, short="handle"},
	},
	contendersbouquet = {
			bouquetstring = {required=1, short="string"},
			bouquetknot = {required=1, short="knot"},
			bouquetbloom = {required=1, short="bloom"},
			bouquetstem = {required=1, short="stem"},
	},
	contendersfigurine = {
			contenderfigurinehead = {required=1, short="head"},
			contenderfigurinearms = {required=1, short="arms"},
			contenderfigurinelegs = {required=1, short="legs"},
			contenderfigurinebody = {required=1, short="body"},
	},
	contendersglass = {
			glasshandle = {required=1, short="handle"},
			glasspane = {required=1, short="pane"},
			glassfocus = {required=1, short="focus"},
			glassframe = {required=1, short="frame"},
	},
	contendersjournal = {
			journalbinding = {required=1, short="binding"},
			journalpage = {required=1, short="page"},
			journalcover = {required=1, short="cover"},
			journalindex = {required=1, short="index"},
	},
	contendersstud = {
			studgleam = {required=1, short="gleam"},
			studpost = {required=1, short="post"},
			studgem = {required=1, short="gem"},
			studback = {required=1, short="back"},
	},
	contendersribbon = {
			ribbongilding = {required=1, short="gilding"},
			ribbonpin = {required=1, short="pin"},
			ribbonstripe = {required=1, short="stripe"},
			ribbonfold = {required=1, short="fold"},
	},
-- Underworld
	cryptworm = {
			cryptwormhead = {required=1, short="head"},
			cryptwormbody = {required=1, short="body"},
			cryptwormfangs = {required=1, short="fangs"},
			cryptwormbinding = {required=1, short="binding"},
	},
	psychesplinter = {
			psychesplinterchain = {required=1, short="chain"},
			psychesplinterframe = {required=1, short="frame"},
			psychesplinterlength = {required=1, short="length"},
			psychesplintercurse = {required=1, short="curse"},
	},
	sanityskein = {
			sanityskeinthread = {required=1, short="thread"},
			sanityskeincoil = {required=1, short="coil"},
			sanityskeincurse = {required=1, short="curse"},
			sanityskeinbinding = {required=1, short="binding"},
	},
	custodytalisman = {
			custodyleft = {required=1, short="left"},
			custodyright = {required=1, short="right"},
			custodycentre = {required=1, short="centre"},
			custodybinding = {required=1, short="binding"},
	},
	unlifetotem = {
			unlifetotembase = {required=1, short="base"},
			unlifetotemwood = {required=1, short="wood"},
			unlifetotemskull = {required=1, short="skull"},
			unlifetotemtendrils = {required=1, short="tendrils"},
	},
	soulsliver = {
			soulsliverobsidian = {required=1, short="obsidian"},
			soulsliverfog = {required=1, short="fog"},
			soulsliversouls = {required=1, short="souls"},
			soulslivercurse = {required=1, short="curse"},
	},
	cullingblade = {
			cullingbladehilt = {required=1, short="hilt"},
			cullingbladeedge = {required=1, short="edge"},
			cullingblademetal = {required=1, short="metal"},
			cullingbladecurse = {required=1, short="curse"},
	},
	funeralshroud = {
			funeralshroudcloth = {required=1, short="cloth"},
			funeralshroudthread = {required=1, short="thread"},
			funeralshroudbenediction = {required=1, short="benedict"},
			funeralshroudclasp = {required=1, short="clasp"},
	},
--Renegades
	mercenarychalk = {
			mercenarychalkbinding = {required=1, short="binding"},
			mercenarychalkchalk = {required=1, short="chalk"},
			mercenarychalkdust = {required=1, short="dust"},
			mercenarychalkstick = {required=1, short="stick"},
	},
	elementalinjunction = {
			injunctionpaper = {required=1, short="paper"},
			injunctionscript = {required=1, short="script"},
			injunctionseal = {required=1, short="seal"},
			injunctionsignature = {required=1, short="signature"},
	},
	moppet = {
			moppetbuttons = {required=1, short="buttons"},
			moppetcloth = {required=1, short="cloth"},
			moppeteyes = {required=1, short="eyes"},
			moppetthread = {required=1, short="thread"},
	},
	turncoatscoat = {
			turncoatscoatbinding = {required=1, short="binding"},
			turncoatscoatbuttons = {required=1, short="buttons"},
			turncoatscoatcloth = {required=1, short="cloth"},
			turncoatscoatthread = {required=1, short="thread"},
	},
	shadowcloak = {
			shadowcloakclasp = {required=1, short="clasp"},
			shadowcloakcloth = {required=1, short="cloth"},
			shadowcloakcurse = {required=1, short="curse"},
			shadowcloakthread = {required=1, short="thread"},
	},
	betrayersmantle = {
			betrayersmantlecloth = {required=1, short="cloth"},
			betrayersmantlecurse = {required=1, short="curse"},
			betrayersmantlestraps = {required=1, short="straps"},
			betrayersmantlethread = {required=1, short="thread"},
	},
	turncoatsmasque = {
			turncoatsmasquecurse = {required=1, short="curse"},
			turncoatsmasqueetchings = {required=1, short="etchings"},
			turncoatsmasqueeyes = {required=1, short="eyes"},
			turncoatsmasquestone = {required=1, short="stone"},
	},
	sunderedpennon = {
			sunderedpennonbinding = {required=1, short="binding"},
			sunderedpennoncloth = {required=1, short="cloth"},
			sunderedpennonstaff = {required=1, short="staff"},
			sunderedpennonthread= {required=1, short="thread"},
	},
--Invasion
	darkearthfigrine = {
			darkeartharms = {required=1, short="arms"},
			darkearthhead = {required=1, short="head"},
			darkearthlegs = {required=1, short="legs"},
			darkearthtorso = {required=1, short="torso"},
	},
	batteringram = {
			batteringrambolts = {required=1, short="bolts"},
			batteringramgrips = {required=1, short="grips"},
			batteringramram = {required=1, short="ram"},
			batteringramwheels = {required=1, short="wheels"},
	},
	caltrop = {
			caltropball = {required=1, short="ball"},
			caltropbarbs = {required=1, short="barbs"},
			caltropbinding = {required=1, short="binding"},
			caltropspikes = {required=1, short="spikes"},
	},
	cauldron = {
			cauldronbase = {required=1, short="base"},
			cauldronhandle = {required=1, short="handle"},
			cauldronoil = {required=1, short="oil"},
			cauldronpot = {required=1, short="pot"},
	},
	shadowshackle = {
			shadowshackleenchantment = {required=1, short="enchantment"},
			shadowshacklelink = {required=1, short="link"},
			shadowshacklemetal = {required=1, short="metal"},
			shadowshackleshadow = {required=1, short="shadow"},
	},
	hagseye = {
			hagseyeball = {required=1, short="ball"},
			hagseyeenchantment = {required=1, short="enchantment"},
			hagseyefluid = {required=1, short="fluid"},
			hagseyelid= {required=1, short="lid"},
	},
	icebrick = {
			icebinding = {required=1, short="binding"},
			iceenchantment = {required=1, short="enchantment"},
			magicice = {required=1, short="magic"},
			repeatingspell = {required=1, short="spell"},
	},
	scoutingmap = {
			scoutingmapenchantment = {required=1, short="enchantment"},
			scoutingmapicons = {required=1, short="icons"},
			scoutingmapink = {required=1, short="ink"},
			scoutingmapvellum = {required=1, short="vellum"},
	},
-- War
	rottingremains = {
			remainsbones = {required=1, short="bones"},
			remainsflesh = {required=1, short="flesh"},
			remainsmuscles = {required=1, short="muscles"},
			remainsblood = {required=1, short="blood"},
	},
	gildedbit = {
			bitgilding = {required=1, short="gilding"},
			bitbar = {required=1, short="bar"},
			bitchain = {required=1, short="chain"},
			bitpatterns = {required=1, short="patterns"},
	},
	pigeon = {
			pigeonhead = {required=1, short="head"},
			pigeonbody = {required=1, short="body"},
			pigeonlegs = {required=1, short="legs"},
			pigeonwings = {required=1, short="wings"},
	},
	warcloud = {
			warcloudfog = {required=1, short="fog"},
			warcloudstench = {required=1, short="stench"},
			warcloudcurse = {required=1, short="curse"},
			warcloudbinding = {required=1, short="binding"},
	},
	portalhoop = {
			portalhoopsteel = {required=1, short="steel"},
			portalhooplight = {required=1, short="light"},
			portalhoopenchantment = {required=1, short="enchantment"},
			portalhoopbinding = {required=1, short="binding"},
	},
	observantsigil = {
			observantsigilmetal = {required=1, short="metal"},
			observantsigilstar = {required=1, short="star"},
			observantsigileye = {required=1, short="eye"},
			observantsigillatice = {required=1, short="latice"},
	},

  cowculator = {
    cowculatorwood = {required=1, short="wood"},
    cowculatornumbers = {required=1, short="numbers"},
    cowculatorpaint = {required=1, short="paint"},
    cowculatorspectacles = {required=1, short="spectacles"},
  },
  golemgateway = {
    gatewayemblem = {required=1, short="emblem"},
    gatewaygates = {required=1, short="gates"},
    gatewayframe = {required=1, short="frame"},
    gatewaybars = {required=1, short="bars"},
  },
  brainjar = {
    brainjarpot = {required=1, short="pot"},
    brainjarbrains = {required=1, short="brains"},
    brainjarpreserves = {required=1, short="preserves"},
    brainjarlabel = {required=1, short="label"},
  },
  hollowbook = {
    hollowbookcovers = {required=1, short="covers"},
    hollowbookeye = {required=1, short="eye"},
    hollowbookglyphs = {required=1, short="glyphs"},
    hollowbookscream = {required=1, short="scream"},
  },
  faemirror = {
    faemirrorglass = {required=1, short="glass"},
    faemirrorcrystal = {required=1, short="crystal"},
    faemirrorhandle = {required=1, short="handle"},
    faemirrorscript = {required=1, short="script"},
  },
  celestialcoronet = {
    coronetband = {required=1, short="band"},
    coronetangels = {required=1, short="angels"},
    coronetspheres = {required=1, short="spheres"},
    coronetengravings = {required=1, short="engravings"},
  },
  chaosclaw = {
    chaosclawedge = {required=1, short="edge"},
    chaosclawtip = {required=1, short="tip"},
    chaosclawcorruption = {required=1, short="corruption"},
    chaosclawspan = {required=1, short="span"},
  },
  iconstatuette = {
    statuetteglobe = {required=1, short="globe"},
    statuettesigils = {required=1, short="sigil"},
    statuetteshards = {required=1, short="shard"},
    statuetteicon = {required=1, short="icon"},
  },
  kris = {
    krisblade = {required=1, short="blade"},
    krishaft = {required=1, short="haft"},
    krisrunes = {required=1, short="runes"},
    krissteel = {required=1, short="steel"},
  },
  crystalsword = {
    crystalswordhilt = {required=1, short="hilt"},
    crystalswordguard = {required=1, short="guard"},
    crystalswordblade = {required=1, short="blade"},
    crystalswordgem = {required=1, short="gem"},
  },

	gaia = {
    cherryblossomstem = {required=1, short="stem"},
    cherryblossomflower = {required=1, short="flower"},
    cherryblossomstamen = {required=1, short="stamen"},
    cherryblossomscent = {required=1, short="scent"},
  },
	lorielan = {
    filtercrystal = {required=1, short="crystal"},
    filterbronze = {required=1, short="bronze"},
    filterfitting = {required=1, short="fitting"},
    filterpolish = {required=1, short="polish"},
  },
	vulnurana = {
    sachetcloth = {required=1, short="cloth"},
    sachetherbs = {required=1, short="herbs"},
    sachetstring = {required=1, short="string"},
    sachetscent = {required=1, short="scent"},
  }, 
	twilight = {
    houndcarvingeyes = {required=1, short="eyes"},
    houndcarvinglegs = {required=1, short="legs"},
    houndcarvingfangs = {required=1, short="fangs"},
    houndcarvingobsidian = {required=1, short="obsidian"},
  },
	phaestus = {
    finishinghammerhead = {required=1, short="head"},
    finishinghammerrunes = {required=1, short="runes"},
    finishinghammerhandle = {required=1, short="handle"},
    finishinghammergrip = {required=1, short="grip"},
  },
	scarlatti = {
    citolestrings = {required=1, short="strings"},
    citolebody = {required=1, short="body"},
    citolebase = {required=1, short="base"},
    citoletune = {required=1, short="tune"},
  },
	prospero = {
    batteredpanhandle = {required=1, short="handle"},
    batteredpandish = {required=1, short="dish"},
    batteredpangrip = {required=1, short="grip"},
    batteredpanspell = {required=1, short="spell"},
  },
	aegis = {
    declarationpaper = {required=1, short="paper"},
    declarationtext = {required=1, short="text"},
    declarationsignature = {required=1, short="signature"},
    declarationseal = {required=1, short="seal"},
  },
	vastar = {
    vastarwingsfeathers = {required=1, short="feathers"},
    vastarwingsstraps = {required=1, short="straps"},
    vastarwingsspan = {required=1, short="span"},
    vastarwingslightning = {required=1, short="lightning"},
  },

-- Modern Gods

	neraeos = {
    tritoncoinsilver = {required=1, short="silver"},
    tritoncoinsalt = {required=1, short="salt"},
    tritoncoinmark = {required=1, short="mark"},
    tritoncoinscript = {required=1, short="script"},
  },
	aurora = {
    ethiantearradiance = {required=1, short="radiance"},
    ethiantearstone = {required=1, short="stone"},
    ethiantearlight = {required=1, short="light"},
    ethiantearstrata = {required=1, short="strata"},
  },
	babel = {
    lightlessclothstrip = {required=1, short="strip"},
    lightlesscloththread = {required=1, short="thread"},
    lightlessclothpattern = {required=1, short="pattern"},
    lightlessclothcorruption = {required=1, short="corruption"},
  },
	deucalion = {
    deucalioncloththread = {required=1, short="thread"},
    deucalionclothsmoke = {required=1, short="smoke"},
    deucalionclothcloth = {required=1, short="cloth"},
    deucalionclothenchantment = {required=1, short="feathers"},
  },
	pandora = {
    glasseyeiris = {required=1, short="iris"},
    glasseyeball = {required=1, short="ball"},
    glasseyelight = {required=1, short="light"},
    glasseyepupil = {required=1, short="pupil"},
  },
	sartan = {
    stalagmitefangspan = {required=1, short="span"},
    stalagmitefangpoint = {required=1, short="point"},
    stalagmitefangblood = {required=1, short="blood"},
    stalagmitefangcarvings = {required=1, short="carvings"},
  },
	ourania = {
    cometbarbblade = {required=1, short="blade"},
    cometbarbglyphs = {required=1, short="glyphs"},
    cometbarbdarkness = {required=1, short="darkness"},
    cometbarbsigils = {required=1, short="sigils"},
  },
	tlalaiad = {
    shadowcapsuletop = {required=1, short="top"},
    shadowcapsulebase = {required=1, short="base"},
    shadowcapsulemechanism = {required=1, short="mechanism"},
    shadowcapsuleanomaly = {required=1, short="anomaly"},
  },
  
-- Logosmas
  snowball = {
    snowballsnow = {required=1, short="snow"},
    snowballreform = {required=1, short="reform"},
    snowballreturn = {required=1, short="return"},
    snowballbinding = {required=1, short="binding"},
  },
  halfnog = {
    halfnogpot = {required = 1, short="pot"},
    halfnogbrew = {required = 1, short="brew"},
    halfnogladle = {required = 1, short="ladle"},
    halfnoghandle = {required = 1, short="handle"},
  },
  popcorngarland = {
    garlandcorn = {required = 1, short="corn"},
    garlandsilk = {required = 1, short="silk"},
    garlandglitter = {required = 1, short="glitter"},
    garlandspell = {required = 1, short="spell"},
  },
  taffy = {
    taffysugar = {required = 1, short="sugar"},
    taffyspecial = {required = 1, short="special"},
    taffymagic = {required = 1, short="magic"},
    taffybag = {required = 1, short="bag"},
  },
  snowglobe = {
    snowglobehouse = {required = 1, short="house"},
    snowglobebell = {required = 1, short="bell"},
    snowglobesnow = {required = 1, short="snow"},
    snowglobeglass = {required = 1, short="glass"},
  },
  logosmasscarf = {
    redscarfwool = {required = 1, short="red"},
    goldscarfwool = {required = 1, short="gold"},
    scarfthread = {required = 1, short="thread"},
    scarfcrystals = {required = 1, short="crystals"},
  },
  snowsack = {
    snowsackcloth = {required = 1, short="cloth"},
    snowsacksnow = {required = 1, short="snow"},
    snowsackstring = {required = 1, short="string"},
    snowsackicicle = {required = 1, short="icicle"},
  },
  gifttag = {
    gifttaglabel = {required = 1, short="label"},
    gifttagwriting = {required = 1, short="writing"},
    gifttageyelet = {required = 1, short="eyelet"},
    gifttagribbon = {required = 1, short="ribbon"},
  },
}

talisman.help = function ()
	local name
	if gmcp then
		name = gmcp.Char.Status.name:upper()
	else
		name = "SERAGORN"
	end
	cecho("&lt;white&gt;USEAGE:\n")
	cecho("&lt;white&gt;TLIST - &lt;reset&gt;Displays a summary list of all known talisman pieces.\n")
	cecho("&lt;white&gt;TCOMPLETE &lt;talisman&gt;- &lt;reset&gt;Splits out the required pieces and completes the given talisman\n")
	cecho("&lt;reset&gt;      - Example: TCOMPLETE AZATLANKNIFE\n")
	cecho("&lt;white&gt;TTRADE &lt;adventurer&gt; &lt;piece&gt; [&lt;count&gt;]\n")
	cecho("&lt;reset&gt;      - Used to trade &lt;count&gt; (defaults to 1) pieces of &lt;piece&gt; to &lt;adventurer&gt;\n")
	cecho("&lt;reset&gt;      - Example: TTRADE "..name.." bluedragonscale 20\n")
	cecho("&lt;reset&gt;      - Note: aliases only work after talisman pieces has been checked the first time.\n")
	cecho("&lt;reset&gt;      - After this point it should keep an accurate list of pieces automatically.\n")
	cecho("&lt;white&gt;TTRADE SET &lt;adventurer&gt; &lt;setname&gt;\n")
	cecho("&lt;reset&gt;      - Used to trade all the pieces required to complete &lt;set&gt; to &lt;adventurer&gt;\n")
	cecho("&lt;reset&gt;      - Example: TTRADE SET DRAGON "..name.."\n")
	cecho("&lt;white&gt;TTRADE TALISMAN &lt;adventurer&gt; &lt;talismanname&gt;\n")
	cecho("&lt;reset&gt;      - Used to trade all the pieces required to complete a specific &lt;talisman&gt; to &lt;adventurer&gt;\n")
	cecho("&lt;reset&gt;      - Example: TTRADE TALISMAN TRANSOCEANIC "..name.."\n")
	cecho("\n&lt;white&gt;IMPORTANT: No validation is performed on trading complete sets/talismans.\n")
	cecho("&lt;white&gt;This means if you trade an incomplete set you will send some but not all of the pieces.\n")
end

talisman.echo = function (text)
	cecho(string.format("&lt;%s&gt;(Talisman): %s\n", talisman.settings.color, text))
end

talisman.reset = function ()
	talisman.pieces = {}	
end

talisman.getkey = function (longname)
	return talisman.names[longname]
end

talisman.setisactive = function (set)
	for i,_ in pairs(talisman.sets[set]) do
		if talisman.talismanisactive(i) then
			return true
		end
	end
	return false
end

talisman.talismanisactive = function (talismanname)
	for k,d in pairs(talisman.info[talismanname]) do
		if talisman.pieces[k] then
			for i,v in pairs(talisman.pieces[k]) do
				if (tonumber(v) or 0)&gt;0 then
					return true
				end
			end
		end
	end
	return false
end

talisman.complete = function (talismanname)
	if not talisman.cancomplete(talismanname) then
		talisman.echo(string.format("Cannot complete talisman %s, pieces missing.", talismanname))
		return
	end

	for k,d in pairs(talisman.info[talismanname]) do
		local required = (math.log(d.required)/math.log(2))+1
		if not talisman.make(k, required) then
			talisman.echo(string.format("Error: Could not make level %d of %s, please check talisman pieces to correct stored data.", (tonumber(required) or -1), k))
			return
		end
		talisman.remove(k, required, 1)
	end
	send(string.format("Talisman complete %s", talismanname))
end

talisman.cancomplete = function (talismanname)
	if not talisman.info[talismanname] then
		talisman.echo(string.format("Invalid talisman %s", talismanname))
		return false
	end

	for k,d in pairs(talisman.info[talismanname]) do
		if talisman.getcount(k) &lt; d.required then
			-- dont have required pieces!
			return false
		end
	end
	return true
end

talisman.tradeset = function (who, set)
	if not talisman.sets[set] then
		talisman.echo(string.format("Invalid talisman set %s", set))
		return
	end
	for i,_ in pairs(talisman.sets[set]) do
		talisman.tradetalisman(who, i)
	end
end

talisman.tradetalisman = function (who, talismanname)
	if not talisman.info[talismanname] then
		talisman.echo(string.format("Invalid talisman %s", talismanname))
		return
	end

	for k,d in pairs(talisman.info[talismanname]) do
		talisman.trade(who, k, d.required)
	end
end

talisman.announce = function (piecename, size)
	local count = talisman.getcount(piecename)
	if size &gt;= 0 then
		count = count + 2^(math.abs(tonumber(size))-1)
	else
		count = count - 2^(math.abs(tonumber(size))-1)
	end
	cecho(string.format("&lt;%s&gt; (Count: %d)", talisman.settings.color, count))
end

talisman.getcount = function (piecename)
	local count = 0
	if not talisman.pieces[piecename] then return 0 end

	for x,y in pairs(talisman.pieces[piecename]) do
		--x = level, y = count
		if (tonumber(y) or 0) &gt; 0 then
			count = count + (2^(tonumber(x)-1))*tonumber(y)
		end
	end
	return count
end

talisman.getnextsmallest = function (piecename, level)
	local nextpiece

	if not talisman.pieces[piecename] then return end

	for i,v in pairs(talisman.pieces[piecename]) do
		if tonumber(i)==level and tonumber(v)&gt;0 then
			-- shouldnt happen, we shouldnt need to split something we already have.. dont keep looping..
			talisman.echo(string.format("Why auto split %s %d when we already have it?", piecename, level))
			return tonumber(i)
		elseif tonumber(i)&gt;level and tonumber(v)&gt;0 and tonumber(i)&lt;(nextpiece or 99) then
			-- this piece is the current 'next smallest bigger piece'
			-- Note: this breaks if talisman pieces start accumulating to be level 100 (which is 2^99 total pieces, good luck)
			nextpiece = tonumber(i)
		end
	end
	if not nextpiece then
		talisman.echo(string.format("Could not find next size to split for %s %d!", piecename, level))
	end
	return nextpiece
end

talisman.make = function (piecename, level)
	talisman.pieces[piecename] = talisman.pieces[piecename] or {}
	talisman.pieces[piecename][tostring(level)] = talisman.pieces[piecename][tostring(level)] or 0
	
	if talisman.pieces[piecename][tostring(level)]&gt;0 then
		-- we already have one of these.. return true so we can do the trade (if thats where we came from)
		return true
	else
		-- we need to split one down..
		-- start moving up until we find the next smallest one we have thats bigger than what we need..
		local i = talisman.getnextsmallest(piecename, level)
		if not i then return false end -- we couldnt find one bigger, this is an error condition..
		for x=i,(level+1),-1 do
			send(string.format("talisman split %s %d", piecename, x))
			talisman.pieces[piecename][tostring(x-1)] = (talisman.pieces[piecename][tostring(x-1)] or 0) + 2
			talisman.pieces[piecename][tostring(x)] = (talisman.pieces[piecename][tostring(x)] or 0) -1
			-- do the maths here, increment smaller pieces, remove bigger ones, etc..
			-- make sure we dont trigger auto combining tho!
		end
		return true
	end
end

talisman.trade = function (who, piecename, quantity, price)
	local count = talisman.getcount(piecename)
	if count&lt;quantity then
		talisman.echo(string.format("Only %d available of %s ", count, piecename))
		return
	end
	if count&gt;256 then
		talisman.echo("Trade alias can only handle quantities up to 256, sorry!")
		return
	end
	local required = {}
	local remaining = quantity
	local index = 9
	while index&gt;0 and remaining&gt;0 do
		if remaining&gt;=(2^(index-1)) then
			required[tostring(index)]=true
			remaining=remaining-(2^(index-1))
		end
		index=index-1
	end
	for i,v in pairs(required) do
		if not talisman.make(piecename, tonumber(i)) then
			talisman.echo(string.format("Error: Could not make level %d of %s", tonumber(i), piecename))
			return
		else
			if not price then
				send(string.format("Talisman trade piece %s %d to %s for nothing", piecename, tonumber(i), who))
			else
				send(string.format("Talisman trade piece %s %d to %s for %d", piecename, tonumber(i), who))
			end
			talisman.remove(piecename, tonumber(i), 1)
		end
	end
end

talisman.add = function (piecename, level, count, type)
	local name = talisman.lookup[piecename:cut(20)]

	if not name then 
		cecho("&lt;red&gt;***")
		return
	end

	talisman.pieces[name] = talisman.pieces[name] or {}
	talisman.pieces[name][tostring(level)] = talisman.pieces[name][tostring(level)] or 0
	talisman.pieces[name][tostring(level)] = talisman.pieces[name][tostring(level)] + (tonumber(count) or 1)

	while talisman.pieces[name][tostring(level)] &gt; 1 do
		send(string.format("talisman combine %s %s", name, tostring(level)))
		talisman.pieces[name][tostring(level)] = talisman.pieces[name][tostring(level)]-2
		talisman.add(name, tonumber(level)+1, 1)
	end
end

talisman.remove = function (piecename, level, count)
	if not talisman.pieces[piecename] then return end
	if not talisman.pieces[piecename][tostring(level)] then return end

	if tonumber(talisman.pieces[piecename][tostring(level)])&lt;=tonumber(count) then
		talisman.pieces[piecename][tostring(level)]=0
	else
		talisman.pieces[piecename][tostring(level)]=talisman.pieces[piecename][tostring(level)]-tonumber(count)
	end
end

talisman.rightpad = function (data, length)
	return string.cut(string.format("%s%s", (data or "?"), string.rep(" ", length)), length)
end

talisman.highlight = function ()
	selectCurrentLine()
	fg("gold")
	resetFormat()
end

talisman.summary = function (setname)
	local talismangrandtotal = 0
	if setname then
		if not talisman.setisactive(setname) then
			talisman.echo(string.format("Set Inactive %s", setname))
			return 
		end
		talisman.displayset(setname)
		return
	end
	for i,v in ipairs(talisman.setorder) do
		talisman.settotal = 0
		talisman.setspare = 0
		talisman.setrequired = 0
		if talisman.setisactive(v) then
			talisman.displayset(v)
			talismangrandtotal = talismangrandtotal + talisman.setcredittotal
		end
	end
	cecho(string.format("&lt;white&gt;Total Value: &lt;red&gt;%d (%d)&lt;white&gt;\n\n", talismangrandtotal,((talismangrandtotal or 0) + (tonumber(gmcp.Char.Status.boundcredits) or 0) + (tonumber(gmcp.Char.Status.unboundcredits) or 0))))
end

talisman.displayset = function (set)
	if not talisman.sets[set] then
		talisman.echo(string.format("Invalid talisman set for output %s", set))
		return
	end

	talisman.settotal = 0
	cechoLink(string.format("&lt;white&gt;%s Set&lt;reset&gt;\n", set:title()), [[printCmdLine("ttrade set ]]..(target or "&lt;person&gt;").." "..set..[[")]], "Click to trade complete set", true)
	cecho(string.format("&lt;white&gt;%s&lt;reset&gt;\n", string.rep("-", string.len(set)+4)))

	talisman.setcredittotal = 0	
	if talisman.setformat[set] and talisman.setformat[set].order then
	-- echo the header..
		for _,v in ipairs(talisman.setformat[set].order) do
			if talisman.talismanisactive(v) then
				talisman.displaysetdetail(set, v, talisman.sets[set][v])
			end
		end
	else
		for i,v in pairs(talisman.sets[set]) do
			if talisman.talismanisactive(i) then
				talisman.displaysetdetail(set, i, v)
			end
		end
	end
	if talisman.setrequired &gt; 0 then
		cecho(string.format("&lt;white&gt;Total: %d of %d common (%d%% plus %d spare) &lt;red&gt;(%s)&lt;white&gt;\n\n", talisman.settotal, talisman.setrequired, math.floor(talisman.settotal*100/talisman.setrequired), talisman.setspare, (talisman.setcredittotal or 0)))
	end
end

talisman.displaysetdetail = function (set, talismanname, talismandata)

	local talismanfull, talismancount
	talisman.talismantotal = 0
	talisman.talismanspare = 0
	talisman.talismanrequired = 0
	cechoLink(string.format("&lt;%s&gt;%s", ((talismandata and talismandata.color) or talisman.settings.color), talisman.rightpad(talismandata.short, talisman.setformat[set].titlewidth)), [[printCmdLine("ttrade talisman ]]..(target or "&lt;person&gt;").." "..talismanname..[[")]], "Click to trade complete talisman", true)
	talismanfull, talismancount = talisman.displaytalisman(talismanname, set, talismandata.order)
	talisman.settotal = talisman.settotal + talisman.talismantotal
	talisman.setspare = talisman.setspare + talisman.talismanspare
	talisman.setrequired = talisman.setrequired + talisman.talismanrequired
	if talisman.talismanrequired-talisman.talismantotal&gt;0 then
		cecho(string.format("&lt;CadetBlue&gt;(%d%%)&lt;reset&gt;", math.floor(talisman.talismantotal*100/talisman.talismanrequired)))
	else
		cecho("&lt;green&gt;(100%)&lt;reset&gt;")
	end
	if talisman.setformat[set].value then
		talisman.credittotal = (talismanfull*talismandata.tradein) + ((talismancount - (talismanfull*4)) * talismandata.redeem)
		talisman.setcredittotal = (talisman.setcredittotal or 0) + (talisman.credittotal or 0)
		cecho(string.format("&lt;red&gt; %s %s %s &lt;white&gt;(%s %s)", talismanfull, talismancount, talisman.credittotal, (talismandata.tradein or 0), (talismandata.redeem or 0)))
	end
	cecho("\n")
end

talisman.displaytalisman = function (talismanname, set, order)
	local temp = 0
	local min = 99
	local count = 0

	if not talisman.info[talismanname] then
		talisman.echo(string.format("Invalid talisman for output %s", talismanname))
		return
	end
	if not order then
		-- unsorted..
		for k,d in pairs(talisman.info[talismanname]) do
			temp = talisman.displayitem(k, d, set)
			if temp &lt; min then
				min = temp
			end
			count = count + temp
		end
	else
		for _,d in ipairs(order) do
			temp = talisman.displayitem(d, talisman.info[talismanname][d], set)
			if temp &lt; min then
				min = temp
			end
			count = count + temp
		end
	end
	return min, count
end

talisman.displayitem = function (name, data, set)
	count = talisman.getcount(name)
	if count&gt;=data.required then
		cechoLink(string.format("&lt;green&gt;%s", talisman.rightpad(string.format("%s(%d)", string.cut(data.short,talisman.setformat[set].cellwidth), count), talisman.setformat[set].cellwidth+5)), [[printCmdLine("ttrade ]]..(target or "&lt;person&gt;").." "..name..[[")]], "Click to trade", true)
		talisman.talismantotal = talisman.talismantotal + data.required -- (dont include spares in our total required)
		talisman.talismanspare = talisman.talismanspare + count - data.required
	else
		cechoLink(string.format("&lt;CadetBlue&gt;%s", talisman.rightpad(string.format("%s(%d)", string.cut(data.short,talisman.setformat[set].cellwidth), count), talisman.setformat[set].cellwidth+5)), [[printCmdLine("ttrade ]]..(target or "&lt;person&gt;").." "..name..[[")]], "Click to trade", true)
		talisman.talismantotal = talisman.talismantotal + count -- (dont include spares in our total required)
	end
	talisman.talismanrequired = talisman.talismanrequired + data.required
	return math.floor(count/data.required)
end


-- This just helps us deal with the fact that some pieces have a string thats to long (20 char limit on the talisman piece list)..
talisman.createlookup = function ()
	talisman.lookup ={}
	for i,v in pairs(talisman.sets) do
		for k,d in pairs(v) do
			for a,b in ipairs(d.order) do
				talisman.lookup[b:cut(20)] = b
			end
		end
	end
end

talisman.createlookup()


</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Irimonshit</name>
						<packageName></packageName>
						<script>-- yggdrasiltablet 18
-- shapingtome 25
-- firecrystal 37
-- nexuscube 37
-- snakeskin 125
-- criersbell 200
 
talisman = talisman or {}
 
talisman.setorder = {"dragon", "azatlan", "wonders", "miscellane", "historical", "conclave", "marks", "seafaring", "death", "blackwave", "races", "forays", "cities", "monks", "elemental", "yggdrasil", "contenders", "underworld", "renegades", "invasion", "war", "planes", "eldergod", "logosmas"}
 
-- Order is optional, if not present it will be a random order as the talisman.info tables is unsorted.
talisman.setformat = {
	dragon = {titlewidth = 7, cellwidth = 7},
	azatlan = {titlewidth = 10, cellwidth = 6, order = {"eagleheaddress", "coati", "kinkajou", "quetzal", "transoceanic", "atlatl", "azatlanknife"}},
	wonders = {titlewidth = 10, cellwidth = 7, order = {"baitbucket", "dragonskinpack", "platinumwhistle", "ramshorn", "monocle", "globe"}},
	miscellane = {titlewidth = 15, cellwidth = 7, order = {"hookah", "tapestry", "vaultkey", "negationsphere", "clayfigurine"}},
	historical = {titlewidth = 15, cellwidth = 7, order = {"window", "mantle", "icicle", "helmet", "disc", "votive", "whisperstone", "lily", "ozhera", "turtle", "mongoose", "hellcat"}},
	conclave = {titlewidth = 10, cellwidth = 7, value = true, order = {"tophat", "hourglass", "tempestbrooch", "elementsprite", "lesservault", "flyingring", "celerity", "buckawns", "adaptgrimoire", "stygianpendant", "grandmagi", "atavianwings"}},
	marks = {titlewidth = 10, cellwidth = 7, value = true, order = {"ivoryatlantia", "ivoryspyglass", "ivorypennon", "ivorydummy", "ivorymedallion", "ivoryarmband", "ivorytower", "ivorywarhorn", "ivorybowstring", "quisalisderillin", "quisalislookingglass", "quisalismedallion", "quisalisdummy", "quisalisbone", "quisalisarmband", "quisalistombstone", "quisalismask", "quisalisdagger", "quisaliscloak"}},
	seafaring = {titlewidth = 15, cellwidth = 10, order = {"cloverbox", "maelstrom", "islandwings", "frostpail", "neatpail", "shipchit", "xpplaque", "monstermap", "crossbow", "glassbottle", "seaweedpail", "smokeflare"}},
	death = {titlewidth = 10, cellwidth = 7, value = true, order = {"mortalcoil", "vulturetalon", "deathcandle", "deathdummy", "gravestone", "crucible", "deathscall", "deathcape"}},
	blackwave = {titlewidth = 10, cellwidth = 7, value = true, order = {"taper", "finalityring", "grievouskeyring", "goblin", "blackspigot", "sunlesshope", "blackcirclet", "guise", "jewel", "canopic", "apperceptionstone", "blackgrimoire", "suremekh'neina"}},
	races = {titlewidth = 10, cellwidth = 7, value = true, order = {"lodestone", "arachnideye", "panpipes", "chitin", "rattle", "whispercloth", "sirensong", "demolitionsphere", "catapult", "dalamyrrclaws", "frogskin", "mayafigurine"}},
	forays = {titlewidth = 10, cellwidth = 6, order = {"arankeshfeather", "icossemirror", "ogrebroth", "boulder", "margamwheel", "foraymap"}},
	cities = {titlewidth = 10, cellwidth = 7, value = true, order = {"biscuit", "tumbleweed", "celescope", "musicbox", "wraithshackles", "alabasterurn"}},
	monks = {titlewidth = 10, cellwidth = 7, value = true, order = {"monkdummy", "odysseantongue", "monkheadband", "talonedring", "cranepennon", "monkbanner", "ashstaff", "olivebranch"}},
	elemental = {titlewidth = 10, cellwidth = 7, value = true, order = {"airelement", "airbrooch", "firependant", "jawbone", "seatears", "earthenshovel", "garashshackle", "mudbomb", "searedglyph", "firetank", "sceptre", "harness"}},
	yggdrasil = {titlewidth = 13, cellwidth = 7, order = {"dreadpilar", "squargon", "yggdrasiltablet", "valdblom", "earthshapingtome", "nexuscube", "firecrystal", "planarmote", "goldensnakeskin", "yggdrasilbranch", "criersbell"}},
	contenders = {titlewidth = 10, cellwidth = 7, value = true, order = {"contenderspig", "contendersjug", "contendersbouquet", "contendersfigurine", "contendersglass", "contendersjournal", "contendersstud", "contendersribbon"}},
	underworld = {titlewidth = 10, cellwidth = 7, value = true, order = {"cryptworm", "psychesplinter", "sanityskein", "custodytalisman", "unlifetotem", "soulsliver", "funeralshroud", "cullingblade"}},
	renegades = {titlewidth = 13, cellwidth = 7, value = true, order = {"mercenarychalk", "elementalinjunction", "moppet", "turncoatscoat", "shadowcloak", "betrayersmantle", "turncoatsmasque", "sunderedpennon"}},
	invasion = {titlewidth = 13, cellwidth = 7, value = true, order = {"darkearthfigrine", "batteringram", "caltrop", "cauldron", "shadowshackle", "hagseye", "icebrick", "scoutingmap"}},
	planes = {titlewidth = 13, cellwidth = 7, value = true, order = {"cowculator", "golemgateway", "hollowbook", "brainjar", "faemirror", "celestialcoronet", "chaosclaw", "iconstatuette", "kris", "crystalsword"}},
	war = {titlewidth = 10, cellwidth = 6, value = true, order = {"rottingremains", "gildedbit", "pigeon", "warcloud", "portalhoop", "observantsigil"}},
	eldergod = {titlewidth = 10, cellwidth = 6, value = true, order = {"gaia", "lorielan", "vulnurana", "twilight", "phaestus", "scarlatti", "prospero", "aegis", "vastar"}},
  logosmas = {titlewidth = 10, cellwidth = 6, value = true, order = {"snowball", "halfnog", "popcorngarland", "taffy", "snowglobe", "logosmasscarf", "snowsack", "gifttag"}},
}
 
talisman.sets = {
  logosmas = {
    snowball = {short = "snowball", order = {"snowballsnow", "snowballreform", "snowballreturn", "snowballbinding"}, redeem = 6, tradein = 33},
    halfnog = {short = "halfnog", order = {"halfnogpot", "halfnogbrew", "halfnogladle", "halfnoghandle"}, redeem = 18, tradein = 100},
    popcorngarland = {short = "garland", order = {"garlandcorn", "garlandsilk", "garlandglitter", "garlandspell"}, redeem = 37, tradein = 200},
    taffy = {short = "taffy", order = {"taffysugar", "taffyspecial", "taffymagic", "taffybag"}, redeem = 56, tradein = 300},
    snowglobe = {short = "snowglobe", order = {"snowglobehouse", "snowglobebell", "snowglobesnow", "snowglobeglass"}, redeem = 75, tradein = 400},
    logosmasscarf = {short = "scarf", order = {"redscarfwool", "goldscarfwool", "scarfthread", "scarfcrystals"}, redeem = 125, tradein = 600},
    snowsack = {short = "sack", order = {"snowsackcloth", "snowsacksnow", "snowsackstring", "snowsackicicle"}, redeem = 150, tradein = 800},
    gifttag = {short = "gifttag", order = {"gifttaglabel", "gifttagwriting", "gifttageyelet", "gifttagribbon"}, redeem = 200, tradein = 1056},
  },
	eldergod = {
		gaia = {short = "blossom", order = {"cherryblossomstem", "cherryblossomflower", "cherryblossomstamen", "cherryblossomscent"}, redeem = 12, tradein = 66},
		lorielan = {short = "filter", order = {"filtercrystal", "filterbronze", "filterfitting", "filterpolish"}, redeem = 31, tradein = 166},
		vulnurana = {short = "sache", order = {"sachetcloth", "sachetherbs", "sachetstring", "sachetscent"}, redeem = 37, tradein = 200},
		twilight = {short = "hound", order = {"houndcarvingeyes", "houndcarvinglegs", "houndcarvingfangs", "houndcarvingobsidian"}, redeem = 43, tradein = 233},
		phaestus = {short = "hammer", order = {"finishinghammerhead", "finishinghammerrunes", "finishinghammerhandle", "finishinghammergrip"}, redeem = 50, tradein = 266},
		scarlatti = {short = "citole", order = {"citolestrings", "citolebody", "citolebase", "citoletune"}, redeem = 62, tradein = 333},
		prospero = {short = "pan", order = {"batteredpanhandle", "batteredpandish", "batteredpangrip", "batteredpanspell"}, redeem = 150, tradein = 800},
		aegis = {short = "declaration", order = {"declarationpaper", "declarationtext", "declarationsignature", "declarationseal"}, redeem = 187, tradein = 1000},
		vastar = {short = "wings", order = {"vastarwingsfeathers", "vastarwingsstraps", "vastarwingsspan", "vastarwingslightning"}, redeem = 250, tradein = 1333},
	},
	dragon = {
		blackdragon = {short = "black", color = "white", order = {"blackdragonbone", "blackdragonclaw", "blackdragoneye", "blackdragonheart", "blackdragonleather", "blackdragonscale", "blackdragontooth", "blackdragonsac"}}, 
		reddragon = {short = "red", color = "red", order = {"reddragonbone", "reddragonclaw", "reddragoneye", "reddragonheart", "reddragonleather", "reddragonscale", "reddragontooth", "reddragonbelly"}}, 
		bluedragon = {short = "blue", color = "blue", order = {"bluedragonbone", "bluedragonclaw", "bluedragoneye", "bluedragonheart", "bluedragonleather", "bluedragonscale", "bluedragontooth", "bluedragonlung"}}, 
		greendragon = {short = "green", color = "green", order = {"greendragonbone", "greendragonclaw", "greendragoneye", "greendragonheart", "greendragonleather", "greendragonscale", "greendragontooth", "greendragonsac"}}, 
		golddragon = {short = "gold", color = "gold", order = {"golddragonbone", "golddragonclaw", "golddragoneye", "golddragonheart", "golddragonleather", "golddragonscale", "golddragontooth", "golddragonstem"}}, 
		silverdragon = {short = "silver", color = "LightSlateGray", order = {"silverdragonbone", "silverdragonclaw", "silverdragoneye", "silverdragonheart", "silverdragonleather", "silverdragonscale", "silverdragontooth", "silverdragonlarynx"}},
	},
	azatlan = {
		eagleheaddress = {short = "eagle", order = {"bluefeather", "greenfeather", "redfeather", "yellowfeather", "orangefeather", "purplefeather", "blackfeather"}},
		atlatl = {short = "atlatl", order = {"atlatlshaft", "atlatlcup", "atlatlspear"}},
		transoceanic = {short = "orb", order = {"orbleft", "orbright", "orbcenter"}},
		azatlanknife = {short = "knife", order = {"knifebladetop", "knifebladebottom", "knifeleather"}},
		quetzal = {short = "quetzal", order = {"quetzalbluefeather", "quetzalgreenfeather", "quetzalredfeather", "quetzalcage", "quetzaltalon", "quetzalegg"}},
		kinkajou = {short = "kinkajou", order = {"kinkajoutooth", "kinkajoucollar", "kinkajoubait", "kinkajouclaw", "kinkajoupaw", "kinkajoutail"}},
		coati = {short = "coati", order = {"coatibait", "coaticlaw", "coaticollar", "coatipaw", "coatitooth", "coatitail"}},
	},
	wonders = {
		baitbucket = {short = "bucket", order = {"buckethandle", "bucketleft", "bucketright", "bucketbase", "bucketwater"}},
		dragonskinpack = {short = "pack", order = {"packscales", "packstraps", "packlining", "packthread", "packleather"}},
		platinumwhistle = {short = "whistle", order = {"whistlemouth", "whistleflue", "whistlereed", "whistletoppipe", "whistlelowpipe"}},
		ramshorn = {short = "horn", order = {"ramshorn", "hornmouth", "hornleftstrap", "hornrightstrap", "hornfastener"}},
		monocle = {short = "monocle", order = {"monotop", "monobottom", "monoframe", "monocatch", "monoclasp"}},
		globe = {short = "globe", order = {"globetop", "globemiddle", "globebottom"}},
	},
	miscellane = {
		hookah = {short = "hookah", order = {"hookahbase", "hookahbowl", "hookahhood", "hookahchain", "hookahhoses", "hookahstem", "hookahplate"}},
		tapestry = {short = "tapestry", order = {"tapestryroller", "tapestryonyx", "tapestryvellum", "tapestryclaw"}},
		vaultkey = {short = "vaultkey", order = {"keyfragment"}},
		negationsphere = {short = "negsphere", order = {"spherefragment"}},
		clayfigurine = {short = "clayfigurine", order = {"clayfigurinebody", "clayfigurinehead", "clayfigurinelegs", "clayfigurinearms"}},
	},
	historical = {
		window = {short = "window", order = {"windowframe", "windowpane", "windowjamb", "windowshutters", "windowgrid"}},
		mantle = {short = "mantle", order = {"mantlecloth", "mantlethread", "mantlecentre", "mantlegems"}}, 
		icicle = {short = "icicle", order = {"icicletop", "iciclemiddle", "iciclebase", "icicletip", "iciclerunes"}},
		helmet = {short = "helmet", order = {"helmetskull", "helmetnose", "helmetstrap"}},
		disc = {short = "disc", order = {"disctop", "discside", "discmiddle", "discbottom", "discrunes", "disccentre"}},
		votive = {short = "votive", order = {"votivebase", "votivewick", "votivewax"}},
		whisperstone = {short = "whisperstone", order = {"stonetop", "stonebottom", "stonemiddle", "stoneside", "stonecore", "stoneemitter"}},
		lily =  {short = "lily", order = {"lilypetals", "lilystem", "lilystamen", "lilybulb", "lilypistil"}},
		ozhera =  {short = "ozhera", order = {"ozherabait", "ozheracollar", "ozheraegg", "ozheraclaw", "ozherabeak", "ozheranest"}},
		turtle =  {short = "turtle", order = {"turtleshell", "turtlebait", "turtlecollar", "turtletail", "turtlefoot", "turtletongue"}},
		mongoose =  {short = "mongoose", order = {"mongoosebait", "mongoosecollar", "mongoosetail", "mongoosepaw", "mongooseclaw", "mongoosefang"}},
		hellcat = {short = "hellcat", order = {"hellcatbait", "hellcatcollar", "hellcatclaw", "hellcatfang", "hellcattail", "hellcatpaw"}},
	},
	conclave = {
		tophat = {short = "tophat", order = {"tophatlining", "tophatbrim", "tophatthread", "tophatband"}, redeem = 3, tradein = 16},
		hourglass = {short = "hourglass", order = {"hourglasstop", "hourglassbottom", "hourglasssand", "hourglassbulb"}, redeem = 12, tradein = 66},
		tempestbrooch = {short = "brooch", order = {"broochgem", "broochclasp", "broochmetal", "broochhook"}, redeem = 18, tradein = 100},
		elementsprite = {short = "sprite", order = {"spritelegs", "spritearms", "spritetorso", "spritehead"}, redeem = 28, tradein = 150},
		lesservault = {short = "vault", order = {"vaultdoor", "vaulthinge", "vaulthandle", "vaultgems"}, redeem = 43, tradein = 233},
		flyingring = {short = "RoF", order = {"ringtop", "ringbottom", "ringinside", "ringoutside"}, redeem = 50, tradein = 266},
		celerity = {short = "celerity", order = {"armbandtop", "armbandbottom", "armbandinside", "armbandoutside"}, redeem = 62, tradein = 333},
		buckawns = {short = "buckawns", order = {"amuletthread", "amuletchain", "amuletball", "amuletclasp"}, redeem = 100, tradein = 533},
		adaptgrimoire = {short = "grimoire", order = {"grimoireleather", "grimoirepaper", "grimoiregems", "grimoirelock"}, redeem = 125, tradein = 666},
		stygianpendant = {short = "stygian", order = {"pendantbase", "pendantclasp", "pendantpearl", "pendanthook"}, redeem = 150, tradein = 800},
		grandmagi = {short = "grandmagi", order = {"robesthread", "robesneedle", "robestrim", "robesfabric"}, redeem = 312, tradein = 3000},
		atavianwings = {short = "wings", order = {"wingsthread", "wingsleft", "wingsright", "wingsfeathers"}, redeem = 250, tradein = 1333},
	},
	marks = {
		ivorywarhorn = {short = "warhorn", order = {"ivoryhornmouthpiece", "ivoryhornfittings", "ivoryhornleft", "ivoryhornright"}, redeem = 100, tradein = 533},
		ivorymedallion = {short = "ivory med", order = {"ivorymedalliondisc", "ivorymedallionclasp", "ivorymedallionaccent", "ivorymedallionribbon"}, redeem = 43, tradein = 233},
		ivoryspyglass = {short = "spyglass", order = {"ivoryspyglasslens", "ivoryspyglasseyepiece", "ivoryspyglassbody", "ivoryspyglassstrap"}, redeem = 18, tradein = 100},
		ivorypennon = {short = "pennon", order = {"ivorypennonsilk", "ivorypennonribbon", "ivorypennonthread", "ivorypennondye"}, redeem = 31, tradein = 166},
		ivoryarmband = {short = "iarmband", order = {"ivoryarmbandaccent", "ivoryarmbandouter", "ivoryarmbandinner", "ivoryarmbandclasp"}, redeem = 75, tradein = 400},
		ivoryatlantia = {short = "atlantia", order = {"ivoryatlantiabody", "ivoryatlantialegs", "ivoryatlantiahead", "ivoryatlantiaarms"}, redeem = 12, tradein = 66},
		ivorydummy = {short = "idummy", order = {"ivorydummylimbs", "ivorydummytorso", "ivorydummyclothing", "ivorydummyarmour"}, redeem = 37, tradein = 200},
		ivorytower = {short = "tower", order = {"ivorytowerbase", "ivorytowerlower", "ivorytowerupper", "ivorytowerlacquer"}, redeem = 81, tradein = 433},
		ivorybowstring = {short = "bowstring", order = {"ivorybowstringcore", "ivorybowstringwrapping", "ivorybowstringeyelet", "ivorybowstringenchant"}, redeem = 125, tradein = 666},
 
		quisalisdagger = {short = "anima", order = {"quisaisdaggerhilt", "quisalisdaggerblade", "quisalisdaggerpommel", "quisalisdaggergrip"}, redeem = 150, tradein = 800},
		quisalisbone = {short = "bone", order = {"quisalisbonelower", "quisalisboneupper", "quisalisbonerope", "quisalisbonestain"}, redeem = 43, tradein = 233},
		quisalismedallion = {short = "quis med", order = {"quisalismedallionchain", "quisalismedalliontop", "quisalismedallionbottom", "quisalismedallionclasp"}, redeem = 31, tradein = 166},
		quisalislookingglass = {short = "lookglass", order = {"quisalisglasscase", "quisalisglasslens", "quisalisglassiris", "quisalisglasseyepiece"}, redeem = 18, tradein = 100},
		quisalisderillin = {short = "derillin", order = {"quisalisderillinhair", "quisalisderillinclothing", "quisalisderillintorso", "quisalisderillinhead"}, redeem = 12, tradein = 66},
		quisalisdummy = {short = "qdummy", order = {"quisalisdummylimbs", "quisalisdummytorso", "quisalisdummyrobes", "quisalisdummytargets"}, redeem = 37, tradein = 200},
		quisalistombstone = {short = "tombstone", order = {"quisalistombstonetop", "quisalistombstonemiddle", "quisalistombstonebase", "quisalistombstonescript"}, redeem = 81, tradein = 433},
		quisalisarmband = {short = "qarmband", order = {"quisalisarmbandserpent", "quisalisarmbandeyes", "quisalisarmbandtop", "quisalisarmbandbottom"}, redeem = 75, tradein = 400},
		quisaliscloak = {short = "cloak", order = {"quisaliscloakcloth", "quisaliscloakembroidery", "quisaliscloaklining", "quisaliscloakhood"}, redeem = 187, tradein = 1000},
		quisalismask = {short = "deathmask", order = {"quisalismaskbone", "quisalismaskwire", "quisalismaskteeth", "quisalismaskrunes"}, redeem = 100, tradein = 533},
	},
	seafaring = {
		cloverbox = {short = "cloverbox", order = {"cloverboxclovers", "cloverboxsides", "cloverboxlid", "cloverboxbase"}},
		maelstrom = {short = "maelstrom", order = {"maelstromarms", "maelstromlegs", "maelstromhead", "maelstromtorso"}},
		islandwings = {short = "islandwings", order = {"islandwingsleft", "islandwingsright", "islandwingsthread", "islandwingsstraps"}},
		frostpail = {short = "frostpail", order = {"frostpailhandle", "frostpailleft", "frostpailright", "frostpailbase"}},
		neatpail = {short = "neatpail", order = {"neatpailhandle", "neatpailleft", "neatpailright", "neatpailbase"}},
		shipchit = {short = "shipchit", order = {"shipchittop", "shipchitbottom", "shipchitink", "shipchitseal"}},
		xpplaque = {short = "xpplaque", order = {"xpplaquemount", "xpplaquefascia", "xpplaquelacquer", "xpplaquelettering"}},
		monstermap = {short = "monstermap", order = {"monstermapink", "monstermapparchment", "monstermapcompass", "monstermapenchant"}},
		crossbow = {short = "crossbow", order = {"crossbowmount", "crossbowarms", "crossbowstring", "crossbowcrank"}},
		glassbottle = {short = "glassbottle", order = {"glassbottleneck", "glassbottlemiddle", "glassbottlebase", "glassbottleenchant"}},
		seaweedpail = {short = "seaweedpail", order = {"seaweedpailhandle", "seaweedpailleft", "seaweedpailright", "seaweedpailbase"}},
		smokeflare = {short = "flare", order = {"smokeflareshell", "smokeflarefins", "smokeflarelid", "smokeflarechamber"}},
	},
	death = {
		mortalcoil = {short = "coil", order = {"coiltop", "coilbottom", "coilstrand", "coilbinding"}, redeem = 10, tradein = 66},
		vulturetalon = {short = "talon", order = {"talontip", "talonstem", "talonbase", "talonpoison"}, redeem = 10, tradein = 66},
		deathcandle = {short = "candle", order = {"candlewax", "candleflame", "candlebase", "candlestring"}, redeem = 10, tradein = 66},
		deathdummy = {short = "dummy", order = {"deathdummyhead", "deathdummyarms", "deathdummytorso", "deathdummylegs"}, redeem = 10, tradein = 33},
		gravestone = {short = "gravestone", order = {"gravestonetop", "gravestonebottom", "gravestoneinscription", "gravestonelichen"}, redeem = 10, tradein = 264},
		crucible = {short = "crucible", order = {"cruciblebase", "cruciblehandle", "cruciblebowl", "crucibleflame"}, redeem = 10, tradein = 396},
		deathscall = {short = "call", order = {"deathscallmouth", "deathscallhorn", "deathscalltassels", "deathscallcoil"}, redeem = 10, tradein = 792},
		deathcape = {short = "cape", order = {"capebrocade", "capethread", "capeenchantment", "capevelvet"}, redeem = 10, tradein = 990},
	},
	blackwave = {
		taper = {short = "taper", order = {"tapertop", "taperbottom", "taperwax", "taperstring"}, redeem = 6, tradein = 33},
		finalityring = {short = "finality", order = {"signetband", "signetbezel", "signetcarving", "signetmarks"}, redeem = 6, tradein = 33},
		grievouskeyring = {short = "keyring", order = {"keyringlizard", "keyringtiger", "keyringslate", "keyringhoop"}, redeem = 12, tradein = 66},
		goblin = {short = "goblin", order = {"goblinlegs", "goblinarms", "goblinhead", "goblintorso"}, redeem = 16, tradein = 86},
		blackspigot = {short = "spigot", order = {"spigottop", "spigotbottom", "spigotstem", "spigottip"}, redeem = 50, tradein = 266},
		sunlesshope = {short = "sunless", order = {"sunlessband", "sunlessstone", "sunlessbinding", "sunlessenchantment"}, redeem = 75, tradein = 400},
		blackcirclet = {short = "circlet", order = {"circletfur", "circletblades", "circletband", "circletbinding"}, redeem = 106, tradein = 566},
		jewel = {short = "jewel", order = {"sanguinestone", "sanguineaura", "sanguineteardrop", "taintedblood"}, redeem = 125, tradein = 666},
		canopic = {short = "canopic", order = {"canopiclid", "canopicfluid", "canopicbase", "canopicpot"}, redeem = 125, tradein = 666},
		apperceptionstone = {short = "stone", order = {"crystalshard", "crystalbinding", "crystalportal", "crystalbase"}, redeem = 125, tradein = 666},
		guise = {short = "guise", order = {"guiseenchantment", "guisethread", "guisesmile", "guiseleather"}, redeem = 150, tradein = 800},
		blackgrimoire = {short = "grimoire", order = {"grimoiregut", "grimoirescroll", "grimoirecover", "grimoirebinding"}, redeem = 250, tradein = 1333},
		["suremekh'neina"] = {short = "mantle", order = {"mantleenchant", "mantleclasp", "mantlelining", "mantlefabric"}, redeem = 250, tradein = 1333},
	},
	races = {
		lodestone = {short = "lodestone", order = {"lodestonetop", "lodestonebase", "lodestoneright", "lodestoneleft"}, redeem = 12, tradein = 66},		-- 100
		arachnideye = {short = "arachnid", order = {"arachnidlens", "arachnideyeball", "arachnidenchantment", "arachnidcolour"}, redeem = 12, tradein = 66},		-- 100
		panpipes = {short = "panpipes", order = {"panpipepipes", "panpipefeathers", "panpipehair", "panpipeflutes"}, redeem = 35, tradein = 186},		-- 280
		chitin = {short = "chitin", order = {"chitincolour", "chitinname", "chitincarving", "chitinfragment"}, redeem = 37, tradein = 200},				-- 300
		rattle = {short = "rattle", order = {"rattlebones", "rattleantlers", "rattlerunes", "rattlestaff"}, redeem = 37, tradein = 200},				-- 300
		whispercloth = {short = "cloth", order = {"clothenchantment", "clothbinding", "clothblood", "whispersilk"}, redeem = 50, tradein = 266},		-- 400
		demolitionsphere = {short = "sphere", order = {"sphereglass", "spherefire", "spherespark", "sphererunes"}, redeem = 62, tradein = 333},	-- 500
		sirensong = {short = "sirensong", order = {"sirenglass", "sirenvoice", "sirencork", "sirensmoke"}, redeem = 62, tradein = 333},		-- 500
		catapult = {short = "catapult", order = {"catapultframe", "catapultbolts", "catapultwheel", "catapultarm"}, redeem = 75, tradein = 400},		-- 600
		dalamyrrclaws = {short = "claws", order = {"clawstraps", "clawbase", "clawpoints", "clawbarbs"}, redeem = 87, tradein = 466},		-- 700
		frogskin = {short = "frogskin", order = {"froghead", "frogcord", "frogbody", "frogfeet"}, redeem = 100, tradein = 533},		-- 800
		mayafigurine = {short = "maya", order = {"figurinehead", "figurinearms", "figurinetorso", "figurinelegs"}, redeem = 187, tradein = 1000},		-- 1500
	},
	forays = {
		arankeshfeather = {short = "feather", order = {"arankeshfeatherspine", "arankeshfeatherdown", "arankeshfeathercolour", "arankeshfeatheredge"}},
		icossemirror = {short = "mirror", order = {"goldmirrorframe", "mirrorglass", "mirrorcurse", "mirrorinscription"}},
		ogrebroth = {short = "broth", order = {"brothbowl", "brothbroth", "brothseasoning", "brothspice"}},
		boulder = {short = "boulder", order = {"boulderchipping", "bouldershell", "bouldercore", "boulderstone"}},
		margamwheel = {short = "wheel", order = {"margamwheelweeds", "margamwheelbolts", "margamwheelwood", "margamwheelcentre"}},
		foraymap = {short = "map", order = {"mapfragmenttop", "mapfragmentbottom", "mapfragmentleft", "mapfragmentright"}},
	},
	cities = {
		musicbox = {short = "musicbox", order = {"musicboxsong", "musicboxmechanism", "musicboxframe", "musicboxcrank"}, redeem = 10, tradein = 333},
		biscuit = {short = "biscuit", order = {"biscuitbase", "biscuitspecial", "biscuitsugar", "biscuitsalt"}, redeem = 10, tradein = 50},
		wraithshackles = {short = "wraith", order = {"wraithshacklesmoke", "wraithshacklechain", "wraithshacklemanacles", "wraithshacklelock"}, redeem = 10, tradein = 533},
		tumbleweed = {short = "tumbleweed", order = {"tumbleweedroots", "tumbleweedtendrils", "tumbleweedvines", "tumbleweedstem"}, redeem = 10, tradein = 100},
		alabasterurn = {short = "urn", order = {"alabasterurnlid", "alabasterurnpot", "alabasterurninscription", "alabasterurnash"}, redeem = 10, tradein = 600},
		celescope = {short = "celescope", order = {"celescopeglobe", "celescopecylinders", "celescopeeyepiece", "celescopeingraving"}, redeem = 10, tradein = 333},
	},
	monks = {
		monkdummy = {short = "dummy", order = {"monkdummyhead", "monkdummyarms", "monkdummytorso", "monkdummylegs"}, redeem = 6, tradein = 33},		-- 50
		odysseantongue = {short = "tongue", order = {"tongueflesh", "tonguecasing", "tonguepolish", "tonguecurse"}, redeem = 18, tradein = 100},		-- 150
		monkheadband = {short = "headband", order = {"monkheadbandthreads", "monkheadbandamethyst", "monkheadbandenchantment", "monkheadbandsupport"}, redeem = 25, tradein = 133},		-- 200
		talonedring = {short = "talonring", order = {"crimsonsteelband", "quartzsetting", "ringsteelclaws", "talonedringbinding"}, redeem = 50, tradein = 266},		-- 400
		cranepennon = {short = "pennon", order = {"pennoncloth", "pennoncranes", "pennonstaff", "pennonthread"}, redeem = 87, tradein = 466},		-- 700 			???
		monkbanner = {short = "banner", order = {"monkbannerflag", "monkbannerembroidery", "monkbannerspear", "monkbannerthread"}, redeem = 200, tradein = 1066},		-- 1600
		ashstaff = {short = "staff", order = {"ashstaffstave", "ashstaffstrapping", "ashstaffcap", "ashstaffshoe"}, redeem = 218, tradein = 1166},		-- 1750
		olivebranch = {short = "branch", order = {"olivewood", "olivebranchshoots", "oliveleaves", "olivebranchenchantment"}, redeem = 137, tradein = 733},		-- 1100
	},
	elemental = {
		airelement = {short = "pet", order = {"airelementalcyclone", "airelementalessence", "airelementalbinding", "airelementallightning"}, redeem = 7, tradein = 40},		-- 60
		airbrooch = {short = "brooch", order = {"airbroochclasp", "airbroochgem", "airbroochsetting", "airbroochenchantment"}, redeem = 18, tradein = 100},		-- 150
		firependant = {short = "pendant", order = {"firependantchain", "firependantflame", "firependantsetting", "firependantjewel"}, redeem = 25, tradein = 133},		-- 200
		jawbone = {short = "jawbone", order = {"jawboneteeth", "jawbonemandibles", "jawbonebone", "jawbonehinge"}, redeem = 25, tradein = 133},		-- 200
		earthenshovel = {short = "shovel", order = {"earthshovelwood", "earthshovelblade", "earthshovelbinding", "earthshovelminerals"}, redeem = 46, tradein = 250},		-- 375
		garashshackle = {short = "shackle", order = {"garashshacklelinks", "garashshackleorbs", "garashshackleenchantment", "garashshacklechains"}, redeem = 75, tradein = 400},		-- 600
		seatears = {short = "tears", order = {"seatearsphial", "seatearsstopper", "seatearspaint", "seatearstears"}, redeem = 37, tradein = 200},		-- 300
		mudbomb = {short = "mudbomb", order = {"mudbombbinding", "mudbombmud"}, redeem = 87, tradein = 466},		-- 700
		searedglyph = {short = "glyph", order = {"searedglyphplaque", "searedglyphemblem", "searedglyphtendrils", "searedglyphflame"}, redeem = 106, tradein = 566},		-- 850
		firetank = {short = "tank", order = {"firetankframe", "firetankflame", "firetankinsignia", "firetanklinks"}, redeem = 168, tradein = 900},		-- 1350
		sceptre = {short = "sceptre", order = {"sceptrescript", "sceptreenchantment", "sceptreheart", "sceptretusk"}, redeem = 250, tradein = 1333},		-- 2000
		harness = {short = "harness", order = {"airharnessstraps", "airharnessglyphs", "airharnessenchantment", "airharnessbuckles"}, redeem = 212, tradein = 1133},		-- 1133
	},
	yggdrasil = {
		dreadpilar = {short = "dreadpilar", order = {"dreadpilarplates", "dreadpilarbody", "dreadpilarhead", "dreadpilarlegs"}},
		squargon = {short = "squargon", order = {"squargonbody", "squargonhead", "squargonlegs", "squargonfangs"}},
		yggdrasiltablet = {short = "tablet", order = {"tabletwax", "tabletwood", "tabletstylus", "tablettwine"}},
		valdblom = {short = "valdblom", order = {"valdblomstem", "valdblomleaves", "valdblomessence", "valdblomroot"}},
		earthshapingtome = {short = "shapingtome", order = {"shapingtomeclay", "shapingtomgranite", "shapingtomeplates", "shapingtominsignia"}},
		nexuscube = {short = "nexuscube", order = {"nexuscubegold", "nexuscubeglass", "nexuscubemote", "nexuscubescript"}},
		firecrystal = {short = "firecrystal", order = {"firecrystalenchantment", "firecrystalstone", "firecrystalflame", "firecrystalspark"}},
		planarmote = {short = "planarmote", order = {"moteflame", "moteaura", "motebinding", "moteenchantment"}},
		goldensnakeskin = {short = "snakeskin", order = {"goldenscales", "goldenskin", "goldencolouring", "goldenenchantment"}},
		yggdrasilbranch = {short = "branch", order = {"yggdrasilbranchwood", "yggdrasilbranchmosaic", "yggdrasilbranchline", "yggdrasilbranchhook"}},
		criersbell = {short = "bell", order = {"criersshell", "criershandle", "crierschime", "crierscurse"}},
	},	
	contenders = {
		contenderspig = {short = "pig", order = {"pigclay", "pigears", "pigbelly", "pigtail"}, redeem = 7, tradein = 40},		-- 60
		contendersjug = {short = "jug", order = {"juglip", "jugbase", "jugbowl", "jughandle"}, redeem = 12, tradein = 66},		-- 100
		contendersbouquet = {short = "bouquet", order = {"bouquetstring", "bouquetknot", "bouquetbloom", "bouquetstem"}, redeem = 18, tradein = 100},		-- 150
		contendersfigurine = {short = "figurine", order = {"contenderfigurinehead", "contenderfigurinearms", "contenderfigurinelegs", "contenderfigurinebody"}, redeem = 31, tradein = 166},		-- 250
		contendersglass = {short = "glass", order = {"glasshandle", "glasspane", "glassfocus", "glassframe"}, redeem = 37, tradein = 200},		-- 300
		contendersjournal = {short = "journal", order = {"journalbinding", "journalpage", "journalcover", "journalindex"}, redeem = 62, tradein = 333},		-- 500
		contendersstud = {short = "stud", order = {"studgleam", "studpost", "studgem", "studback"}, redeem = 125, tradein = 666},		-- 1000
		contendersribbon = {short = "ribbon", order = {"ribbongilding", "ribbonpin", "ribbonstripe", "ribbonfold"}, redeem = 175, tradein = 933},		-- 1400
	},
	underworld = {
		cryptworm = {short = "worm", order = {"cryptwormhead", "cryptwormbody", "cryptwormfangs", "cryptwormbinding"}, redeem = 10, tradein = 40}, -- no tradein
		psychesplinter = {short = "splinter", order = {"psychesplinterchain", "psychesplinterframe", "psychesplinterlength", "psychesplintercurse"}, redeem = 10, tradein = 120}, -- 180
		sanityskein = {short = "skein", order = {"sanityskeinthread", "sanityskeincoil", "sanityskeincurse", "sanityskeinbinding"}, redeem = 10, tradein = 146}, -- 220
		custodytalisman = {short = "custody", order = {"custodyleft", "custodyright", "custodycentre", "custodybinding"}, redeem = 10, tradein = 266}, -- 400
		unlifetotem = {short = "totem", order = {"unlifetotembase", "unlifetotemwood", "unlifetotemskull", "unlifetotemtendrils"}, redeem = 10, tradein = 333}, -- 500
		soulsliver = {short = "sliver", order = {"soulsliverobsidian", "soulsliverfog", "soulsliversouls", "soulslivercurse"}, redeem = 10, tradein = 533}, -- 800
		cullingblade = {short = "blade", order = {"cullingbladehilt", "cullingbladeedge", "cullingblademetal", "cullingbladecurse"}, redeem = 10, tradein = 1000}, -- 1500
		funeralshroud = {short = "shroud", order = {"funeralshroudcloth", "funeralshroudthread", "funeralshroudbenediction", "funeralshroudclasp"}, redeem = 10, tradein = 1333}, -- 2000
	},
	renegades = {
		mercenarychalk = {short = "chalk", order = {"mercenarychalkbinding", "mercenarychalkchalk", "mercenarychalkdust", "mercenarychalkstick"}, redeem = 8 , tradein = 42}, -- 65 
		elementalinjunction = {short = "injunction", order = {"injunctionscript", "injunctionpaper", "injunctionseal", "injunctionsignature"}, redeem = 7 , tradein = 36}, -- 60
		moppet = {short = "moppet", order = {"moppetcloth", "moppeteyes", "moppetthread", "moppetbuttons"}, redeem = 25 , tradein = 132}, -- 200
		turncoatscoat = {short = "coat", order = {"turncoatscoatcloth", "turncoatscoatbinding", "turncoatscoatthread", "turncoatscoatbuttons"}, redeem = 43, tradein = 231}, -- 350
		shadowcloak = {short = "shadowcloak", order = {"shadowcloakcloth", "shadowcloakclasp", "shadowcloakthread", "shadowcloakcurse"}, redeem = 75, tradein = 396}, -- 600
		betrayersmantle = {short = "betrayers", order = {"betrayersmantlecloth", "betrayersmantlethread", "betrayersmantlestraps", "betrayersmantlecurse"}, redeem = 100, tradein = 528}, -- 800
		turncoatsmasque = {short = "masque", order = {"turncoatsmasquestone", "turncoatsmasqueetchings", "turncoatsmasquecurse", "turncoatsmasqueeyes"}, redeem = 125, tradein = 660}, -- 1000
		sunderedpennon = {short = "sundered", order = {"sunderedpennoncloth", "sunderedpennonthread", "sunderedpennonstaff", "sunderedpennonbinding"}, redeem = 200, tradein = 1056}, -- 1600
	},
	invasion = {
		darkearthfigrine = {short = "darkearth", order = {"darkearthhead", "darkearthtorso", "darkeartharms", "darkearthlegs"}, redeem = 6, tradein = 33}, --50
		batteringram = {short = "batteringram", order = {"batteringramwheels", "batteringramram", "batteringramgrips", "batteringrambolts"}, redeem = 25, tradein = 132}, --200
		caltrop = {short = "caltrop", order = {"caltropspikes", "caltropball", "caltropbinding", "caltropbarbs"}, redeem = 43, tradein = 233}, -- 350
		cauldron = {short = "cauldron", order = {"cauldronpot", "cauldronoil", "cauldronhandle", "cauldronbase"}, redeem = 50, tradein = 264}, --400
		shadowshackle = {short = "shadowshackle", order = {"shadowshacklelink", "shadowshacklemetal", "shadowshackleenchantment", "shadowshackleshadow"}, redeem = 75, tradein = 400}, -- 600
		hagseye = {short = "hagseye", order = {"hagseyelid", "hagseyeball", "hagseyefluid", "hagseyeenchantment"}, redeem = 87, tradein = 466}, -- 700
		icebrick = {short = "icebrick", order = {"magicice", "repeatingspell", "icebinding", "iceenchantment"}, redeem = 112, tradein = 600}, -- 900
		scoutingmap = {short = "scoutingmap", order = {"scoutingmapenchantment", "scoutingmapicons", "scoutingmapink", "scoutingmapvellum"}, redeem = 150, tradein = 800}, -- 1200
	},
	war = {
		rottingremains = {short = "remains", order = {"remainsbones", "remainsmuscles", "remainsblood", "remainsflesh"}, redeem = 10, tradein = 80},
		gildedbit = {short = "bit", order = {"bitpatterns", "bitgilding", "bitchain", "bitbar"}, redeem = 10, tradein = 80},
		pigeon = {short = "pigeon", order = {"pigeonhead", "pigeonbody", "pigeonlegs", "pigeonwings"}, redeem = 10, tradein = 80},
		warcloud = {short = "warcloud", order = {"warcloudfog", "warcloudstench", "warcloudcurse", "warcloudbinding"}, redeem = 10, tradein = 80},
		portalhoop = {short = "portalhoop", order = {"portalhoopsteel", "portalhooplight", "portalhoopenchantment", "portalhoopbinding"}, redeem = 10, tradein = 80},
		observantsigil = {short = "sigil", order = {"observantsigilmetal", "observantsigilstar", "observantsigileye", "observantsigillatice"}, redeem = 10, tradein = 80},
	},
  planes = {
    cowculator = {short = "cow", order = {"cowculatorwood", "cowculatornumbers", "cowculatorpaint", "cowculatorspectacles"}, redeem = 12, tradein = 66},
    golemgateway = {short = "golem", order = {"gatewayemblem", "gatewaygates", "gatewayframe", "gatewaybars"}, redeem = 31, tradein = 166},
    hollowbook = {short = "book", order = {"hollowbookcovers", "hollowbookeye", "hollowbookglyphs", "hollowbookscream"}, redeem = 37, tradein = 200},
    brainjar = {short = "brainjar", order = {"brainjarpot", "brainjarbrains", "brainjarpreserves", "brainjarlabel"}, redeem = 50, tradein = 266},
    faemirror = {short = "mirror", order = {"faemirrorglass", "faemirrorcrystal", "faemirrorhandle", "faemirrorscript"}, redeem = 56, tradein = 300},
    celestialcoronet = {short = "coronet", order = {"coronetband", "coronetangels", "coronetspheres", "coronetengravings"}, redeem = 87, tradein = 466},
    chaosclaw = {short = "claw", order = {"chaosclawedge", "chaosclawtip", "chaosclawcorruption", "chaosclawspan"}, redeem = 100, tradein = 533},
    iconstatuette = {short = "icon", order = {"statuetteglobe", "statuettesigils", "statuetteshards", "statuetteicon"}, redeem = 125, tradein = 666},
    kris = {short = "kris", order = {"krisblade", "krishaft", "krisrunes", "krissteel"}, redeem = 1, tradein = 1},
    crystalsword = {short = "sword", order = {"crystalswordhilt", "crystalswordguard", "crystalswordblade", "crystalswordgem"}, redeem = 250, tradein = 1333},
  },
 
}
 
 
-- Require this to map the line when you find a talisman back to the short name
talisman.names = {
 
-- Logosmas
  ["the snow for a reuseable snowball"] = "snowballsnow",
  ["the reforming spell for a reuseable snowball"] = "snowballreform",
  ["the returning spell for a reuseable snowball"] = "snowballreuse",
  ["the binding for a reuseable snowball"] = "snowballbinding",
 
  ["the pot for a kettle of halfnog"] = "halfnogpot",
  ["the brew for a kettle of halfnog"] = "halfnogbrew",
  ["the ladle for a kettle of halfnog"] = "halfnogladle",
  ["the handle for a kettle of halfnog"] = "halfnoghandle",
 
  ["the corn for a popcorn garland"] = "garlandcorn",
  ["the silk for a popcorn garland"] = "garlandsilk",
  ["the glitter for a popcorn garland"] = "garlandglitter",
  ["the spell for a popcorn garland"] = "popcornspell",
 
  ["the sugar for some sticky taffy"] = "taffysugar",
  ["the special ingredient for some sticky taffy"] = "taffyspecial",
  ["the magic for some sticky taffy"] = "taffymagic",
  ["the bag for some sticky taffy"] = "taffybag",
 
  ["the house for a snowglobe"] = "snowglobehouse",
  ["the bell for a snowglobe"] = "snowglobebell",
  ["the snow for a snowglobe"] = "snowglobesnow",
  ["the glass for a snowglobe"] = "snowglobeglass",
 
  ["the red wool for a Logosmas scarf"] = "redscarfwool",
  ["the gold wool for a Logosmas scarf"] = "goldscarfwool",
  ["the thread for a Logosmas scarf"] = "scarfthread",
  ["the crystals for a Logosmas scarf"] = "scarfcrystals",
 
  ["the cloth for a sack of snowflakes"] = "snowsackcloth",
  ["the snow for a sack of snowflakes"] = "snowsacksnow",
  ["the drawstring for a sack of snowflakes"] = "snowsackstring",
  ["the icicle for a sack of snowflakes"] = "snowsackicicle",
 
  ["the label for a Logosmas gift tag"] = "gifttaglabel",
  ["the writing for a Logosmas gift tag"] = "gifttagwriting",
  ["the eyelet for a Logosmas gift tag"] = "gifttageyelet",
  ["the ribbon for a Logosmas gift tag"] = "gifttagribbon",
 
-- Elder Gods
  ["the stem for a cherry blossom"] = "cherryblossomstem",
  ["the flower for a cherry blossom"] = "cherryblossomflower",
  ["the stamen for a cherry blossom"] = "cherryblossomstamen",
  ["the scent for a cherry blossom"] = "cherryblossomscent",
 
  ["the crystal for a translucent filter"] = "filtercrystal",
  ["the bronze for a translucent filter"] = "filterbronze",
  ["the fitting for a translucent filter"] = "filterfitting",
  ["the polish for a translucent filter"] = "filterpolish", 
 
  ["the cloth for a sachet"] = "sachetcloth",
  ["the herbs for a sachet"] = "sachetherbs",
  ["the string for a sachet"] = "sachetstring",
  ["the scent for a sachet"] = "sachetscent", 
 
  ["the eyes for an obsidian hound carving"] = "houndcarvingeyes",
  ["the legs for an obsidian hound carving"] = "houndcarvinglegs",
  ["the fangs for an obsidian hound carving"] = "houndcarvingfangs",
  ["the obsidian for a hound carving"] = "houndcarvingobsidian",
 
  ["the head for a finishing hammer"] = "finishinghammerhead",
  ["the runes for a finishing hammer"] = "finishinghammerrunes",
  ["the handle for a finishing hammer"] = "finishinghammerhandle",
  ["the grip for a finishing hammer"] = "finishinghammergrip", 
 
  ["the strings for a citole"] = "citolestrings",
  ["the body for a citole"] = "citolebody",
  ["the base for a citole"] = "citolebase",
  ["the tune for a citole"] = "citoletune",
 
  ["the handle for a battered pan"] = "batteredpanhandle",
  ["the dish for a battered pan"] = "batteredpandish",
  ["the grip for a battered pan"] = "batteredpangrip",
  ["the spell for a battered pan"] = "batteredpanspell",
 
  ["the paper for a declaration of hostility"] = "declarationpaper",
  ["the text for a declaration of hostility"] = "declarationtext",
  ["the signature for a declaration of hostility"] = "declarationsignature",
  ["the seal for a declaration of hostility"] = "declarationseal",
 
  ["the feathers for a set of stormforged wings"] = "vastarwingsfeathers",
  ["the straps for a set of stormforged wings"] = "vastarwingsstraps",
  ["the span for a set of stormforged wings"] = "vastarwingsspan",
  ["the lightning for a set of stormforged wings"] = "vastarwingslightning",
 
--Planes
 
  ["the wood for a cowculator carving"] = "cowculatorwood",
  ["the numbers for a cowculator carving"] = "cowculatornumbers",
  ["the paint for a cowculator carving"] = "cowculatorpaint",
  ["the spectacles for a cowculator carving"] = "cowculatorspectacles",
 
  ["the emblem for an iron gateway"] = "gatewayemblem",
  ["a set of iron gates"] = "gatewaygates",
  ["the frame for an iron gateway"] = "gatewayframe",
  ["the bars for an iron gateway"] = "gatewaybars",
 
  ["the pot for a jar of withered brains"] = "brainjarpot",
  ["the contents of a jar of withered brains"] = "brainjarbrains",
  ["the preserves for a jar of withered brains"] = "brainjarpreserves",
  ["the label for a jar of withered brains"] = "brainjarlabel",
 
  ["the covers for an empty book"] = "hollowbookcovers",
  ["the eye for an empty book"] = "hollowbookeye",
  ["the glyphs for an empty book"] = "hollowbookglyphs",
  ["the scream for an empty book"] = "hollowbookscream",
 
  ["the glass for a mirror of fae perception"] = "faemirrorglass",
  ["the crystal for a mirror of fae perception"] = "faemirrorcrystal",
  ["the handle for a mirror of fae perception"] = "faemirrorhandle",
  ["the script for a mirror of fae perception"] = "faemirrorscript",
 
  ["the band for a celestial coronet"] = "coronetband",
  ["the angels for a celestial coronet"] = "coronetangels",
  ["the spheres for a celestial coronet"] = "coronetspheres",
  ["the engravings for a celestial coronet"] = "coronetengravings",
 
  ["the edge for a jagged claw"] = "chaosclawedge",
  ["the tip for a jagged claw"] = "chaosclawtip",
  ["the corruption for a jagged claw"] = "chaosclawcorruption",
  ["the span for a jagged claw"] = "chaosclawspan",
 
  ["the globe for an icon statuette"] = "statuetteglobe",
  ["the sigils for an icon statuette"] = "statuettesigils",
  ["the shards for an icon statuette"] = "statuetteshards",
  ["the icon for a statuette"] = "statuetteicon",
 
  ["the blade for a sacrificial kris"] = "krisblade",
  ["the haft for a sacrificial kris"] = "krishaft",
  ["the runes for a sacrificial kris"] = "krisrunes",
  ["the steel for a sacrificial kris"] = "krissteel",
 
  ["the hilt for a crystal sword"] = "crystalswordhilt",
  ["the guard for a crystal sword"] = "crystalswordguard",
  ["the blade for a crystal sword"] = "crystalswordblade",
  ["the gem for a crystal sword"] = "crystalswordgem",
 
--Dragon
 
	["a Blue Dragon's claw"] = "bluedragonclaw",
	["Blue Dragon leather"] = "bluedragonleather",
	["a Blue Dragon's eye"] = "bluedragoneye",
	["a Blue Dragon's tooth"] = "bluedragontooth",
	["a Blue Dragon's heart"] = "bluedragonheart",
	["a Blue Dragon bone"] = "bluedragonbone",
	["a Blue Dragon's scale"] = "bluedragonscale",
	["a Blue Dragon's lung"] = "bluedragonlung",
 
	["a Red Dragon's claw"] = "reddragonclaw",
	["Red Dragon leather"] = "reddragonleather",
	["a Red Dragon's eye"] = "reddragoneye",
	["a Red Dragon's tooth"] = "reddragontooth",
	["a Red Dragon's heart"] = "reddragonheart",
	["a Red Dragon bone"] = "reddragonbone",
	["a Red Dragon's scale"] = "reddragonscale",
	["a Red Dragon's belly"] = "reddragonbelly",
 
	["a Black Dragon's claw"] = "blackdragonclaw",
	["Black Dragon leather"] = "blackdragonleather",
	["a Black Dragon's eye"] = "blackdragoneye",
	["a Black Dragon's tooth"] = "blackdragontooth",
	["a Black Dragon's heart"] = "blackdragonheart",
	["a Black Dragon bone"] = "blackdragonbone",
	["a Black Dragon's scale"] = "blackdragonscale",
	["a Black Dragon's acid sac"] = "blackdragonsac",
 
	["a Green Dragon's claw"] = "greendragonclaw",
	["Green Dragon leather"] = "greendragonleather",
	["a Green Dragon's eye"] = "greendragoneye",
	["a Green Dragon's tooth"] = "greendragontooth",
	["a Green Dragon's heart"] = "greendragonheart",
	["a Green Dragon bone"] = "greendragonbone",
	["a Green Dragon's scale"] = "greendragonscale",
	["a Green Dragon's poison sac"] = "greendragonsac",
 
	["a Gold Dragon's claw"] = "golddragonclaw",
	["Gold Dragon leather"] = "golddragonleather",
	["a Gold Dragon's eye"] = "golddragoneye",
	["a Gold Dragon's tooth"] = "golddragontooth",
	["a Gold Dragon's heart"] = "golddragonheart",
	["a Gold Dragon bone"] = "golddragonbone",
	["a Gold Dragon's scale"] = "golddragonscale",
	["a Gold Dragon's brain stem"] = "golddragonstem",
 
	["a Silver Dragon's claw"] = "silverdragonclaw",
	["Silver Dragon leather"] = "silverdragonleather",
	["a Silver Dragon's eye"] = "silverdragoneye",
	["a Silver Dragon's tooth"] = "silverdragontooth",
	["a Silver Dragon's heart"] = "silverdragonheart",
	["a Silver Dragon bone"] = "silverdragonbone",
	["a Silver Dragon's scale"] = "silverdragonscale",
	["a Silver Dragon's larynx"] = "silverdragonlarynx",
 
 --AZATLAN
 
	["a red eagle's feather"] = "redfeather",
	["a yellow eagle's feather"] = "yellowfeather",
	["a blue eagle's feather"] = "bluefeather",
	["a green eagle's feather"] = "greenfeather",
	["an orange eagle's feather"] = "orangefeather",
	["a purple eagle's feather"] = "purplefeather",
	["a black eagle's feather"] = "blackfeather",
 
	["a coati's tooth"] = "coatitooth",
	["a coati's collar"] = "coaticollar",
	["some coati bait"] = "coatibait",
	["a coati tail"] = "coatitail",
	["a coati's claw"] = "coaticlaw",
	["a coati's paw"] = "coatipaw",
 
	["a kinkajou's tooth"] = "kinkajoutooth",
	["a collar for a kinkajou"] = "kinkajoucollar",
	["some kinkajou bait"] = "kinkajoubait",
	["a kinkajou's tail"] = "kinkajoutail",
	["a kinkajou claw"] = "kinkajouclaw",
	["a kinkajou's paw"] = "kinkajoupaw",
 
	["a red quetzal feather"] = "quetzalredfeather",
	["a blue quetzal feather"] = "quetzalbluefeather",
	["a green quetzal feather"] = "quetzalgreenfeather",
	["a wooden quetzal cage"] = "quetzalcage",
	["a quetzal talon"] = "quetzaltalon",
	["a quetzal egg"] = "quetzalegg",
 
	["the left half of a Transoceanic Orb"] = "orbleft",
	["the right half of a Transoceanic Orb"] = "orbright",
	["the center of a Transoceanic Orb"] = "orbcenter",
 
	["the shaft of an atlatl"] = "atlatlshaft",
	["the cup of an atlatl"] = "atlatlcup",
	["a spear for an atlatl"] = "atlatlspear",
 
	["the broken tip of an obsidian knife"] = "knifebladetop",
	["the broken tang of an obsidian knife"] = "knifebladebottom",
	["some green leather"] = "knifeleather",
 
--Wonders
 
	["a bucket handle"] = "buckethandle",
	["a bucket's left side"] = "bucketleft",
	["a bucket's right side"] = "bucketright",
	["a bucket's base"] = "bucketbase",
	["a globe of enchanted water"] = "bucketwater",
 
	["blue Dragon scales"] = "packscales",
	["some backpack straps"] = "packstraps",
	["a backpack lining"] = "packlining",
	["backpack thread"] = "packthread",
	["backpack leather"] = "packleather",
 
	["a whistle mouthpiece"] = "whistlemouth",
	["a whistle's flue"] = "whistleflue",
	["a whistle reed"] = "whistlereed",
	["a whistle's top pipe"] = "whistletoppipe",
	["a whistle's bottom pipe"] = "whistlelowpipe",
 
	["a ram's horn"] = "ramshorn",
	["a horn mouthpiece"] = "hornmouth",
	["a left horn strap"] = "hornleftstrap",
	["a right horn strap"] = "hornrightstrap",
	["some fasteners"] = "hornfastener",
 
	["a lens top"] = "monotop",
	["a lens bottom"] = "monobottom",
	["a monocle frame"] = "monoframe",
	["a monocle's catch"] = "monocatch",
	["a monocle's clasp"] = "monoclasp",
 
	["a globe's top"] = "globetop",
	["a globe's middle"] = "globemiddle",
	["a globe's bottom"] = "globebottom",
 
--Misc
 
	["a hookah's base"] = "hookahbase",
	["a hookah's bowl"] = "hookahbowl",
	["a hookah's wind hood"] = "hookahhood",
	["a hookah's chain"] = "hookahchain",
	["a hookah's hoses"] = "hookahhoses",
	["a hookah's stem"] = "hookahstem",
	["a hookah's ash plate"] = "hookahplate",
 
	["the rollers for a tapestry"] = "tapestryroller",
	["an onyx pedestal"] = "tapestryonyx",
	["a piece of aged vellum"] = "tapestryvellum",	
	["the claw from a shadow dragon"] = "tapestryclaw",
 
	["the key to a vault"] = "keyfragment",
 
	["the fragment to a sphere"] = "spherefragment",
 
	["the body of a clay figurine"] = "clayfigurinebody",
	["the head of a clay figurine"] = "clayfigurinehead",
	["the legs of a clay figurine"] = "clayfigurinelegs",
	["the arms of a clay figurine"] = "clayfigurinearms",
 
--Historical
 
	["a Golden Window's frame"] = "windowframe",
	["a Golden Window's pane"] = "windowpane",
	["a Golden Window's jamb"] = "windowjamb",
	["a Golden Window's shutters"] = "windowshutters",
	["a Golden Window's grid"] = "windowgrid",
 
	["Mantle of Himalia cloth"] = "mantlecloth",
	["Mantle of Himalia thread"] = "mantlethread",
	["Mantle of Himalia centrepiece"] = "mantlecentre",
	["Mantle of Himalia gems"] = "mantlegems",
 
 
	[" an icicle's top"] = "icicletop",
	[" an icicle's middle"] = "iciclemiddle",
	[" an icicle's base"] = "iciclebase",
	[" an icicle's tip"] = "icicletip",
	["icicle runes"] = "iciclerunes",
 
	["an Ormyrr skull"] = "helmetskull",
	["a helmet nosepiece"] = "helmetnose",
	["a helmet strap"] = "helmetstrap",
 
	["a smooth piece of obsidian"] = "disctop",
	["a broken piece of obsidian"] = "discside",
	["a rough piece of obsidian"] = "discmiddle",
	["a smooth piece of obsidian"] = "discbottom",
	["obsidian runes"] = "discrunes",
	["a round piece of obsidian"] = "disccentre",
 
	["a votive's base"] = "votivebase",
	["a votive's wick"] = "votivewick",
	["votive wax"] = "votivewax",
 
	["a whisperstone top"] = "stonetop",
	["a whisperstone bottom"] = "stonebottom",
	["a rough whisperstone piece"] = "stonemiddle",
	["a jagged whisperstone piece"] = "stoneside",
	["a whisperstone core"] = "stonecore",
	["a whisperstone emitter"] = "stoneemitter",
 
	["glass lily petals"] = "lilypetals",
	["a glass lily stem"] = "lilystem",
	["a glass lily stamen"] = "lilystamen",
	["a glass lily bulb"] = "lilybulb",
	["a glass lily pistil"] = "lilypistil",
 
	["ozhera bait"] = "ozherabait",
	["an ozhera collar"] = "ozheracollar",
	["an ozhera egg"] = "ozheraegg",
	["an ozhera claw"] = "ozheraclaw",
	["an ozhera beak"] = "ozherabeak",
	["an ozhera nest"] = "ozheranest",
 
	["a polka-dotted turtle shell"] = "turtleshell",
	["turtle bait"] = "turtlebait",
	["a little turtle collar"] = "turtlecollar",
	["a polka-dot turtle tail"] = "turtletail",
	["a turtle foot"] = "turtlefoot",
	["a polka-dot turtle tongue"] = "turtletongue",
 
	["mongoose bait"] = "mongoosebait",
	["a mongoose collar"] = "mongoosecollar",
	["a mongoose claw"] = "mongooseclaw",
	["a mongoose paw"] = "mongoosepaw",
	["a mongoose tail"] = "mongoosetail",
	["a mongoose fang"] = "mongoosefang",
 
	["hellcat bait"] = "hellcatbait",
	["a hellcat collar"] = "hellcatcollar",
	["a hellcat claw"] = "hellcatclaw",
	["a hellcat fang"] = "hellcatfang",
	["a hellcat tail"] = "hellcattail",
	["a hellcat paw"] = "hellcatpaw",
 
--Conclave
 
	["a tophat's lining"] = "tophatlining",
	["a tophat's brim"] = "tophatbrim",
	["some thread"] = "tophatthread",
	["a tophat's hatband"] = "tophatband",
 
	["an hourglass's top"] = "hourglasstop",
	["an hourglass's bottom"] = "hourglassbottom",
	["hourglass sand"] = "hourglasssand",
	["an hourglass bulb"] = "hourglassbulb",
 
	["a beautiful gem"] = "broochgem",
	["a brooch's clasp"] = "broochclasp",
	["metal for a brooch"] = "broochmetal",
	["a brooch's hook"] = "broochhook",
 
	["an elemental sprite's legs"] = "spritelegs",
	["an elemental sprite's arms"] = "spritearms",
	["an elemental sprite's head"] = "spritehead",
	["an elemental sprite's torso"] = "spritetorso",
 
	["a vault's door"] = "vaultdoor",
	["a vault's hinge"] = "vaulthinge",
	["a vault's handle"] = "vaulthandle",
	["a vault's inlaid gems"] = "vaultgems",
 
	["a Ring of Flying's top"] = "ringtop",
	["a Ring of Flying's bottom"] = "ringbottom",
	["a Ring of Flying's inside"] = "ringinside",
	["a Ring of Flying's outside"] = "ringoutside",
 
	["the inside of an Armband of Celerity"] = "armbandinside",
	["the outside of an Armband of Celerity"] = "armbandoutside",
	["the top of an Armband of Celerity"] = "armbandtop",
	["the bottom of an Armband of Celerity"] = "armbandbottom",
 
	["a Buckawn Amulet's thread"] = "amuletthread",
	["A Buckawn Amulet's chain"] = "amuletchain",
	["a Buckawn Amulet's silver ball"] = "amuletball",
	["a Buckawn Amulet's thread"] = "amuletthread",
 
	["leather for a Grimoire of Adaptation"] = "grimoireleather",
	["paper for a Grimoire of Adaptation"] = "grimoirepaper",
	["gems for a Grimoire of Adaptation"] = "grimoiregems",
	["the lock for a Grimoire of Adaptation"] = "grimoirelock",
 
	["a Stygian Pendant's clasp"] = "pendantclasp",
	["a Stygian Pendant's pearl"] = "pendantpearl",
	["a Stygian Pendant's base"] = "pendantbase",
	["a Stygian Pendant's hook"] = "pendanthook",
 
	["thread for Grand Magi robes"] = "robesthread",
	["fabric for Grand Magi robes"] = "robesfabric",
	["trim for Grand Magi robes"] = "robestrim",
	["a needle for sewing Grand Magi robes"] = "robesneedle",
 
	["thread for Atavian wings"] = "wingsthread",
	["Atavian feathers"] = "wingsfeathers",
	["a left Atavian wing "] = "wingsleft",
	["a right Atavian wing"] = "wingsright",
 
--MARKS
 
	["a mouthpiece of a Warhorn of Heroes"] = "ivoryhornmouthpiece",
	["the fittings of a Warhorn of Heroes"] = "ivoryhornfittings",
	["the left side of a Warhorn of Heroes"] = "ivoryhornleft",
	["the right side of a Warhorn of Heroes"] = "ivoryhornright",
 
	["the disc of a Champion's medallion"] = "ivorymedalliondisc", 
	["the clasp of a Champion's medallion"] = "ivorymedallionclasp", 
	["the accent of a Champion's medallion"] = "ivorymedallionaccent", 
	["the ribbon of a Champion's medallion"] = "ivorymedallionribbon",
 
	["the lens of a Sangrean spyglass"] = "ivoryspyglasslens", 
	["the eye piece of a Sangrean spyglass"] = "ivoryspyglasseyepiece", 
	["the body of a Sangrean spyglass"] = "ivoryspyglassbody", 
	["the trap of a Sangrean spyglass"] = "ivoryspyglassstrap",
 
	["a piece of silk from an Ivory pennon"] = "ivorypennonsilk", 
	["a piece of ribbon from an Ivory pennon"] = "ivorypennonribbon", 
	["some thread from an Ivory pennon"] = "ivorypennonthread", 
	["some dye for an Ivory pennon"] = "ivorypennondye",
 
	[" the accent of an ivory armband"] = "ivoryarmbandaccent", 
	["the inner shell of a silver armband"] = "ivoryarmbandouter", 
	["the outer shell of a silver armband"] = "ivoryarmbandinner", 
	["a silver armband clasp"] = "ivoryarmbandclasp",
 
	["the body of an Atlantia dummy"] = "ivoryatlantiabody", 
	["the legs of an Atlantia dummy"] = "ivoryatlantialegs", 
	["the head of an Atlantia dummy"] = "ivoryatlantiahead", 
	["the arms of an Atlantia dummy"] = "ivoryatlantiaarms",
 
	["the limbs of a Champion's Training dummy"] = "ivorydummylimbs", 
	["the torso of a Champion's Training dummy"] = "ivorydummytorso", 
	["the clothing of a Champion's Training dummy"] = "ivorydummyclothing", 
	["the armour of a Champion's Training dummy"] = "ivorydummyarmour",
 
	["the base of a miniature ivory tower"] = "ivorytowerbase", 
	["the lower steps of a miniature ivory tower"] = "ivorytowerlower", 
	["the upper part of a miniature ivory tower"] = "ivorytowerupper", 
	["the laquer for a miniature ivory tower"] = "ivorytowerlacquer",
 
	["the core of an Atlantia bowstring"] = "ivorybowstringcore", 
	["the wrapping of an Atlantia bowstring"] = "ivorybowstringwrapping", 
	["the eyelet of an Atlantia bowstring"] = "ivorybowstringeyelet", 
	["the enchantment for an Atlantia bowstring"] = "ivorybowstringenchant",
 
	["the hilt of an Anima's Thirst"] = "quisaisdaggerhilt", 
	["the blade of an Anima's Thirst"] = "quisalisdaggerblade", 
	["the pommel of an Anima's Thirst"] = "quisalisdaggerpommel", 
	["the grip of an Anima's Thirst"] = "quisalisdaggergrip",
 
	["the lower fragment of a notched bone"] = "quisalisbonelower", 
	["the upper fragment of a notched bone"] = "quisalisboneupper", 
	["a piece of rope for a notched bone"] = "quisalisbonerope", 
	["the stain of a notched bone"] = "quisalisbonestain",
 
	["the chain of a Callibian medallion"] = "quisalismedallionchain", 
	["the top part of a Callibian medallion"] = "quisalismedalliontop", 
	["the bottom fragment of a Callibian medallion"] = "quisalismedallionbottom", 
	["the clasp of a Callibian medallion"] = "quisalismedallionclasp",
 
	["the case of the Grandmaster's looking glass"] = "quisalisglasscase", 
	["the lens of the Grandmaster's looking glass"] = "quisalisglasslens", 
	["the iris of the Grandmaster's looking glass"] = "quisalisglassiris", 
	["the eye piece of the Grandmaster's looking glass"] = "quisalisglasseyepiece",
 
	["the hair of a Derillin dummy"] = "quisalisderillinhair", 
	["the clothing of a Derillin dummy"] = "quisalisderillinclothing", 
	["the head of a Derillin dummy"] = "quisalisderillinhead", 
	["the torso of a Derillin dummy"] = "quisalisderillintorso",
 
	["the limbs of an Assassin's dummy"] = "quisalisdummylimbs", 
	["the torso of an Assassin's dummy"] = "quisalisdummytorso", 
	["the robes of an Assassin's dummy"] = "quisalisdummyrobes", 
	["the targets of an Assassin's dummy"] = "quisalisdummytargets",
 
	["the top of a Quisalis tombstone"] = "quisalistombstonetop", 
	["the middle of a Quisalis tombstone"] = "quisalistombstonemiddle", 
	["the base of a Quisalis tombstone"] = "quisalistombstonebase", 
	["the script of a Quisalis tombstone"] = "quisalistombstonescript",
 
	["the serpent insignia of a steel armband"] = "quisalisarmbandserpent", 
	["the eyes of a steel armband"] = "quisalisarmbandeyes", 
	["the top fragment of a steel armband"] = "quisalisarmbandtop", 
	["the bottom fragment of a steel armband"] = "quisalisarmbandbottom",
 
	["the cloth of a cloak of the Blood Maiden"] = "quisaliscloakcloth", 
	["the embroidery of a cloak of the Blood Maiden"] = "quisaliscloakembroidery", 
	["the lining of a cloak of the Blood Maiden"] = "quisaliscloaklining", 
	["the hood of a cloak of the Blood Maiden"] = "quisaliscloakhood",
 
	["the bone of a Death Keeper's mask"] = "quisalismaskbone", 
	["the wire of a Death Keeper's mask"] = "quisalismaskwire", 
	["the teeth of a Death Keeper's mask"] = "quisalismaskteeth", 
	["the runes of a Death Keeper's mask"] = "quisalismaskrunes",
 
-- SEAFARING
 
	["the contents of a cargo crate of clovers"] = "cloverboxclovers",
	["the sides from a cargo crate of clovers"] = "cloverboxsides",
	["the lid from a cargo crate of clovers"] = "cloverboxlid",
	["the base of a cargo crate of clovers"] = "cloverboxbase",
 
	["the arms of a figurine of Captain Maelstrom"] = "maelstromarms",
	["the legs of a figurine of Captain Maelstrom"] = "maelstromlegs",
	["the torso of a figurine of Captain Maelstrom"] = "maelstromtorso",
	["the head of a figurine of Captain Maelstrom"] = "maelstromhead",
 
	["the left wing of a scintillating pair of cascading wings"] = "islandwingsleft",
	["the right wing of a scintillating pair of cascading wings"] = "islandwingsright",
	["the binding thread of a scintillating pair of cascading wings"] = "islandwingsthread",
	["the shoulder straps of a scintillating pair of cascading wings"] = "islandwingsstraps",
 
	["the handle of a frosted pail of pitch"] = "frostpailhandle",
	["the left-hand side of a frosted pail of pitch"] = "frostpailleft",
	["the right-hand side of a frosted pail of pitch"] = "frostpailright",
	["the base of a frosted pail of pitch"] = "frostpailbase",
 
	["the handle of a neatly-appointed pail of pitch"] = "neatpailhandle",
	["the left-hand side of a neatly-appointed pail of pitch"] = "neatpailleft",
	["the right-hand side of a neatly-appointed pail of pitch"] = "neatpailright",
	["the base of a neatly-appointed pail of pitch"] = "neatpailbase",
 
	["the top half of a Shipwright's union chit"] = "shipchittop",
	["the bottom half of a Shipwright's union chit"] = "shipchitbottom",
	["the ink from a Shipwright's union chit"] = "shipchitink",
	["the official seal from a Shipwright's union chit"] = "shipchitseal",
 
	["the mounting plate for an etched and lacquered plaque"] = "xpplaquemount",
	["the fascia from an etched and lacquered plaque"] = "xpplaquefascia",
	["the lacquer for an etched and lacquered plaque"] = "xpplaquelacquer",
	["the lettering from an etched and lacquered plaque"] = "xpplaquelettering",
 
	["the ink from a stylised ocean map"] = "monstermapink",
	["the parchment from a stylised ocean map"] = "monstermapparchment",
	["the compass rose from a stylised ocean map"] = "monstermapcompass",
	["the magical enchantment from a stylised ocean map"] = "monstermapenchant",
 
	["the mounting plate of a crossbow of coconut lumber"] = "crossbowmount",
	["the draw arms of a crossbow of coconut lumber"] = "crossbowarms",
	["the string from a crossbow of coconut lumber"] = "crossbowstring",
	["the winding crank of a crossbow of coconut lumber"] = "crossbowcrank",
 
	["the neck from a polished green bottle"] = "glassbottleneck",
	["the main cylinder from a polished green bottle"] = "glassbottlemiddle",
	["the base of a polished green bottle"] = "glassbottlebase",
	["the magical enchantment from a polished green bottle"] = "glassbottleenchant",
 
	["the handle of an overgrown pail of pitch"] = "seaweedpailhandle",
	["the left-hand side of an overgrown pail of pitch"] = "seaweedpailleft",
	["the right-hand side of an overgrown pail of pitch"] = "seaweedpailright",
	["the base of an overgrown pail of pitch"] = "seaweedpailbase",
 
	["the shell of a smoke flare"] = "smokeflareshell",
	["the fins of a smoke flare"] = "smokeflarefins",
	["the lid of a smoke flare"] = "smokeflarelid",
	["the chamber of a smoke flare"] = "smokeflarechamber",
 
--Death
 
	["the top of a loop of mortal coil"] = "coiltop",
	["the bottom of a loop of mortal coil"] = "coilbottom",
	["a strand of mortal coil"] = "coilstrand",
	["the binding for a loop of mortal coil"] = "coilbinding",
 
	["the tip of a vulture's talon"] = "talontip",
	["the stem of a vulture's talon"] = "talonstem",
	["the base of a vulture's talon"] = "talonbase",
	["the poison for a vulture's talon"] = "talonpoison",
 
	["some candle wax"] = "candlewax",
	["the flame for a candle of cessation"] = "candleflame",
	["the base for a candle of cessation"] = "candlebase",
	["the string for a candle of cessation"] = "candlestring",
 
	["the head of a cowled dummy"] = "deathdummyhead",
	["the arms of a cowled dummy"] = "deathdummyarms",
	["the torso of a cowled dummy"] = "deathdummytorso",
	["the legs of a cowled dummy"] = "deathdummylegs",
 
	["the top of a gravestone"] = "gravestonetop",
	["the bottom of a gravestone"] = "gravestonebottom",
	["the inscription for a gravestone"] = "gravestoneinscription",
	["the lichen for a gravestone"] = "gravestonelichen",
 
	["the base of a soulfire crucible"] = "cruciblebase",
	["the handle of a soulfire crucible"] = "cruciblehandle",
	["the bowl of a soulfire crucible"] = "cruciblebowl",
	["the flame of a soulfire crucible"] = "crucibleflame",
 
	["the mouthpiece for death's call"] = "deathscallmouth",
	["the horn for death's call"] = "deathscallhorn",
	["the tassels for death's call"] = "deathscalltassels",
	["the coil for death's call"] = "deathscallcoil",
 
	["the brocade for a sycophantic shoulder cape"] = "capebrocade",
	["the thread for a sycophantic shoulder cape"] = "capethread",
	["the enchantment for a sycophantic shoulder cape"] = "capeenchantment",
	["the velvet for a sycophantic shoulder cape"] = "capevelvet",
 
--Blackwave
 
	["The top of a taper of eternity"] = "tapertop", 
	["The bottom of a taper of eternity"] = "taperbottom",
	["The wax for a taper of eternity"] = "taperwax",
	["The string for a taper of eternity"] = "taperstring",
 
	["The band for a ring of finality"] = "signetband",
	["The bezel for a ring of finality"] = "signetbezel",
	["The carving for a ring of finality"] = "signetcarving",
	["The marks for a ring of finality"] = "signetmarks",
 
	["The lizard for a grievous keyring"] = "keyringlizard",
	["The tiger for a grievous keyring"] = "keyringtiger",
	["The slate for a grievous keyring"] = "keyringslate",
	["The hoop for a grievous keyring"] = "keyringhoop",
 
	["The head of a goblin"] = "goblinhead",
	["The arms of a goblin"] = "goblinarms",
	["The torso of a goblin"] = "goblintorso",
	["The legs of a goblin"] = "goblinlegs",
 
	["The top of a subjectioner's spigot"] = "spigottop",
	["The bottom of a subjectioner's spigot"] = "spigotbottom",
	["The stem of a subjectioner's spigot"] = "spigotstem",
	["The tip of a subjectioner's spigot"] = "spigottip",
 
	["The band for sunless hope"] = "sunlessband",
	["The stone for sunless hope"] = "sunlessstone",
	["The binding for sunless hope"] = "sunlessbinding",
	["The enchantment for sunless hope"] = "sunlessenchantment",
 
	["The fur for Vakha's bribe"] = "circletfur",
	["The blades for Vakha's bribe"] = "circletblades",
	["The band for Vakha's bribe"] = "circletband",
	["The binding for Vakha's bribe"] = "circletbinding",
 
	["The stone for pedigree's jewel"] = "sanguinestone",
	["The aura for pedigree's jewel"] = "sanguineaura",
	["The teardrop for pedigree's jewel"] = "sanguineteardrop",
	["The blood for pedigree's jewel"] = "taintedblood",
 
	["The lid for a canopic jar"] = "canopiclid",
	["The fluid for a canopic jar"] = "canopicfluid",
	["The base for a canopic jar"] = "canopicbase",
	["The pot for a canopic jar"] = "canopicpot",
 
	["A shard for an apperception stone"] = "crystalshard",
	["The base of an apperception stone"] = "crystalbase",
	["The binding for an apperception stone"] = "crystalbinding",
	["The portal for an apperception stone"] = "crystalportal",
 
	["The leather for revelation's guise"] = "guiseleather",
	["The thread for revelation's guise"] = "guisethread",
	["The smile for revelation's guise"] = "guisesmile",
	["The enchantment for revelation's guise"] = "guiseenchantment",
 
	["The scroll for an experimenter's grimoire"] = "grimoirescroll",
	["The gut for an experimenter's grimoire"] = "grimoiregut",
	["The cover for an experimenter's grimoire"] = "grimoirecover",
	["The binding for an experimenter's grimoire"] = "grimoirebinding",
 
	["The enchantment for suremekh'neina"] = "mantleenchant",
	["The clasp for suremekh'neina"] = "mantleclasp",
	["The fabric for suremekh'neina"] = "mantlefabric",
	["The lining for suremekh'neina"] = "mantlelining",
 
-- RACES SET
 
	["The pipes for a set of crystalline panpipes"] = "panpipepipes",
	["the feathers for a set of crystalline panpipes"] = "panpipefeathers",
	["The hair for a set of crystalline panpipes"] = "panpipehair",
	["The flutes for a set of crystalline panpipes"] = "panpipeflutes",
 
	["The bones for a shamanistic rattle"] = "rattlebones",
	["The staff for a shamanistic rattle"] = "rattlestaff",
	["The antlers for a shamanistic rattle"] = "rattleantlers",
	["The runes for a shamanistic rattle"] = "rattlerunes",
 
	["The frame for a collapsable catapult"] = "catapultframe",
	["The bolts for a collapsable catapult"] = "catapultbolts",
	["The wheel for a collapsable catapult"] = "catapultwheel",
	["The arm for a collapsable catapult"] = "catapultarm",
 
	["Some blood spattered cloth"] = "clothblood",
	["A piece of whispersilk"] = "whispersilk",
	["The enchantment for a whispercloth"] = "clothenchantment",
	["The binding for a whispercloth"] = "clothbinding",
 
	["The glass for a demolition sphere"] = "sphereglass",
	["The fire for a demolition sphere"] = "spherefire",
	["The runes for a demolition sphere"] = "sphererunes",
	["The spark for a demolition sphere"] = "spherespark",
 
	["The carving for a piece of horkval chitin"] = "chitincarving",
	["A fragment of horkval chitin"] = "chitinfragment",
	["The colouring for a piece of horkval chitin"] = "chitincolour",
	["The name for a piece of horkval chitin"] = "chitinname",
 
	["The head for a flattened frogskin"] = "froghead",
	["The cord for a flattened frogskin"] = "frogcord",
	["The body for a flattened frog skin"] = "frogbody",
	["The feet for a flattened frog skin"] = "frogfeet",
 
	["The barbs for a pair of Dala'myrr claws"] = "clawbarbs",
	["The points for a set of Dala'myrr claws"] = "clawpoints",
	["The straps for a set of Dala'myrr claws"] = "clawstraps",
	["The base for a pair of Dala'myrr claws"] = "clawbase",
 
	["The glass for a bottled siren's song"] = "sirenglass",
	["The voice for a bottled siren's song"] = "sirenvoice",
	["The cork for a bottled siren's song"] = "sirencork",
	["The smoke for a bottled siren's song"] = "sirensmoke",
 
	["The lens for an arachnid eye"] = "arachnidlens",
	["The eyeball for an arachnid eye"] = "arachnideyeball",
	["The enchantment for an arachnid's eye"] = "arachnidenchantment",
	["The colouration for an arachnid's eye"] = "arachnidcolour",
 
	["The top of a dwarven lodestone"] = "lodestonetop",
	["The left fragment of a dwarven lodestone"] = "lodestoneleft",
	["The base of a dwarven lodestone"] = "lodestonebase",
	["The right fragment of a dwarven lodestone"] = "lodestoneright",
 
	["The head of a figurine of the suffering Maya"] = "figurinehead",
	["The arms of a figurine of the suffering Maya"] = "figurinearms",
	["The torso of a figurine of the suffering Maya"] = "figurinetorso",
	["The legs of a figurine of the suffering Maya"] = "figurinelegs",
 
-- FORAYS
 
	["the spine of a feather from Aran'Kesh"] = "arankeshfeatherspine",
	["the down from a feather of Aran'Kesh"] = "arankeshfeatherdown",
	["the colouration for a feather from Aran'Kesh"] = "arankeshfeathercolour",
	["the lethally sharp edge of a feather from Aran'Kesh"] = "arankeshfeatheredge",
 
	["a golden mirror frame"] = "goldmirrorframe",
	["silvery mirror class"] = "mirrorglass",
	["a cursed piece of glass"] = "mirrorcurse",
	["the inscription for a cursed mirror"] = "mirrorinscription",
 
	["the bowl for some ogre's broth"] = "brothbowl",
	["some basic ogre's broth"] = "brothbroth",
	["some seasoning for ogre's broth"] = "brothseasoning",
	["some special ogre spices"] = "brothspice",
 
	["the chipping for a large boulder"] = "boulderchipping",
	["the shell for a large boulder"] = "bouldershell",
	["the core of a large boulder"] = "bouldercore",
	["the stone for a large boulder"] = "boulderstone",
 
	["clumps of weeds"] = "margamwheelweeds",
	["the bolts for a ship's wheel"] = "margamwheelbolts",
	["the wood for a ship's wheel"] = "margamwheelwood",
	["a cursed ship's wheel centre"] = "margamwheelcentre",
 
	["the top of a map fragment"] = "mapfragmenttop",
	["the bottom of a map fragment"] = "mapfragmentbottom",
	["the left piece of a map fragment"] = "mapfragmentleft",
	["the right piece of a map fragment"] = "mapfragmentright",
 
-- Cities set
 
	["The chain for a set of wraith shackles"] = "wraithshacklechain",
	["The smoke for a set of wraith shackles"] = "wraithshacklesmoke",
	["The manacles for a set of wraith shackles"] = "wraithshacklemanacle",
	["The lock for a set of wraith shackles"] = "wraithshacklelock",
 
	["The globe for a celescope"] = "celescopeglobe",
	["The cylinders for a celescope"] = "celescopecylinders",
	["The eyepiece for a celescope"] = "celescopeeyepiece",
	["The ingraving for a celescope"] = "celescopeingraving",
 
	["The base for a disgusting biscuit"] = "biscuitbase",
	["The special ingredient for a disgusting biscuit"] = "biscuitspecial",
	["The sugar for a disgusting biscuit"] = "biscuitsugar",
	["The salt for a disgusting biscuit"] = "biscuitsalt",
 
	["The song for a music box"] = "musicboxsong",
	["The mechanism for a music box"] = "musicboxmechanism",
	["The frame for a broken music box"] = "musicboxframe",
	["The crank for a broken music box"] = "musicboxcrank",
 
	["The lid for an alabaster urn"] = "alabasterurnlid",
	["The pot for an alabaster urn"] = "alabasterurnpot",
	["The inscription for an alabaster urn"] = "alabasterurninscript",
	["The ash for an alabaster urn"] = "alabasterurnash",
 
	["The roots for a tumbleweed"] = "tumbleweedroots",
	["The tendrils for a tumbleweed"] = "tumbleweedtendrils",
	["The vines for a tumbleweed"] = "tumbleweedvines",
	["The roots for a tumbleweed"] = "tumbleweedstem",
 
-- Monks
 
	["The head of a monk dummy"] = "monkdummyhead",
	["The arms of a monk dummy"] = "monkdummyarms",
	["The torso of a monk dummy"] = "monkdummytorso",
	["The legs of a monk dummy"] = "monkdummylegs",
 
	["The fleshy part of a tongue"] = "tongueflesh",
	["The metal casing for a tongue"] = "tonguecasing",
	["The polish for the metal casing for a tongue"] = "tonguepolish",
	["The curse for an odyssean tongue"] = "tonguecurse",
 
	["The threads for a black headband"] = "monkheadbandthreads",
	["The amethyst for a black headband"] = "monkheadbandamethyst",
	["The enchantment for a black headband"] = "monkheadbandenchantment",
	["The support for a black headband"] = "monkheadbandsupport",
 
	["A crimson steel band"] = "crimsonsteelband",
	["A rough-cut quartz setting"] = "quartzsetting",
	["The claws for a taloned ring"] = "ringsteelclaws",
	["The binding for a taloned ring"] = "talonedringbinding",
 
	["The cloth for a pennon of cranes"] = "pennoncloth",
	["The cranes for a pennon"] = "pennoncranes",
	["The staff for a pennon of cranes"] = "pennonstaff",
	["The thread for a pennon of cranes"] = "pennonthread",
 
	["The flag for a rallying banner"] = "monkbannerflag",
	["The embroidery for a rallying banner"] = "monkbannerembroidery",
	["The spear for a rallying banner"] = "monkbannerspear",
	["The thread for a rallying banner"] = "monkbannerthread",
 
	["The stave for an ash wood staff"] = "ashstaffstave",
	["The strapping for an ash wood staff"] = "ashstaffstrapping",
	["The cap for an ash wood staff"] = "ashstaffcap",
	["The shoe for an ash wood staff"] = "ashstaffshoe",
 
	["The wood for an olive branch"] = "olivewood",
	["The shoots for an olive branch"] = "olivebranchshoots",
	["The leaves for an olive branch"] = "oliveleaves",
	["The enchantment for an olive branch"] = "olivebranchenchantment",
 
-- Elemental
 
	["The cyclone for an Air Elemental"] = "airelementalcyclone",
	["The essence for an Air Elemental"] = "airelementalessence",
	["The binding for an Air Elemental"] = "airelementalbinding",
	["The lightning for an Air Elemental"] = "airelementallightning",
 
	["The clasp for a brooch of the tempest"] = "airbroochclasp",
	["The gem for a brooch of the tempest"] = "airbroochgem",
	["The setting for a brooch of the tempest"] = "airbroochsetting",
	["The enchantment for a brooch of the tempest"] = "airbroochenchantment",
 
	["The chain for a fire pendant"] = "firependantchain",
	["The flame for a fire pendant"] = "firependantflame",
	["The setting for a fire pendant"] = "firependantsetting",
	["The jewel for a fire pendant"] = "firependantjewel",
 
	["The teeth for a warblefish's jawbone"] = "jawboneteeth",
	["The mandibles for a warblefish's jawbone"] = "jawbonemandibles",
	["The bone for a warblefish's jawbone"] = "jawbonebone",
	["The hinge for a warblefish's jawbone"] = "jawbonehinge",
 
	["The wood for a mineral-crusted shovel"] = "earthshovelwood",
	["The blade for a mineral-crusted shovel"] = "earthshovelblade",
	["The binding for a mineral-crusted shovel"] = "earthshovelbinding",
	["The minerals for a mineral-crusted shovel"] = "earthshovelminerals",
 
	["The phial for some tears of the sea"] = "seatearsphial",
	["The stopper for a phial of some tears of the sea"] = "seatearsstopper",
	["The paint for a phial for some tears of the sea"] = "seatearspaint",
	["Some tears of the sea"] = "seatearstears",
 
	["The links for a shackle of Garash"] = "garashshacklelinks",
	["The orbs for a shackle of Garash"] = "garashshackleorbs",
	["The enchantment for a shackle of Garash"] = "garashshackleenchantment",
	["The chains for a shackle of Garash"] = "garashshacklechains",
 
	["Some sticky mud"] = "mudbombmud",
	["The binding for a sticky mud bomb"] = "mudbombbinding",
 
	["The plaque for a seared glyph"] = "searedglyphplaque",
	["The emblem for a seared glyph"] = "searedglyphemblem",
	["The tendrils for a seared glyph"] = "searedglyphtendrils",
	["The flame for a seared glyph"] = "searedglyphflame",
 
	["The frame for an armoured charge tank"] = "firetankframe",
	["The flame for an armoured charge tank"] = "firetankflame",
	["The insignia for an armoured charge tank"] = "firetankinsignia",
	["The links for an armoured charge tank"] = "firetanklinks",
 
	["The script for a sceptre of aqueous mastery"] = "sceptrescript",
	["The enchantment for a sceptre of aqueous mastery"] = "sceptreenchantment",
	["The heart of a sceptre of aqueous mastery"] = "sceptreheart",
	["The tusk for a sceptre of aqueous mastery"] = "sceptretusk",
 
	["The straps for a stratospheric harness"] = "airharnessstraps",
	["The glyphs for a stratospheric harness"] = "airharnessglyphs",
	["The enchantment for a stratospheric harness"] = "airharnessenchantment",
	["The buckles for a stratospheric harness"] = "airharnessbuckles",
 
-- Yggdrasil
 
	["The plates for a dreadpilar figurine"] = "dreadpilarplates",
	["The body for a dreadpilar figurine"] = "dreadpilarbody",
	["The legs for a dreadpilar figurine"] = "dreadpilarlegs",
	["The head for a dreadpilar figurine"] = "dreadpilarhead",
 
	["a Squargon's head"] = "squargonhead",
	["The legs of a Squargon"] = "squargonlegs",
	["The body of a Squargon"] = "squargonbody",
	["The fangs for a Squargon"] = "squargonfangs",
 
	["The wax for a tablet"] = "tabletwax",
	["The wood for a tablet"] = "tabletwood",
	["The stylus for a tablet"] = "tabletstylus",
	["The twine	for a tablet"] = "tablettwine",
 
	["a valdblom stem"] = "valdblomstem",
	["Some valdblom leaves"] = "valdblomleaves",
	["Some valdblom essence"] = "valdblomessence",
	["a valdblom root"] = "valdblomroot",
 
	["The clay for a tash'la shaping tome"] = "shapingtomeclay",
	["The granite for a tash'la shaping tome"] = "shapingtomgranite",
	["The plates for a tash'la shaping tome"] = "shapingtomeplates",
	["The insignia for a tash'la shaping tome"] = "shapingtominsignia",
 
	["The script for a nexus cube"] = "nexuscube",
	["The gold for a nexus cube"] = "nexuscubegold",
	["The glass for a nexus cube"] = "nexuscubeglass",
	["The mote for a nexus cube"] = "nexuscubemote",
 
	["The stone for a fire crystal"] = "firecrystalstone",
	["The flame for a fire crystal"] = "firecrystalflame",
	["The enchantment for a fire crystal"] = "firecrystalenchantment",
	["The spark for a fire crystal"] = "firecrystalspark",
 
	["The flame for a planar mote"] = "moteflame",
	["The aura for a planar mote"] = "moteaura",
	["The binding for a planar mote"] = "motebinding",
	["The enchantment for a planar mote"] = "moteenchantment",
 
	["The scales from some snakeskin"] = "goldenscales",
	["a length of snakeskin"] = "goldensnakeskin",
	["The colouring from some snakeskin"] = "goldencolouring",
	["The enchantment from some snakeskin"] = "goldenenchantment",
 
	["Some wood for a branch Yggdrasil"] = "yggdrasilbranchwood",
	["A mosiac for a branch of Yggdrasil"] = "yggdrasilbranchmosaic",
	["Some enchancted fishing line"] = "yggdrasilbranchline",
	["An iron hook"] = "yggdrasilbranchhook",
 
	["The shell for a crier's bell"] = "criersshell",
	["The handle for a crier's bell"] = "criershandle",
	["The chime for a crier's bell"] = "crierschime",
	["The curse for a crier's bell"] = "crierscurse",
 
-- CONTENDERS
 
	["The clay for a piglet bank"] = "pigclay",
	["The ears of a piglet bank"] = "pigears",
	["The belly of a piglet bank"] = "pigbelly",
	["The tail of a piglet bank"] = "pigtail",
 
	["The lip for a jug of chum"] = "juglip",
	["The base for a jug of chum"] = "jugbase",
	["The bowl for a jug of chum"] = "jugbowl",
	["The handle for a jug of chum"] = "jughandle",
 
	["The string for a bouquet"] = "bouquetstring",
	["The knot for a bouquet"] = "bouquetknot",
	["The bloom for a bouquet"] = "bouquetbloom",
	["The stem for a bouquet"] = "bouquetstem",
 
	["The head for a featureless figurine"] = "contenderfigurinehead",
	["The arms for a featureless figurine"] = "contenderfigurinearms",
	["The legs for a featureless figurine"] = "contenderfigurinelegs",
	["The body for a featureless figurine"] = "contenderfigurinebody",
 
	["The handle for a magnifying glass"] = "glasshandle",
	["The pane for a magnifying glass"] = "glasspane",
	["The focus for a magnifying glass"] = "glassfocus",
	["The frame for a magnifying glass"] = "glassframe",
 
	["The binding for an adventurer's journal"] = "journalbinding",
	["The page for an adventurer's journal"] = "journalpage",
	["The cover for an adventurer's journal"] = "journalcover",
	["The index for an adventurer's journal"] = "journalindex",
 
	["The gleam for a prismatic stud"] = "studgleam",
	["The post for a prismatic stud"] = "studpost",
	["The gem for a prismatic stud"] = "studgem",
	["The back for a prismatic stud"] = "studback",
 
	["The gilding for a crimson ribbon bar"] = "ribbongilding",
	["The pin for a crimson ribbon bar"] = "ribbonpin",
	["The stripe for a crimson ribbon bar"] = "ribbonstripe",
	["The fold for a crimson ribbon bar"] = "ribbonfold",
 
-- UNDERWORLD
 
	["The head of a crypt worm"] = "cryptwormhead", 
	["The body of a crypt worm"] = "cryptwormbody", 
	["The fangs of a crypt worm"] = "cryptwormfangs", 
	["The binding for a crypt worm"] = "cryptwormbinding",
 
	["The chain for a splinter of shattered psyche"] = "psychesplinterchain", 
	["The frame for a splinter of shattered psyche"] = "psychesplinterframe", 
	["The length for a splinter of shattered psyche"] = "psychesplinterlength", 
	["The curse for a splinter of shattered psyche"] = "psychesplintercurse",
 
	["The thread for a skein of sanity"] = "sanityskeinthread", 
	["The coil for a skein of sanity"] = "sanityskeincoil", 
	["The curse for a skein of sanity"] = "sanityskeincurse", 
	["The binding for a skein of sanity"] = "sanityskeinbinding",
 
	["The left half of a custody talisman"] = "custodyleft", 
	["The right half of a custody talisman"] = "custodyright", 
	["The centre of a custody talisman"] = "custodycentre", 
	["The binding for a custody talisman"] = "custodybinding",
 
	["The base for a totem of unlife"] = "unlifetotembase", 
	["The wood for a totem of unlife"] = "unlifetotemwood", 
	["The skull for a totem of unlife"] = "unlifetotemskull", 
	["The tendrils for a totem of unlife"] = "unlifetotemtendrils",
 
	["The obsidian for a soul sliver"] = "soulsliverobsidian", 
	["The fog for a soul sliver"] = "soulsliverfog", 
	["The souls for a soul sliver"] = "soulsliversouls", 
	["The curse for a soul sliver"] = "soulslivercurse",
 
	["The hilt for a culling blade"] = "cullingbladehilt", 
	["The edge of a culling blade"] = "cullingbladeedge", 
	["The metal for a culling blade"] = "cullingblademetal", 
	["The curse for a culling blade"] = "cullingbladecurse",
 
	["The cloth for a funeral shroud"] = "funeralshroudcloth", 
	["The thread for a funeral shroud"] = "funeralshroudthread", 
	["The benediction for a funeral shroud"] = "funeralshroudbenediction", 
	["The clasp for a funeral shroud"] = "funeralshroudclasp",
 
-- Renegades
 
	["The stick for mercenary's chalk"] = "mercenarychalkstick",
	["The chalkdust for mercenary's chalk"] = "mercenarychalkdust",
	["The binding for mercenary's chalk"] = "mercenarychalkbinding",
	["The chalk for mercenary's chalk"] = "mercenarychalkchalk",
 
	["The signature for an elemental injunction"] = "injunctionsignature",
	["The script for an elemental injunction"] = "injunctionscript",
	["The paper for an elemental injunction"] = "injunctionpaper",
	["The seal for an elemental injunction"] = "injunctionseal",
 
	["The cloth for a moppet"] = "moppetcloth",
	["The eyes for a moppet"] = "moppeteyes",
	["The thread for a moppet"] = "moppetthread",
	["The buttons for a moppet"] = "moppetbuttons",
 
	["The buttons for a turncoat's coat"] = "turncoatscoat",
	["The thread for a turncoat's coat"] = "turncoatscoatthread",
	["The cloth for a turncoat's coat"] = "turncoatscoatcloth",
	["The binding for a turncoat's coat"] = "turncoatscoatbinding",
 
	["The cloth for a shadowcloak"] = "shadowcloakcloth",
	["The clasp for a shadowcloak"] = "shadowcloakclasp",
	["The thread for a shadowcloak"] = "shadowcloakthread",
	["The curse for a shadowcloak"] = "shadowcloakcurse",
 
	["The cloth for a betrayer's mantle"] = "betrayersmantlecloth",
	["The thread for a betrayer's mantle"] = "betrayersmantlethread",
	["The straps for a betrayer's mantle"] = "betrayersmantlestraps",
	["The curse for a betrayer's mantle"] = "betrayersmantlecurse",
 
	["The stone for a turncoat's masque"] = "turncoatsmasquestone",
	["The etchings for a turncoat's masque"] = "turncoatsmasqueetchings",
	["The curse for a turncoat's masque"] = "turncoatsmasquecurse",
	["The eyes for a turncoat's masque"] = "turncoatsmasqueeyes",
 
	["The cloth for a sundered pennon"] = "sunderedpennoncloth",
	["The thread for a sundered pennon"] = "sunderedpennonthread",
	["The staff for a sundered pennon"] = "sunderedpennonstaff",
	["The binding for a sundered pennon"] = "sunderedpennonbinding",
 
--Invasion
 
	["The head of a figurine of the Dark Earth"] = "darkearthhead",
	["The torso of a figurine of the Dark Earth"] = "darkearthtorso",
	["The arms of a figurine of the Dark Earth"] = "darkeartharms",
	["The legs for a figurine of the Dark Earth"] = "darkearthlegs",
 
	["The wheels for a battering ram"] = "batteringramwheels",
	["The ram for a battering ram"] = "batteringramram",
	["The grips for a battering ram"] = "batteringramgrips",
	["Some bolts for a battering ram"] = "batteringrambolts",
 
	["The spikes for a steel caltrop"] = "caltropspikes",
	["The ball for a steel caltrop"] = "caltropball",
	["The binding for a steel caltrop"] = "caltropbinding",
	["The barbs for a steel caltrop"] = "caltropbarbs",
 
	["The pot for an iron cauldron"] = "cauldronpot",
	["The oil for an iron cauldron"] = "cauldronoil",
	["The handle for an iron cauldron"] = "cauldronhandle",
	["The base for an iron cauldron"] = "cauldronbase",
 
	["The link for an adamantine shackle"] = "shadowshacklelink",
	["The metal for an adamantine shackle"] = "shadowshacklemetal",
	["The enchantment for an adamantine shackle"] = "shadowshackleenchantment",
	["The shadow for an adamantine shackle"] = "shadowshackleshadow",
 
	["The lid for a hag's eye"] = "hagseyelid",
	["The ball for a hag's eye"] = "hagseyeball",
	["The fluid for a hag's eye"] = "hagseyefluid",
	["The enchantment for a hag's eye"] = "hagseyeenchantment",
 
	["Some magic ice"] = "icebrickmagic",
	["The repeating spell for a block of ice"] = "icebrickspell",
	["The binding for a block of ice"] = "icebrickbinding",
	["The enchantment spell for a block of ice"] = "icebrickenchantment",
 
	["The enchantment for a map"] = "scoutingmapenchantment",
	["The icons	for a map"] = "scoutingmapicons",
	["The ink for a map"] = "scoutingmapink",
	["The vellum for a map"] = "scoutingmapvellum",
 
-- WAR
 
	["the bones for some rotting remains"] = "remainsbones",
	["the flesh for some rotting remains"] = "remainsflesh",
	["the muscles for some rotting remains"] = "remainsmuscles",
	["the blood for some rotting remains"] = "remainsblood",
 
	["the gilding for a gilded bit"] = "bitgilding",
	["the bar for a gilded bit"] = "bitbar",
	["the chain for a gilded bit"] = "bitchain",
	["the patterns for a gilded bit"] = "bitpatterns",
 
	["the head of a portly pigeon"] = "pigeonhead",
	["the body of a portly pigeon"] = "pigeonbody",
	["the legs of a portly pigeon"] = "pigeonlegs",
	["the wings of a portly pigeon"] = "pigeonwings",
 
	["the fog for a cloud of war"] = "warcloudfog",
	["the stench for a cloud of war"] = "warcloudstench",
	["the curse for a cloud of war"] = "warcloudcurse",
	["the binding for a cloud of war"] = "warcloudbinding",
 
	["the steel for a portal hoop"] = "portalhoopsteel",
	["the light for a portal hoop"] = "portalhooplight",
	["the enchantment for a portal hoop"] = "portalhoopenchantment",
	["the binding for a portal hoop"] = "portalhoopbinding",
 
	["the metal for an observant sigil"] = "observantsigilmetal",
	["the star for an observant sigil"] = "observantsigilstar",
	["the eye for an observant sigil"] = "observantsigileye",
	["the latice for an observant sigil"] = "observantsigillatice",
 
}
 
-- require this info for formatting and complete set management (note, can be extended)
-- frustratingly, being an unsorted table, this also required the additional order in the set data or I couldnt handle the formatting..
talisman.info = {
	blackdragon = {
			blackdragonbone = {required=64, short="bone"}, 
			blackdragonclaw = {required=64, short="claw"}, 
			blackdragoneye = {required=64, short="eye"}, 
			blackdragonheart = {required=64, short="heart"}, 
			blackdragonleather = {required=64, short="leather"}, 
			blackdragonscale = {required=64, short="scale"}, 
			blackdragontooth = {required=64, short="tooth"}, 
			blackdragonsac = {required=4, short="sac"}
		},
	greendragon = {
			greendragonbone = {required=64, short="bone"}, 
			greendragonclaw = {required=64, short="claw"}, 
			greendragoneye = {required=64, short="eye"}, 
			greendragonheart = {required=64, short="heart"}, 
			greendragonleather = {required=64, short="leather"}, 
			greendragonscale = {required=64, short="scale"}, 
			greendragontooth = {required=64, short="tooth"}, 
			greendragonsac = {required=4, short="sac"}
		},
	reddragon = {
			reddragonbone = {required=64, short="bone"}, 
			reddragonclaw = {required=64, short="claw"}, 
			reddragoneye = {required=64, short="eye"}, 
			reddragonheart = {required=64, short="heart"}, 
			reddragonleather = {required=64, short="leather"}, 
			reddragonscale = {required=64, short="scale"}, 
			reddragontooth = {required=64, short="tooth"}, 
			reddragonbelly = {required=4, short="belly"}
		},
	bluedragon = {
			bluedragonbone = {required=64, short="bone"}, 
			bluedragonclaw = {required=64, short="claw"}, 
			bluedragoneye = {required=64, short="eye"}, 
			bluedragonheart = {required=64, short="heart"}, 
			bluedragonleather = {required=64, short="leather"}, 
			bluedragonscale = {required=64, short="scale"}, 
			bluedragontooth = {required=64, short="tooth"}, 
			bluedragonlung = {required=4, short="lung"}
		},
	silverdragon = {
			silverdragonbone = {required=64, short="bone"}, 
			silverdragonclaw = {required=64, short="claw"}, 
			silverdragoneye = {required=64, short="eye"}, 
			silverdragonheart = {required=64, short="heart"}, 
			silverdragonleather = {required=64, short="leather"}, 
			silverdragonscale = {required=64, short="scale"}, 
			silverdragontooth = {required=64, short="tooth"}, 
			silverdragonlarynx = {required=4, short="larynx"}
		},
	golddragon = {
			golddragonbone = {required=64, short="bone"}, 
			golddragonclaw = {required=64, short="claw"}, 
			golddragoneye = {required=64, short="eye"}, 
			golddragonheart = {required=64, short="heart"}, 
			golddragonleather = {required=64, short="leather"}, 
			golddragonscale = {required=64, short="scale"}, 
			golddragontooth = {required=64, short="tooth"}, 
			golddragonstem = {required=4, short="stem"}
		},
-- AZATLAN
	eagleheaddress = {
			bluefeather = {required=64, short="blue"}, 
			greenfeather = {required=64, short="green"}, 
			redfeather = {required=64, short="red"}, 
			yellowfeather = {required=64, short="yellow"}, 
			orangefeather = {required=16, short="orange"}, 
			purplefeather = {required=16, short="purple"}, 
			blackfeather = {required=4, short="black"}, 
		},
	atlatl = {
			atlatlshaft = {required=1, short="shaft"}, 
			atlatlcup = {required=1, short="cup"}, 
			atlatlspear = {required=1, short="spear"}, 
	},
	transoceanic = {
			orbleft = {required=4, short="left"}, 
			orbright = {required=4, short="right"}, 
			orbcenter = {required=2, short="center"}, 
	},
	azatlanknife = {
			knifebladetop = {required=1, short="tip"}, 
			knifebladebottom = {required=1, short="tang"}, 
			knifeleather = {required=1, short="leather"}, 
	},
	quetzal = {
			quetzalredfeather = {required=64, short="red"}, 
			quetzalbluefeather = {required=64, short="blue"}, 
			quetzalgreenfeather = {required=64, short="green"}, 
			quetzalcage = {required=64, short="cage"}, 
			quetzaltalon = {required=16, short="talon"}, 
			quetzalegg = {required=4, short="egg"}, 
	},
	kinkajou= {
			kinkajoutooth = {required=64, short="tooth"}, 
			kinkajoucollar = {required=64, short="collar"}, 
			kinkajoubait = {required=64, short="bait"}, 
			kinkajouclaw = {required=32, short="claw"}, 
			kinkajoupaw = {required=16, short="paw"}, 
			kinkajoutail = {required=4, short="tail"}, 
	},
	coati= {
			coatitooth = {required=16, short="tooth"}, 
			coaticollar = {required=64, short="collar"}, 
			coatibait = {required=64, short="bait"}, 
			coaticlaw = {required=64, short="claw"}, 
			coatipaw = {required=32, short="paw"}, 
			coatitail = {required=4, short="tail"}, 
	},
--Wonders
	baitbucket = {
			buckethandle = {required=1, short="handle"}, 
			bucketleft = {required=1, short="left"},
			bucketright = {required=1, short="right"},
			bucketbase = {required=1, short="base"},
			bucketwater = {required=1, short="water"}
	},
	dragonskinpack = {
			packscales = {required=1, short="scales"},
			packstraps = {required=1, short="straps"},
			packlining = {required=1, short="lining"},
			packthread = {required=1, short="thread"},
			packleather = {required=1, short="leather"},
	},
	platinumwhistle = {
			whistlemouth = {required=1, short="mouth"},
			whistleflue = {required=1, short="flue"},
			whistlereed = {required=1, short="reed"},
			whistletoppipe = {required=1, short="top"},
			whistlelowpipe = {required=1, short="bottom"},
	},
	ramshorn = {
			ramshorn = {required=1, short="horn"},
			hornmouth = {required=1, short="mouth"},
			hornleftstrap = {required=1, short="left"},
			hornrightstrap = {required=1, short="right"},
			hornfastener = {required=1, short="fastener"},
	},
	monocle = {
			monotop = {required=1, short="top"},
			monobottom = {required=1, short="bottom"},
			monoframe = {required=1, short="frame"},
			monocatch = {required=1, short="catch"},
			monoclasp = {required=1, short="clasp"},
	},
  globe = {
    globetop = {required=1, short="top"},
    globemiddle = {required=1, short="middle"},
    globebottom = {required=1, short="bottom"},
  },
--Misc
	hookah = {
			hookahbase = {required=1, short="base"},
			hookahbowl = {required=1, short="bowl"},
			hookahhood = {required=1, short="hood"},
			hookahchain = {required=1, short="chain"},
			hookahhoses = {required=1, short="hose"},
			hookahstem = {required=1, short="stem"},
			hookahplate = {required=1, short="plate"},
	},
	tapestry = {
			tapestryclaw = {required=1, short="claw"},
			tapestryonyx = {required=1, short="onyx"},
			tapestryroller = {required=1, short="roller"},
			tapestryvellum = {required=1, short="vellum"},
	},
	vaultkey = {
			keyfragment = {required=1, short="keyfragment"},
	},
	negationsphere = {
			spherefragment = {required=1, short="spherefragment"},
	},
	clayfigurine = {
			clayfigurinearms = {required=1, short="arms"},
			clayfigurinelegs = {required=1, short="legs"},
			clayfigurinehead = {required=1, short="head"},
			clayfigurinebody = {required=1, short="body"},
	},
--Historical
	window = {
			windowframe = {required=1, short="frame"},
			windowpane = {required=1, short="pane"},
			windowjamb = {required=1, short="jamb"},
			windowshutters = {required=1, short="shutters"},
			windowgrid = {required=1, short="grid"},
	},
	mantle = {
			mantlecloth = {required=1, short="cloth"},
			mantlethread = {required=1, short="thread"},
			mantlecentre = {required=1, short="centre"},
			mantlegems = {required=1, short="gems"},
	},
	icicle = {
			icicletop = {required=1, short="top"},
			iciclemiddle = {required=1, short="middle"},
			iciclebase = {required=1, short="base"},
			icicletip = {required=1, short="tip"},
			iciclerunes = {required=1, short="runes"},
	},
	helmet = {
			helmetskull = {required=1, short="skull"},
			helmetnose = {required=1, short="nose"},
			helmetstrap = {required=1, short="strap"},
	},
	disc = {
			disctop = {required=1, short="top"},
			discside = {required=1, short="side"},
			discmiddle = {required=1, short="middle"},
			discbottom = {required=1, short="bottom"},
			discrunes = {required=1, short="runes"},
			disccentre = {required=1, short="centre"},
	},
	votive = {
			votivebase = {required=1, short="base"},
			votivewick = {required=1, short="wick"},
			votivewax = {required=1, short="wax"},
	},
	whisperstone = {
			stonetop = {required=1, short="top"},
			stonebottom = {required=1, short="bottom"},
			stonemiddle = {required=1, short="middle"},
			stoneside = {required=1, short="side"},
			stonecore = {required=1, short="core"},
			stoneemitter= {required=1, short="emitter"},
	},
	lily = {
			lilypetals = {required=1, short="petals"},
			lilystem = {required=1, short="stem"},
			lilystamen = {required=1, short="stamen"},
			lilybulb = {required=1, short="bulb"},
			lilypistil = {required=1, short="pistil"},
	},
	ozhera = {
			ozherabait = {required=1, short="bait"},
			ozheracollar = {required=1, short="collar"},
			ozheraegg = {required=1, short="egg"},
			ozheraclaw = {required=1, short="claw"},
			ozherabeak = {required=1, short="beak"},
			ozheranest = {required=1, short="nest"},
	},
	turtle = {
			turtleshell = {required=1, short="shell"},
			turtlebait = {required=1, short="bait"},
			turtlecollar = {required=1, short="collar"},
			turtletail = {required=1, short="tail"},
			turtlefoot= {required=1, short="foot"},
			turtletongue= {required=1, short="tongue"},
	},
	mongoose = {
			mongoosebait = {required=1, short="bait"},
			mongoosecollar = {required=1, short="collar"},
			mongoosetail = {required=1, short="tail"},
			mongoosepaw = {required=1, short="paw"},
			mongooseclaw = {required=1, short="claw"},
			mongoosefang = {required=1, short="fang"},
	},
	hellcat = {
			hellcatbait = {required=1, short="bait"},
			hellcatcollar = {required=1, short="collar"},
			hellcatclaw = {required=1, short="claw"},
			hellcatfang = {required=1, short="fang"},
			hellcattail = {required=1, short="tail"},
			hellcatpaw = {required=1, short="paw"},
	},
--Conclave
	tophat = {
			tophatlining = {required=1, short="lining"},
			tophatbrim= {required=1, short="brim"},
			tophatthread = {required=1, short="thread"},
			tophatband = {required=1, short="band"},
	},
	hourglass = {
			hourglasstop = {required=1, short="top"},
			hourglassbottom= {required=1, short="bottom"},
			hourglasssand = {required=1, short="sand"},
			hourglassbulb= {required=1, short="bulb"},
	},
	tempestbrooch = {
			broochgem= {required=1, short="gem"},
			broochclasp= {required=1, short="clasp"},
			broochmetal= {required=1, short="metal"},
			broochhook = {required=1, short="hook"},
	},
	elementsprite = {
			spritelegs= {required=1, short="legs"},
			spritearms= {required=1, short="arms"},
			spritetorso= {required=1, short="torso"},
			spritehead= {required=1, short="head"},
	},
	lesservault = {
			vaultdoor= {required=1, short="door"},
			vaulthinge= {required=1, short="hinge"},
			vaulthandle= {required=1, short="handle"},
			vaultgems= {required=1, short="gems"},
	},
	flyingring = {
			ringtop = {required=1, short="top"},
			ringbottom = {required=1, short="bottom"},
			ringinside = {required=1, short="inside"},
			ringoutside = {required=1, short="outside"},
	},
	celerity = {
			armbandtop = {required=1, short="top"},
			armbandbottom = {required=1, short="bottom"},
			armbandinside = {required=1, short="inside"},
			armbandoutside = {required=1, short="outside"},
	},
	buckawns = {
			amuletthread = {required=1, short="thread"},
			amuletchain = {required=1, short="chain"},
			amuletball = {required=1, short="ball"},
			amuletclasp = {required=1, short="clasp"},
	},
	adaptgrimoire = {
			grimoireleather = {required=1, short="leather"},
			grimoirepaper = {required=1, short="paper"},
			grimoiregems = {required=1, short="gems"},
			grimoirelock = {required=1, short="lock"},
	},
	stygianpendant = {
			pendantbase = {required=1, short="base"},
			pendantclasp = {required=1, short="clasp"},
			pendantpearl = {required=1, short="pearl"},
			pendanthook = {required=1, short="hook"},
	},
	grandmagi = {
			robesthread = {required=1, short="thread"},
			robesneedle = {required=1, short="needle"},
			robestrim = {required=1, short="trim"},
			robesfabric = {required=1, short="fabric"},
	},
	atavianwings = {
			wingsthread = {required=1, short="thread"},
			wingsleft = {required=1, short="left"},
			wingsright = {required=1, short="right"},
			wingsfeathers = {required=1, short="feathers"},
	},
--MARKS
	ivorywarhorn = {
			ivoryhornmouthpiece = {required=1, short="mouth"},
			ivoryhornfittings = {required=1, short="fittings"},
			ivoryhornleft = {required=1, short="left"},
			ivoryhornright = {required=1, short="right"},
	},
	ivorymedallion = {
			ivorymedalliondisc = {required=1, short="disc"},
			ivorymedallionclasp = {required=1, short="clasp"},
			ivorymedallionaccent = {required=1, short="accent"},
			ivorymedallionribbon = {required=1, short="ribbon"},
	},
	ivoryspyglass = {
			ivoryspyglasslens = {required=1, short="lens"},
			ivoryspyglasseyepiece = {required=1, short="eye"},
			ivoryspyglassbody = {required=1, short="body"},
			ivoryspyglassstrap = {required=1, short="strap"},
	},
	ivorypennon = {
			ivorypennonsilk = {required=1, short="silk"},
			ivorypennonribbon = {required=1, short="ribbon"},
			ivorypennonthread = {required=1, short="thread"},
			ivorypennondye = {required=1, short="dye"},
	},
	ivoryarmband = {
			ivoryarmbandaccent = {required=1, short="accent"},
			ivoryarmbandouter = {required=1, short="outer"},
			ivoryarmbandinner = {required=1, short="inside"},
			ivoryarmbandclasp = {required=1, short="clasp"},
	},
	ivoryatlantia = {
			ivoryatlantiabody = {required=1, short="body"},
			ivoryatlantialegs = {required=1, short="legs"},
			ivoryatlantiahead = {required=1, short="head"},
			ivoryatlantiaarms = {required=1, short="arms"},
	},
	ivorydummy = {
			ivorydummylimbs = {required=1, short="limbs"},
			ivorydummytorso = {required=1, short="torso"},
			ivorydummyclothing = {required=1, short="clothing"},
			ivorydummyarmour = {required=1, short="armour"},
	},
	ivorytower = {
			ivorytowerbase = {required=1, short="base"},
			ivorytowerlower = {required=1, short="lower"},
			ivorytowerupper = {required=1, short="upper"},
			ivorytowerlacquer = {required=1, short="laquer"},
	},
	ivorybowstring = {
			ivorybowstringcore = {required=1, short="core"},
			ivorybowstringwrapping = {required=1, short="wrap"},
			ivorybowstringeyelet = {required=1, short="eyelet"},
			ivorybowstringenchant = {required=1, short="enchant"},
	},
	quisalisdagger = {
			quisaisdaggerhilt = {required=1, short="hilt"},
			quisalisdaggerblade = {required=1, short="blade"},
			quisalisdaggerpommel = {required=1, short="pommel"},
			quisalisdaggergrip = {required=1, short="grip"},
	},
	quisalisbone = {
			quisalisbonelower = {required=1, short="lower"},
			quisalisboneupper = {required=1, short="upper"},
			quisalisbonerope = {required=1, short="rope"},
			quisalisbonestain = {required=1, short="stain"},
	},
	quisalismedallion = {
			quisalismedallionchain = {required=1, short="chain"},
			quisalismedalliontop = {required=1, short="top"},
			quisalismedallionbottom = {required=1, short="bottom"},
			quisalismedallionclasp = {required=1, short="clasp"},
	},
	quisalislookingglass = {
			quisalisglasscase = {required=1, short="case"},
			quisalisglasslens = {required=1, short="lens"},
			quisalisglassiris = {required=1, short="iris"},
			quisalisglasseyepiece = {required=1, short="eyepiece"},
	},
	quisalisderillin = {
			quisalisderillinhair = {required=1, short="hair"},
			quisalisderillinclothing = {required=1, short="clothing"},
			quisalisderillintorso = {required=1, short="torso"},
			quisalisderillinhead = {required=1, short="head"},
	},
	quisalisdummy = {
			quisalisdummylimbs = {required=1, short="limbs"},
			quisalisdummytorso = {required=1, short="torso"},
			quisalisdummyrobes = {required=1, short="robes"},
			quisalisdummytargets = {required=1, short="targets"},
	},
	quisalistombstone = {
			quisalistombstonetop = {required=1, short="top"},
			quisalistombstonemiddle = {required=1, short="middle"},
			quisalistombstonebase = {required=1, short="base"},
			quisalistombstonescript = {required=1, short="script"},
	},
	quisalisarmband = {
			quisalisarmbandserpent = {required=1, short="insignia"},
			quisalisarmbandeyes = {required=1, short="eyes"},
			quisalisarmbandtop = {required=1, short="top"},
			quisalisarmbandbottom = {required=1, short="bottom"},
	},
	quisalismask = {
			quisalismaskbone = {required=1, short="bone"},
			quisalismaskwire = {required=1, short="wire"},
			quisalismaskteeth = {required=1, short="teeth"},
			quisalismaskrunes = {required=1, short="runes"},
	},
	quisaliscloak = {
			quisaliscloakcloth = {required=1, short="cloth"},
			quisaliscloakembroidery = {required=1, short="embroid"},
			quisaliscloaklining = {required=1, short="lining"},
			quisaliscloakhood = {required=1, short="hood"},
	},
--Seafaring
	cloverbox = {
			cloverboxclovers = {required=1, short="clovers"},
			cloverboxlid = {required=1, short="lid"},
			cloverboxsides = {required=1, short="sides"},
			cloverboxbase = {required=1, short = "base"},
	},
	maelstrom = {
			maelstromarms = {required=1, short="arms"},
			maelstromlegs = {required=1, short="legs"},
			maelstromtorso = {required=1, short="torso"},
			maelstromhead = {required=1, short="head"},
	},
	islandwings = {
			islandwingsleft = {required=1, short="left"},
			islandwingsright = {required=1, short="right"},
			islandwingsthread = {required=1, short="thread"},
			islandwingsstraps = {required=1, short="straps"},
	},
	frostpail = {
			frostpailhandle = {required=1, short="handle"},
			frostpailleft = {required=1, short="left"},
			frostpailright = {required=1, short="right"},
			frostpailbase = {required=1, short="base"},
	},
	neatpail = {
			neatpailhandle = {required=1, short="handle"},
			neatpailleft = {required=1, short="left"},
			neatpailright = {required=1, short="right"},
			neatpailbase = {required=1, short="base"},
	},
	shipchit = {
			shipchittop = {required=1, short="top"},
			shipchitbottom = {required=1, short="bottom"},
			shipchitink = {required=1, short="ink"},
			shipchitseal = {required=1, short="seal"},
	},
	xpplaque = {
			xpplaquemount = {required=1, short="mount"},
			xpplaquefascia = {required=1, short="fascia"},
			xpplaquelacquer = {required=1, short="lacquer"},
			xpplaquelettering = {required=1, short="lettering"},
	},
	monstermap = {
			monstermapink = {required=1, short="ink"},
			monstermapparchment = {required=1, short="parchment"},
			monstermapcompass = {required=1, short="compass"},
			monstermapenchant = {required=1, short="enchant"},
	},
	crossbow = {
			crossbowmount = {required=1, short="mount"},
			crossbowarms = {required=1, short="arms"},
			crossbowstring = {required=1, short="string"},
			crossbowcrank = {required=1, short="crank"},
	},
	glassbottle = {
			glassbottleneck = {required=1, short="neck"},
			glassbottlemiddle = {required=1, short="middle"},
			glassbottlebase = {required=1, short="base"},
			glassbottleenchant = {required=1, short="enchant"},
	},
	seaweedpail = {
			seaweedpailhandle = {required=1, short="handle"},
			seaweedpailleft = {required=1, short="left"},
			seaweedpailright = {required=1, short="right"},
			seaweedpailbase = {required=1, short="base"},
	},
	smokeflare = {
			smokeflareshell = {required=1, short="shell"},
			smokeflarefins = {required=1, short="fins"},
			smokeflarelid = {required=1, short="lid"},
			smokeflarechamber = {required=1, short="chamber"},
	},
--Death
	mortalcoil = {
			coilbinding = {required=1, short="binding"},
			coilbottom = {required=1, short="bottom"},
			coilstrand = {required=1, short="strand"},
			coiltop = {required=1, short="top"},
	},
	vulturetalon = {
			talontip = {required=1, short="tip"},
			talonstem = {required=1, short="stem"},
			talonbase = {required=1, short="base"},
			talonpoison = {required=1, short="poison"},
	},
	deathcandle = {
			candlebase = {required=1, short="base"},
			candleflame = {required=1, short="flame"},
			candlestring = {required=1, short="string"},
			candlewax = {required=1, short="wax"},
	},
	deathdummy = {
			deathdummyarms = {required=1, short="arms"},
			deathdummyhead = {required=1, short="head"},
			deathdummytorso = {required=1, short="torso"},
			deathdummylegs = {required=1, short="legs"},
	},
	gravestone = {
			gravestonebottom = {required=1, short="bottom"},
			gravestoneinscription = {required=1, short="inscription"},
			gravestonelichen = {required=1, short="lichen"},
			gravestonetop = {required=1, short="top"},
	},
	crucible = {
			cruciblebase = {required=1, short="base"},
			cruciblebowl = {required=1, short="bowl"},
			crucibleflame = {required=1, short="flame"},
			cruciblehandle = {required=1, short="handle"},
	},
	deathscall = {
			deathscallcoil = {required=1, short="coil"},
			deathscallhorn = {required=1, short="horn"},
			deathscallmouth = {required=1, short="mouth"},
			deathscalltassels = {required=1, short="tassels"},
	},
	deathcape = {
			capebrocade = {required=1, short="brocade"},
			capeenchantment = {required=1, short="enchantment"},
			capethread = {required=1, short="thread"},
			capevelvet = {required=1, short="velvet"},
	},
--Blackwave
	taper = {
			tapertop = {required=1, short="top"}, 
			taperbottom = {required=1, short="bottom"},
			taperwax = {required=1, short="wax"},
			taperstring = {required=1, short="string"},
	},
	finalityring = {
			signetband = {required=1, short="band"},
			signetbezel = {required=1, short="bezel"},
			signetcarving = {required=1, short="carving"},
			signetmarks = {required=1, short="marks"},
	},
	grievouskeyring = {
			keyringlizard = {required=1, short="lizard"},
			keyringtiger = {required=1, short="tiger"},
			keyringslate = {required=1, short="slate"},
			keyringhoop = {required=1, short="hoop"},
	},
	goblin = {
			goblinlegs = {required=1, short="legs"},
			goblinarms = {required=1, short="arms"},
			goblinhead = {required=1, short="head"},
			goblintorso = {required=1, short="torso"},
	},
	blackspigot = {
			spigottop = {required=1, short="top"},
			spigotbottom = {required=1, short="bottom"},
			spigotstem = {required=1, short="stem"},
			spigottip = {required=1, short="tip"},
	},
	sunlesshope = {
			sunlessband = {required=1, short="band"},
			sunlessstone = {required=1, short="stone"},
			sunlessbinding = {required=1, short="binding"},
			sunlessenchantment = {required=1, short="enchant"},
	},
	blackcirclet = {
			circletfur = {required=1, short="fur"},
			circletblades = {required=1, short="blades"},
			circletband = {required=1, short="band"},
			circletbinding = {required=1, short="binding"},
	},
	jewel = {
			sanguinestone = {required=1, short="stone"},
			sanguineaura = {required=1, short="aura"},
			sanguineteardrop = {required=1, short="tear"},
			taintedblood = {required=1, short="blood"},
	},
	canopic = {
			canopiclid = {required=1, short="lid"},
			canopicfluid = {required=1, short="fluid"},
			canopicbase = {required=1, short="base"},
			canopicpot = {required=1, short="pot"},
	},
	apperceptionstone = {
			crystalshard = {required=1, short="shard"},
			crystalbinding = {required=1, short="binding"},
			crystalportal = {required=1, short="portal"},
			crystalbase = {required=1, short="base"},
	},
	guise = {
			guiseenchantment = {required=1, short="enchant"},
			guisethread = {required=1, short="thread"},
			guisesmile = {required=1, short="smile"},
			guiseleather = {required=1, short="leather"},
	},
	blackgrimoire = {
			grimoiregut = {required=1, short="gut"},
			grimoirescroll = {required=1, short="scroll"},
			grimoirecover = {required=1, short="cover"},
			grimoirebinding = {required=1, short="binding"},
	},
	["suremekh'neina"] = {
			mantleenchant = {required=1, short="enchant"},
			mantleclasp = {required=1, short="clasp"},
			mantlelining = {required=1, short="lining"},
			mantlefabric = {required=1, short="fabric"},
	},
--RACES
	lodestone = {
			lodestonetop = {required=1, short="top"},
			lodestonebase = {required=1, short="base"},
			lodestoneright = {required=1, short="right"},
			lodestoneleft = {required=1, short="left"},
	},
	arachnideye = {
			arachnidlens = {required=1, short="lens"},
			arachnideyeball = {required=1, short="eyeball"},
			arachnidenchantment = {required=1, short="enchant"},
			arachnidcolour = {required=1, short="colour"},
	},
	panpipes = {
			panpipepipes = {required=1, short="pipes"},
			panpipefeathers = {required=1, short="feathers"},
			panpipehair = {required=1, short="hair"},
			panpipeflutes = {required=1, short="flutes"},
	},
	chitin = {
			chitincolour = {required=1, short="colour"},
			chitinname = {required=1, short="name"},
			chitincarving = {required=1, short="carving"},
			chitinfragment = {required=1, short="fragment"},
	},
	rattle = {
			rattlebones = {required=1, short="bones"},
			rattleantlers = {required=1, short="antlers"},
			rattlerunes = {required=1, short="runes"},
			rattlestaff = {required=1, short="staff"},
	},
	whispercloth = {
			clothenchantment = {required=1, short="enchant"},
			clothbinding = {required=1, short="binding"},
			clothblood = {required=1, short="blood"},
			whispersilk = {required=1, short="silk"},
	},
	demolitionsphere = {
			sphereglass = {required=1, short="glass"},
			spherefire = {required=1, short="fire"},
			spherespark = {required=1, short="spark"},
			sphererunes = {required=1, short="runes"},
	},
	sirensong = {
			sirenglass = {required=1, short="glass"},
			sirenvoice = {required=1, short="voice"},
			sirencork = {required=1, short="cork"},
			sirensmoke = {required=1, short="smoke"},
	},
	catapult = {
			catapultframe = {required=1, short="frame"},
			catapultbolts = {required=1, short="bolts"},
			catapultwheel = {required=1, short="wheel"},
			catapultarm = {required=1, short="arm"},
	},
	dalamyrrclaws = {
			clawstraps = {required=1, short="straps"},
			clawbase = {required=1, short="base"},
			clawpoints = {required=1, short="points"},
			clawbarbs = {required=1, short="barbs"},
	},
	frogskin = {
			froghead = {required=1, short="head"},
			frogcord = {required=1, short="cord"},
			frogbody = {required=1, short="body"},
			frogfeet = {required=1, short="feet"},
	},
	mayafigurine = {
			figurinehead = {required=1, short="head"},
			figurinearms = {required=1, short="arms"},
			figurinetorso = {required=1, short="torso"},
			figurinelegs = {required=1, short="legs"},
	},
 -- Forays
  arankeshfeather = {
			arankeshfeatherspine = {required=4, short="spine"},
			arankeshfeatherdown = {required=4, short="down"},
			arankeshfeathercolour = {required=4, short="colouration"},
			arankeshfeatheredge = {required=4, short="edge"},
	},	
	icossemirror = {
			goldmirrorframe = {required=4, short="frame"},
			mirrorglass = {required=4, short="glass"},
			mirrorcurse = {required=4, short="curse"},
			mirrorinscription = {required=4, short="inscription"},
	},
	ogrebroth = {
			brothbowl = {required=4, short="bowl"},
			brothbroth = {required=4, short="broth"},
			brothseasoning = {required=4, short="seasons"},
			brothspice = {required=4, short="spice"},
	},
	boulder = {
			boulderchipping = {required=4, short="chipping"},
			bouldershell = {required=4, short="shell"},
			bouldercore = {required=4, short="core"},
			boulderstone = {required=4, short="stone"},
	},
	margamwheel = {
			margamwheelweeds = {required=2, short="weeds"},
			margamwheelbolts = {required=2, short="bolts"},
			margamwheelwood = {required=2, short="wood"},
			margamwheelcentre = {required=2, short="centre"},
	},
	foraymap = {
			mapfragmenttop = {required=8, short="top"},
			mapfragmentbottom = {required=8, short="bottom"},
			mapfragmentleft = {required=8, short="left"},
			mapfragmentright = {required=8, short="right"},
	},
--Cities
	musicbox = {
			musicboxsong = {required=2, short="song"},
			musicboxmechanism = {required=2, short="mechan"},
			musicboxframe = {required=2, short="frame"},
			musicboxcrank = {required=2, short="crank"},
	},
	biscuit = {
			biscuitbase = {required=1, short="base"},
			biscuitspecial = {required=2, short="spec"},
			biscuitsugar = {required=1, short="sugar"},
			biscuitsalt = {required=1, short="salt"},
	},
	wraithshackles = {
			wraithshacklesmoke = {required=1, short="smoke"},
			wraithshacklechain = {required=1, short="chain"},
			wraithshacklemanacles = {required=2, short="manac"},
			wraithshacklelock = {required=1, short="lock"},
	},
	tumbleweed = {
			tumbleweedroots = {required=1, short="roots"},
			tumbleweedtendrils = {required=1, short="tendril"},
			tumbleweedvines = {required=1, short="vines"},
			tumbleweedstem = {required=1, short="stem"},
	},
	alabasterurn = {
			alabasterurnlid = {required=1, short="lid"},
			alabasterurnpot = {required=1, short="pot"},
			alabasterurninscription = {required=1, short="inscr"},
			alabasterurnash = {required=1, short="ash"},
	},
	celescope = {
			celescopeglobe = {required=2, short="globe"},
			celescopecylinders = {required=2, short="cylin"},
			celescopeeyepiece = {required=2, short="eyep"},
			celescopeingraving = {required=2, short="ingra"},
	},
-- Monks
	monkdummy = {
			monkdummyhead = {required=1, short="head"},
			monkdummyarms = {required=1, short="arms"},
			monkdummytorso = {required=1, short="torso"},
			monkdummylegs = {required=1, short="legs"},
	},
	odysseantongue = {
			tongueflesh = {required=1, short="flesh"},
			tonguecasing = {required=1, short="casing"},
			tonguepolish = {required=1, short="polish"},
			tonguecurse = {required=1, short="curse"},
	},
	monkheadband = {
			monkheadbandthreads = {required=1, short="threads"},
			monkheadbandamethyst = {required=1, short="amethyst"},
			monkheadbandenchantment = {required=1, short="enchant"},
			monkheadbandsupport = {required=1, short="support"},
	},
	talonedring = {
			crimsonsteelband = {required=1, short="band"},
			quartzsetting = {required=1, short="setting"},
			ringsteelclaws = {required=1, short="claw"},
			talonedringbinding = {required=1, short="binding"},
	},
	cranepennon = {
			pennoncloth = {required=1, short="cloth"},
			pennoncranes = {required=1, short="cranes"},
			pennonstaff = {required=1, short="staff"},
			pennonthread = {required=1, short="thread"},
	},
	monkbanner = {
			monkbannerflag = {required=1, short="flag"},
			monkbannerembroidery = {required=1, short="embroidery"},
			monkbannerspear = {required=1, short="spear"},
			monkbannerthread = {required=1, short="thread"},
	},
	ashstaff = {
			ashstaffstave = {required=1, short="stave"},
			ashstaffstrapping = {required=1, short="strap"},
			ashstaffcap = {required=1, short="cap"},
			ashstaffshoe = {required=1, short="shoe"},
	},
	olivebranch = {
			olivewood = {required=1, short="wood"},
			olivebranchshoots = {required=1, short="shoots"},
			oliveleaves = {required=1, short="leaves"},
			olivebranchenchantment = {required=1, short="enchant"},
	},	
-- Elementals
	airelement = {
			airelementalcyclone = {required=1, short="cyclone"},
			airelementalessence = {required=1, short="essence"},
			airelementalbinding = {required=1, short="binding"},
			airelementallightning = {required=1, short="lightning"},
	},
	airbrooch = {
			airbroochclasp = {required=1, short="clasp"},
			airbroochgem = {required=1, short="gem"},
			airbroochsetting = {required=1, short="setting"},
			airbroochenchantment = {required=1, short="enchant"},
	},
	firependant = {
			firependantchain = {required=1, short="chain"},
			firependantflame = {required=1, short="flame"},
			firependantsetting = {required=1, short="setting"},
			firependantjewel = {required=1, short="jewel"},
	},
	jawbone = {
			jawboneteeth = {required=1, short="teeth"},
			jawbonemandibles = {required=1, short="mandibles"},
			jawbonebone = {required=1, short="bone"},
			jawbonehinge = {required=1, short="hinge"},
	},
	earthenshovel = {
			earthshovelwood = {required=1, short="wood"},
			earthshovelblade = {required=1, short="blade"},
			earthshovelbinding = {required=1, short="binding"},
			earthshovelminerals = {required=1, short="minerals"},
	},
	seatears = {
			seatearsphial = {required=1, short="phial"},
			seatearsstopper = {required=1, short="stopper"},
			seatearspaint = {required=1, short="paint"},
			seatearstears = {required=1, short="tears"},
	},
	garashshackle = {
			garashshacklelinks = {required=1, short="links"},
			garashshackleorbs = {required=1, short="orbs"},
			garashshackleenchantment = {required=1, short="enchant"},
			garashshacklechains = {required=1, short="chains"},
	},
	mudbomb = {
			mudbombbinding = {required=1, short="binding"},
			mudbombmud = {required=3, short="mud"},
	},
	searedglyph = {
			searedglyphplaque = {required=1, short="plaque"},
			searedglyphemblem = {required=1, short="emblem"},
			searedglyphtendrils = {required=1, short="tendrils"},
			searedglyphflame = {required=1, short="flame"},
	},
	firetank = {
			firetankframe = {required=1, short="frame"},
			firetankflame = {required=1, short="flame"},
			firetankinsignia = {required=1, short="insignia"},
			firetanklinks = {required=1, short="links"},
	},
	sceptre = {
			sceptrescript = {required=1, short="script"},
			sceptreenchantment = {required=1, short="enchant"},
			sceptreheart = {required=1, short="heart"},
			sceptretusk = {required=1, short="tusk"},
	},
	harness = {
			airharnessstraps = {required=1, short="straps"},
			airharnessglyphs = {required=1, short="glyphs"},
			airharnessenchantment = {required=1, short="enchant"},
			airharnessbuckles = {required=1, short="buckles"},
	},
--Yggdrasil
	dreadpilar = {
			dreadpilarbody = {required=1, short="body"},
			dreadpilarhead = {required=1, short="head"},
			dreadpilarlegs = {required=1, short="legs"},
			dreadpilarplates = {required=1, short="plates"},
	},
	squargon = {
			squargonbody = {required=1, short="body"},
			squargonfangs = {required=1, short="fangs"},
			squargonhead = {required=1, short="head"},
			squargonlegs = {required=1, short="legs"},
	},
	yggdrasiltablet = {
			tabletstylus = {required=1, short="stylus"},
			tablettwine = {required=1, short="twine"},
			tabletwax = {required=1, short="wax"},
			tabletwood = {required=1, short="wood"},
	},		 
	valdblom = {
			valdblomessence = {required=2, short="essence"},
			valdblomleaves = {required=2, short="leaves"},
			valdblomroot = {required=2, short="root"},
			valdblomstem = {required=2, short="stem"},
	},		 
	earthshapingtome = {
			shapingtomeclay = {required=1, short="clay"},
			shapingtomeplates = {required=1, short="plates"},
			shapingtomgranite = {required=1, short="granite"},
			shapingtominsignia = {required=1, short="insignia"},
	},		 
	nexuscube = {
			nexuscubeglass = {required=1, short="glass"},
			nexuscubegold = {required=1, short="gold"},
			nexuscubemote = {required=1, short="mote"},
			nexuscubescript = {required=1, short="script"},
	},		 
	firecrystal = {
			firecrystalenchantment = {required=1, short="enchantment"},
			firecrystalflame = {required=1, short="flame"},
			firecrystalspark = {required=1, short="spark"},
			firecrystalstone = {required=1, short="stone"},
	},		 
	planarmote = {
			moteaura = {required=1, short="aura"},
			motebinding = {required=1, short="binding"},
			moteenchantment = {required=1, short="enchantment"},
			moteflame = {required=1, short="flame"},
	},		 
	goldensnakeskin = {
			goldencolouring = {required=1, short="colouring"},
			goldenenchantment = {required=1, short="enchantment"},
			goldenscales = {required=1, short="scales"},
			goldenskin = {required=1, short="skin"},
	},		 
	yggdrasilbranch = {
			yggdrasilbranchhook = {required=1, short="hook"},
			yggdrasilbranchline = {required=1, short="line"},
			yggdrasilbranchmosaic = {required=1, short="mosiac"},
			yggdrasilbranchwood = {required=1, short="wood"},
	},		 
	criersbell = {
			crierschime = {required=1, short="chime"},
			crierscurse = {required=1, short="curse"},
			criershandle = {required=1, short="handle"},
			criersshell = {required=1, short="shell"},
	},		 
-- Contenders
	contenderspig = {
			pigclay = {required=1, short="clay"},
			pigears = {required=1, short="ears"},
			pigbelly = {required=1, short="belly"},
			pigtail = {required=1, short="tail"},
	},	
	contendersjug = {
			juglip = {required=1, short="lip"},
			jugbase = {required=1, short="base"},
			jugbowl = {required=1, short="bowl"},
			jughandle = {required=1, short="handle"},
	},
	contendersbouquet = {
			bouquetstring = {required=1, short="string"},
			bouquetknot = {required=1, short="knot"},
			bouquetbloom = {required=1, short="bloom"},
			bouquetstem = {required=1, short="stem"},
	},
	contendersfigurine = {
			contenderfigurinehead = {required=1, short="head"},
			contenderfigurinearms = {required=1, short="arms"},
			contenderfigurinelegs = {required=1, short="legs"},
			contenderfigurinebody = {required=1, short="body"},
	},
	contendersglass = {
			glasshandle = {required=1, short="handle"},
			glasspane = {required=1, short="pane"},
			glassfocus = {required=1, short="focus"},
			glassframe = {required=1, short="frame"},
	},
	contendersjournal = {
			journalbinding = {required=1, short="binding"},
			journalpage = {required=1, short="page"},
			journalcover = {required=1, short="cover"},
			journalindex = {required=1, short="index"},
	},
	contendersstud = {
			studgleam = {required=1, short="gleam"},
			studpost = {required=1, short="post"},
			studgem = {required=1, short="gem"},
			studback = {required=1, short="back"},
	},
	contendersribbon = {
			ribbongilding = {required=1, short="gilding"},
			ribbonpin = {required=1, short="pin"},
			ribbonstripe = {required=1, short="stripe"},
			ribbonfold = {required=1, short="fold"},
	},
-- Underworld
	cryptworm = {
			cryptwormhead = {required=1, short="head"},
			cryptwormbody = {required=1, short="body"},
			cryptwormfangs = {required=1, short="fangs"},
			cryptwormbinding = {required=1, short="binding"},
	},
	psychesplinter = {
			psychesplinterchain = {required=1, short="chain"},
			psychesplinterframe = {required=1, short="frame"},
			psychesplinterlength = {required=1, short="length"},
			psychesplintercurse = {required=1, short="curse"},
	},
	sanityskein = {
			sanityskeinthread = {required=1, short="thread"},
			sanityskeincoil = {required=1, short="coil"},
			sanityskeincurse = {required=1, short="curse"},
			sanityskeinbinding = {required=1, short="binding"},
	},
	custodytalisman = {
			custodyleft = {required=1, short="left"},
			custodyright = {required=1, short="right"},
			custodycentre = {required=1, short="centre"},
			custodybinding = {required=1, short="binding"},
	},
	unlifetotem = {
			unlifetotembase = {required=1, short="base"},
			unlifetotemwood = {required=1, short="wood"},
			unlifetotemskull = {required=1, short="skull"},
			unlifetotemtendrils = {required=1, short="tendrils"},
	},
	soulsliver = {
			soulsliverobsidian = {required=1, short="obsidian"},
			soulsliverfog = {required=1, short="fog"},
			soulsliversouls = {required=1, short="souls"},
			soulslivercurse = {required=1, short="curse"},
	},
	cullingblade = {
			cullingbladehilt = {required=1, short="hilt"},
			cullingbladeedge = {required=1, short="edge"},
			cullingblademetal = {required=1, short="metal"},
			cullingbladecurse = {required=1, short="curse"},
	},
	funeralshroud = {
			funeralshroudcloth = {required=1, short="cloth"},
			funeralshroudthread = {required=1, short="thread"},
			funeralshroudbenediction = {required=1, short="benedict"},
			funeralshroudclasp = {required=1, short="clasp"},
	},
--Renegades
	mercenarychalk = {
			mercenarychalkbinding = {required=1, short="binding"},
			mercenarychalkchalk = {required=1, short="chalk"},
			mercenarychalkdust = {required=1, short="dust"},
			mercenarychalkstick = {required=1, short="stick"},
	},
	elementalinjunction = {
			injunctionpaper = {required=1, short="paper"},
			injunctionscript = {required=1, short="script"},
			injunctionseal = {required=1, short="seal"},
			injunctionsignature = {required=1, short="signature"},
	},
	moppet = {
			moppetbuttons = {required=1, short="buttons"},
			moppetcloth = {required=1, short="cloth"},
			moppeteyes = {required=1, short="eyes"},
			moppetthread = {required=1, short="thread"},
	},
	turncoatscoat = {
			turncoatscoatbinding = {required=1, short="binding"},
			turncoatscoatbuttons = {required=1, short="buttons"},
			turncoatscoatcloth = {required=1, short="cloth"},
			turncoatscoatthread = {required=1, short="thread"},
	},
	shadowcloak = {
			shadowcloakclasp = {required=1, short="clasp"},
			shadowcloakcloth = {required=1, short="cloth"},
			shadowcloakcurse = {required=1, short="curse"},
			shadowcloakthread = {required=1, short="thread"},
	},
	betrayersmantle = {
			betrayersmantlecloth = {required=1, short="cloth"},
			betrayersmantlecurse = {required=1, short="curse"},
			betrayersmantlestraps = {required=1, short="straps"},
			betrayersmantlethread = {required=1, short="thread"},
	},
	turncoatsmasque = {
			turncoatsmasquecurse = {required=1, short="curse"},
			turncoatsmasqueetchings = {required=1, short="etchings"},
			turncoatsmasqueeyes = {required=1, short="eyes"},
			turncoatsmasquestone = {required=1, short="stone"},
	},
	sunderedpennon = {
			sunderedpennonbinding = {required=1, short="binding"},
			sunderedpennoncloth = {required=1, short="cloth"},
			sunderedpennonstaff = {required=1, short="staff"},
			sunderedpennonthread= {required=1, short="thread"},
	},
--Invasion
	darkearthfigrine = {
			darkeartharms = {required=1, short="arms"},
			darkearthhead = {required=1, short="head"},
			darkearthlegs = {required=1, short="legs"},
			darkearthtorso = {required=1, short="torso"},
	},
	batteringram = {
			batteringrambolts = {required=1, short="bolts"},
			batteringramgrips = {required=1, short="grips"},
			batteringramram = {required=1, short="ram"},
			batteringramwheels = {required=1, short="wheels"},
	},
	caltrop = {
			caltropball = {required=1, short="ball"},
			caltropbarbs = {required=1, short="barbs"},
			caltropbinding = {required=1, short="binding"},
			caltropspikes = {required=1, short="spikes"},
	},
	cauldron = {
			cauldronbase = {required=1, short="base"},
			cauldronhandle = {required=1, short="handle"},
			cauldronoil = {required=1, short="oil"},
			cauldronpot = {required=1, short="pot"},
	},
	shadowshackle = {
			shadowshackleenchantment = {required=1, short="enchantment"},
			shadowshacklelink = {required=1, short="link"},
			shadowshacklemetal = {required=1, short="metal"},
			shadowshackleshadow = {required=1, short="shadow"},
	},
	hagseye = {
			hagseyeball = {required=1, short="ball"},
			hagseyeenchantment = {required=1, short="enchantment"},
			hagseyefluid = {required=1, short="fluid"},
			hagseyelid= {required=1, short="lid"},
	},
	icebrick = {
			icebinding = {required=1, short="binding"},
			iceenchantment = {required=1, short="enchantment"},
			magicice = {required=1, short="magic"},
			repeatingspell = {required=1, short="spell"},
	},
	scoutingmap = {
			scoutingmapenchantment = {required=1, short="enchantment"},
			scoutingmapicons = {required=1, short="icons"},
			scoutingmapink = {required=1, short="ink"},
			scoutingmapvellum = {required=1, short="vellum"},
	},
-- War
	rottingremains = {
			remainsbones = {required=1, short="bones"},
			remainsflesh = {required=1, short="flesh"},
			remainsmuscles = {required=1, short="muscles"},
			remainsblood = {required=1, short="blood"},
	},
	gildedbit = {
			bitgilding = {required=1, short="gilding"},
			bitbar = {required=1, short="bar"},
			bitchain = {required=1, short="chain"},
			bitpatterns = {required=1, short="patterns"},
	},
	pigeon = {
			pigeonhead = {required=1, short="head"},
			pigeonbody = {required=1, short="body"},
			pigeonlegs = {required=1, short="legs"},
			pigeonwings = {required=1, short="wings"},
	},
	warcloud = {
			warcloudfog = {required=1, short="fog"},
			warcloudstench = {required=1, short="stench"},
			warcloudcurse = {required=1, short="curse"},
			warcloudbinding = {required=1, short="binding"},
	},
	portalhoop = {
			portalhoopsteel = {required=1, short="steel"},
			portalhooplight = {required=1, short="light"},
			portalhoopenchantment = {required=1, short="enchantment"},
			portalhoopbinding = {required=1, short="binding"},
	},
	observantsigil = {
			observantsigilmetal = {required=1, short="metal"},
			observantsigilstar = {required=1, short="star"},
			observantsigileye = {required=1, short="eye"},
			observantsigillatice = {required=1, short="latice"},
	},
 
  cowculator = {
    cowculatorwood = {required=1, short="wood"},
    cowculatornumbers = {required=1, short="numbers"},
    cowculatorpaint = {required=1, short="paint"},
    cowculatorspectacles = {required=1, short="spectacles"},
  },
  golemgateway = {
    gatewayemblem = {required=1, short="emblem"},
    gatewaygates = {required=1, short="gates"},
    gatewayframe = {required=1, short="frame"},
    gatewaybars = {required=1, short="bars"},
  },
  brainjar = {
    brainjarpot = {required=1, short="pot"},
    brainjarbrains = {required=1, short="brains"},
    brainjarpreserves = {required=1, short="preserves"},
    brainjarlabel = {required=1, short="label"},
  },
  hollowbook = {
    hollowbookcovers = {required=1, short="covers"},
    hollowbookeye = {required=1, short="eye"},
    hollowbookglyphs = {required=1, short="glyphs"},
    hollowbookscream = {required=1, short="scream"},
  },
  faemirror = {
    faemirrorglass = {required=1, short="glass"},
    faemirrorcrystal = {required=1, short="crystal"},
    faemirrorhandle = {required=1, short="handle"},
    faemirrorscript = {required=1, short="script"},
  },
  celestialcoronet = {
    coronetband = {required=1, short="band"},
    coronetangels = {required=1, short="angels"},
    coronetspheres = {required=1, short="spheres"},
    coronetengravings = {required=1, short="engravings"},
  },
  chaosclaw = {
    chaosclawedge = {required=1, short="edge"},
    chaosclawtip = {required=1, short="tip"},
    chaosclawcorruption = {required=1, short="corruption"},
    chaosclawspan = {required=1, short="span"},
  },
  iconstatuette = {
    statuetteglobe = {required=1, short="globe"},
    statuettesigils = {required=1, short="sigil"},
    statuetteshards = {required=1, short="shard"},
    statuetteicon = {required=1, short="icon"},
  },
  kris = {
    krisblade = {required=1, short="blade"},
    krishaft = {required=1, short="haft"},
    krisrunes = {required=1, short="runes"},
    krissteel = {required=1, short="steel"},
  },
  crystalsword = {
    crystalswordhilt = {required=1, short="hilt"},
    crystalswordguard = {required=1, short="guard"},
    crystalswordblade = {required=1, short="blade"},
    crystalswordgem = {required=1, short="gem"},
  },
 
	gaia = {
    cherryblossomstem = {required=1, short="stem"},
    cherryblossomflower = {required=1, short="flower"},
    cherryblossomstamen = {required=1, short="stamen"},
    cherryblossomscent = {required=1, short="scent"},
  },
	lorielan = {
    filtercrystal = {required=1, short="crystal"},
    filterbronze = {required=1, short="bronze"},
    filterfitting = {required=1, short="fitting"},
    filterpolish = {required=1, short="polish"},
  },
	vulnurana = {
    sachetcloth = {required=1, short="cloth"},
    sachetherbs = {required=1, short="herbs"},
    sachetstring = {required=1, short="string"},
    sachetscent = {required=1, short="scent"},
  }, 
	twilight = {
    houndcarvingeyes = {required=1, short="eyes"},
    houndcarvinglegs = {required=1, short="legs"},
    houndcarvingfangs = {required=1, short="fangs"},
    houndcarvingobsidian = {required=1, short="obsidian"},
  },
	phaestus = {
    finishinghammerhead = {required=1, short="head"},
    finishinghammerrunes = {required=1, short="runes"},
    finishinghammerhandle = {required=1, short="handle"},
    finishinghammergrip = {required=1, short="grip"},
  },
	scarlatti = {
    citolestrings = {required=1, short="strings"},
    citolebody = {required=1, short="body"},
    citolebase = {required=1, short="base"},
    citoletune = {required=1, short="tune"},
  },
	prospero = {
    batteredpanhandle = {required=1, short="handle"},
    batteredpandish = {required=1, short="dish"},
    batteredpangrip = {required=1, short="grip"},
    batteredpanspell = {required=1, short="spell"},
  },
	aegis = {
    declarationpaper = {required=1, short="paper"},
    declarationtext = {required=1, short="text"},
    declarationsignature = {required=1, short="signature"},
    declarationseal = {required=1, short="seal"},
  },
	vastar = {
    vastarwingsfeathers = {required=1, short="feathers"},
    vastarwingsstraps = {required=1, short="straps"},
    vastarwingsspan = {required=1, short="span"},
    vastarwingslightning = {required=1, short="lightning"},
  },
  snowball = {
    snowballsnow = {required=1, short="snow"},
    snowballreform = {required=1, short="reform"},
    snowballreturn = {required=1, short="return"},
    snowballbinding = {required=1, short="binding"},
  },
  halfnog = {
    halfnogpot = {required = 1, short="pot"},
    halfnogbrew = {required = 1, short="brew"},
    halfnogladle = {required = 1, short="ladle"},
    halfnoghandle = {required = 1, short="handle"},
  },
  popcorngarland = {
    garlandcorn = {required = 1, short="corn"},
    garlandsilk = {required = 1, short="silk"},
    garlandglitter = {required = 1, short="glitter"},
    garlandspell = {required = 1, short="spell"},
  },
  taffy = {
    taffysugar = {required = 1, short="sugar"},
    taffyspecial = {required = 1, short="special"},
    taffymagic = {required = 1, short="magic"},
    taffybag = {required = 1, short="bag"},
  },
  snowglobe = {
    snowglobehouse = {required = 1, short="house"},
    snowglobebell = {required = 1, short="bell"},
    snowglobesnow = {required = 1, short="snow"},
    snowglobeglass = {required = 1, short="glass"},
  },
  logosmasscarf = {
    redscarfwool = {required = 1, short="red"},
    goldscarfwool = {required = 1, short="gold"},
    scarfthread = {required = 1, short="thread"},
    scarfcrystals = {required = 1, short="crystals"},
  },
  snowsack = {
    snowsackcloth = {required = 1, short="cloth"},
    snowsacksnow = {required = 1, short="snow"},
    snowsackstring = {required = 1, short="string"},
    snowsackicicle = {required = 1, short="icicle"},
  },
  gifttag = {
    gifttaglabel = {required = 1, short="label"},
    gifttagwriting = {required = 1, short="writing"},
    gifttageyelet = {required = 1, short="eyelet"},
    gifttagribbon = {required = 1, short="ribbon"},
  },
}</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>casino</name>
					<packageName></packageName>
					<script></script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>blackjack</name>
						<packageName></packageName>
						<script>-- Function to return card values
function get_card_values()
    return {
        ["two of Hearts"] = 2, ["three of Hearts"] = 3, ["four of Hearts"] = 4, ["five of Hearts"] = 5, ["six of Hearts"] = 6, 
        ["seven of Hearts"] = 7, ["eight of Hearts"] = 8, ["nine of Hearts"] = 9, ["ten of Hearts"] = 10,
        ["Jack of Hearts"] = 10, ["Queen of Hearts"] = 10, ["King of Hearts"] = 10, ["Ace of Hearts"] = 11,

        ["two of Diamonds"] = 2, ["three of Diamonds"] = 3, ["four of Diamonds"] = 4, ["five of Diamonds"] = 5, ["six of Diamonds"] = 6,
        ["seven of Diamonds"] = 7, ["eight of Diamonds"] = 8, ["nine of Diamonds"] = 9, ["ten of Diamonds"] = 10,
        ["Jack of Diamonds"] = 10, ["Queen of Diamonds"] = 10, ["King of Diamonds"] = 10, ["Ace of Diamonds"] = 11,

        ["two of Clubs"] = 2, ["three of Clubs"] = 3, ["four of Clubs"] = 4, ["five of Clubs"] = 5, ["six of Clubs"] = 6,
        ["seven of Clubs"] = 7, ["eight of Clubs"] = 8, ["nine of Clubs"] = 9, ["ten of Clubs"] = 10,
        ["Jack of Clubs"] = 10, ["Queen of Clubs"] = 10, ["King of Clubs"] = 10, ["Ace of Clubs"] = 11,

        ["two of Spades"] = 2, ["three of Spades"] = 3, ["four of Spades"] = 4, ["five of Spades"] = 5, ["six of Spades"] = 6,
        ["seven of Spades"] = 7, ["eight of Spades"] = 8, ["nine of Spades"] = 9, ["ten of Spades"] = 10,
        ["Jack of Spades"] = 10, ["Queen of Spades"] = 10, ["King of Spades"] = 10, ["Ace of Spades"] = 11
    }
end

-- Function to get card value
function get_card_value(card_description)
    local card_values = get_card_values()
    return card_values[card_description]
end

-- Function to compute player's total from hand
function compute_player_total(hand)
    local card_values = get_card_values()
    local total = 0
    local aces = 0

    for _, card in ipairs(hand) do
        local value = card_values[card]
        if value == 11 then
            aces = aces + 1
        end
        total = total + value
    end

    -- Adjust for Aces if it helps keep the total &lt;= 21
    while aces &gt; 0 and total &gt; 21 do
        total = total - 10
        aces = aces - 1
    end

    return total
end

-- Function to determine action based on balanced blackjack strategy
function determine_action_hit_stand_double(dealer_card, player_total, player_hand)
    -- Check if the player has a soft hand (contains an Ace counted as 11)
    local is_soft_hand = false
    for _, card in ipairs(player_hand) do
        if string.match(card, "Ace") then
            is_soft_hand = true
            break
        end
    end

    -- Adjust player total if it's a soft hand
    if is_soft_hand and player_total + 10 &lt;= 21 then
        player_total = player_total + 10
    end

    -- Determine action based on player's total and dealer's upcard
    if player_total &lt;= 8 then
        return "hit"
    elseif player_total == 9 then
        if dealer_card &lt;= 9 then
            return "double"
        else
            return "hit"
        end
    elseif player_total == 10 then
        if dealer_card &gt;= 2 and dealer_card &lt;= 10 then
            return "double"
        else
            return "hit"
        end
    elseif player_total == 11 then
        return "double"
    elseif player_total &gt;= 12 and player_total &lt;= 16 then
        if dealer_card &lt;= 6 then
            return "stand"  
        else
            return "hit"  
        end
    else -- player_total &gt;= 17
        return "stand"
    end
end

-- Function to determine action based on blackjack strategy without doubling
function determine_action_hit_stand(dealer_card, player_total, player_hand)
    -- Check if the player has a soft hand (contains an Ace counted as 11)
    local is_soft_hand = false
    for _, card in ipairs(player_hand) do
        if string.match(card, "Ace") then
            is_soft_hand = true
            break
        end
    end

    -- Adjust player total if it's a soft hand
    if is_soft_hand and player_total + 10 &lt;= 21 then
        player_total = player_total + 10
    end

    if player_total &lt;= 8 then
        return "hit"
    elseif player_total &gt;= 9 and player_total &lt;= 11 then
        return "hit"
    elseif player_total &gt;= 12 and player_total &lt;= 16 then
        if dealer_card &lt;= 6 then
            return "stand"  
        else
            return "hit"  
        end
    else -- player_total &gt;= 17
        return "stand"
    end
end


-- Function to determine whether to take insurance
function determine_insurance(dealer_card)
    -- Basic strategy: never take insurance
    return "no"
end</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>combat</name>
				<packageName></packageName>
				<script></script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>target</name>
					<packageName></packageName>
					<script>function setTarget(tar)
  
  target = tar  
  precacheCheck()   
  send("settarget " .. target)
  send("curingset switch set1")  
  cecho("\n&lt;white&gt;Target:&lt;green&gt; " .. target)
    
  if not(NDB_getClass(target) == "Unknown") then
    set_class(NDB_getClass(target):title())
  else
    cecho("\n&lt;yellow&gt; SET CLASS MANUALLY")
  end
        if myclass() == "serpent" then
          send("HYPNOTIC IMPRINT " .. target, false)
        end
  
  systemPaused = false
  send("curing on")
  
  if not table.contains(NDB.cityList, target) then
    send("enemy " .. target)
  end
  
  
  if idtwo then
    killTrigger(idtwo)
  end
  idtwo = tempTrigger(target, [[selectString("]] .. target .. [[", 1) fg("red") resetFormat()]])
  if id then
    killTrigger(id)
  end
  id = tempTrigger(target, [[selectString("]] .. target .. [[", 1) fg("red") resetFormat()]])
  
  expandAlias("pm stand")
  
  if parrymethod ~= "none" then
    checkForParry()
    send("queue add eqbal " .. parrystring)
  end
  
  resetCombatState()
  
end

function targetHere()
  if table.contains(gmcp.Room.Players, target) then
    return true
  else
    return false
  end
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>failSafe</name>
					<packageName></packageName>
					<script>function failSafe()
   
failsafe = flip(failsafe)
  
  if not(failsafe) then
    send("clearqueue all")
    tempTimer(.3, [[send("clearqueue all"]])
    if myclass() == "serpent" then disableTimer("snapcheck") end
    if myclass() == "serpent" then send("queue add eqbal order treesnake passive") end
    cecho("\n&lt;red&gt;FAIL SAFE")
  else
    if myclass() == "serpent" then enableTimer("snapcheck") end
    if myclass() == "serpent" then send("drop treesnake"..cmdsep.."order treesnake follow me"..cmdsep.."order treesnake attack "..target) end
    cecho("\n&lt;green&gt;FAIL SAFE")
  end

    resetAllEnemyBalanceTimes()
    send("put gold in pack")
    
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="no" isFolder="no">
					<name>retard combat</name>
					<packageName></packageName>
					<script>--[[RETARDATION COMBAT]]

function handleAeonCombat()
	
  if not (systemLoaded) then
    return
  end
  
  if systemPaused then
    return
  end

  if balance_data.stunned.in_use then
    return
  end
  
  aeoncommand = ""
	if attackcheck() then
		if table.contains(myaffs, "prone") then
			aeoncommand = "stand"
		else
			aeoncommand = "doublestab "..target.." "..carriervenom.." "..stackervenom
		end
			balancepredict(aeoncommand)
	else
		cecho("&lt;tomato&gt;\nI'm afraid I can't let you do that.")
	end
end


balancepredict=function(aeoncommand)

	local myBal = getRemainingPersonalTimerTime("balance")
	cansendreset = cansendreset or false
	

		if cansend and not(requestbrazier) then
			--if myBal &lt; os.clock() + .8 + aeonsensitivity and not(aeoncommand == "") then
				cansend = false
				cansendreset = os.clock() + .8
				send("curing aeoncommand "..aeoncommand) 
				secho("&lt;yellow&gt;'COMMAND SENT, PLEASE HOLD!'")
			--end
		end

		if requestbrazier then
			secho("&lt;light_pink&gt;We're tryyyin' to get this fucker!!!")
		end

		if requestbrazier and brazierpoint &lt; os.clock() and not(cansend) then 
			 send("touch brazier "..target)
			 secho("&lt;cyan&gt;'SENDING BRAZIER, ONE TARGET INCOMING!'")
			 cansend = false
			 cansendreset = os.clock() + .5
		end


		if cansendreset &lt; os.clock() then
			cansend = true
		end


end</script>
					<eventHandlerList />
				</Script>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>enemy class</name>
					<packageName></packageName>
					<script></script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>set_class</name>
						<packageName></packageName>
						<script>function set_class(classname)
    -- Helper function to handle balance tracking for the enemy class
    local function actionBalance(classname)
        if classname and classname ~= "" then
            -- Start tracking enemy balance for the specified class
            startEnemyBalanceAction(classname)
            if DEBUG_MODE then
                cecho(string.format("\n&lt;cyan&gt;Tracking enemy balance for class: %s", classname))
            end

            -- Stop tracking automatically after the average balance time (default: 3s)
            local avgTime = Enemy_Balance_Data[classname] and Enemy_Balance_Data[classname].avg_time or 3.0
            tempTimer(avgTime, function()
                stopEnemyBalanceAction(classname)
                if DEBUG_MODE then
                    cecho(string.format("\n&lt;green&gt;Stopped balance tracking for class: %s", classname))
                end
            end)
        end
    end

    -- Handle empty classname by looking up the target's class
    --if classname == "" then
        if not (NDB_getClass(target:title()) == "Unknown") then
            classname = NDB_getClass(target):lower()
        else
            return  -- Exit if no valid class found
        end
   -- end

    -- Debug: Log the class name
    if DEBUG_MODE then
        cecho("CLASS NAME: " .. classname)
    end

    -- Manage enemy class tracking
    if table.contains(enemyclass, classname) then
        for k, v in pairs(enemyclass) do
            if k == classname then
                enemyclass[tostring(classname)] = { ["enabled"] = true }
                myEcho("white", "Target Class &lt;green&gt;" .. classname:upper())

                -- Start balance tracking for the class
                actionBalance(classname)

                -- Adjust curing priorities or other class-specific actions
                -- Uncomment this line if you need to adjust curing priorities
                -- sendCuringPrioSwap(classname)

                -- Handle the class reset timer
                if Class_Reset_Timer then
                    killTimer(Class_Reset_Timer)
                    Class_Reset_Timer = nil
                end
                Class_Reset_Timer = tempTimer(16, [[class_reset()]])
            else
                enemyclass[tostring(k)] = { ["enabled"] = false }
            end
        end
    end
end
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>class_reset</name>
						<packageName></packageName>
						<script>function class_reset()
  for k, v in pairs(enemyclass) do
    enemyclass[tostring(k)] = {["enabled"] = false}
    if class_reset_timer then
      killTimer(class_reset_timer)
    end
    class_reset_timer = nil
  end
  
  resetEnemyAffs()
  send("curingset switch set1")
  

  if DEBUG_MODE then cecho("\n&lt;green&gt;ENEMY CLASS RESET") end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>checkclass</name>
						<packageName></packageName>
						<script>function checkclass()
  for i, v in pairs(enemyclass) do
    if v.enabled then
      return i
    end
  end
  return "none"
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>isFitnessClass</name>
						<packageName></packageName>
						<script>function isFitnessClass()
  if
    enemyclass["sentinel"].enabled or
    enemyclass["druid"].enabled or
    enemyclass["blademaster"].enabled or
    enemyclass["unnamable"].enabled or
    enemyclass["infernal"].enabled or
    enemyclass["paladin"].enabled or
    enemyclass["runewarden"].enabled
  then
    return true
  else
    return false
  end
end</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>affliction tracker</name>
					<packageName></packageName>
					<script></script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>display</name>
						<packageName></packageName>
						<script>-- Function to display all afflictions
function affDisplay()
  if not affShorts then initializeAffShorts() end
  if not affColors then initializeAffColors() end
  if not affDisplays then initializeAffDisplays() end

  local promptset = {}

  -- Display afflictions that are in the affDisplays list
  for _, aff in ipairs(affDisplays) do
    local v = probabilityTable[aff]
    if v and v &gt;= 0.05 and affShorts[aff] then  -- Add a check for v being nil
      table.insert(promptset, formatAfflictionDisplay(aff, v))
    end
  end

  -- Display any remaining afflictions that are not in affDisplays
  for k, v in pairs(probabilityTable) do
    if v and v &gt; 0 and affShorts[k] and not table.contains(affDisplays, k) then  -- Add a check for v being nil
      table.insert(promptset, affColors[k] .. affShorts[k] .. "")
    end
  end

  -- Construct final display string
  local displayStr = #promptset &gt; 0 and " &lt;white&gt;: " .. table.concat(promptset, " ") or " &lt;white&gt;: [0]"

  -- Output the affliction string
  moveCursorEnd("main")
  if getCurrentLine() ~= "" then
    displayStr = "\n" .. displayStr
  end
  cecho(displayStr)
end

-- Helper function to format and display afflictions
function formatAfflictionDisplay(affliction, v)
  -- Ensure v is not nil before proceeding
  if v == nil then v = 0 end  -- Assign a default value of 0 if v is nil

  -- Check if affliction exists in both affColors and affShorts, and use defaults if not
  local affColor = affColors[affliction] or "&lt;white&gt;"  -- Default color if affliction not found
  local affShort = affShorts[affliction] or affliction  -- Default to affliction name if not found

  -- Build the display string
  local displayString = affColor .. affShort
  if v &lt; 1 then
    displayString = displayString .. " &lt;white&gt;[" .. formatDecimal(v) .. "]"
  end

  return displayString
end


function formatDecimal(decimal)
  if decimal == 1 then
    return "1"
  else
    local decimalString = string.format("%.2f", decimal)
    decimalString = string.gsub(decimalString, "0+$", "")
    decimalString = string.gsub(decimalString, "%.+$", "")
    return decimalString
  end
end

function formatDecimalFull(decimal)
  if decimal == 1 then
    return "100%"
  else
    local decimalString = string.format("%.2f", decimal)
    decimalString = string.gsub(decimalString, "0+$", "")
    decimalString = string.gsub(decimalString, "%.+$", "")
    return decimalString .. "%"
  end
end

function checkForDuplicates()
  -- Define the ordered afflictions
  local duplicates = {}
  local hasDuplicates = false
  -- Check for duplicates
  for i = 1, #affDisplays do
    local aff = affDisplays[i]
    for j = i + 1, #affDisplays do
      if aff == affDisplays[j] then
        duplicates[aff] = true
        hasDuplicates = true
      end
    end
  end
  -- Print duplicates, if any
  if hasDuplicates then
    print("Duplicates found in affDisplays:")
    for aff in pairs(duplicates) do
      print(aff)
    end
  else
    print("No duplicates found in affDisplays.")
  end
end

function prob(n)
  if probabilityTable[n] ~= nil then
    return probabilityTable[n]
  else
    cecho("Bad affliction sent to probability(): " .. n)
  end
end


function mh(n)
  if probabilityTable[n] ~= nil then
    if probabilityTable[n] &gt; 5 then
      return true
    else
      return false
    end
  else
    cecho("Bad affliction sent to mh(): " .. n)
  end
end

function vc(a)
  local n = affColors[a]
  local i = affShorts[a]
  if n == nil then
    n = "&lt;white&gt;"
  end
  if i == nil then
    i = a
  end
  return n .. i
end

function initializeAffColors()
  affColors =
    {
      paralysis = "&lt;red&gt;",
      asthma = "&lt;orange&gt;",
      clumsiness = "&lt;dark_orange&gt;",
      hypochondria = "&lt;dark_orange&gt;",
      sensitivity = "&lt;dark_orange&gt;",
      weariness = "&lt;dark_orange&gt;",
      healthleech = "&lt;dark_orange&gt;",
      cadmus = "&lt;blue&gt;cadmus",
      hecate = "&lt;lemon_chiffon&gt;hecate",
      haemophilia = "&lt;blue&gt;",
      darkshade = "&lt;blue&gt;",
      lethargy = "&lt;blue&gt;",
      relapsing = "&lt;blue&gt;",
      nausea = "&lt;blue&gt;",
      addiction = "&lt;cyan&gt;",
      recklessness = "&lt;white&gt;",
      claustrophobia = "&lt;lemon_chiffon&gt;",
      loneliness = "&lt;lemon_chiffon&gt;",
      masochism = "&lt;lemon_chiffon&gt;",
      vertigo = "&lt;lemon_chiffon&gt;",
      lovers = "&lt;lemon_chiffon&gt;",
      peace = "&lt;lemon_chiffon&gt;",
      pacified = "&lt;lemon_chiffon&gt;",
      generosity = "&lt;lemon_chiffon&gt;",
      justice = "&lt;lemon_chiffon&gt;",
      epilepsy = "&lt;LightGoldenrod&gt;",
      impatience = "&lt;yellow&gt;",
      stupidity = "&lt;LightGoldenrod&gt;",
      shyness = "&lt;LightGoldenrod&gt;",
      dizziness = "&lt;LightGoldenrod&gt;",
      dissonance = "&lt;LightGoldenrod&gt;",
      hellsight = "&lt;light_gray&gt;",
      disloyalty = "&lt;light_gray&gt;",
      slickness = "&lt;forest_green&gt;",
      selarnia = "&lt;yellow&gt;",
      manaleech = "&lt;light_gray&gt;",
      deadening = "&lt;light_gray&gt;",
      aeon = "&lt;magenta&gt;",
      tension = "&lt;light_gray&gt;",
      hallucinations = "&lt;MediumSpringGreen&gt;",
      hypersomnia = "&lt;MediumSpringGreen&gt;",
      dementia = "&lt;MediumSpringGreen&gt;",
      paranoia = "&lt;MediumSpringGreen&gt;",
      confusion = "&lt;pale_turquoise&gt;",
      crippledlegs = "&lt;white&gt;",
      crippledarms = "&lt;white&gt;",
      frozen = "&lt;cyan&gt;",
      anorexia = "&lt;violet&gt;",
      ablaze = "&lt;orange_red&gt;",
      asphyxiate = "&lt;magenta&gt;",
      voyria = "&lt;white&gt;",
      prone = "&lt;white&gt;",
      webbed = "&lt;white&gt;",
      impaled = "&lt;white&gt;",
      transfixed = "&lt;white&gt;",
      sleep = "&lt;white&gt;",
      blindness = "&lt;white&gt;",
      ice = "&lt;cyan&gt;",
      flame = "&lt;red&gt;",
      air = "&lt;white&gt;",
      void = "&lt;magenta&gt;",
      mildconcussion = "&lt;white&gt;",
      seriousconcussion = "&lt;red&gt;",
      mildtrauma = "&lt;white&gt;",
      serioustrauma = "&lt;red&gt;",
      mangledleftarm = "&lt;white&gt;",
      mangledrightarm = "&lt;white&gt;",
      mangledleftleg = "&lt;white&gt;",
      mangledrightleg = "&lt;white&gt;",
      mutilatedleftarm = "&lt;red&gt;",
      mutilatedrightarm = "&lt;red&gt;",
      mutilatedleftleg = "&lt;red&gt;",
      mutilatedrightleg = "&lt;red&gt;",
      earthdisrupt = "&lt;green&gt;",
      waterdisrupt = "&lt;cyan&gt;",
      firedisrupt = "&lt;red&gt;",
      airdisrupt = "&lt;white&gt;",
      spiritdisrupt = "&lt;light_grey&gt;",
      deafness = "&lt;light_grey&gt;",
    }
end

function initializeAffShorts()
  affShorts =
    {
      ["addiction"] = "add",
      ["agoraphobia"] = "ago",
      ["anorexia"] = "ano",
      ["aeon"] = "aeon",
      ["ablaze"] = "ablaze",
      ["airfist"] = "afist",
      ["asthma"] = "ast",
      ["blindness"] = "blind",
      ["blackout"] = "blko",
      ["bound"] = "bound",
      ["claustrophobia"] = "claus",
      ["clumsiness"] = "clu",
      ["confusion"] = "conf",
      ["crippledarms"] = "carm",
      ["crippledlegs"] = "cleg",
      ["darkshade"] = "dark",
      ["deadening"] = "dead",
      ["deafness"] = "deaf",
      ["dementia"] = "dem",
      ["disloyalty"] = "dloyal",
      ["disrupted"] = "disrupt",
      ["dissonance"] = "disso",
      ["dizziness"] = "diz",
      ["epilepsy"] = "epi",
      ["frozen"] = "frzn",
      ["generosity"] = "genor",
      ["haemophilia"] = "haem",
      ["hallucinations"] = "hall",
      ["hamstring"] = "hamst",
      ["healthleech"] = "hleach",
      ["hellsight"] = "hsight",
      ["hecate"] = "hecate",
      ["hypersomnia"] = "hyper",
      ["hypochondria"] = "hypo",
      ["nausea"] = "ill",
      ["impaleslash"] = "is",
      ["impatience"] = "imp",
      ["kola"] = "kola",
      ["lethargy"] = "let",
      ["loneliness"] = "lonl",
      ["masochism"] = "maso",
      ["manaleech"] = "mleach",
      ["nausea"] = "naus",
      ["pacifism"] = "pac",
      ["paralysis"] = "par",
      ["paranoia"] = "prna",
      ["prone"] = "prone",
      ["recklessness"] = "reck",
      ["scytherus"] = "scy",
      ["selarnia"] = "sel",
      ["sensitivity"] = "sen",
      ["shyness"] = "shy",
      ["slickness"] = "sli",
      ["sleep"] = "sleep",
      ["stupidity"] = "stu",
      ["transfixation"] = "trans",
      ["timeflux"] = "tfx",
      ["weariness"] = "wea",
      ["whispermadness"] = "wmad",
      ["vertigo"] = "vert",
      ["vitiate"] = "vit",
      ["voyria"] = "voy",
      ["voidfist"] = "vfist",
    }
end

function initializeAffDisplays()
  affDisplays =
    {
      "paralysis",
      "impatience",
      "asthma",
      "slickness",
      "anorexia",
      "ablaze",
      "addiction",
      "aeon",
      "agoraphobia",
      "bleeding",
      "blindness",
      "claustrophobia",
      "clumsiness",
      "concussion",
      "confusion",
      "crippledlegs",
      "crippledarms",
      "darkshade",
      "dazed",
      "deadening",
      "deafness",
      "dementia",
      "disloyalty",
      "dissonance",
      "dizziness",
      "drowning",
      "entangled",
      "epilepsy",
      "fear",
      "frozen",
      "generosity",
      "hallucinations",
      "haemophilia",
      "healthleech",
      "hellsight",
      "hypochondria",
      "hypersomnia",
      "indifference",
      "justice",
      "lethargy",
      "loneliness",
      "lovers",
      "masochism",
      "manaleech",
      "mangledlimb",
      "nausea",
      "pacified",
      "paranoia",
      "peace",
      "recklessness",
      "scytherus",
      "sensitivity",
      "selarnia",
      "shyness",
      "sleep",
      "stupidity",
      "stuttering",
      "temperedhumours",
      "tension",
      "transfixation",
      "unweavingmind",
      "unweavingbody",
      "unweavingspirit",
      "vertigo",
      "voyria",
      "weariness",
      "webbed",
      "prone",
    }
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>reset table</name>
						<packageName></packageName>
						<script>function resetEnemyAffs()
  probabilityTable =
    {
      ablaze = 0,
      addiction = 0,
      aeon = 0,
      agoraphobia = 0,
      anorexia = 0,
      asthma = 0,
      bleeding = 0,
      blindness = 0,
      claustrophobia = 0,
      clumsiness = 0,
      concussion = 0,
      confusion = 0,
      crippledarms = 0,
      crippledlegs = 0,
      darkshade = 0,
      dazed = 0,
      deadening = 0,
      deafness = 0,
      dementia = 0,
      disloyalty = 0,
      dissonance = 0,
      dizziness = 0,
      drowning = 0,
      entangled = 0,
      epilepsy = 0,
      fear = 0,
      frozen = 0,
      generosity = 0,
      haemophilia = 0,
      hallucinations = 0,
      healthleech = 0,
      hellsight = 0,
      hypersomnia = 0,
      hypochondria = 0,
      impatience = 0,
      indifference = 0,
      justice = 0,
      lethargy = 0,
      loneliness = 0,
      lovers = 0,
      manaleech = 0,
      mangledlimb = 0,
      masochism = 0,
      nausea = 0,
      pacified = 0,
      paralysis = 0,
      paranoia = 0,
      peace = 0,
      prone = 0,
      recklessness = 0,
      scytherus = 0,
      sensitivity = 0,
      selarnia = 0,
      shyness = 0,
      slickness = 0,
      sleep = 0,
      stupidity = 0,
      stuttering = 0,
      temperedhumours = 0,
      tension = 0,
      transfixed = 0,
      unweavingbody = 0,
      unweavingmind = 0,
      unweavingspirit = 0,
      vertigo = 0,
      voyria = 0,
      weariness = 0,
      webbed = 0,
    }
  if systemLoaded and debug_mode then
    if DEBUG_MODE then cecho("\n&lt;green&gt;AFFLICTIONS RESET") end
  end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>getAffliction</name>
						<packageName></packageName>
						<script>-- Function to get the affliction caused by a venom
function getAffliction(venomName)
  for k, v in pairs(venoms) do
    if v[1] == venomName then
      return v[2]
    end
  end
end
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>addAfflictionsToTable</name>
						<packageName></packageName>
						<script>-- Function to add afflictions to the probability table and the appliedAfflictionsStack
function addAfflictionsToTable(afflictions, probabilityTable)
  -- Ensure the possibleAfflictionsToCure table is initialized at the start
  if not possibleAfflictionsToCure then
    possibleAfflictionsToCure = {}  -- Initialize the global table for storing afflictions to cure
    --cecho("\n&lt;green&gt;possibleAfflictionsToCure table initialized.")
  end

  for _, affliction in ipairs(afflictions) do
    local key, value
    if type(affliction) == "table" then
      key, value = affliction[1], affliction[2]
    else
      key, value = affliction, 100  -- Default probability is 100 if only affliction is passed
    end

    -- Check if 'sensitivity' should affect 'deafness'
    if key == "sensitivity" then
      if probabilityTable["deafness"] == 0 then
        probabilityTable["deafness"] = 1
      elseif probabilityTable["deafness"] == 1 then
        probabilityTable[key] = 1
      end
    else
      -- Ensure we have a valid probability value
      local probValue = value / 100
      -- Add or update the affliction in the probability table
      probabilityTable[key] = probValue
    end

    -- Ensure that the cure type for the affliction is properly initialized
    if not possibleAfflictionsToCure[key] then
      possibleAfflictionsToCure[key] = {}  -- Initialize as an empty table if it's nil
      --cecho("\n&lt;green&gt;Initializing cure table for: " .. key)
    end

    -- Check again to ensure the table is valid
    if possibleAfflictionsToCure[key] then
      -- Insert the affliction into the table
      table.insert(possibleAfflictionsToCure[key], affliction)
    else
      cecho("\n&lt;red&gt;ERROR: possibleAfflictionsToCure[" .. key .. "] is nil before insert!")
    end

    -- Add the affliction to the appliedAfflictionsStack
    table.insert(appliedAfflictionsStack, {affliction = key, probability = probabilityTable[key]})
    
  end
  
  --affDisplay()  -- Update the display of current afflictions
end
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>removeLastTwoAfflictions</name>
						<packageName></packageName>
						<script>-- Function to remove the last two afflictions added to the stack and the probabilityTable
function removeLastTwoAfflictions()
  local numAfflictions = #appliedAfflictionsStack
  if numAfflictions &gt;= 2 then
    for i = 1, 2 do
      local entry = table.remove(appliedAfflictionsStack)
      probabilityTable[entry.affliction] = 0
    end
  end
  --affDisplay()
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>determineCuredAffliction</name>
						<packageName></packageName>
						<script>-- Function to determine the cured affliction based on current afflictions and their cures
function determineCuredAffliction(afflictionsToCure, currentAfflictions)
  -- Create a table to store the count of cure types and possible afflictions to cure
  local maxTypeCount = {}
  local possibleAfflictionsToCure = {}
  
  -- List of cure types to ignore
  local ignoreCureTypes = {"tree", "shrugging", "passive", "focus", "dragonheal"}
  
  -- Loop through current afflictions and update maxTypeCount and possibleAfflictionsToCure
  for affliction, count in pairs(currentAfflictions) do
    -- Check that affliction exists and has cures defined
    local cures = afflictionsToCure[affliction] and afflictionsToCure[affliction].cure
    if cures then
      for _, cureType in ipairs(cures) do
        -- Skip cure types in the ignore list
        if not table.contains(ignoreCureTypes, cureType) then
          -- Update the maxTypeCount for each cureType
          maxTypeCount[cureType] = (maxTypeCount[cureType] or 0) + count
          
          -- If the cure type matches and count &gt;= 0.85, add the affliction to possible afflictions
          if count and count &gt;= 0.85 then
            possibleAfflictionsToCure[cureType] = possibleAfflictionsToCure[cureType] or {}
            table.insert(possibleAfflictionsToCure[cureType], affliction)
          end
        end
      end
    end
  end

  -- Find the highest cure type(s) with the maximum count
  local highestCureTypes = {}
  local highestCount = 0
  for cureType, count in pairs(maxTypeCount) do
    if count &gt; highestCount then
      highestCureTypes = {cureType}
      highestCount = count
    elseif count == highestCount then
      table.insert(highestCureTypes, cureType)
    end
  end

  -- If there are highest cure types, randomly select one and choose an affliction to cure
  if #highestCureTypes &gt; 0 then
    local highestCureType = highestCureTypes[math.random(#highestCureTypes)]
    
    -- Check if there are suitable afflictions to cure with the selected highest cure type
    local possibleAfflictions = possibleAfflictionsToCure[highestCureType]
    if possibleAfflictions and #possibleAfflictions &gt; 0 then
      -- Randomly select one of the possible afflictions to cure
      local selectedAffliction = possibleAfflictions[math.random(#possibleAfflictions)]
      return selectedAffliction
    end
  end

  -- If no suitable afflictions are found, print a message and return nil
  cecho("\n&lt;yellow&gt;No suitable affliction found")
  return nil
end
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>updateProbabilityTable</name>
						<packageName></packageName>
						<script>-- Function to update the probabilityTable based on a curative
function updateProbabilityTable(curative, probabilityTable)
  
  -- Check if the curative is an active cure
  if isActiveCure(curative) then
    handleActiveCure(curative, probabilityTable)
  else
    handleHerbBasedCure(curative, probabilityTable)
  end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>isActiveCure</name>
						<packageName></packageName>
						<script>-- Function to check if a curative is an active cure
function isActiveCure(curative)
  local activeCures =
    {
      "tree",
      "focus",
      --"shrugging",
      "fitness",
      "passive",
      --"dragonheal",
      "mending",
      "epidermal",
      "caloric",
      "restoration",
      "immunity",
      "compose",
      "arms",
      "legs",
    }
  return table.contains(activeCures, curative)
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>handleActiveCure</name>
						<packageName></packageName>
						<script>-- Function to handle active cures
function handleActiveCure(curative, probabilityTable)
  local currentAfflictions = getCurrentAfflictions(probabilityTable, afflictionsToCure, curative)
  local curedAffliction = determineCuredAffliction(afflictionsToCure, currentAfflictions)
  if curedAffliction then
    probabilityTable[curedAffliction] = 0
    cecho("\n&lt;green&gt;Assuming &lt;white&gt;" .. curative .. " &lt;green&gt;Cured: &lt;white&gt;" .. curedAffliction)
   -- affDisplay()
  end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>handleHerbBasedCure</name>
						<packageName></packageName>
						<script>-- Handle herb-based cures
function handleHerbBasedCure(curative, probabilityTable)
  local herb = herb_conversion[curative]
  lasteaten = herb
  if herb == "hawthorn" then
    probabilityTable["deafness"] = 100
    tempTimer(3, function()
      probabilityTable["deafness"] = 0
     -- affDisplay()
    end)
  else
    -- Generic herb handling logic
    local affectedAfflictions = {}
    local numAffected = 0
    local totalScore = 0

    for k, v in pairs(probabilityTable) do
      if afflictionsToCure[k] and table.contains(afflictionsToCure[k].cure, herb) and v &gt; 0 then
        numAffected = numAffected + 1
        totalScore = totalScore + v
        table.insert(affectedAfflictions, {affliction = k, score = v})
      end
    end

    if numAffected &gt; 0 then
      local newProb = numAffected &gt; 1 and 1 / numAffected or 0
      for _, aa in ipairs(affectedAfflictions) do
        probabilityTable[aa.affliction] = tonumber(formatDecimal(newProb))
      end
    end
   -- affDisplay()
  end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>handleSmokeCure</name>
						<packageName></packageName>
						<script>-- Function to handle the "smoke" herb cure
function handleSmokeCure(probabilityTable)
  local smokeCount = countSmokeAfflictions(probabilityTable)
  if smokeCount &gt;= 1 then
    if probabilityTable["disloyalty"] &gt;= 0.05 then
      --if probabilityTable["asthma"] &gt;= 0.05 then
        --probabilityTable["asthma"] = 0
        --if probabilityTable["weariness"] &gt;= 0.05 then
        -- probabilityTable["weariness"] = 1
        -- end
        -- if probabilityTable["clumsiness"] &gt;= 0.05 then
        --  probabilityTable["clumsiness"] = 1
        -- end
        -- if probabilityTable["sensitivity"] &gt;= 0.05 then
        --  probabilityTable["sensitivity"] = 1
        --end
      --end
      --resetProbabilityTable()
      --affDisplay()
    end
  end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>countSmokeAfflictions</name>
						<packageName></packageName>
						<script>-- Function to count the number of "smoke" afflictions
function countSmokeAfflictions(probabilityTable)
  local smokeCount = 0
  for affliction, probability in pairs(probabilityTable) do
    if table.contains(afflictionsToCure[affliction].cure, "smoke") and probability &gt; 0 then
      smokeCount = smokeCount + 1
    end
  end
  return smokeCount
end
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>startAfflictionTimer</name>
						<packageName></packageName>
						<script>-- Function to start an affliction timer
function startAfflictionTimer(affliction)
  local timerName
  local timerDuration
  if affliction == "anorexia" then
    timerName = "eat"
    timerDuration = 3
  elseif affliction == "impatience" then
    timerName = "focus"
    timerDuration = 2.6
  elseif affliction == "asthma" then
    timerName = "smoke"
    timerDuration = 1.55
  elseif affliction == "weariness" then
    timerName = "fitness"
    timerDuration = 3
  end
  -- Clear any previous timer
  local timerIDName = affliction .. "TimerID"
  if _G[timerIDName] then
    killTimer(_G[timerIDName])
  end
  -- Set a new timer to check the affliction status after the specified duration
  _G[timerIDName] =
    tempTimer(
      timerDuration,
      function()
        checkAfflictionStatus(affliction)
      end
    )
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>checkAfflictionStatus</name>
						<packageName></packageName>
						<script>-- Function to check and adjust affliction status
function checkAfflictionStatus(affliction)
  local timerName = ""
  local afflictionType = ""
  local timerDuration = 0.0
  local probabilityThreshold = 0.85
  if affliction == "anorexia" then
    timerName = "eat"
    afflictionType = "epidermal"
    timerDuration = 3
  elseif affliction == "impatience" then
    timerName = "focus"
    afflictionType = "goldenseal"
    timerDuration = 2.6
  elseif affliction == "asthma" then
    timerName = "smoke"
    afflictionType = "kelp"
    timerDuration = 1.55
  elseif affliction == "weariness" then
    timerName = "fitness"
    afflictionType = "kelp"
    timerDuration = 3
  end
  
  -- First, set the time remaining on the timer
  local timerRemaining = getRemainingEnemyTimerTime(timerName)
  --if affliction=="asthma" then
  -- Count the number of "smoke" afflictions.
  local smokeCount = 0
  for affliction, probability in pairs(probabilityTable) do
    if table.contains(afflictionsToCure[affliction].cure, "smoke") and probability &gt; 0 then
      smokeCount = smokeCount + 1
    end
  end
  --end
  -- Then, see if the time remaining is 0 or less
  if
    (affliction == "asthma" and smokeCount &gt;= 1 and timerRemaining &lt;= 0) or
    (affliction ~= "asthma" and timerRemaining &lt;= 0 and not(timerName==""))
  then
    -- Count the number of afflictions of the specified type
    local afflictionCount = 0
    for aff, prob in pairs(probabilityTable) do
      if table.contains(afflictionsToCure[aff].cure, afflictionType) and prob &gt; 0 then
        afflictionCount = afflictionCount + 1
      end
    end
    if afflictionCount &gt; 1 then
      local divisor = 0
      -- Remove one remaining affliction if it is confirmed we have affliction
      if afflictionCount == 2 then
        divisor = 0
      else
        divisor = 1 / (afflictionCount - 1)
      end
      -- Iterate through other afflictions and adjust their probability
      for aff, prob in pairs(probabilityTable) do
        if table.contains(afflictionsToCure[aff].cure, afflictionType) and prob &gt; 0 then
          probabilityTable[aff] = divisor
        end
      end
      -- Adjust the probability based on the affliction type
      probabilityTable[affliction] = 1
      -- Reset aff table if all affs are below the specified threshold
      --resetProbabilityTable()
      -- Display all affs
     -- affDisplay()
    end
  else
    -- Count the number of afflictions of the specified type
    if affliction == "asthma" then
      -- Reset aff table if all affs are below the specified threshold
      --  resetProbabilityTable()
      -- Display all affs
      -- affDisplay()
      return
    end
    local afflictionCount = 0
    for aff, prob in pairs(probabilityTable) do
      if table.contains(afflictionsToCure[aff].cure, afflictionType) and prob &gt; 0 then
        afflictionCount = afflictionCount + 1
      end
    end
    if afflictionCount &gt;= 1 then
      -- Adjust the probability based on the affliction type
      probabilityTable[affliction] = 0
      -- Iterate through other afflictions and adjust their probability
      for aff, prob in pairs(probabilityTable) do
        if table.contains(afflictionsToCure[aff].cure, afflictionType) and prob &gt; 0 then
          myDebugEcho("white", aff)
          probabilityTable[aff] = 1
        end
      end
      -- Reset aff table if all affs are below the specified threshold
      resetProbabilityTable()
      -- Display all affs
      affDisplay()
    end
    -- end
  end
  -- Clear the timer ID
  _G[affliction .. "TimerID"] = nil
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>getCurrentAfflictions</name>
						<packageName></packageName>
						<script>-- Function to get current afflictions of a specific type
function getCurrentAfflictions(probabilityTable, afflictionsToCure, curative)
  local currentAfflictions = {}  -- Ensure this is always initialized as an empty table
  -- Create an empty table to store current afflictions

  for k, v in pairs(probabilityTable) do
    -- Ensure the key exists in afflictionsToCure and is a valid affliction
    local affliction = afflictionsToCure[k]

    -- Check if affliction exists and has a valid value between 0 and 1
    if affliction and type(v) == "number" and v &gt;= 0 and v &lt;= 1 then
      local cure = affliction.cure
      if v &gt; 0 then
        -- Check if the curative matches and is in the cure list
        for i = 1, #cure do
          if cure[i] == curative then
            -- Add the affliction to the list, summing if it's already present
            if not currentAfflictions[k] then
              currentAfflictions[k] = v
            else
              currentAfflictions[k] = currentAfflictions[k] + v
            end
            break
          end
        end
      end
    elseif not affliction then
      -- Log if an affliction from the probability table doesn't exist in afflictionsToCure
      cecho("\n&lt;red&gt;Warning: Affliction '" .. k .. "' not found in afflictionsToCure table!")
    elseif not (type(v) == "number" and v &gt;= 0 and v &lt;= 1) then
      -- Log if the probability value is invalid
      cecho("\n&lt;red&gt;Warning: Affliction '" .. k .. "' has an invalid probability value: " .. tostring(v))
    end
  end
  return currentAfflictions
end
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>resetProbabilityTable</name>
						<packageName></packageName>
						<script>-- Function to reset the probabilityTable if all afflictions are below a certain threshold
function resetProbabilityTable()
  local threshold = 0.85
  local allBelowThreshold = true
  -- Check if all values are below the threshold
  for k, v in pairs(probabilityTable) do
    if v &gt;= threshold then
      allBelowThreshold = false
      break
    end
  end
  -- If all values are below the threshold, reset them to 0
  if allBelowThreshold then
    resetEnemyAffs()
  end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>initializeCombatTables</name>
						<packageName></packageName>
						<script>function initializeCombatTables()
--todo
--add fitness to active cures, and special curing code for asthma on fitness.-- Define a table that contains afflictions and their corresponding cures
--convert and replace fitness, shrugging, tree, dragonheal to 'active' in the lists.
--crippledhead = { cure = { "head","tree" } },
afflictionsToCure =
  {
    ablaze = {cure = {"mending", "tree", "passive"}}, --"shrugging","dragonheal",
    addiction = {cure = {"ginseng", "ferrum", "tree",  "passive"}}, --"shrugging","dragonheal",
    aeon = {cure = {"smoke", "shrugging", "tree"}},
    agoraphobia =
      {cure = {"lobelia", "argentum", "tree", "focus", "passive"}}, --"shrugging","dragonheal",
    anorexia = {cure = {"epidermal", "tree", "focus", "passive"}}, --"shrugging","dragonheal",
    asthma = {cure = {"kelp", "aurum", "tree", "fitness", "passive"}}, --"shrugging","dragonheal",
    bleeding = {cure = {"clot"}},
    blindness = {cure = {"epidermal"}},
    claustrophobia =
      {cure = {"lobelia", "argentum", "tree", "focus", "passive"}}, --"shrugging","dragonheal",
    clumsiness = {cure = {"kelp", "aurum", "tree", "passive"}}, --"shrugging","dragonheal",
    concussion = {cure = {"restoration", "passive", "tree"}}, --"shrugging","dragonheal",
    confusion =
      {cure = {"prickly ash", "stannum", "tree", "focus", "passive"}}, --"shrugging","dragonheal",
    crippledlegs = {cure = {"legs", "tree"}},
    crippledarms = {cure = {"arms", "tree"}},
    darkshade = {cure = {"ginseng", "ferrum", "tree", "passive"}}, --"shrugging","dragonheal",
    dazed = {cure = {"smoke", "shrugging", "tree"}},
    deadening = {cure = {"smoke", "tree", "passive"}}, --"shrugging","dragonheal"walkto 
    deafness = {cure = {"epidermal"}},
    dementia =
      {cure = {"prickly ash", "stannum", "shrugging", "tree", "focus", "dragonheal", "passive"}},
    disloyalty = {cure = {"smoke", "shrugging", "tree", "dragonheal", "passive"}},
    dissonance = {cure = {"goldenseal", "plumbum", "shrugging", "tree"}},
    disrupted = {cure = {"concentrate"}},
    dizziness =
      {cure = {"goldenseal", "plumbum", "shrugging", "tree", "focus", "dragonheal", "passive"}},
    drowning = {cure = {"pear", "calcite", "shrugging", "tree"}},
    entangled = {cure = {"writhe"}},
    epilepsy =
      {cure = {"goldenseal", "plumbum", "shrugging", "tree", "focus", "dragonheal", "passive"}},
    fear = {cure = {"compose"}},
    frozen = {cure = {"caloric", "shrugging", "tree"}},
    generosity =
      {cure = {"bellwort", "cuprum", "shrugging", "tree", "focus", "dragonheal", "rage", "passive"}},
    hallucinations =
      {cure = {"ash", "stannum", "shrugging", "tree", "focus", "dragonheal", "passive"}},
    haemophilia = {cure = {"ginseng", "ferrum", "shrugging", "tree", "dragonheal", "passive"}},
    healthleech = {cure = {"kelp", "aurum", "shrugging", "tree", "dragonheal", "passive"}},
    hellsight = {cure = {"smoke", "shrugging", "tree"}},
    hypochondria = {cure = {"kelp", "aurum", "shrugging", "tree", "dragonheal", "passive"}},
    hypersomnia = {cure = {"ash", "stannum", "shrugging", "tree", "dragonheal", "passive"}},
    impatience = {cure = {"goldenseal", "plumbum", "shrugging", "tree", "dragonheal", "passive"}},
    indifference = {cure = {"cuprum", "bellwort", "shrugging", "tree", "rage"}},
    justice = {cure = {"cuprum", "bellwort", "shrugging", "tree", "rage"}},
    lethargy = {cure = {"ferrum", "ginseng", "shrugging", "tree", "dragonheal", "passive"}},
    loneliness =
      {cure = {"lobelia", "argentum", "shrugging", "tree", "focus", "dragonheal", "passive"}},
    lovers =
      {cure = {"cuprum", "bellwort", "shrugging", "tree", "focus", "dragonheal", "rage", "passive"}},
    masochism =
      {cure = {"lobelia", "argentum", "shrugging", "tree", "focus", "dragonheal", "passive"}},
    manaleech = {cure = {"smoke", "shrugging", "tree", "dragonheal", "passive"}},
    mangledlimb = {cure = {"restoration", "shrugging", "tree"}},
    nausea = {cure = {"ferrum", "ginseng", "shrugging", "tree", "dragonheal", "passive"}},
    pacified =
      {cure = {"cuprum", "bellwort", "shrugging", "tree", "focus", "dragonheal", "rage", "passive"}},
    paralysis = {cure = {"magnesium", "bloodroot", "shrugging", "dragonheal", "passive"}},
    paranoia =
      {cure = {"stannum", "prickly ash", "shrugging", "tree", "focus", "dragonheal", "passive"}},
    peace = {cure = {"bellwort", "cuprum", "shrugging", "tree", "focus", "rage"}},
    recklessness =
      {cure = {"argentum", "lobelia", "shrugging", "tree", "focus", "dragonheal", "passive"}},
    scytherus = {cure = {"ferrum", "ginseng", "shrugging", "tree", "dragonheal", "passive"}},
    selarnia = {cure = {"mending", "tree", "shrugging", "dragonheal", "passive"}},
    sensitivity = {cure = {"kelp", "aurum", "shrugging", "tree", "dragonheal", "passive"}},
    shyness =
      {cure = {"goldenseal", "plumbum", "shrugging", "tree", "focus", "dragonheal", "passive"}},
    sleep = {cure = {"wake"}},
    slickness =
      {cure = {"smoke", "bloodroot", "magnesium", "shrugging", "tree", "dragonheal", "passive"}},
    stupidity =
      {cure = {"goldenseal", "plumbum", "shrugging", "tree", "focus", "dragonheal", "passive"}},
    stuttering = {cure = {"epidermal", "shrugging", "tree", "focus"}},
    temperedhumours = {cure = {"antimony", "ginger", "shrugging", "tree"}},
    tension = {cure = {"smoke", "shrugging", "tree"}},
    transfixed = {cure = {"writhe"}},
    unweavingmind = {cure = {"goldenseal", "plumbum", "shrugging", "tree", "focus"}},
    unweavingbody = {cure = {"ferrum", "ginseng", "shrugging", "tree"}},
    unweavingspirit = {cure = {"smoke", "shrugging", "tree"}},
    vertigo =
      {cure = {"argentum", "lobelia", "shrugging", "tree", "focus", "dragonheal", "passive"}},
    voyria = {cure = {"immunity", "shrugging", "tree", "dragonheal", "passive"}},
    weariness = {cure = {"kelp", "aurum", "tree", "dragonheal", "passive"}},
    webbed = {cure = {"writhe"}},
    prone = {cure = {"stand"}},
  }
-- Define a table that contains venoms and the afflictions they cause
venoms =
  {
    [1] = {"xentio", "clumsiness"},
    [2] = {"eurypteria", "recklessness"},
    [3] = {"kalmia", "asthma"},
    [4] = {"delphinium", "sleep"},
    [5] = {"digitalis", "shyness"},
    [6] = {"darkshade", "darkshade"},
    [7] = {"curare", "paralysis"},
    [8] = {"epteth", "crippledarms"},
    [9] = {"prefarar", "sensitivity"},
    [10] = {"monkshood", "disloyalty"},
    [11] = {"euphorbia", "nausea"},
    [12] = {"colocasia", "blindness"},
    [12] = {"colocasia", "deafness"},
    [13] = {"vernalius", "weariness"},
    [14] = {"epseth", "crippledlegs"},
    [15] = {"larkspur", "dizziness"},
    [16] = {"slike", "anorexia"},
    [17] = {"notechis", "haemophilia"},
    [18] = {"vardrax", "addiction"},
    [19] = {"aconite", "stupidity"},
    [20] = {"selarnia", "selarnia"},
    [21] = {"gecko", "slickness"},
    [22] = {"scytherus", "scytherus"},
    [23] = {"voyria", "voyria"},
  }
  
affselector =
  {
    asthma = {venom = "kalmia"},
    paralysis = {venom = "curare"},
    anorexia = {venom = "slike"},
    clumsiness = {venom = "xentio"},
    weariness = {venom = "vernalius"},
    sensitivity = {venom = "prefarar"},
    addiction = {venom = "vardrax"},
    nausea = {venom = "euphorbia"},
    darkshade = {venom = "darkshade"},
    impatience = {venom = "impatience"},
    dizziness = {venom = "larkspur"},
    scytherus = {venom = "scytherus"},
    slickness = {venom = "gecko"},
    stupidity = {venom = "aconite"},
    voyria = {venom = "voyria"},
    sleep = {venom = "delphinium"},
    selarnia = {venom = "selarnia"},
    recklessness = {venom = "eurypteria"},
    disloyalty = {venom = "monkshood"},
    crippledarms = {venom = "epteth"},
    crippledlegs = {venom = "epseth"},
  }

end





















</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>testFunction</name>
						<packageName></packageName>
						<script>-- Function to test affliction tracker
function testFunction()
  -- Reset the enemy's afflictions
  resetEnemyAffs()

  -- Clear the appliedAfflictionsStack
  appliedAfflictionsStack = {}

  -- Add multiple afflictions in a single call (using flat table for each affliction)
  addAfflictionsToTable(
    {{"paralysis", 100}, {"impatience", 100}, {"weariness", 100}, {"slickness", 100}},
    probabilityTable
  )

  -- Update the probability table based on a curative for testing
  updateProbabilityTable("bloodroot leaf", probabilityTable)
  updateProbabilityTable("tree", probabilityTable)

  -- Display the current afflictions
  affDisplay()

  -- Print the updated probability table for debugging
  for affliction, probability in pairs(probabilityTable) do
    print(affliction, probability)
  end
end
</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>sensei's combat</name>
					<packageName></packageName>
					<script></script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>reloadCombatFile</name>
						<packageName></packageName>
						<script>reloadCombatFile()</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="no" isFolder="yes">
					<name>blademaster new</name>
					<packageName></packageName>
					<script></script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>bladedancer</name>
						<packageName></packageName>
						<script>function bladedancer()
    halted = false
    local cs = cmdsep or ";"
    lasteaten = lasteaten or "bloodroot"
    x = ""
    myfleedir = myfleedir or ""

    -- Shield request
    if shieldrequested then
        x = "touch shield"
    end

    immunitycd = immunitycd or 0

    -- Concussion handling
    if requestconcussion then
        x = "wield concussion" .. cs .. "throw concussion at ground"
    end

    -- Alleviate request
    if alleviaterequested then
        x = "alleviate"
    end

    -- Phoenix handling
    if phoenixrequested and myshin() &gt; 79 then
        x = "shin phoenix"
    end

    -- Mana handling
    if manarequested and myshin() &gt; 20 then
        x = "shin manatrans all"
    end

    -- Heal handling
    if healrequested and myshin() &gt; 20 then
        x = "shin healthtrans all"
    end

    -- Immunity handling
    if immunityrequested or inimmunity then
        halted = true
        x = ""
    end

    if immunityrequested and immunitycd &lt; os.clock() then
        cecho("&lt;cyan&gt;i want immunity!")
        x = "immunity"
        immunitycd = os.clock() + 4
    end

    -- Airfist handling
    if airfistrequested and myshin() &gt; 20 then
        x = "airfist " .. target
    end

    -- Voidfist handling
    if voidfistrequested and myshin() &gt; 15 then
        x = "voidfist " .. target
    end

    -- Brokenstar handling
    if brokenstarrequested then
        x = "withdraw sword|sheathe sword|brokenstar " .. target
    end

    stancerequested = stancerequested or "sanya"

    -- Stance handling
    if stancerequested ~= stance then
        x = stancerequested
    end

    targetfleedir = targetfleedir or ""

    -- Target fleeing direction handling
    if targetfleedir ~= "" then
        if wallblocked then
            send("queue add eqbal leap " .. targetfleedir)
        else
            send("queue add eqbal " .. targetfleedir)
        end
    end

    -- Clear queue if not halted
    if not (immunityrequested or halted) then
        send("clearqueue all")
    end

    -- Construct attack if no action is set
    if x == "" and not halted then
        constructattack()
    else
        if not (halted and x == "") then
            send("queue add eqbal " .. x)
        end
    end
end

function constructattack()
    requestedstrike = ""
    lastclumsyhit = lastclumsyhit or 0
    send("clearqueue all")

    if not (AI.pommelstrategy == "prone") then
        send("curing afflictions on")
    end

    if targetflying then
        executiveoverride = "prone"
        send("leap high")
    else
        send("land")
    end

    local cansendslash = true
    confirmreactive = false

    -- Paraimpale stance
    if AI.stance == "paraimpale" then
        cansendslash = false
        if not (impaled == 1) then
            if not (affstrack.score.paralysis == 100) then
                if rebounding == 1 or shield == 1 then
                    send("queue add eqbal sheathe sword|raze " .. target .. " " .. strikedecide())
                else
                    send("queue add eqbal pommelstrike " .. target .. " neck")
                end
            else
                if canimpale then
                    send("queue add eqbal impale " .. target)
                else
                    if rebounding == 1 or shield == 1 then
                        send("queue add eqbal sheathe sword|raze " .. target)
                    else
                        send("queue add eqbal pommelstrike " .. target .. " neck")
                    end
                end
            end
        else
            send("queue add eqbal withdraw sword|infuse lightning|balanceslash " .. target .. " " .. strikedecide())
        end
    end

    -- Herbcounter stance
    if AI.stance == "herbcounter" then
        cansendslash = false
        if not (affstrack.score.paralysis == 100) and not (impaled == 1) then
            if rebounding == 1 then
                send("queue add eqbal raze " .. target)
            else
                if lastclumsyhit &lt; os.clock() - 4 or (lasthadaffs &lt; os.clock() - 1) then
                    send("queue add eqbal infuse lightning|balanceslash " .. target .. " chest")
                else
                    if hisherbbal &gt; os.clock() + 1.2 then
                        cecho("\nin pauser")
                        send("queue add eqbal pommelstrike " .. target .. " neck")
                    else
                        send("clearqueue all")
                        cecho("\n&lt;red&gt;HALTING")
                    end
                end
            end
        else
            if not (impaled == 1) then
                send("queue add eqbal stand|impale " .. target)
            else
                cansendslash = true
            end
        end
    end

    -- Reactive stance
    if AI.stance == "reactive" then
        handleReactiveStance()
    end

    -- Pommel strategy handling
    handlePommelStrategy(cansendslash)
end

function handleReactiveStance()
    reactwindow = reactwindow or 0

    if hamstringtimer &gt; os.clock() + 0.6 or affstrack.score.prone == 100 then
        if reactwindow &lt; os.clock() or affstrack.score.prone == 100 then
            confirmreactive = true
        end
    else
        if rebounding == 1 or shield == 1 then
            send("queue add eqbal sheathe sword")
            send("queue add eqbal raze " .. target .. " hamstring")
        else
            send("queue add eqbal pommelstrike " .. target .. " hamstring")
        end
    end
end

function handlePommelStrategy(cansendslash)
    if cansendslash then
        if rebounding == 1 or shield == 1 then
            send("queue add eqbal sheathe sword")
            send("queue add eqbal raze " .. target)
        else
            constructslash()
        end
    end
end

function constructslash()
    slashtype = slashtype or ""
    infusionrequested = infusionrequested or "lightning"
    limbslashtype = "limbslash"
    syncstrikes = true
    infusestring = infusestring or ""

    if not (infusionrequested == "") then
        infusestring = "infuse " .. infusionrequested
    end

    if limbslashtype == "limbslash" then
        handleLimbSlash(slashtype, infusestring)
    elseif limbslashtype == "compassslash" then
        handleCompassSlash(slashtype)
    end
end

function handleLimbSlash(slashtype, infusestring)
    local slashstring = ""

    if slashtype == "pommel" or slashtype == "" then
        slashstring = "queue add eqbal withdraw sword|pommelstrike " .. target .. " " .. strikedecide()
    elseif slashtype == "balance" then
        if syncstrikes then
            slashstring = "queue add eqbal withdraw sword|" .. infusestring .. "|sheathe sword|balanceslash " .. target .. " " .. strikedecide()
        else
            slashstring = "queue add eqbal withdraw sword|" .. infusestring .. "|sheathe sword|balanceslash " .. target
        end
    else
        slashstring = buildCustomSlash(slashtype, infusestring)
    end

    send("clearqueue all")
    send("queue add eqbal sheathe sword")
    send(slashstring)
end

function buildCustomSlash(slashtype, infusestring)
    local slashdb = {
        legs = { sl = "legslash " .. target .. " left", sr = "legslash " .. target .. " right" },
        arms = { sl = "armslash " .. target .. " left", sr = "armslash " .. target .. " right" },
        centre = { sl = "centreslash " .. target .. " up", sr = "centreslash " .. target .. " down" }
    }
    return "queue add eqbal withdraw sword|" .. infusestring .. "|" .. slashdb[slashtype].sl
end

function handleCompassSlash(slashtype)
    local tabletable = {
        head = "north",
        torso = "south",
        ["left leg"] = "southeast",
        ["right leg"] = "southwest",
        ["left arm"] = "east",
        ["right arm"] = "west"
    }
    local slashstring = "queue add eqbal withdraw sword|compassslash " .. target .. " " .. tabletable[slashtype]
    send(slashstring)
end

-- Additional functions and logic continue here...
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>constructattack</name>
						<packageName></packageName>
						<script>function constructattack()
    requestedstrike = ""
    lastclumsyhit = lastclumsyhit or 0
    send("clearqueue all")

    if not (AI.pommelstrategy == "prone") then
        send("curing afflictions on")
    end

    if targetflying then
        executiveoverride = "prone"
        send("leap high")
    else
        send("land")
    end

    local cansendslash = true
    confirmreactive = false

    -- Paraimpale stance
    if AI.stance == "paraimpale" then
        cansendslash = false
        if not (impaled == 1) then
            if not (affstrack.score.paralysis == 100) then
                if rebounding == 1 or shield == 1 then
                    send("queue add eqbal sheathe sword|raze " .. target .. " " .. strikedecide())
                else
                    send("queue add eqbal pommelstrike " .. target .. " neck")
                end
            else
                if canimpale then
                    send("queue add eqbal impale " .. target)
                else
                    if rebounding == 1 or shield == 1 then
                        send("queue add eqbal sheathe sword|raze " .. target)
                    else
                        send("queue add eqbal pommelstrike " .. target .. " neck")
                    end
                end
            end
        else
            send("queue add eqbal withdraw sword|infuse lightning|balanceslash " .. target .. " " .. strikedecide())
        end
    end

    -- Herbcounter stance
    if AI.stance == "herbcounter" then
        cansendslash = false
        if not (affstrack.score.paralysis == 100) and not (impaled == 1) then
            if rebounding == 1 then
                send("queue add eqbal raze " .. target)
            else
                if lastclumsyhit &lt; os.clock() - 4 or (lasthadaffs &lt; os.clock() - 1) then
                    send("queue add eqbal infuse lightning|balanceslash " .. target .. " chest")
                else
                    if hisherbbal &gt; os.clock() + 1.2 then
                        cecho("\nin pauser")
                        send("queue add eqbal pommelstrike " .. target .. " neck")
                    else
                        send("clearqueue all")
                        cecho("\n&lt;red&gt;HALTING")
                    end
                end
            end
        else
            if not (impaled == 1) then
                send("queue add eqbal stand|impale " .. target)
            else
                cansendslash = true
            end
        end
    end

    -- Reactive stance
    if AI.stance == "reactive" then
        handleReactiveStance()
    end

    -- Pommel strategy handling
    handlePommelStrategy(cansendslash)
end</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="no" isFolder="yes">
					<name>blademaster</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>bladedancer</name>
						<packageName></packageName>
						<script>
function bladedancer()

halted = false

local cs = cmdsep

lasteaten = lasteaten or "bloodroot"
x = ""


myfleedir = myfleedir or ""




if shieldrequested then

x = "touch shield"



end
immunitycd = immunitycd or 0

if requestconcussion then
  x = "wield concussion"..cs.."throw concussion at groud"
end

if alleviaterequested then

x = "alleviate"



end



if phoenixrequested and myshin() &gt; 79 then

x = "shin phoenix"


end


if manarequested and myshin() &gt; 20 then

x = "shin manatrans all"


end




if healrequested and myshin() &gt; 20 then

x = "shin healthtrans all"


end

if immunityrequested or inimmunity then


halted = true

x = ""


end


if immunityrequested and immunitycd &lt; os.clock() then

cecho("&lt;cyan&gt;i want immunity!")


x = "immunity"

immunitycd = os.clock() + 4


end


if airfistrequested and myshin() &gt; 20 then 

x = "airfist "..target

end



if voidfistrequested and myshin() &gt; 15 then 

x = "voidfist "..target

end



if brokenstarrequested then


x = "withdraw sword|sheathe sword|brokenstar "..target


end

stancerequested = stancerequested or "sanya"


if stancerequested ~= stance then

x = stancerequested


end
targetfleedir = targetfleedir or ""

if targetfleedir ~= "" then

if wallblocked then



send("queue add eqbal leap "..targetfleedir)


else



send("queue add eqbal "..targetfleedir)


end


end

if not(immunityrequested or halted) then

send("clearqueue all")




end


if x == "" and not(halted) then



constructattack()



else

if not(halted and x == "" ) then


send("queue add eqbal "..x)


end




end

end

function constructattack()
requestedstrike = ""
--cecho("&lt;red&gt;in construct")
lastclumsyhit = lastclumsyhit or 0


send("clearqueue all")

if not(AI.pommelstrategy == "prone")  then

send("curing afflictions on")


end

if targetflying then

executiveoverride = "prone"

send("leap high")

else


send("land")


end

local cansendslash = true

confirmreactive = false

if AI.stance == "paraimpale" then

cansendslash = false

if not(impaled == 1) then


if not(affstrack.score.paralysis == 100) then



if rebounding == 1 or shield == 1 then

send("queue add eqbal sheathe sword|raze "..target.." "..strikedecide())

else


send("queue add eqbal pommelstrike "..target.." neck")

end

else

if canimpale then

send("queue add eqbal impale "..target)

else


if rebounding == 1 or shield == 1 then

send("queue add eqbal sheathe sword|raze "..target)

else


send("queue add eqbal pommelstrike "..target.." neck")

end



end

end


else


send("queue add eqbal withdraw sword|infuse lightning|balanceslash "..target.." "..strikedecide())



end



end


if AI.stance == "herbcounter" then
cansendslash = false

if not(affstrack.score.paralysis == 100) and not(impaled == 1) then


if rebounding == 1 then

send("queue add eqbal raze "..target)


else


if lastclumsyhit &lt; os.clock() - 4 or (lasthadaffs &lt; os.clock() - 1) and not(impaled == 1) then


send("queue add eqbal infuse lightning|balanceslash "..target.." chest")

else

if hisherbbal &gt; os.clock() + 1.2 then

cecho("\nin pauser")


send("queue add eqbal pommelstrike "..target.." neck")

else

send("clearqueue all")

cecho("\n&lt;red&gt;HALTING")



end



end



end


else

if not(impaled == 1) then

send("queue add eqbal stand|impale "..target)


else
cansendslash = true




end


end


end


if AI.stance == "reactive" then

reactwindow = reactwindow or 0

if hamstringtimer &gt; os.clock() + .6 or affstrack.score.prone == 100 then




if reactwindow &lt; os.clock() or affstrack.score.prone == 100 then



confirmreactive = true




end


else --reactive but no hammies

if rebounding == 1 or shield == 1 then

send("queue add eqbal sheathe sword")
send("queue add eqbal raze "..target.." hamstring")

else
--cecho("&lt;blue&gt;hammies plox")

send("queue add eqbal pommelstrike "..target.." hamstring")



end





end



end

if AI.pommelstrategy == "heartseeker" then
cansendslash = false
chosenslash = ""
airtimer = airtimer or 0

if airtimer &lt; os.clock() then

if myshin() &lt; 20 then

if rebounding == 1 then


chosenslash = "raze "..target.." neck"


else

chosenslash = "pommelstrike "..target.." neck"

end



else

chosenslash = "airfist "..target



end



else

if rebounding == 1 then


chosenslash = "raze "..target.." neck"
else


if stancelimbdamage[truestance()].highdamage == 1 then

chosenslash = "infuse earth|centreslash "..target.." down hamstring"


end


if stancelimbdamage[truestance()].compassdamage == 1 then

chosenslash = "infuse earth|compassslash "..target.." south hamstring"


end


end


end

send("queue add eqbal "..chosenslash)



end




if AI.pommelstrategy == "impale" then

cansendslash = false


if affstrack.score.prone == 0 and not(impaled == 1) then

if affstrack.score.hamstring == 0 and keepinghamstring then

requestedstrike = "hamstring"


else

requestedstrike = "prone"


end




if rebounding == 1 or shield == 1 then

send("queue add eqbal stand|sheathe sword")
send("queue add eqbal stand|raze "..target.." "..strikedecide())

else
send("queue add eqbal sheathe sword")
send("queue add eqbal pommelstrike "..target.." "..strikedecide())

end


else


if impaled == 1 then

if affstrack.score.impaleslash == 0 then
send("queue add eqbal stand|impaleslash")


else

send("queue add eqbal stand|bladetwist")

end

else



send("queue add eqbal sheathe sword")
send("queue add eqbal stand|sheathe sword|impale "..target)





end





end





else

if rebounding == 1 or shield == 1 and (not(affstrack.score.prone == 100) and AI.pommelstrategy == "prone") then
send("curing afflictions on")

send("queue add eqbal sheathe sword")
send("queue add eqbal raze "..target)

cansendslash = false

else


if AI.pommelstrategy == "prone"  then

cansendslash = false
cecho("inside prone")


if affstrack.score.prone == 0 then

if affstrack.score.hamstring == 0 and keepinghamstring then

send("curing afflictions on")


requestedstrike = "hamstring"


send("queue add eqbal pommelstrike "..target.." "..strikedecide())
else


if targetmounted then

send("curing afflictions on")

requestedstrike = "prone"


send("queue add eqbal pommelstrike "..target.." "..strikedecide())

else

if reactwindow &gt; os.clock() then
requestedstrike = "prone"
send("curing afflictions on")


send("queue add eqbal pommelstrike "..target.." "..strikedecide())


else
if hisbal &lt; os.clock() - 3 then

send("curing afflictions on")
send("queue add eqbal infuse lightning|balanceslash "..target.." "..strikedecide())



else

send("curing afflictions off")
cecho("&lt;red&gt;\nnot curing")

end


end


end



cecho("also inside request")


end


else

if not(impaled == 1) then

send("curing afflictions on")

send("queue add eqbal impale "..target)


else

cansendslash = true



end

end


end-----pommel AI end


--new AI goes here, after rebound check



end







end --impaling end

executiveoverride = executiveoverride or ""

if not(executiveoverride == "") then
 
requestedstrike = executiveoverride


end



----breakcaptures

if cansendslash then


if rebounding == 1 or shielded == 1 then

send("queue add eqbal sheathe sword")
send("queue add eqbal raze "..target)

else


constructslash()


end


end




--end of aggressive mode






end



function constructslash()

slashtype = slashtype or ""
infusionrequested  = infusionrequested or "lightning"
limbslashtype = "limbslash"
syncstrikes = true


--limbslashed = slashtype
infusestring = infusestring or ""


if not(infusionrequested == "") then

infusestring = "infuse "..infusionrequested



end

if limbslashtype == "limbslash" then


if slashtype == "pommel" or slashtype == ""  then


slashstring = "queue add eqbal withdraw sword|pommelstrike "..target.." "..strikedecide()



elseif slashtype == "balance" then


if syncstrikes then


slashstring = "queue add eqbal withdraw sword|"..infusestring.."|sheathe sword|balanceslash "..target.." "..strikedecide()



else

slashstring = "queue add eqbal withdraw sword|"..infusestring.."|sheathe sword|balanceslash "..target

end



else



slashstring = ""

slashstring = "queue add eqbal withdraw sword|"..infusestring.."|"


slashdb = {legs = {sl = "legslash "..target.." left", sr = "legslash "..target.." right", cl = "compassslash "..target.." southeast", cr = "compassslash "..target.." southwest"}, arms = {sl = "armslash "..target.." left", sr = "armslash "..target.." right", cl = "compassslash "..target.." east", cr = "compassslash "..target.." west"}, centre = {sl = "centreslash "..target.." up", sr = "centreslash "..target.." down", cl = "compassslash "..target.." south", cr = "compassslash "..target.." north"}}

--slashy = getomniresult(slashtype)[1]

slashy = slashdb[slashtype][breakpoints[1].breakstats[stance][hislimbdamage[slashtype]]]


if hislimbdamage.legs == #breakpoints[1].breakstats[stance] and slashtype == "legs" then

executiveoverride = "prone"




end








if syncstrikes then


slashstring = slashstring..slashy.." "..strikedecide()


else


slashstring = slashstring..slashy


end


end

send("clearqueue all")
send("queue add eqbal sheathe sword")
end


if limbslashtype == "compassslash" then

local tabletable = {head = "north", torso = "south", ['left leg'] = "southeast", ['right leg'] = "southwest", ['left arm'] = "east", ['right arm'] = "west"}

slashstring = "queue add eqbal withdraw sword|compassslash "..target.." "..tabletable[slashtype].." "


end

send(infusestring.."|stand|"..slashstring)

end



function convertslashes()



slashdb = {legs = {sl = "legslash "..target.." left", sr = "legslash "..target.." right", cl = "compassslash "..target.." southeast", cr = "compassslash "..target.." southwest"}, arms = {sl = "armslash "..target.." left", sr = "armslash "..target.." right", cl = "compassslash "..target.." east", cr = "compassslash "..target.." west"}, centre = {sl = "centreslash "..target.." up", sr = "centreslash "..target.." down", cl = "compassslash "..target.." south", cr = "compassslash "..target.." north"}}


return slashdb[slashlocation]



end


function addescapes(string)

stringconverted = ""

for i = 1, #string, 1 do

if string.sub(string,i,i) == "\\" then

stringconverted = stringconverted.."\\"

else

stringconverted = stringconverted..string.sub(string,i,i)


end


end

return stringconverted


end


function db(parameter)


if parameter == "write" then

local f = assert(io.open("testdb.lua", "w"))


end


end


function requestdelete()

deleteLine()

deletep = true

deletelines = 2


end

function showprompt()

getVitals()

if deletep and deletelines &gt; 0 then


deleteLine()

deletep = false
else

deletep = false

lastpromptreceived = laststringreceived

wasprompt = 1

deleteLine()

--displayLC()

displayLC()
--afflictions

affconversion = {timeloop = "&lt;deep_pink&gt;(Tml",retribution = "&lt;deep_pink&gt;(Ret",justice = "&lt;deep_pink&gt;(Jus", dizziness = "&lt;yellow&gt;(Diz", stupidity = "&lt;yellow&gt;(Stu", epilepsy = "&lt;yellow&gt;(Epi",impatience = "&lt;yellow&gt;(Imp",depression = "&lt;yellow&gt;(Dep",shadowmadness = "&lt;yellow&gt;(Mad", anorexia = "&lt;DodgerBlue&gt;(Ano", paralysis = "&lt;red&gt;(Par",slickness = "&lt;red&gt;(Sli",darkshade = "&lt;blue&gt;(Dar", nausea = "&lt;blue&gt;(Nau&lt;\yellow&gt;", prone = "&lt;DodgerBlue&gt;(Pr&lt;\DodgerBlue&gt;", sleeping = "&lt;DodgerBlue&gt;(slp&lt;\DodgerBlue&gt;", asthma = "&lt;green&gt;(ast", clumsiness = "&lt;green&gt;(Clu", weariness = "&lt;green&gt;(Wea", hypochondria = "&lt;green&gt;(Hyp",



}

if gmcp.Char.Vitals.hp then

showstring = "\n"..math.floor(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp*100).."Hp, "..math.floor(gmcp.Char.Vitals.mp/gmcp.Char.Vitals.maxmp*100).."Mp, ".."Shin, "..myshin()

else
showstring = "\n???/???hp"

end

for i = 1, #myaffs, 1 do

if afflist[myaffs[i]] then

showstring = showstring.."&lt;"..afflist[myaffs[i]][2].."&gt;("..afflist[myaffs[i]][1]..")"



end



end


showstring = showstring..stackableaffprompt()

if gmcp.Char.Vitals.hp then


if lasthealthpoint then

if gmcp.Char.Vitals.hp &gt; lasthealthpoint then



showstring = showstring.."&lt;green&gt;"..math.abs(gmcp.Char.Vitals.hp - lasthealthpoint)

else

showstring = showstring.."&lt;red&gt;"..math.abs(gmcp.Char.Vitals.hp - lasthealthpoint)

if (math.abs(gmcp.Char.Vitals.hp - lasthealthpoint) &gt; 300) then


if candamagecounter then




if AI.stance == "counter" then

failsafe = true

AI.stance = "aggressive"
counterrequested = false
AI.strategy = "aggressive"



end






end




end

----
end

lasthealthpoint = gmcp.Char.Vitals.hp

else

lasthealthpoint = gmcp.Char.Vitals.hp


end


end



cecho(showstring)


end

end


---------------------bm specific stuff
function strikedecide()



stratlist = {{"anorexia", 100},{"slickness",50},{"asthma", 50},{"hypochondria", 50}, {"paralysis",70}}

foundone = #stratlist


stacklist = { {"paralysis", 100}, {"hypochondria", 100}, {"asthma", 100}, {"slickness", 100}, {"anorexia", 100}}


foundone = 0

for i = 1, #stacklist, 1 do


if affstrack.score[stacklist[i][1]] &lt; stacklist[i][2] and foundone == 0 then


foundone = i



end




end

jinx = foundone

lasthithit = lasthithit or "pommel"

selected = false

if intime() and lasteaten == "bloodroot" and lasthithit == "pommel" and not(AI.keepingpara) then

for i = 1, #stacklist, 1 do


if affstrack.score[stacklist[i][1]] &lt; stacklist[i][2] and i ~= jinx and not(selected) then

selected = true

foundone = i



end




end





end

afftostrike = {anorexia = "stomach", hypochondria = "chest", asthma = "throat", slickness = "underarm", paralysis = "neck", clumsiness = "ears", weariness = "shoulder"}


executiveoverride = executiveoverride or ""

decidedstrike = "strike "..target.." "..afftostrike[stacklist[foundone][1]]

--cecho(decidedstrike)


if (infusionrequested == "ice" or infusionrequested == "fire") and not(palms) then

decidedstrike = "strike "..target.." sternum"


end



--if keepinghamstring then

--decidedstrike = "strike "..target.." feet|"..decidedstrike

--end


if affstrack.score.hamstring == 0 and keepinghamstring then

decidedstrike = "strike "..target.." hamstring"


end

if executiveoverride ~= "" then

requestedstrike = executiveoverride

end
requestedstrike = requestedstrike or ""


if requestedstrike ~= "" then


decidedstrike = requestedstrike

end


if requestedstrike == "prone" then

decidedstrike = "strike "..target.." knees"

end

if requestedstrike == "hamstring" then

decidedstrike = "strike "..target.." hamstring"

end


if not(engaged) then


decidedstrike = decidedstrike.."|engage "..target


end



return decidedstrike

end

function requestedslash(limb)

slashtable = {leftleg = {singular = "compassslash "..target.." southeast", double = "legslash "..target.." left"}}



send(slashtable[limb][quanta])


end



function intime()


local x = false


if hisherbbal &gt; mybal + 1.2 and hisherbbal &gt; os.clock() then

x = true

end

return x

end

function slashed(direction, location)

opposingslash = {head = "torso", torso = "head", leftarm = "rightarm", rightarm = "leftarm", leftleg = "rightleg", rightleg = "leftleg"}





if stancemult == .8 then

mybalance = os.clock() + 2

end

if stancemult == 1 then

mybalance = os.clock() + 2.2

end

if stancemult == 1.2 then

mybalance = os.clock() + 2.6

end


if stancemult == 1.25 then

mybalance = os.clock() + 2

end


if stancemult == .9 then

mybalance = os.clock() + 2.7

end




processlimbdamage("add")
canstrike = 1


--send(strikedecide())



end


function setoffmode(var)

if var then
settingoff = true

oldstance = stance

else

settingoff = false

end


end


function processlimbdamage(type)

if currentclass == "blademaster" then


if limbslashtype == "limbslash" then

if not(settingoff) then

if limbslashed ~= "pommel" and limbslashed ~= "balance" then


if type == "add" then


if slashnames[limbslashed][hislimbdamage[limbslashed]] and blademantras then

send("say "..slashnames[limbslashed][hislimbdamage[limbslashed]])


--make exception for demonslash mode
end



requestedslash = 0


hislimbdamage[limbslashed] = hislimbdamage[limbslashed] + 1
if breakpoints[healthpoint].breakstats[stance] then

if hislimbdamage[limbslashed] &gt; #breakpoints[healthpoint].breakstats[stance] then

hislimbdamage[limbslashed] = 1

end

end


end

if type == "remove" then


if recordmode then

table.remove(limbrecordtable,#limbrecordtable)

end


hislimbdamage[limbslashed] = hislimbdamage[limbslashed] - 1

if breakpoints[healthpoint].breakstats[stance] then

if hislimbdamage[limbslashed] &lt; 1 then

hislimbdamage[limbslashed] =  #breakpoints[healthpoint].breakstats[stance]

end

end


end

end
-------------------------
else



if limbslashed ~= "pommel" and limbslashed ~= "balance" then


if type == "add" then

requestedslash = 0


hislimbsetoff[limbslashed] = hislimbsetoff[limbslashed] + 1
if breakpoints[healthpoint].setoffpoints[oldstance] then

if hislimbsetoff[limbslashed] &gt; #breakpoints[healthpoint].setoffpoints[oldstance] then

hislimbsetoff[limbslashed] = 1

end

end


end

if type == "remove" then


if recordmode then

table.remove(limbrecordtable,#limbrecordtable)

end


hislimbsetoff[limbslashed] = hislimbsetoff[limbslashed] - 1

if breakpoints[healthpoint].setoffpoints[oldstance] then

if hislimbsetoff[limbslashed] &lt; 1 then

hislimbsetoff[limbslashed] =  #breakpoints[healthpoint].setoffpoints[oldstance]

end

end


end

end



end


else




end

end



end

function applied(type)

checkbreakpoints(type)


end


</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>defensive stuff</name>
						<packageName></packageName>
						<script>function bmdefense()
myfleedir = myfleedir or ""
if not(inimmunity or immunityrequested) then


send("clearqueue all")

end
x = ""


if myfleedir ~= "" then
decidemovement()


x = "queue add eqbal "..movemethod.." "..myfleedir




end


if shieldrequested then

x = "queue add eqbal touch shield"



end
immunitycd = immunitycd or 0



if alleviaterequested then

x = "queue add eqbal alleviate"



end



if phoenixrequested and shin() &gt; 79 then

x = "queue add eqbal shin phoenix"


end


if manarequested and shin() &gt; 20 then

x = "queue add eqbal shin manatrans all"


end





if healrequested and shin() &gt; 20 then

x = "queue add eqbal shin healthtrans all"


end

if immunityrequested or inimmunity then

x = ""


end


if immunityrequested and immunitycd &lt; os.clock() then

x = "queue add eqbal immunity"
immunitycd = os.clock() + 4
end




if not(x == "") then

send(x)


end

end



function shin()

return 0
end
function dangermeter()


if listfind(nowfighting, "dwb") then





if affcount({"damagedrightleg", "damagedleftleg"}) &gt; 0 then


healrequested = true

fleerequested = true

AI.strategy = "defensive"





end




end

if listfind(nowfighting, "firelord") then



end

if listfind(nowfighting, "dw") then

if myhp("per") &lt; 50 then
healrequested = true


end



end
if listfind(nowfighting, "dwl") then

if myhp("per") &lt; 50 then
healrequested = true


end



end



end



function decidemovement()
movemethod = "go"



if affcount({"damagedrightleg", "damagedleftleg"}) &gt; 0 then

movemethod = "tumble"

end



end

function affcount(var)

varcount = 0

for i = 1, #var, 1 do

if listfind(myaffs, #var) then

varcount = varcount + 1

end




end


return varcount


end


function affhave(var)

if type(var) == "string" then


if listfind(myaffs,var) then

return true
end



else

for i = 1, #var, 1 do

if not(listfind(myaffs, var[i])) then

return false

end



end

return true

end


return false


end


function myhp(var)

if var then

if var == "per" then

return (tonumber(gmcp.Char.Vitals.hp) / tonumber(gmcp.Char.Vitals.maxhp)) * 100

end

else

return tonumber(gmcp.Char.Vitals.hp)
end


end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>AI functions</name>
						<packageName></packageName>
						<script>function bsm()


end
function override()


return ""




end
cardtable = cardtable or {}


function cardsearch(num)


bombpointer = 0

for i = 1, #cardtable, 1 do

if cardtable[i].id == num then


cardpointer = i

return true


end
end



end

function deathsearch(num, arg)

arg = arg or "target"

for i in ipairs(deathlist) do

if deathlist[i].id == num then

deathpointer = i


return deathlist[i][arg]


end


end



end

function deathedit(arg, value)

deathlist[deathpointer][arg] = value



end

function hermitsearch(num, arg)

arg = arg or "target"

for i in ipairs(hermitlist) do

if hermitlist[i].id == num then

hermitpointer = i


return hermitlist[i][arg]


end


end



end


function hermitedit(arg, value)

hermitlist[hermitpointer][arg] = value



end





function bombsearch(num)


bombpointer = 0

for i = 1, #bombtable, 1 do

if bombtable[i].id == num then


bombpointer = i

return true


end


end


return false




end


function cardedit(arg, val, num)
cecho("arg "..arg.." val ")
if num then
cardpointer = num


end



cardtable[cardpointer][arg] = val



end




function bombheldsearch(var, variance)


for i = 1, #bombtable, 1 do

if bombtable[i].intent == "keep" and bombtable[i].type == var and bombtable[i].timer &lt; os.clock() + variance then


bombpointer = i

return true


end


end


return false




end




function daggersearch(num)


bombpointer = 0

for i = 1, #daggerlist, 1 do

if daggerlist[i] == num then


bombpointer = i

return true


end


end


return false




end

function axesearch(num)


bombpointer = 0

for i = 1, #axelist, 1 do

if axelist[i] == num then


bombpointer = i

return true


end


end


return false




end


function bombtype(arg)




bombpointer = 0

for i = 1, #bombtable, 1 do

if bombtable[i].type == arg and not(bombtable[i].active) then


bombpointer = i

return true


end


end


return false




end

function limbaxe(limb)

if currentclass == "knight" then

limbrequested = limb



else

if currentclass == "dragon" then

limbrequested = limb



else


balancestring = "get axe|get dagger"




if (throwtype or "single") == "single" then


for i = 1, #axelist, 1 do


if not(listfind(juggled, axelist[i])) then

selectedaxe = axelist[i]

end


end

balancestring = balancestring .. "|wield "..selectedaxe.."|throw "..selectedaxe.." at "..target.." "..affconvertor[daggervenom()].." "..limb



else

cecho("pingsed throws")

for i = 1, #axelist, 1 do
cecho("axe from list"..axelist[i])

if listfind(juggled, axelist[i]) then

selectedaxe = axelist[i]

end


end
cecho("axe "..selectedaxe)




balancestring = balancestring .. "|throw "..selectedaxe.." at "..target.." "..affconvertor[daggervenom()].." "..limb




end



send("queue add eqbal "..balancestring)
end


end



end




function daggerdecide()

send("unwield left|unwield right|wield puppet")


venomselected = affconvertor[daggervenom()]


throw(venomselected, "dagger")


end

function jugglelimb()

if currentclass == "knight" then

lastparried = lastparried or ""


limbtestlist = {"left arm", "right arm", "head", "left arm"} 



for i, v in pairs(limbtestlist) do
cecho(i)

if limbcount[target][string.gsub(limbtestlist[i], " ","")] + weaponstabs[weaponname].damagepercent &lt; 100 and not(limbtestlist[i] == lastparried) then
return v



end

end


else





if currentclass == "dragon" then


limbtestlist = {"left leg", "right arm", "right leg", "left arm"} 



for i, v in pairs(limbtestlist) do
cecho(i)

if limbcount[target][string.gsub(limbtestlist[i], " ","")] + 25 &lt; 100 then
return v



end

end

else


limbtestlist = {"left leg", "right arm", "right leg", "left arm"} 




for i, v in pairs(limbtestlist) do

if axebreakpoints[axebreakpoint].breakpoint &gt; limbdamage[v] + .25 then
return v



end

end
return ""

end


end




end



function daggervenom()

foundone = 0
local returnvar = ""

for i = 1, #stacklist, 1 do



if affstrack.score[stacklist[i][1]] &lt; stacklist[i][2] and foundone == 0  then


foundone = i
jinx = i



end




end




if foundone &gt; 0 then

returnvar = stacklist[foundone][1]




end

return returnvar


end
function bombget(arg, num)

if num then
bombpointer = num


end

return bombtable[bombpointer][arg]



end

function bombedit(arg, val, num)
cecho("arg "..arg.." val ")
if num then
bombpointer = num


end

bombtable[bombpointer].priority = bombpriority


bombtable[bombpointer][arg] = val



end

function attackdecision()

if currentclass == "jester" then



newjesterdecide()



end


if currentclass == "bard" then

barddecide()

end


if currentclass == "blademaster" then


bmoverride()


end


if currentclass == "knight" then
x = override() or ""



if x == "" then


if battlecryrequested then
send("clearqueue all")

if hisbal &gt; os.clock() + .6 then

send("queue add eqbal battlecry "..target)



end


else


knightcombo()


end
else

send(x)





end

end


if currentclass == "dragon" then



dragondecide()



end


if currentclass == "dw" then

createreap()

end


if currentclass == "serpent" then

if ai.strategy == "stab" then

dstabdecide()

end

if ai.strategy == "hypno" then

hypnomake()


end


end





if currentclass == "occultist" then

if AI.strategy == "physicals" then

occiai()



end

if AI.strategy == "mentals" then

occimentalai()



end


if AI.strategy == "finish" then

occifinisher()



end

if attendrequested then

balancestring = "queue add eqbal attend "..target

end

if hierophantrequested then


balancestring = "queue add eqbal dop seek "..target.."|queue add eqbal dop channel fling hierophant at "..target


end

if unnamablerequested then

if affstrack.score.deaf == 100 then

balancestring = "queue add eqbal unnamable speak"

elseif affstrack.score.blind == 100 then

balancestring = "queue add eqbal unnamable vision"



else


balancestring = "queue add eqbal attend "..target



end


end


send("clearqueue all")
send(balancestring)
send(classbalancestring)



end


if currentclass == "shaman" then

newshaman()

end

if currentclass == "blademaster" then





end



end
function dangermeter()
myaffcheck = {kelp = {"asthma", "sensitivity", "weariness","clumsiness", "parasite", "healthleech", "hypochondria"},
ginseng = {"nausea", "haemophilia", "addiction", "darkshade", "lethargy"},
goldenseal = {"impatience", "dizziness", "epilepsy", "stupidity", "shadowmadness", " depression"},
bloodroot = {"paralysis", "slickness"},
ash = {"confusion", "recklessness"},
locking = {"paralysis", "asthma", "impatience", "slickness", "anorexia"},
important = {"hypochondria", "heartseed", "timeloop", "scytherus"},
bellwort = {"justice", "retribution", "timeloop"},

}


end

function dragondecide()


affcheck = {["paralysis"] = {claw = " curare", curse = "dcurse "..target.." paralysis"},["impatience"] = {curse = "dcurse "..target.." impatience"}, 
["asthma"] = {claw = " kalmia"}, ["stupidity"] = {curse = "dcurse "..target.." stupidity"},
["slickness"] = {claw = " gecko"}, ["anorexia"] = {claw = " slike"},["weariness"] = {claw = " vernalius"},["clumsiness"] = {claw = " xentio"}}



--stacklist = {{"paralysis",100}, {"impatience", 100}, {"clumsiness", 50}, {"asthma", 50},  {"slickness", 50},  {"anorexia", 100}}
limb = limbrequested

-- , curse = "dcurse "..target.." asthma"

jinx = 0

carrier = dragonaffdecide()

stacker = dragonaffdecide()

jinx = 0
carrierclaw = dragonrends()

stackerclaw = dragonrends()

jinx = 0


jinx = 0

carriercurse = dragoncurses()

stackercurse = dragoncurses()



if carrierclaw == carriercurse  then

if stacker == "paralysis"  then



end


if stacker == stackercurse then




selectedclaw = carrierclaw
selectedcurse = stackercurse



else

selectedclaw = stackerclaw
selectedcurse = carriercurse


end



if carrier == "paralysis" and selectedcurse == carriercurse and  hisherbbal &lt; os.clock() + 1 then


selectedclaw = carrierclaw
selectedcurse = carriercurse


end



if carrier == carrierclaw and keepingpara then

selectedcurse = "paralysis"


end 


else



selectedclaw = carrierclaw
selectedcurse = carriercurse



if keepingpara then

selectedcurse = "paralysis"


end 


end

limbrequested = limbrequested or ""




limb = limbrequested


if affstrack.score.paralysis == 100 then
limb = jugglelimb()
end


balstring = "rend "..target.." "..limb.." "..affcheck[selectedclaw].claw

if shielded == 1 then
balstring = "tailsmash "..target

end


if affcheck[selectedcurse].curse then



classstring = affcheck[selectedcurse].curse


else



end

if not(limb == "") then

if limbcount[target][string.gsub(limb, " ","")] + 25 == 100 and not(affstrack.score.prone == 100) then


balstring = balstring.."|breathgust "..target


end
end



send("clearqueue all")

send("queue add eqbal "..balstring)
send("queue add class "..classstring.." 1")


end


function dragonaffdecide()

foundone = 0
local returnvar = "paralysis"

for i = 1, #stacklist, 1 do



if affstrack.score[stacklist[i][1]] &lt; stacklist[i][2] and i ~= jinx and foundone == 0 then

foundone = i
jinx = i



end




end






if foundone &gt; 0 then

returnvar = stacklist[foundone][1]




end

return returnvar

end



function dragonrends()

foundone = 0
local returnvar = "paralysis"

for i = 1, #stacklist, 1 do



if affstrack.score[stacklist[i][1]] &lt; stacklist[i][2] and i ~= jinx and foundone == 0 and affcheck[stacklist[i][1]].claw  then


if dragoncursesent == stacklist[i][2] and eatbetween(stacklist[i][1]) then



else



foundone = i
jinx = i

end

end




end






if foundone &gt; 0 then

returnvar = stacklist[foundone][1]




end

return returnvar

end



function dragoncurses()

foundone = 0
local returnvar = "paralysis"

for i = 1, #stacklist, 1 do



if affstrack.score[stacklist[i][1]] &lt; stacklist[i][2] and i ~= jinx and foundone == 0 and affcheck[stacklist[i][1]].curse then

foundone = i
jinx = i



end




end






if foundone &gt; 0 then

returnvar = stacklist[foundone][1]




end

return returnvar

end





function eatbetween(argument)


if dragoncursesent == argument then

--if affstrack.score.paralysis == 100 then

--hisherbbal = hisherbbal + 1.5



--end



if hisherbbal &gt;  upcomingcurse then

return true


end 

end

return false


end





function tracktarget()

lasthadaffs = lasthadaffs or 0

hasaffs = false


for i in pairs(affstrack.score) do

if not(affstrack.score[i] == 0) then

hasaffs = true

end


end

if hasaffs then

lasthadaffs = os.clock()



end




if affstrack.score.haemophilia &lt; 50 then
bleed = 0



end

if affstrack.physicals == 0 and affstrack.score.cadmuscurse == 100 then

affstrack.score.cadmuscurse = 0
end

if ferocity == 4 and sensitivityrequested then


send("shieldstrike "..target.." mid")





end


end


function hindercalc()


if listfind("myaffs","paralysis") then

hindered = 1


else

hindered = 0

end
--a check for paralysis on me

if affstrack.score.paralysis == 100 then

hehindered = 1

else

hehindered = 0



end

--a check for paralysis on him

if cursestyle == "swiftcurse" then

mybaltime = 1


else


mybaltime = 1.65



end
--for cursing, you can add in your own balance time by adjusting mybaltime accordingly


hisbaltime = 2.1 --how much his balance of attacks is



--these values indicate how many seconds one person attacks later than the other


--these can be set by reflexes to make calculations on the fly

p = {mhb = myherbbalance,hhb = hisherbbalance, mb = mybal , hb = hisbal  , mbt = mybaltime, hbt = hisbaltime}
 

myinaction = 0
hisinaction = 0
mymomentum = 0
hismomentum = 0

simtime = 3

--simulation time in seconds

for i = 0, simtime, 0.1 do

cecho(i)

now = os.clock() + i 


if p.mhb &lt; now then

if hindered == 1 then
hindered = 0

p.mhb = now + 1.5

else

hismomentum = hismomentum - 1

p.mhb = now + 1.5

end



end

if p.mb &lt; now then

if hindered == 0 then

p.mb = now + p.mbt

hehindered = 1

else

myinaction = myinaction + .1

end




end


if p.hhb &lt; now then

if hehindered == 1 then

hehindered = 0

else

mymomentum = mymomentum - 1



end

p.hhb = now + 1.5


end


if p.hb &lt; now then

if hehindered == 0 then

p.hb = now + p.hbt

hindered = 1

else

hisinaction = hisinaction + .1


end


end




end



cecho("my inaction: "..myinaction.." his inaction: "..hisinaction.." my momentumloss: "..(-mymomentum).." his momentumloss: "..(-hismomentum))



end 



function bmai()






end

function balancequeue(text)


if text == "new" then

balancestring = ""

else


balancestring = balancestring.."|"..text

end



end

function classbalancequeue(text)


if text == "new" then

classbalancestring = ""

else


classbalancestring = classbalancestring.."|"..text

end



end



function occiai()



local selectedinstill = instillselector()

nextinstill = selectedinstill
balancequeue("new")
balancequeue("queue add eqbal readaura "..target)
classbalancequeue("new")
balancequeue("queue add eqbal instill "..target.." with "..selectedinstill)


if affstrack.physicals &gt; 2 and affstrack.score.cadmuscurse == 0 then

classbalancequeue("queue add class command bubonis at "..target)


else

classbalancequeue("queue add class command bloodleech at "..target)

end

if affstrack.physicals + affstrack.mentals &gt; 4 and affstrack.score.hecate == 0 then
send("clearqueue class")

classbalancequeue("queue add class command crone at "..target)



end





end


function occimentalai()



local selectedinstill = moonselector()

moonaff = selectedinstill

classbalancequeue("new")
balancequeue("new")
balancequeue("queue add eqbal readaura "..target)

balancequeue("queue add eqbal fling moon at "..target.." "..selectedinstill)


if affstrack.ginsengscore + affstrack.kelpscore &gt; 2 and affstrack.score.cadmuscurse == 0 then

classbalancequeue("queue add class command bubonis at "..target)


else

classbalancequeue("queue add class command bloodleech at "..target)

end


if affstrack.physicals + affstrack.mentals &gt; 4 and affstrack.score.hecate == 0 then
classbalancequeue("new")

classbalancequeue("queue add class command crone at "..target)



end




end



function instillselector()


foundone = 0
local returnvar = ""
stacklist = {{"lethargy", 40}, {"clumsiness",40},{"healthleech", 40}, {"darkshade", 40},{"haemophilia",40},{"sensitivity", 40}}

for i = 1, #stacklist, 1 do



if affstrack.score[stacklist[i][1]] &lt; stacklist[i][2] and foundone == 0 then

foundone = i
jinx = i



end




end


if foundone &gt; 0 then


returnvar = stacklist[foundone][1]



end

return returnvar



end



function instillselector2()


foundone = 0
local returnvar = ""
local lowestscore = 999
stacklist = {{"lethargy", 40}, {"clumsiness",40},{"healthleech", 40}, {"darkshade", 40},{"haemophilia",40},{"sensitivity", 40}}

for i = #stacklist, 1, -1 do



if affstrack.score[stacklist[i][1]] &lt; lowestscore and foundone == 0 then

foundone = i
jinx = i

lowestscore = affstrack.score[stacklist[i][1]]


end




end


if foundone &gt; 0 then


returnvar = stacklist[foundone][1]



end

return returnvar



end


function moonselector()


foundone = 0
local returnvar = ""
stacklist = {{"stupidity", 40}, {"hallucinations",40},{"confusion", 40}, {"epilepsy", 40},{"masochism",40},{"sensitivity", 40}}

for i = 1, #stacklist, 1 do



if affstrack.score[stacklist[i][1]] &lt; stacklist[i][2] and foundone == 0 then

foundone = i
jinx = i



end




end

if foundone &gt; 0 then


returnvar = stacklist[foundone][1]



end

return returnvar



end



function occifinisher()

classbalancequeue("new")
balancequeue("new")
balancequeue("queue add eqbal readaura "..target)


classbalancequeue("queue add class command humbug at "..target)

if affstrack.score.hecate == 100 then

if affstrack.mentals &lt; 1 then


classbalancequeue("queue add class command humbug at "..target)

balancequeue("fling moon at "..target)

else

if affstrack.score.whisperingmadness == 0 then

balancequeue("queue add eqbal whisperingmadness "..target)

else

if affstrack.mentals &lt; 3 then


balancequeue("queue add eqbal fling moon at "..target)


else

balancequeue("queue add eqbal enlighten "..target)








end



end





end


end

end

function setbalance(timeset)

if affstrack.score.lethargy &gt; 50 then

timeset = timeset * 1.25


end


hisbal = timeset + os.clock()


end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>breakprediction</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------


tostance = {thyr = .85, mir = .95, sanya = 1.05, doya = 1.1, arash = 1.15, none = 1}
stancelimbdamage = {thyr = {highdamage = 1, lowdamage = 1, compassdamage = 1}, none = {highdamage = 1, lowdamage = 1, compassdamage = 1},doya = {highdamage = 1, lowdamage = 1, compassdamage = 1},mir = {highdamage = 1, lowdamage = 1, compassdamage = 1}, sanya = {highdamage = 1, lowdamage = 1, compassdamage = 1}, arash = {highdamage = 1, lowdamage = 1, compassdamage = 1}}
function truestance()

return string.lower(string.sub(gmcp.Char.Vitals.charstats[4], 9, #gmcp.Char.Vitals.charstats[4]))


end


function stancecalc(damage, firststance, secondstance)


result = damage / tostance[firststance]

result = damage * tostance[secondstance]

return result





end
omniresults = {centre = {}, legs = {}, arms = {}}

function proceedslash(limbtype)

if limbtype == "arms" or limbtype == "legs" or limbtype == "centre" then

hislimbdamage[limbtype] = hislimbdamage[limbtype] + 1

if hislimbdamage[limbtype] &gt; #breakpoints[1].breakstats[stance] then
hislimbdamage[limbtype] = 1


end

end
lastslash = limbtype
send("assess "..target)

end

function removeslash(limbtype)


if limbtype == "arms" or limbtype == "legs" or limbtype == "centre" then

hislimbdamage[limbtype] = hislimbdamage[limbtype] - 1

if hislimbdamage[limbtype] &lt; 1 then
hislimbdamage[limbtype] = #breakpoints[1].breakstats[stance]


end



end

end

function getomniresult(limbtype)

return omniresults[limbtype]


end

function omnistarpredict(limbtype)


limbpairs = {legs = {mainlimb = "right leg", sidelimb = "left leg", main = "legslash "..target.." right", side = "legslash "..target.." left", softmain = "compassslash "..target.." southwest", softside = "compassslash "..target.." southeast"}, arms = {mainlimb = "right arm", sidelimb = "left arm", main = "armslash "..target.." right", side = "armslash "..target.." left", softmain = "compassslash "..target.." west", softside = "compassslash "..target.." east"}, centre = {mainlimb = "head", sidelimb = "torso", main = "centreslash "..target.." down", side = "centreslash "..target.." up", softmain = "compassslash "..target.." north", softside = "compassslash "..target.." south"},}

validsequences = {}

rejectlist = {}

highdamage = stancelimbdamage[truestance()].highdamage

lowdamage = stancelimbdamage[truestance()].lowdamage


compassdamage = stancelimbdamage[truestance()].compassdamage



foundsequence = false






for sideslashing = 0, 10, 1 do

for mainslashing = 0, 10, 1 do


for sidecompass = 0, 10, 1 do

for maincompass = 0, 10, 1 do




if not(foundsequence) or foundsequence then


done = false

if dirfor == 0 then

direction = "main"

else

direction = "alt"



end

templimbdamage = {}

for i in pairs(limbdamage) do
templimbdamage[i] = limbdamage[i]


end




sequence = {}

done = false


--maincompasses

if maincompass &gt; 0 then

for j = 1, maincompass, 1 do

table.insert(sequence, limbpairs[limbtype]["softmain"])

templimbdamage[limbpairs[limbtype]["mainlimb"]] = templimbdamage[limbpairs[limbtype]["mainlimb"]] + compassdamage


end

if templimbdamage[limbpairs[limbtype]["mainlimb"]] &gt; 100 then

done = true


end


end

--sidecompasses

if sidecompass &gt; 0 then

for j = 1, sidecompass, 1 do

table.insert(sequence, limbpairs[limbtype]["softside"])

templimbdamage[limbpairs[limbtype]["sidelimb"]] = templimbdamage[limbpairs[limbtype]["sidelimb"]] + compassdamage

end

if templimbdamage[limbpairs[limbtype]["sidelimb"]] &gt; 100 then

done = true


end


end

foundone = false


if mainslashing &gt; 0 then

for j = 1, mainslashing, 1 do

if not(done) then

table.insert(sequence, limbpairs[limbtype]["main"])


templimbdamage[limbpairs[limbtype]["mainlimb"]] = templimbdamage[limbpairs[limbtype]["mainlimb"]] + highdamage
templimbdamage[limbpairs[limbtype]["sidelimb"]] = templimbdamage[limbpairs[limbtype]["sidelimb"]] + lowdamage



if templimbdamage[limbpairs[limbtype]["mainlimb"]] &gt; 100 or templimbdamage[limbpairs[limbtype]["sidelimb"]] &gt; 100 then

--cecho("breaks found")

done = true
if templimbdamage[limbpairs[limbtype]["mainlimb"]] &gt; 100 and templimbdamage[limbpairs[limbtype]["sidelimb"]] &gt; 100 and not(foundone) then

foundone = true

foundsequence = true
--cecho("breaks success found "..maincompass.."-"..sidecompass)

caninsert = true
same = false


for cs = 1, #validsequences, 1 do

if #sequence == #validsequences[cs] then

same = true

for is = 1, #sequence, 1 do

if not(sequence[is] == validsequences[cs][is]) then

same = false

end


end


if same == true then
caninsert = false


end



end



end




if caninsert then

table.insert(validsequences, sequence)

else


table.insert(rejectlist, sequence)



end


end



end

end


end


end

--foundone = false

if sideslashing &gt; 0 then

--cecho("sideslashing at "..sideslashing)


for j = 1, sideslashing, 1 do

if not(done) then

table.insert(sequence, limbpairs[limbtype]["side"])


templimbdamage[limbpairs[limbtype]["mainlimb"]] = templimbdamage[limbpairs[limbtype]["mainlimb"]] + lowdamage
templimbdamage[limbpairs[limbtype]["sidelimb"]] = templimbdamage[limbpairs[limbtype]["sidelimb"]] + highdamage


if templimbdamage[limbpairs[limbtype]["mainlimb"]] &gt; 100 or templimbdamage[limbpairs[limbtype]["sidelimb"]] &gt; 100 then

--cecho("breaks found")

done = true
if templimbdamage[limbpairs[limbtype]["mainlimb"]] &gt; 100 and templimbdamage[limbpairs[limbtype]["sidelimb"]] &gt; 100 and not(foundone) then


foundone = true

foundsequence = true





caninsert = true

same = false


for cs = 1, #validsequences, 1 do

if #sequence == #validsequences[cs] then

same = true

for is = 1, #sequence, 1 do

if not(sequence[is] == validsequences[cs][is]) then

same = false

end


end


if same == true then
caninsert = false


end


end



end




if caninsert then

table.insert(validsequences, sequence)

else


table.insert(rejectlist, sequence)


end




end



end

end


end







end --end of foundsequence


end--end of alternator


end--end of maincompass

end--end of sidecompass

end --end of mainslashing

end--end of sideslashing

maxlength = 100
chosen = 1

for i = 1, #validsequences, 1 do

if #validsequences[i] &lt; maxlength then

maxlength = #validsequences[i]
chosen = i


end



end
omniresults[limbtype] = validsequences[chosen]

return validsequences[chosen]




end


function omnipredict(limbtype)



highdamage = highdamage or 20
lowdamage = lowdamage or 0


foundsequence = false

for sidecompass = 0, 10, 1 do

for maincompass = 0, 10, 1 do


for dirfor = 0, 1, 1 do



if not(foundsequence) then


done = false

if dirfor == 0 then

direction = "main"

else

direction = "alt"



end

templimbdamage = {}

for i in pairs(limbdamage) do
templimbdamage[i] = limbdamage[i]


end




sequence = {}

done = false


--maincompasses

if maincompass &gt; 0 then

for j = 1, maincompass, 1 do

table.insert(sequence, limbpairs[limbtype]["softmain"])

templimbdamage[limbpairs[limbtype]["mainlimb"]] = templimbdamage[limbpairs[limbtype]["mainlimb"]] + highdamage

end

if templimbdamage[limbpairs[limbtype]["mainlimb"]] &gt; 100 then

done = true


end


end


if sidecompass &gt; 0 then

for j = 1, sidecompass, 1 do

table.insert(sequence, limbpairs[limbtype]["softside"])

templimbdamage[limbpairs[limbtype]["sidelimb"]] = templimbdamage[limbpairs[limbtype]["sidelimb"]] + highdamage

end

if templimbdamage[limbpairs[limbtype]["sidelimb"]] &gt; 100 then

done = true


end


end



for i = 1, 10, 1 do



if not(done) then


if direction == "main" then

table.insert(sequence, limbpairs[limbtype]["main"])

templimbdamage[limbpairs[limbtype]["mainlimb"]] = templimbdamage[limbpairs[limbtype]["mainlimb"]] + highdamage
templimbdamage[limbpairs[limbtype]["sidelimb"]] = templimbdamage[limbpairs[limbtype]["sidelimb"]] + lowdamage

direction = "alt"


else

table.insert(sequence, limbpairs[limbtype]["side"])


templimbdamage[limbpairs[limbtype]["mainlimb"]] = templimbdamage[limbpairs[limbtype]["mainlimb"]] + lowdamage
templimbdamage[limbpairs[limbtype]["sidelimb"]] = templimbdamage[limbpairs[limbtype]["sidelimb"]] + highdamage


direction = "main"


end




if templimbdamage[limbpairs[limbtype]["mainlimb"]] &gt; 100 or templimbdamage[limbpairs[limbtype]["sidelimb"]] &gt; 100 then

done = true
if templimbdamage[limbpairs[limbtype]["mainlimb"]] &gt; 100 and templimbdamage[limbpairs[limbtype]["sidelimb"]] &gt; 100 then

foundsequence = true


end



end




end


end


end


end--end of alternator

end--end of maincompass

end--end of sidecompass



end



function predictbreak(limbtype )

highdamage = highdamage or 20
lowdamage = lowdamage or 0


done = false

foundsequence = false

--check for alternating

direction = "main"


templimbdamage = {}

for i in pairs(limbdamage) do
templimbdamage[i] = limbdamage[i]


end




sequence = {}

done = false

--main alternating


for i = 1, 10, 1 do



if not(done) then


if direction == "main" then

table.insert(sequence, limbpairs[limbtype]["main"])

templimbdamage[limbpairs[limbtype]["mainlimb"]] = templimbdamage[limbpairs[limbtype]["mainlimb"]] + highdamage
templimbdamage[limbpairs[limbtype]["sidelimb"]] = templimbdamage[limbpairs[limbtype]["sidelimb"]] + lowdamage

direction = "alt"


else

table.insert(sequence, limbpairs[limbtype]["side"])


templimbdamage[limbpairs[limbtype]["mainlimb"]] = templimbdamage[limbpairs[limbtype]["mainlimb"]] + lowdamage
templimbdamage[limbpairs[limbtype]["sidelimb"]] = templimbdamage[limbpairs[limbtype]["sidelimb"]] + highdamage


direction = "main"


end




if templimbdamage[limbpairs[limbtype]["mainlimb"]] &gt; 100 or templimbdamage[limbpairs[limbtype]["sidelimb"]] &gt; 100 then

cecho("breaks found")

done = true
if templimbdamage[limbpairs[limbtype]["mainlimb"]] &gt; 100 and templimbdamage[limbpairs[limbtype]["sidelimb"]] &gt; 100 then

foundsequence = true
cecho("breaks success found")


end



end




end


end









--alt alternating


if not(foundsequence) then


sequence = {}

done = false

direction = "alt"


templimbdamage = {}

for i in pairs(limbdamage) do
templimbdamage[i] = limbdamage[i]


end




for i = 1, 10, 1 do



if not(done) then


if direction == "main" then

table.insert(sequence, limbpairs[limbtype]["main"])

templimbdamage[limbpairs[limbtype]["mainlimb"]] = templimbdamage[limbpairs[limbtype]["mainlimb"]] + highdamage
templimbdamage[limbpairs[limbtype]["sidelimb"]] = templimbdamage[limbpairs[limbtype]["sidelimb"]] + lowdamage

direction = "alt"


else

table.insert(sequence, limbpairs[limbtype]["side"])


templimbdamage[limbpairs[limbtype]["mainlimb"]] = templimbdamage[limbpairs[limbtype]["mainlimb"]] + lowdamage
templimbdamage[limbpairs[limbtype]["sidelimb"]] = templimbdamage[limbpairs[limbtype]["sidelimb"]] + highdamage


direction = "main"


end




if templimbdamage[limbpairs[limbtype]["mainlimb"]] &gt; 100 or templimbdamage[limbpairs[limbtype]["sidelimb"]] &gt; 100 then

cecho("breaks found")

done = true
if templimbdamage[limbpairs[limbtype]["mainlimb"]] &gt; 100 and templimbdamage[limbpairs[limbtype]["sidelimb"]] &gt; 100 then

foundsequence = true
cecho("breaks success found alternating")


end



end




end


end





end

--single limb first

if not(foundsequence) then

sequence = {}


done = false

direction = "alt"


templimbdamage = {}

for i in pairs(limbdamage) do
templimbdamage[i] = limbdamage[i]


end


table.insert(sequence, limbpairs[limbtype]["softmain"])

templimbdamage[limbpairs[limbtype]["mainlimb"]] = templimbdamage[limbpairs[limbtype]["mainlimb"]] + highdamage



for i = 1, 10, 1 do



if not(done) then


if direction == "main" then

table.insert(sequence, limbpairs[limbtype]["main"])

templimbdamage[limbpairs[limbtype]["mainlimb"]] = templimbdamage[limbpairs[limbtype]["mainlimb"]] + highdamage
templimbdamage[limbpairs[limbtype]["sidelimb"]] = templimbdamage[limbpairs[limbtype]["sidelimb"]] + lowdamage

direction = "alt"


else

table.insert(sequence, limbpairs[limbtype]["side"])


templimbdamage[limbpairs[limbtype]["mainlimb"]] = templimbdamage[limbpairs[limbtype]["mainlimb"]] + lowdamage
templimbdamage[limbpairs[limbtype]["sidelimb"]] = templimbdamage[limbpairs[limbtype]["sidelimb"]] + highdamage


direction = "main"


end




if templimbdamage[limbpairs[limbtype]["mainlimb"]] &gt; 100 or templimbdamage[limbpairs[limbtype]["sidelimb"]] &gt; 100 then

cecho("breaks found")

done = true
if templimbdamage[limbpairs[limbtype]["mainlimb"]] &gt; 100 and templimbdamage[limbpairs[limbtype]["sidelimb"]] &gt; 100 then

foundsequence = true
cecho("one main alternating")


end



end




end


end





end







--alternate single limb first


if not(foundsequence) then


sequence = {}

direction = "main"


done = false

templimbdamage = {}

for i in pairs(limbdamage) do
templimbdamage[i] = limbdamage[i]


end


table.insert(sequence, limbpairs[limbtype]["softside"])

templimbdamage[limbpairs[limbtype]["sidelimb"]] = templimbdamage[limbpairs[limbtype]["sidelimb"]] + highdamage



for i = 1, 10, 1 do



if not(done) then


if direction == "main" then

table.insert(sequence, limbpairs[limbtype]["main"])

templimbdamage[limbpairs[limbtype]["mainlimb"]] = templimbdamage[limbpairs[limbtype]["mainlimb"]] + highdamage
templimbdamage[limbpairs[limbtype]["sidelimb"]] = templimbdamage[limbpairs[limbtype]["sidelimb"]] + lowdamage

direction = "alt"


else

table.insert(sequence, limbpairs[limbtype]["side"])


templimbdamage[limbpairs[limbtype]["mainlimb"]] = templimbdamage[limbpairs[limbtype]["mainlimb"]] + lowdamage
templimbdamage[limbpairs[limbtype]["sidelimb"]] = templimbdamage[limbpairs[limbtype]["sidelimb"]] + highdamage


direction = "main"


end




if templimbdamage[limbpairs[limbtype]["mainlimb"]] &gt; 100 or templimbdamage[limbpairs[limbtype]["sidelimb"]] &gt; 100 then

cecho("breaks found")

done = true
if templimbdamage[limbpairs[limbtype]["mainlimb"]] &gt; 100 and templimbdamage[limbpairs[limbtype]["sidelimb"]] &gt; 100 then

foundsequence = true
cecho("one main alternating")


end



end




end


end





end




--double compass alternating


if not(foundsequence) then

sequence = {}

done = false

direction = "main"


templimbdamage = {}

for i in pairs(limbdamage) do
templimbdamage[i] = limbdamage[i]


end


table.insert(sequence, limbpairs[limbtype]["softmain"])

templimbdamage[limbpairs[limbtype]["mainlimb"]] = templimbdamage[limbpairs[limbtype]["mainlimb"]] + highdamage

table.insert(sequence, limbpairs[limbtype]["softside"])

templimbdamage[limbpairs[limbtype]["sidelimb"]] = templimbdamage[limbpairs[limbtype]["sidelimb"]] + highdamage



for i = 1, 10, 1 do



if not(done) then


if direction == "main" then

table.insert(sequence, limbpairs[limbtype]["main"])

templimbdamage[limbpairs[limbtype]["mainlimb"]] = templimbdamage[limbpairs[limbtype]["mainlimb"]] + highdamage
templimbdamage[limbpairs[limbtype]["sidelimb"]] = templimbdamage[limbpairs[limbtype]["sidelimb"]] + lowdamage

direction = "alt"


else

table.insert(sequence, limbpairs[limbtype]["side"])


templimbdamage[limbpairs[limbtype]["mainlimb"]] = templimbdamage[limbpairs[limbtype]["mainlimb"]] + lowdamage
templimbdamage[limbpairs[limbtype]["sidelimb"]] = templimbdamage[limbpairs[limbtype]["sidelimb"]] + highdamage


direction = "main"


end




if templimbdamage[limbpairs[limbtype]["mainlimb"]] &gt; 100 or templimbdamage[limbpairs[limbtype]["sidelimb"]] &gt; 100 then

cecho("breaks found")

done = true
if templimbdamage[limbpairs[limbtype]["mainlimb"]] &gt; 100 and templimbdamage[limbpairs[limbtype]["sidelimb"]] &gt; 100 then

foundsequence = true
cecho("one main alternating")


end



end




end


end





end




end
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>new throwing stuff</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------



function throw(venom, weapon, limb, jugglejug)

limb = limb or ""


if venom == "juggle" then



if weapon == "dagger" then

send("queue add eqbal juggle "..daggerlist[1].." "..daggerlist[2].." "..daggerlist[3])


end

if weapon == "axe" then

send("queue add eqbal juggle "..axelist[1].." "..axelist[2].." "..axelist[3])


end

if weapon == "javelin" then

send("queue add eqbal juggle "..javelinlist[1].." "..javelinlist[2].." "..javelinlist[3])


end



else


if not(jugglejug) and #juggled == 0 then


if weapon == "dagger" then

send("queue add eqbal juggle "..daggerlist[1].." "..daggerlist[2].." "..daggerlist[3])


end

if weapon == "axe" then

send("queue add eqbal juggle "..axelist[1].." "..axelist[2].." "..axelist[3])


end

if weapon == "javelin" then

send("queue add eqbal juggle "..javelinlist[1].." "..javelinlist[2].." "..javelinlist[3])


end



else


send("queue add eqbal wipe "..juggled[1].."|throw "..juggled[1].." at "..target.." "..venom.." "..limb.."|wp "..juggled[1])

end



end



end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>predictions</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function ignorecurebalance(bal)

if heldcures[bal] == 0 then

cecho("&lt;green&gt;Now pausing "..bal.." balance")

heldcures[bal] = 1
end


end


function enablecurebalance(bal)

if heldcures[bal] == 1 then
cecho("&lt;green&gt;Now enabling "..bal.." balance")

heldcures[bal] = 0

end

end



function addignore(aff)


table.insert(cureignorelist, aff)
cecho("\n&lt;green&gt;now ignoring "..aff)






end
function removeignore(aff)


cureignorelist = listremove(cureignorelist, aff)

cecho("&lt;green&gt;now curing "..aff.." again")

end


curelist = {
aeon = {bal = "smoke", cure = "smoke elm", fake = "Oblive takes a long drag off her ornately carved ivory pipe."},
paralysis = {bal = "herb", cure = "magnesium", fake = "Oblive eats a magnesium chip."},
slickness = {bal = "smoke", cure = "smoke valerian", fake = "Oblive takes a long drag off her ornately carved ivory pipe."},
asthma = {bal = "herb", cure = "aurum", fake = "Oblive eats an aurum flake."},
parasite = {bal = "herb", cure = "aurum", fake = "Oblive eats an aurum flake."},
weariness = {bal = "herb", cure = "aurum", fake = "Oblive eats an aurum flake."},
clumsiness = {bal = "herb", cure = "aurum", fake = "Oblive eats an aurum flake."},
healthleech = {bal = "herb", cure = "aurum", fake = "Oblive eats an aurum flake."},
hypochondria = {bal = "herb", cure = "aurum", fake = "Oblive eats an aurum flake."},
sensitivity = {bal = "herb", cure = "aurum", fake = "Oblive eats an aurum flake."},
depression = {bal = "herb", cure = "plumbum", fake = "Oblive eats an plumbum flake."},
impatience = {bal = "herb", cure = "plumbum", fake = "Oblive eats an plumbum flake."},
shadowmadness = {bal = "herb", cure = "plumbum", fake = "Oblive eats an plumbum flake."},
stupidity = {bal = "herb", cure = "plumbum", fake = "Oblive eats an plumbum flake.", focusable = true},
dizziness = {bal = "herb", cure = "plumbum", fake = "Oblive eats an plumbum flake.", focusable = true},
["unweavingmind (1)"] = {bal = "herb", cure = "plumbum", fake = "Oblive eats an plumbum flake."},
["unweavingmind (2)"] = {bal = "herb", cure = "plumbum", fake = "Oblive eats an plumbum flake."},
["unweavingmind (3)"] = {bal = "herb", cure = "plumbum", fake = "Oblive eats an plumbum flake."},
["unweavingmind (4)"] = {bal = "herb", cure = "plumbum", fake = "Oblive eats an plumbum flake."},
["unweavingmind (5)"] = {bal = "herb", cure = "plumbum", fake = "Oblive eats an plumbum flake."},
["unweavingmind (5)"] = {bal = "herb", cure = "plumbum", fake = "Oblive eats an plumbum flake."},
nausea = {bal = "herb", cure = "ferrum", fake = "Oblive eats an ferrum flake."},
darkshade = {bal = "herb", cure = "ferrum", fake = "Oblive eats an ferrum flake."},
addiction = {bal = "herb", cure = "ferrum", fake = "Oblive eats an ferrum flake."},
scytherus = {bal = "herb", cure = "ferrum", fake = "Oblive eats an ferrum flake."},
addiction = {bal = "herb", cure = "ferrum", fake = "Oblive eats an ferrum flake."},
lethargy= {bal = "herb", cure = "ferrum", fake = "Oblive eats an ferrum flake."},
haemophilia = {bal = "herb", cure = "ferrum", fake = "Oblive eats an ferrum flake."},
["unweavingbody (1)"] = {bal = "herb", cure = "ferrum", fake = "Oblive eats an ferrum flake."},
["unweavingbody (2)"] = {bal = "herb", cure = "ferrum", fake = "Oblive eats an ferrum flake."},
["unweavingbody (3)"] = {bal = "herb", cure = "ferrum", fake = "Oblive eats an ferrum flake."},
["unweavingbody (4)"] = {bal = "herb", cure = "ferrum", fake = "Oblive eats an ferrum flake."},
["unweavingbody (5)"] = {bal = "herb", cure = "ferrum", fake = "Oblive eats an ferrum flake."},
paranoia= {bal = "herb", cure = "stannum", fake = "Oblive eats an stannum flake.", focusable = true},
hypersomnia = {bal = "herb", cure = "stannum", fake = "Oblive eats an stannum flake."},
hallucinations = {bal = "herb", cure = "stannum", fake = "Oblive eats an stannum flake.", focusable = true},
dementia = {bal = "herb", cure = "stannum", fake = "Oblive eats an stannum flake.", focusable = true},
vertigo = {bal = "herb", cure = "argentum", fake = "Oblive eats an argentum flake.", focusable = true},
agoraphobia = {bal = "herb", cure = "argentum", fake = "Oblive eats an argentum flake.", focusable = true},
claustrophobia = {bal = "herb", cure = "argentum", fake = "Oblive eats an argentum flake.", focusable = true},
loneliness = {bal = "herb", cure = "argentum", fake = "Oblive eats an argentum flake.", focusable = true},
timeloop = {bal = "herb", cure = "cuprum", fake = "Oblive eats an cuprum flake."},
justice = {bal = "herb", cure = "cuprum", fake = "Oblive eats an cuprum flake."},
retribution = {bal = "herb", cure = "cuprum", fake = "Oblive eats an cuprum flake."},
prone = {bal = "none", cure = "stand", fake = "Oblive stands up."},
webbed = {bal = "writhe", cure = "writhe",},
entangled = {bal = "writhe", cure = "writhe",},
roped = {bal = "writhe", cure = "writhe", },
sleeping = {bal = "none", cure = "wake"},
fear = {bal = "none", cure = "compose", fake = "Oblive stands up."},
brokenleftleg = {bal = "salve", cure = "apply mending to legs", fake = "Oblive takes some salve from a vial and rubs it on her legs."},
brokenrightleg = {bal = "salve", cure = "apply mending to legs", fake = "Oblive takes some salve from a vial and rubs it on her legs."},
brokenrightarm = {bal = "salve", cure = "apply mending to arms", fake = "Oblive takes some salve from a vial and rubs it on her arms."},
brokenleftarm = {bal = "salve", cure = "apply mending to arms", fake = "Oblive takes some salve from a vial and rubs it on her arms."},
["burning (1)"] = {bal = "salve", cure = "apply mending to torso", fake = "Oblive takes some salve from a vial and rubs it on her torso."},
["burning (2)"] = {bal = "salve", cure = "apply mending to torso", fake = "Oblive takes some salve from a vial and rubs it on her torso."},
["burning (3)"] = {bal = "salve", cure = "apply mending to torso", fake = "Oblive takes some salve from a vial and rubs it on her torso."},
["burning (4)"] = {bal = "salve", cure = "apply mending to torso", fake = "Oblive takes some salve from a vial and rubs it on her torso."},
["burning (5)"] = {bal = "salve", cure = "apply mending to torso", fake = "Oblive takes some salve from a vial and rubs it on her torso."},

shivering = {bal = "salve", cure = "apply caloric to torso", fake = "Oblive takes some salve from a vial and rubs it on her torso."},
frozen = {bal = "salve", cure = "apply caloric to torso", fake = "Oblive takes some salve from a vial and rubs it on her torso."},

ablaze = {bal = "salve", cure = "apply mending to torso", fake = "Oblive takes some salve from a vial and rubs it on her torso."},

itching = {bal = "salve", cure = "apply epidermal to torso", fake = "Oblive takes some salve from a vial and rubs it on her torso."},
anorexia = {bal = "salve", cure = "apply epidermal to torso", fake = "Oblive takes some salve from a vial and rubs it on her torso.", focusable = true},
damagedleftleg = {bal = "salve", cure = "apply restoration to legs", fake = "Oblive takes some salve from a vial and rubs it on her legs."},
damagedrightleg = {bal = "salve", cure = "apply restoration to legs", fake = "Oblive takes some salve from a vial and rubs it on her legs."},
damagedhead = {bal = "salve", cure = "apply restoration to head", fake = "Oblive takes some salve from a vial and rubs it on her head."},
damagedrightarm = {bal = "salve", cure = "apply restoration to arms", fake = "Oblive takes some salve from a vial and rubs it on her arms."},
damagedleftarm = {bal = "salve", cure = "apply restoration to arms", fake = "Oblive takes some salve from a vial and rubs it on her arms."},
["pressure (1)"] = {bal = "smoke", cure = "outr pear|eat pear", },
["pressure (2)"] = {bal = "smoke", cure = "outr pear|eat pear", },
["pressure (3)"] = {bal = "smoke", cure = "outr pear|eat pear", },
["pressure (4)"] = {bal = "smoke", cure = "outr pear|eat pear", },
["pressure (5)"] = {bal = "smoke", cure = "outr pear|eat pear", },
["pressure (6)"] = {bal = "smoke", cure = "outr pear|eat pear", },
["pressure (7)"] = {bal = "smoke", cure = "outr pear|eat pear", },
["pressure (8)"] = {bal = "smoke", cure = "outr pear|eat pear", },
["unweavingspirit (1)"] = {bal = "smoke", cure = "smoke elm", fake = "Oblive takes a long drag off her ornately carved ivory pipe."},
["unweavingspirit (2)"] = {bal = "smoke", cure = "smoke elm", fake = "Oblive takes a long drag off her ornately carved ivory pipe."},
["unweavingspirit (3)"] = {bal = "smoke", cure = "smoke elm", fake = "Oblive takes a long drag off her ornately carved ivory pipe."},
["unweavingspirit (4)"] = {bal = "smoke", cure = "smoke elm", fake = "Oblive takes a long drag off her ornately carved ivory pipe."},
["unweavingspirit (5)"] = {bal = "smoke", cure = "smoke elm", fake = "Oblive takes a long drag off her ornately carved ivory pipe."},
manaleech = {bal = "smoke", cure = "smoke valerian", fake = "Oblive takes a long drag off her ornately carved ivory pipe."},
disloyalty = {bal = "smoke", cure = "smoke valerian", fake = "Oblive takes a long drag off her ornately carved ivory pipe."},
deadening = {bal = "smoke", cure = "smoke elm", fake = "Oblive takes a long drag off her ornately carved ivory pipe."},
tension = {bal = "smoke", cure = "smoke elm", fake = "Oblive takes a long drag off her ornately carved ivory pipe."},

}
cureignorelist = {



}



prioritylist = {
"asleep",
"aeon",

"webbed",
"entangled",
"roped",
"prone",


"paralysis",
"timeloop",

"impatience",
"asthma",
"slickness",
 "depression",
 "shadowmadness",
 
"unweavingbody (3)",
"nausea",
"haemophilia",
"addiction",
"unweavingmind (3)",
"schytherus",
"hypochondria",
"dizziness",
"stupidity",

"healthleech",
"sensitivity",

"itching",
"anorexia",
"ablaze",
"burning (1)",
"unweavingmind (1)",
"unweavingmind (2)",

"shivering",
"frozen",
"damagedhead",
"brokenleftleg",
"brokenrightleg",
"brokenleftarm",
"brokenrightarm",
"damagedleftleg",
"damagedrightleg",
"damagedleftarm",
"damagedrightarm",
"manaleech",
"deadening",
"disloyalty",
"tension",
"pressure (1)",
"pressure (2)",
"pressure (3)",
"pressure (4)",
"pressure (5)",
"pressure (6)",
"pressure (7)",
"pressure (8)",
"unweavingspirit (1)",
"unweavingspirit (2)",
"unweavingspirit (3)",
"unweavingspirit (4)",
"unweavingspirit (5)",


}


function mybleed()

return tonumber(string.sub(gmcp.Char.Vitals.charstats[1], 8, #gmcp.Char.Vitals.charstats[1]))

end

realcures = {clot = 0, potash = 0, sip = 0,herb = 0, salve = 0, smoke = 0, focus = 0, writhe = 0, none = 0}

heldcures = {clot = 0, potash = 0, sip = 0,herb = 0, salve = 0, smoke = 0, focus = 0, writhe = 0, none = 0}
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>limbdamage</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function limbdamagedone(limb, damage)

if not(damage &gt; 60) then


end



if targetlimbcooldowns[limb] &lt; os.time() then

limbdamage[limb] = limbdamage[limb] + damage

if limbdamage[limb] &gt; 100 then

--limb broke 

limbdamage[limb] = 0
targetbrokenlimbs[limb] = 100
tempTimer(4, "targetbrokenlimbs["..limb.."] = 0")
 targetlimbcooldowns[limb] = os.time() + 4
 





end



end



end
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>illusion engine</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------


function herbillusion(herb)



mainline = "Oblive gazes intently at you, a red glint in her eyes, and blackbirds flit around at the edges of your vision.\\n"


if herb == "kelp" then

illline = "Oblive eats a piece of kelp."


end

if herb == "bloodroot" then

illline = "Oblive eats a magnesium chip."


end


return "conjure illusion "..mainline..illline



end</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="no" isFolder="yes">
					<name>AK 4.1</name>
					<packageName>AK 4.1</packageName>
					<script></script>
					<eventHandlerList />
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>AK Opponent Tracking</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
affstrack = {
        venoms = {
                ["xentio"]     = "clumsiness",
                ["eurypteria"] = "recklessness",
                ["kalmia"]     = "asthma",
                ["delphinium"] = "sleep",
                ["digitalis"]  = "shyness",
                ["darkshade"]  = "darkshade",
                ["curare"]     = "paralysis",
                ["epteth"]     = "crippledarm",
                ["prefarar"]   = "sensitivity",
                ["monkshood"]  = "disloyalty",
                ["euphorbia"]  = "illness",
                ["colocasia"]  = "deafblind",
                ["vernalius"]  = "weariness",
                ["epseth"]     = "crippledleg",
                ["larkspur"]   = "dizziness",
                ["slike"]      = "anorexia",
                ["notechis"]   = "haemophilia",
                ["vardrax"]    = "addiction",
                ["aconite"]    = "stupidity",
                ["selarnia"]   = "selarnia",
                ["gecko"]      = "slickness",
                ["scytherus"]  = "scytherus",
                ["voyria"]     = "voyria",
        },
 
        applied = {
                ["body"]  = {"anorexia","frozen"},
                ["skin"]  = {"anorexia", "crippledarm", "crippledleg","frozen"},
                ["torso"] = {"anorexia", "torso", "aflame"},
                ["head"]  = {"head"},
                ["arms"]  = {"crippledarm", "rightarm", "leftarm"},
                ["legs"]  = {"crippledleg","rightleg","leftleg"}
        },
 
        eaten = {
                ["piece of kelp"]    = {"asthma", "clumsiness", "hypochondria", "sensitivity", "weariness", "healthleech", "lethargy"},
                ["aurum flake"]      = {"asthma", "clumsiness", "hypochondria", "sensitivity", "weariness", "healthleech", "lethargy"},
                ["lobelia seed"]     = {"agoraphobia", "claustrophobia", "loneliness", "masochism", "recklessness", "vertigo"},
                ["argentum flake"]   = {"agoraphobia", "claustrophobia", "loneliness", "masochism", "recklessness", "vertigo"},
                ["prickly ash bark"] = {"confusion", "dementia", "hallucinations", "hypersomnia", "paranoia"},
                ["stannum flake"]    = {"confusion", "dementia", "hallucinations", "hypersomnia", "paranoia"},
                ["bellwort flower"]  = {"generosity", "pacifism"},
                ["cuprum flake"]     = {"generosity", "pacifism"},
                ["bayberry bark"]         = {"blind"},
                ["arsenic pellet"]   = {"blind"},
                ["hawthorn berry"]   = {"deaf"},
                ["calamine crystal"] = {"deaf"},
                ["goldenseal root"]  = {"dizziness", "epilepsy", "impatience", "shyness", "stupidity"},
                ["plumbum flake"]    = {"dizziness", "epilepsy", "impatience", "shyness", "stupidity"},
                ["bloodroot leaf"]   = {"paralysis", "slickness"},
                ["magnesium chip"]   = {"paralysis", "slickness"},
                ["ginseng root"]     = {"addiction", "darkshade", "haemophilia", "lethargy", "illness", "scytherus"},
                ["ferrum flake"]     = {"addiction", "darkshade", "haemophilia", "lethargy", "illness", "scytherus"},
                ["rage"]             = {"generosity", "pacifism"},
        },
 
        focused = {
                "agoraphobia",
                "anorexia",
                "claustrophobia",
                "confusion",
                "dizziness",
                "epilepsy",
                "generosity",
                "loneliness",
                "masochism",
                "pacifism",
                "recklessness",
                "shyness",
                "stupidity",
                "weariness",
                "vertigo"              
        },

        treed = {
                "clumsiness",
                "aflame",
                "paranoia",
                "vertigo",
                "agoraphobia",
                "dizziness",
                "claustrophobia",
                "recklessness",
                "epilepsy",
                "addiction",
                "stupidity",
                "scytherus",
                "slickness",
                "generosity",
                "pacifism",
                "confusion",
                "voyria",
                "illness",
                "haemophilia",
                "weariness",
                "hallucinations",
                "confusion",
                "disloyalty",
                "lethargy",
                "shyness",
                "sensitivity",
                "asthma",
                "crippledarm",
                "crippledleg",
                "darkshade",
                "impatience",
                "anorexia",
                "loneliness",
                "hypochondria", 
                "selarnia",
                "leftleg",
                "leftarm",
                "rightleg",
                "rightarm",
                "frozen",
        },
 
        restored = {
                "crippledarm",
                "crippledleg",
                "rightleg",
                "leftleg",
                "rightarm",
                "leftarm",              
        },
 
        smoked = {
                "deadening",
                "disloyalty",
                "slickness",
                "manaleech",
                "aeon",
                "hellsight",
        },

        score = {
                ["addiction"]      = 0,
                ["aeon"]           = 0,
                ["agoraphobia"]    = 0,
                ["anorexia"]       = 0,
                ["aflame"]         = 0,
                ["airfist"]        = 0,
                ["asthma"]         = 0,
                ["blind"]          = 0,
                ["blackout"]       = 0,
                ["bound"]          = 0,
                ["cadmuscurse"]    = 0,
                ["claustrophobia"] = 0,
                ["clumsiness"]     = 0,
                ["confusion"]      = 0,
                ["crippledarm"]    = 0,
                ["crippledleg"]    = 0,
                ["darkshade"]      = 0,
                ["deadening"]      = 0,
                ["deaf"]           = 0,
                ["dementia"]       = 0,
                ["disloyalty"]     = 0,
                ["disrupt"]        = 0,
                ["dizziness"]      = 0,
                ["epilepsy"]       = 0,
                ["frozen"]         = 0,
                ["generosity"]     = 0,
                ["haemophilia"]    = 0,
                ["hallucinations"] = 0,
                ["hamstring"]      = 0,
                ["healthleech"]    = 0,
                ["hecate"]         = 0,
                ["hellsight"]      = 0,
                ["hypersomnia"]    = 0,
                ["hypochondria"]   = 0,
                ["illness"]        = 0,
                ["impaleslash"]    = 0,
                ["impatience"]     = 0,
                ["insomnia"]       = 0,
                ["kola"]           = 0,
                ["lethargy"]       = 0,
                ["loneliness"]     = 0,
                ["masochism"]      = 0,
                ["manaleech"]      = 0,
                ["nausea"]         = 0,
                ["pacifism"]       = 0,
                ["paralysis"]      = 0,
                ["paranoia"]       = 0,
                ["prone"]          = 0,
                ["recklessness"]   = 0,
                ["scytherus"]      = 0,
                ["selarnia"]       = 0,
                ["sensitivity"]    = 0,
                ["shyness"]        = 0,
                ["slickness"]      = 0,
                ["sleep"]          = 0,
                ["stupidity"]      = 0,
                ["transfixed"]     = 0,
                ["timeflux"]       = 0,
                ["weariness"]      = 0,
                ["whispermadness"] = 0,
                ["vertigo"]        = 0,
                ["vitiate"]        = 0,
                ["voidfist"]       = 0,
                ["voyria"]         = 0,

                ["rightleg"]       = 0,
                ["leftleg"]       = 0,
                ["rightarm"]       = 0,
                ["leftarm"]       = 0,
                ["head"]       = 0,
                ["torso"]       = 0,
        },
 
        cureall = {
                "addiction",
                "aflame",
                "agoraphobia",
                "anorexia",
                "asthma",
                "claustrophobia",
                "clumsiness",
                "confusion",
                "crippledarm",
                "crippledleg",   
                "darkshade",     
                "deadening",                
                "dementia",      
                "disloyalty",     
                "disrupt",       
                "dizziness",      
                "epilepsy",     
                "generosity",     
                "haemophilia",    
                "hallucinations", 
                "healthleech",
                "hypersomnia",    
                "hypochondria",   
                "illness",        
                "impatience",     
                "lethargy",       
                "loneliness", 
                "manaleech",    
                "masochism",      
                "pacifism",       
                "paralysis",      
                "paranoia",       
                "recklessness",   
                "scytherus",    
                "selarnia",    
                "sensitivity",   
                "shyness",      
                "slickness",    
                "stupidity",     
                "weariness",     
                "vertigo",        
                "voyria",
                },
}
affstrack.blademasterstance = affstrack.blademasterstance or "none"
affstrack.voidtimes = {
      ["none"] = 4.5,
      ["thyr"] = 4.5,
      ["sanya"] = 7.5,
      ["mir"] = 4.5,
      ["doya"] = 4.5,
      ["arash"] = 4.5,
}
affstrack.airtimes = {
      ["none"] = 14.5,
      ["thyr"] = 20,
      ["sanya"] = 14.5,
      ["mir"] = 14.5,
      ["doya"] = 14.5,
      ["arash"] = 14.5,
}
affstrack.ginsengscore = 0
affstrack.goldenscore = 0
affstrack.kelpscore = 0
affstrack.mentalscore = 0</script>
						<eventHandlerList>
							<string>svo system loaded</string>
						</eventHandlerList>
						<Script isActive="yes" isFolder="no">
							<name>oreset</name>
							<packageName></packageName>
							<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function oresetparse()
affstrack = {}
stack = stack or "none"
mycharacters = mycharacters or {}--This is for my Personal Gui
mycharacterstwo = mycharacterstwo or {}--This is for my personal trigger groups and echos
if swiftcount == nil then swiftcount = 0 end
opponenteat = 0
promptset = {}
opponentsmoke = 0
opponentapply = 0
opponentfocus = 0
opponenttree = 0
opponentmass = 0
opponentbreath = 0
rebounding = false
timerherb = 0
timerapply = 0
herbhalftime = 0
opponenthalftree = 0
timerfocus = 0
timertree = 0
currentvenoms = {}
lastvenom = {}
shielded = 0
curseward = 1
boilable = true
vodun = vodun or {}
vodun.fashions = 0
lockcheck = false
tza = false
resetbacktrack()

    -- Reset limb damage

     -- chase variables
    room_count = 0
    room_count_set = 0
    chase_target_locked = false
    lookdirection = ""       
    chasedirection = ""
        
    resetAllEnemyBalanceTimes()
    resetEducatedGuessHistory()


affstrack = {

physicals = 0, mentals = 0,


        venoms = {
								["selarnia"] = "selarnia",
                ["xentio"]     = "clumsiness",
                ["eurypteria"] = "recklessness",
                ["kalmia"]     = "asthma",
                ["delphinium"] = "sleep",
                ["digitalis"]  = "shyness",
                ["darkshade"]  = "darkshade",
                ["curare"]     = "paralysis",
                ["epteth"]     = "crippledarm",
                ["prefarar"]   = "sensitivity",
                ["monkshood"]  = "disloyalty",
                ["euphorbia"]  = "nausea",
                ["colocasia"]  = "deafblind",
                ["vernalius"]  = "weariness",
                ["epseth"]     = "crippledleg",
                ["larkspur"]   = "dizziness",
                ["slike"]      = "anorexia",
                ["notechis"]   = "haemophilia",
                ["vardrax"]    = "addiction",
                ["aconite"]    = "stupidity",
                ["selarnia"]   = "selarnia",
                ["gecko"]      = "slickness",
                ["scytherus"]  = "scytherus",
                ["voyria"]     = "voyria",
                ["pothealthleech"]= "healthleech",
                ["potloneliness"] = "loneliness",
                ["potepilepsy"]   = "epilepsy"
        },
 
        applied = {
                ["body"]  = {"anorexia","frozen", "selarnia"},
                ["skin"]  = {"anorexia", "crippledarm", "crippledleg","frozen", "selarnia"},
                ["torso"] = {"anorexia", "torso", "aflame", "selarnia"},
                ["head"]  = {"head"},
                ["arms"]  = {"crippledarm", "rightarm", "leftarm"},
                ["legs"]  = {"crippledleg","rightleg","leftleg"}
        },
 
        eaten = {
                ["piece of kelp"]    = {"asthma", "clumsiness", "hypochondria", "sensitivity", "weariness", "healthleech", "parasite"},
                ["aurum flake"]      = {"asthma", "clumsiness", "hypochondria", "sensitivity", "weariness", "healthleech", "parasite"},
                ["lobelia seed"]     = {"agoraphobia", "claustrophobia", "loneliness", "masochism", "recklessness", "vertigo", "earthdisrupt", "spiritdisrupt", "waterdisrupt", "airdisrupt", "firedisrupt"},
                ["argentum flake"]   = {"agoraphobia", "claustrophobia", "loneliness", "masochism", "recklessness", "vertigo", "earthdisrupt", "spiritdisrupt", "waterdisrupt", "airdisrupt", "firedisrupt"},
                ["prickly ash bark"] = {"confusion", "dementia", "hallucinations", "hypersomnia", "paranoia"},
                ["stannum flake"]    = {"confusion", "dementia", "hallucinations", "hypersomnia", "paranoia" },
                ["bellwort flower"]  = {"generosity", "pacifism","lovers","justice", "timeloop", "retribution"},
                ["cuprum flake"]     = {"generosity", "pacifism","lovers","justice", "timeloop", "retribution"},
                ["bayberry bark"]         = {"blind"},
                ["arsenic pellet"]   = {"blind"},
                ["hawthorn berry"]   = {"deaf"},
                ["calamine crystal"] = {"deaf"},
                ["goldenseal root"]  = {"sandfever","dizziness", "epilepsy", "impatience", "shyness", "stupidity","madness", "depression"},
                ["plumbum flake"]    = {"sandfever","dizziness", "epilepsy", "impatience", "shyness", "stupidity", "madness", "depression"},
                ["bloodroot leaf"]   = {"paralysis", "slickness"},
                ["magnesium chip"]   = {"paralysis", "slickness"},
                ["ginseng root"]     = {"addiction", "darkshade", "haemophilia", "lethargy", "nausea", "scytherus"},
                ["ferrum flake"]     = {"addiction", "darkshade", "haemophilia", "lethargy", "nausea", "scytherus"},
                ["rage"]             = {"generosity", "pacifism"},
        },
 
        focused = {
                "agoraphobia",
                "anorexia",
                "claustrophobia",
                "confusion",
                "dizziness",
                "epilepsy",
                "generosity",
                "loneliness",
                "masochism",
                "pacifism",
                "recklessness",
                "shyness",
                "stupidity",
                
                "vertigo", "lovers","waterdisrupt", "airdisrupt", "firedisrupt"              
        },

        treed = {
								"selarnia",
                "clumsiness",
                "aflame",
                "paranoia",
                "vertigo",
                "agoraphobia",
                "dizziness",
                "claustrophobia",
                "recklessness",
                "epilepsy",
                "addiction",
                "stupidity",
                "scytherus",
                "slickness",
                "generosity",
                "pacifism",
                "confusion",
                "voyria",
                "nausea",
                "haemophilia",
                "weariness",
                "hallucinations",
                "confusion",
                "disloyalty",
                "lethargy",
                "shyness",
                "sensitivity",
                "asthma",
                "crippledarm",
                "crippledleg",
                "darkshade",
                "impatience",
                "anorexia",
                "loneliness",
                "hypochondria", 
                "selarnia",
                "leftleg",
                "leftarm",
                "rightleg",
                "rightarm",
                "frozen", "lovers", "justice", "earthdisrupt", "spiritdisrupt", "waterdisrupt", "airdisrupt", "firedisrupt",
"timeloop", "madness", "depression", "retribution"
        },
 
        restored = {
                "crippledarm",
                "crippledleg",
                "rightleg",
                "leftleg",
                "rightarm",
                "leftarm",              
        },
 
        smoked = {
                "deadening",
                "disloyalty",
                "slickness",
                "manaleech",
                "aeon",
                "hellsight",
        },

        score = {
				flushings = 0,
				pyramides = 0,
				rebbies = 0,
				sandfever = 0,
				mycalium = 0,
								["selarnia"] = 0,
                ["addiction"]      = 0,
                ["aeon"]           = 0,
                ["agoraphobia"]    = 0,
                ["anorexia"]       = 0,
                ["aflame"]         = 0,
                ["airfist"]        = 0,
                ["asthma"]         = 0,
                ["blind"]          = 0,
                ["blackout"]       = 0,
                ["bound"]          = 0,
                ["cadmuscurse"]    = 0,
                ["claustrophobia"] = 0,
                ["clumsiness"]     = 0,
                ["confusion"]      = 0,
                ["crippledarm"]    = 0,
                ["crippledleg"]    = 0,
                ["darkshade"]      = 0,
                ["deadening"]      = 0,
                ["deaf"]           = 0,
                ["dementia"]       = 0,
                ["disloyalty"]     = 0,
                ["disrupt"]        = 0,
                ["dizziness"]      = 0,
                ["epilepsy"]       = 0,
                ["frozen"]         = 0,
                ["generosity"]     = 0,
                ["haemophilia"]    = 0,
                ["hallucinations"] = 0,
                ["hamstring"]      = 0,
                ["healthleech"]    = 0,
                ["hecate"]         = 0,
                ["hellsight"]      = 0,
                ["hypersomnia"]    = 0,
                ["hypochondria"]   = 0,
                ["illness"]        = 0,
                ["impaleslash"]    = 0,
                ["impatience"]     = 0,
                ["insomnia"]       = 0,
                ["kola"]           = 0,
                ["lethargy"]       = 0,
                ["loneliness"]     = 0,
                ["masochism"]      = 0,
                ["manaleech"]      = 0,
                ["nausea"]         = 0,
                ["pacifism"]       = 0,
                ["paralysis"]      = 0,
                ["paranoia"]       = 0,
                ["prone"]          = 0,
                ["recklessness"]   = 0,
                ["scytherus"]      = 0,
                ["selarnia"]       = 0,
                ["sensitivity"]    = 0,
                ["shyness"]        = 0,
                ["slickness"]      = 0,
                ["sleep"]          = 0,
                ["stupidity"]      = 0,
                ["transfixed"]     = 0,
                ["timeflux"]       = 0,
                ["weariness"]      = 0,
                ["whispermadness"] = 0,
                ["vertigo"]        = 0,
                ["vitiate"]        = 0,
                ["voidfist"]       = 0,
                ["voyria"]         = 0,

                ["rightleg"]       = 0,
                ["leftleg"]       = 0,
                ["rightarm"]       = 0,
                ["leftarm"]       = 0,
                ["head"]       = 0,
                ["torso"]       = 0,
["justice"] = 0,
["lovers"] = 0,
["timeloop"] = 0,
["retribution"] = 0, ["madness"] = 0, ["depression"] = 0, ["parasite"] = 0,

["whisperingmadness"] = 0, ["earthdisrupt"] = 0, ["spiritdisrupt"] = 0, ["waterdisrupt"] = 0, ["airdisrupt"] = 0, ["firedisrupt"] = 0


        },
 
        cureall = {"flushings", "sandfever", "rebbies", "mycalium", "pyramides",
                "addiction",
                "aflame",
                "agoraphobia",
                "anorexia",
                "asthma",
                "claustrophobia",
                "clumsiness",
                "confusion",
                "crippledarm",
                "crippledleg",   
                "darkshade",     
                "deadening",                
                "dementia",      
                "disloyalty",     
                "disrupt",       
                "dizziness",      
                "epilepsy",     
                "generosity",     
                "haemophilia",    
                "hallucinations", 
                "healthleech",
                "hypersomnia",    
                "hypochondria",   
                "nausea",        
                "impatience",     
                "lethargy",       
                "loneliness", 
                "manaleech",    
                "masochism",      
                "pacifism",       
                "paralysis",      
                "paranoia",       
                "recklessness",   
                "scytherus",    
                "selarnia",    
                "sensitivity",   
                "shyness",      
                "slickness",    
                "stupidity",     
                "weariness",     
                "vertigo",        
                "voyria",
"lovers", "justice", "whisperingmadness" , "earthdisrupt", "spiritdisrupt", "waterdisrupt", "airdisrupt", "firedisrupt", 
"timeloop"


                },
}
affstrack.blademasterstance = affstrack.blademasterstance or "none"
affstrack.voidtimes = {
      ["none"] = 15,
      ["thyr"] = 15,
      ["sanya"] = 20,
      ["mir"] = 15,
      ["doya"] = 15,
      ["arash"] = 15,
}
affstrack.airtimes = {
      ["none"] = 14.5,
      ["thyr"] = 20,
      ["sanya"] = 14.5,
      ["mir"] = 14.5,
      ["doya"] = 14.5,
      ["arash"] = 14.5,
}
affstrack.hecatescore = {

}
affstrack.crushedpots = {
   ["piece of kelp"]   = "pothealthleech",
   ["bellwort flower"] = "vernalius",
   ["valerian leaf"]   = "gecko",
   ["lobelia seed"]    = "potloneliness",
   ["piece of slippery elm"] = "larkspur",
   ["kola nut"]        = "delphinium",
   ["goldenseal root"] = "potepilepsy",
   ["hawthorn berry"]  = "prefarar",
}
affstrack.enlightenlist = { "dementia","stupidity","confusion","hypersomnia","paranoia","hallucinations","impatience","hypochondria","recklessness","masochism","agoraphobia","anorexia","loneliness","claustrophobia","lovers"}
affstrack.enlightenscore = 0
affstrack.ginsengscore = 0
affstrack.goldenscore = 0
affstrack.kelpscore = 0
affstrack.mentalscore = 0
affstrack.totalaffs = 0
akrandomaffs = akrandomaffs or 0
scoreup()
if gmcp then
   if not displaydecide then 
      classenable()
      if nodisplay == false and not table.contains(mycharacters,gmcp.Char.Name.name) then 
         init() 
      end 
      displaydecide = true 
   end
end
cecho("&lt;cyan&gt; Reset Success!\n\n")
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>oTarget</name>
							<packageName></packageName>
							<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function targetrelay ()
        cecho("aff_display","\n&lt;blue&gt;****************\n")
        cecho("aff_display","\n0Targets: "..target.."\n\n")
        if target1 ~= nil then cecho("aff_display","\nTarget1:&lt;yellow&gt; "..target1.."\n\n") end
        if target2 ~= nil then cecho("aff_display","Target2:&lt;yellow&gt; "..target2.."\n\n") end
        if target3 ~= nil then cecho("aff_display","Target3:&lt;yellow&gt; "..target3.."\n\n") end
        cecho("aff_display","\n&lt;blue&gt;****************\n")
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>oattacks</name>
							<packageName></packageName>
							<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function serveraliases()

if gmcp.Char.Status.race == "Dwwagon" then                                                                                           -- Dragon --
   if stack == "dragon" and not inretardation() and not inaeon() and not inlyre() then 
      dragonstack() 
      send("setalias oattackrl stand/wield shield/envenom claws with "..vcombo[1].."/dragoncurse "..target.." "..dragoncurse.." 1/rend "..target.." right leg/breathgust "..target,false)
      send("setalias oattackll stand/wield shield/envenom claws with "..vcombo[1].."/dragoncurse "..target.." "..dragoncurse.." 1/rend "..target.." left leg/breathgust "..target,false)
      send("setalias oattackra stand/wield shield/envenom claws with "..vcombo[1].."/dragoncurse "..target.." "..dragoncurse.." 1/rend "..target.." right arm/breathgust "..target,false)
      send("setalias oattackla stand/wield shield/envenom claws with "..vcombo[1].."/dragoncurse "..target.." "..dragoncurse.." 1/rend "..target.." left arm/breathgust "..target,false)
      send("setalias oattackt stand/wield shield/envenom claws with "..vcombo[1].."/dragoncurse "..target.." "..dragoncurse.." 1/rend "..target.." torso/breathgust "..target,false)
      send("setalias oattackh stand/wield shield dirk/envenom claws with "..vcombo[1].."/dragoncurse "..target.." "..dragoncurse.." 1/rend "..target.." head/breathgust "..target,false)
   elseif stack == "dlock" and not inretardation() and not inaeon() and not inlyre() then 
      dragonlockstack()
      send("setalias dirkst stand/wield shield dirk/envenom claws with "..vcombo[1].."/dragoncurse "..target.." "..dragoncurse.." 1/rend "..target.."/conjure " ..target.. " illusion " .. illusion,false)
   elseif stack == "salve" and not inretardation() and not inaeon() and not inlyre() then
      salvestack()  
      if limbtarget ~= nil then
         send("setalias dirkst stand/envenom dirk with "..vcombo[1].."/dragoncurse "..target.." "..dragoncurse.." 1/jab "..target.." "..limbtarget.."/breathgust "..target,false)
      else    
         send("setalias dirkst stand/envenom dirk with "..vcombo[1].."/dragoncurse "..target.." "..dragoncurse.." 1/jab "..target.."/breathgust "..target,false)
      end
   end

elseif gmcp.Char.Status.class == "Magi" then    
   if stack == "amagi" then
      --amagi()
   end

elseif gmcp.Char.Status.class == "Shaman" then                                                                                          -- SHAMAN --
  if stack == "avp" and not inretardation() and not inaeon() and not inlyre() and not tza then
      shamana()
      avp()
      attackselect()
  elseif stack == "avi" and not inretardation() and not inaeon() and not inlyre() and not tza then
      shamana()
      avi()
      attackselect()
   elseif stack == "ivp" and not inretardation() and not inaeon() and not inlyre() and not tza then
      shamana()
      ivp()
      attackselect()
   elseif stack == "iva" and not inretardation() and not inaeon() and not inlyre() and not tza then
      shamana()
      iva()
      attackselect()
   elseif stack == "Ward" and not inretardation() and not inaeon() and not inlyre() and not tza then
      shamana()
      ward()
      attackselect()
   elseif stack == "Tzantza" and not inretardation() and not inaeon() and not inlyre() and not tza then
      shamana()
      stk()
      attackselect()
   elseif stack == "Cog" and not inretardation() and not inaeon() and not inlyre() and not tza then
      shamana()
      cog()
      attackselect()
   elseif stack == "damage" and not inretardation() and not inaeon() and not inlyre() and not tza then
      shamana()
      damage()
      attackselect()
   end

elseif gmcp.Char.Status.class == "Serpent" then   
   if stack == "ginseng" and not inretardation() and not inaeon() and not inlyre() then
      serpentginsengstack()
      oillusions_send()
      send("setalias dirkst stand/wield dirk shield/dstab "..target.." "..vcombo[1].." "..vcombo[2].."/conjure "..target.." illusion "..illusion,false)
   elseif stack == "kelps" and not inretardation() and not inaeon() and not inlyre() then
      serpentkelpstack()
      oillusions_send()
      send("setalias dirkst stand/wield dirk shield/dstab "..target.." "..vcombo[1].." "..vcombo[2].."/conjure "..target.." illusion "..illusion,false)
   end
elseif gmcp.Char.Status.class == "Apostate" then                                                                                            -- APOSTATE --
   if stack == "deadeyes" then
      deadeyes()
      send("setalias oattack stand/deadeyes target "..docurse.." "..docurse2)
   end
elseif gmcp.Char.Status.class == "Infernal" or gmcp.Char.Status.class == "Paladin" or gmcp.Char.Status.class == "Runewarden" then                                                                                             -- S&amp; BOARD --
   if stack == "kboard" and not inretardation() and not inlyre() and not inaeon() then 
      boardattackkelp()
      send("setalias oattackrl stand/combination "..target.." slice right leg "..vcombo[1].." "..boarda,false)
      send("setalias oattackll stand/combination "..target.." slice left leg "..vcombo[1].." "..boarda,false)
      send("setalias oattackra stand/combination "..target.." slice right arm "..vcombo[1].." "..boarda,false)
      send("setalias oattackla stand/combination "..target.." slice left arm "..vcombo[1].." "..boarda,false)
      send("setalias oattackt stand/combination "..target.." slice torso "..vcombo[1].." "..boarda,false)
      send("setalias oattackh stand/combination "..target.." slice head "..vcombo[1].." "..boarda,false)
      if limbtarget ~= nil then
         send("setalias oattack stand/combination "..target.." slice "..limbtarget.." "..vcombo[1].." "..boarda,false)
      else    
         send("setalias oattack stand/combination "..target.." slice "..vcombo[1].." "..boarda,false)
      end
   elseif stack == "dcginseng" and not inretardation() and not inlyre() and not inaeon() then 
      dualcuttingginsengstack()
      send("setalias oattackrl stand/dsl "..target.." right leg "..vcombo[1].." "..vcombo[2],false)
      send("setalias oattackll stand/dsl "..target.." left leg "..vcombo[1].." "..vcombo[2],false)
      send("setalias oattackra stand/dsl "..target.." right arm "..vcombo[1].." "..vcombo[2],false)
      send("setalias oattackla stand/dsl "..target.." left arm "..vcombo[1].." "..vcombo[2],false)
      send("setalias oattackt stand/dsl "..target.." torso "..vcombo[1].." "..vcombo[2],false)
      send("setalias oattackh stand/dsl "..target.." head "..vcombo[1].." "..vcombo[2],false)
      if limbtarget ~= nil then
         send("setalias oattack stand/dsl "..target.." "..limbtarget.." "..vcombo[1].." "..vcombo[2],false)
      else    
         send("setalias oattack stand/dsl "..target.." "..vcombo[1].." "..vcombo[2],false)
      end
   end

elseif gmcp.Char.Status.class == "Blademaster" then   
   if stack == "bmlock" and not inretardation() and not inlyre() and not inaeon() then
      bmLock()
      bmattackdecide()
   end
end
if not inretardation() and not inaeon() and not inlyre() then
   mycustomoffense()
end
end
</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Osettings!</name>
							<packageName></packageName>
							<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
nodisplay = true  --Set to True to Turn off Display!  Always Retarget something to refresh.
obacktrack = true  --Set to False to Disable Backtracking
oprotrack = true --If you do unknown affs, do not enable this
------------------------------------------------------------------------------------------------------------------

--WAKE UP, SERPENTS.  YOU GO HERE!

odirk = "a sharpened buckawn's spine"          
--odirk = "a needle-pointed dirk"

------------------------------------------------------------------------------------------------------------------

--THIS IS TO CHECK TO SEE IF GECKO IS ALREADY ENVENOMED FOR SHAMAN/APOSTATE:

venomdeliver = "a sharpened buckawn's spine"    --This is for Adding Slickness as a Shaman/Apostate(venomslick())

-------------------------------------------------------------------------------------------------------------------

--Adding your weapons to limb counter: 
--Suitable augments are Board for now.
--If it does a static % of damage(such as dragon rend), set damage stat to 420 and damage percent to whatever it does
--DO NOT ADD YOUR WEAPON IF IT IS LOCATED IN WEAPONSTABS TABLE LOCATED UNDER: LIMBS-LIMB VARS
--NO, BEFORE YOU ASK, THIS DOESN"T HAVE AN ACCURATE FORMULA!

oweapons = {
   ["a big fucking sword"]                 = {damagestat =  63, damagepercent = 0},
   ["something sharp"]                     = {damagestat = 15, damagepercent = 0, augment = "Board"},
   ["freaking rend"]                       = {damagestat = 420, damagepercent = 25},
}

---------------------------------------------------------------------------------------------------------------------

--OBVIOUSLY YOU DON"T WANT TO LOOK LIKE YOU ARE USING MY SYSTEM!  PEOPLE MIGHT LOOK DOWN ON YOU!!

function EchoForAddedAff(incoming)
   cecho("&lt;white&gt;\nProcessed Affliction(&lt;yellow&gt;" ..incoming.. "&lt;white&gt;)")  --Change this line for added afflictions
end
function EchoForLostAff(incoming)
   cecho("&lt;white&gt;\nLost Affliction(&lt;yellow&gt;" ..incoming.. "&lt;white&gt;)")  --Change this line for removed afflictions
end  
function EchoForPossibleCures(incoming)
   cecho("&lt;white&gt;\nProcessed Cures(&lt;yellow&gt;" ..incoming.. "&lt;white&gt;)")  --Change this line for removed afflictions
end 

----------------------------------------------------------------------------------------------------------------------

--THIS FUNCTION IS RAN EVERYTIME THEY CURE SOMETHING IF YOU DO NOT HAVE AEON/RETARDATION.
--USE THIS TO SET YOUR SERVERSIDE ALIASES FOR YOU, DEPENDING ON THEIR AFFS
--THEN SIMPLY CALL YOUR SERVERSIDE ALIAS


function mycustomoffense()--move this outside of my system so you can update!
   if stack == "example" then
      venom_select()
      attack_select()
      additional_attack_decision()
      set_server_side_aliases_using_info_from_above()
   end
end


----------------------------------------------------------------------------------------------------------------------

--*

--Svo Prompt--

--add ^y@ml_oprompt to your custom prompt

--*


--WYS Prompt--

--Go to this location:--Scripts-WunderSys-Tables-System Table

--Add
 
--["oaff"] = function() return oprompt() end,

--directly below

--["affs"] = function() return affTags() end,

--add @oaff into the prompt wherever you want this to display

--wshow display to do this view prompt/edit it</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>oillusions  THIS PORTION IS FOR YOU TO CODE!! I AM NOT SHARING MINE!</name>
							<packageName></packageName>
							<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function oillusions_send()
   if wghweqasa then 
      illusions_send()
   else
      illusion  = "The thought of food revolts you all of a sudden." -- Have a freebie :)
   end
end</script>
							<eventHandlerList />
						</Script>
						<ScriptGroup isActive="yes" isFolder="yes">
							<name>Multiuse Functions</name>
							<packageName></packageName>
							<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
							<eventHandlerList />
							<Script isActive="yes" isFolder="no">
								<name>oclass changing(stack is set here)</name>
								<packageName></packageName>
								<script>--classchanging
-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
--Totem Group
gmcp = gmcp or {}
gmcp.Char = gmcp.Char or {}
gmcp.Char.Status = gmcp.Char.Status or {}
gmcp.Char.Status.race = gmcp.Char.Status.race or "none" 
gmcp.Char.Status.class = gmcp.Char.Status.class or "none"
gmcp.Char.Name = gmcp.Char.Name or {}
gmcp.Char.Name.name = gmcp.Char.Name.name or {} 



function classenable()
   if gmcp.Char.Status.race == "Dragon" then 
      stack = "dragon" 
      affstrack.crushedherb = nil
   elseif gmcp.Char.Status.class == "Magi" then
      stack = "amagi"
   elseif gmcp.Char.Status.class == "Serpent" then
      stack = "kelps"
   elseif gmcp.Char.Status.class == "Shaman" then 
      stack = "ivp" 
   elseif gmcp.Char.Status.class == "Sylvan" then
      stack = "NONE"
   elseif gmcp.Char.Status.class == "Blademaster" then
      stack = "bmlock"
   elseif gmcp.Char.Status.class == "Infernal" or gmcp.Char.Status.class == "Paladin" or gmcp.Char.Status.class == "Runewarden" then                                                                                             -- S&amp; BOARD --
      stack = "kboard"     --sword and board
    --stack = "dcginseng"  --dual cutting
   end
   oweaponadd()
   if gmcp.Char.Status.race == "Dragon" then
      if table.contains(mycharacterstwo,gmcp.Char.Name.name) then
         disableAlias("Magi Aliases")
         disableAlias("Knight Aliases")
         disableAlias("Serpent Aliases")
         disableAlias("Shaman Aliases")
         disableTrigger("Magi Triggers")
         disableTrigger("Serpent Triggers")
         disableTrigger("Shaman Triggers")
         enableTrigger("Dragon Triggers")
      end
--
      enableKey("Dragon Keys")
      disableKey("Shaman Keys")
      disableKey("Serpent Keys")
      disableTrigger("Totem Group")
      disableTrigger("Serpent Group")
      disableTrigger("Magi Group")
      disableTrigger("Apostate Group")
      disableTrigger("Shaman Group")
      enableTrigger("Dragon Group")
      disableTrigger("Sword &amp; Board Group")
      disableTrigger("Bard Group")
      disableTrigger("Blademaster Group")
      disableTrigger("Occultist Group")
      disableTrigger("Sylvan Group")
      cecho("&lt;yellow&gt;\n\nDRAGON ENABLED\n\n")
   elseif gmcp.Char.Status.class == "Magi" or gmcp.Char.Status.class == "Sylvan" then
      if table.contains(mycharacterstwo,gmcp.Char.Name.name) then
         enableAlias("Magi Aliases")
         disableAlias("Knight Aliases")
         disableAlias("Serpent Aliases")
         disableAlias("Shaman Aliases")
         enableTrigger("Magi Triggers")
         disableTrigger("Serpent Triggers")
         disableTrigger("Shaman Triggers")
         disableTrigger("Dragon Triggers")
      end
--
      enableKey("Dragon Keys")
      disableKey("Shaman Keys")
      disableKey("Serpent Keys")
      disableTrigger("Totem Group")
      disableTrigger("Serpent Group")
      enableTrigger("Magi Group")
      disableTrigger("Apostate Group")
      disableTrigger("Shaman Group")
      disableTrigger("Dragon Group")
      disableTrigger("Sword &amp; Board Group")
      disableTrigger("Bard Group")
      disableTrigger("Blademaster Group")
      disableTrigger("Occultist Group")
      enableTrigger("Sylvan Group")
      cecho("&lt;yellow&gt;\n\nMAGI ENABLED\n\n")
   elseif gmcp.Char.Status.class == "Shaman" then
      if table.contains(mycharacterstwo,gmcp.Char.Name.name) then
         disableAlias("Magi Aliases")
         disableAlias("Knight Aliases")
         disableAlias("Serpent Aliases")
         enableAlias("Shaman Aliases")
         disableTrigger("Magi Triggers")
         enableTrigger("Shaman Triggers")
         disableTrigger("Dragon Triggers")
         disableTrigger("Serpent Triggers")
      end
--      
      disableKey("Dragon Keys")
      enableKey("Shaman Keys")
      disableKey("Serpent Keys")
      disableTrigger("Totem Group")
		 disableTrigger("Serpent Group")
      disableTrigger("Magi Group")
      disableTrigger("Apostate Group")
      enableTrigger("Shaman Group")
      disableTrigger("Dragon Group")
      disableTrigger("Sword &amp; Board Group")
      disableTrigger("Bard Group")
      disableTrigger("Blademaster Group")
      disableTrigger("Occultist Group")
      disableTrigger("Sylvan Group")
      cecho("&lt;yellow&gt;\n\nSHAMAN ENABLED\n\n")
   elseif gmcp.Char.Status.class == "Serpent" then
      if table.contains(mycharacterstwo,gmcp.Char.Name.name) then
         disableAlias("Magi Aliases")
         disableAlias("Knight Aliases")
         enableAlias("Serpent Aliases")
         disableAlias("Shaman Aliases")
         disableTrigger("Magi Triggers")
         disableTrigger("Shaman Triggers")
         disableTrigger("Dragon Triggers")
         enableTrigger("Serpent Triggers")
      end
--
      disableKey("Dragon Keys")
      disableKey("Shaman Keys")
      enableKey("Serpent Keys")
      disableTrigger("Totem Group")
      enableTrigger("Serpent Group")
      disableTrigger("Magi Group")
      disableTrigger("Apostate Group")
      disableTrigger("Shaman Group")
      disableTrigger("Dragon Group")
      disableTrigger("Sword &amp; Board Group")
      disableTrigger("Bard Group")
      disableTrigger("Blademaster Group")
      disableTrigger("Occultist Group")
      disableTrigger("Sylvan Group")
      cecho("&lt;yellow&gt;\n\nSERPENT ENABLED\n\n")
   elseif gmcp.Char.Status.class == "Infernal" or gmcp.Char.Status.class == "Paladin" or gmcp.Char.Status.class == "Runewarden" then
      if table.contains(mycharacterstwo,gmcp.Char.Name.name) then     
         disableAlias("Magi Aliases")
         disableAlias("Knight Aliases")
         enableAlias("Serpent Aliases")
         disableAlias("Shaman Aliases")
         disableTrigger("Magi Triggers")
         disableTrigger("Shaman Triggers")
         disableTrigger("Dragon Triggers")
         disableTrigger("Serpent Triggers")
      end
--
      disableKey("Dragon Keys")
      disableKey("Shaman Keys")
      disableKey("Serpent Keys")
      enableTrigger("Totem Group")
      disableTrigger("Serpent Group")
      disableTrigger("Magi Group")
      disableTrigger("Apostate Group")
      disableTrigger("Shaman Group")
      disableTrigger("Dragon Group")
      enableTrigger("Sword &amp; Board Group")
      disableTrigger("Bard Group")
      disableTrigger("Blademaster Group")
      disableTrigger("Occultist Group")
      disableTrigger("Sylvan Group")
      cecho("&lt;yellow&gt;\n\nKNIGHT ENABLED\n\n")   
   end
   scoreup()
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>oaff check</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function akcheck(what, number)
   if not what then what = 100 end
   if table.contains(affstrack.score, what) then
      if affstrack.score[what] &gt;= number then
         return true
      else
         return false
      end
   elseif table.contains(affstrack.venoms, what) then
      if affstrack.score[affstrack.venoms[what]] &gt;= number then
         return true
      else
         return false
      end
   end
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>Delete Line</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function deleteLinePA()
   deleteLine()
   tempLineTrigger(1,1, [==[ if isPrompt() then
      deleteLine()
   elseif string.match(line, "^= %[Sail %w+%%?%] %[Hull%] %[Crew End: %d+%%%] %[Wind: %w+@%d+ kts%] %[Crs/Spd: %w+@%d+%] %[Seas: %w+%]%s?")
       or string.match(line, "^= Sl %w+%%? %- hp %w+%%?,Hl: %w+%%?,CEnd %d+%%,Wd %w+@%d+kts,Cr/Sp %w+@%d+,Sea %w+")
       or string.match(line, "^= S..@h..,H..,CE%d+%%,W&lt;%-%w+@%d+kts,C/S%-&gt;%w+@%d+,%w+") then
      deleteLine()
      tempLineTrigger(1,1, [[ if isPrompt() then deleteLine() end ]])
   end]==])
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>oscore</name>
								<packageName></packageName>
								<script>--scoreup
-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function scoreup()
affstrack.kelpscore = affstrack.score.healthleech + affstrack.score.asthma + affstrack.score.clumsiness + affstrack.score.hypochondria + affstrack.score.sensitivity + affstrack.score.weariness 
affstrack.kelpscore = affstrack.kelpscore / 100
affstrack.ginsengscore = affstrack.score.addiction + affstrack.score.darkshade + affstrack.score.haemophilia + affstrack.score.lethargy + affstrack.score.illness + affstrack.score.scytherus
affstrack.ginsengscore = affstrack.ginsengscore / 100
affstrack.goldenscore =  affstrack.score.dizziness + affstrack.score.epilepsy + affstrack.score.impatience + affstrack.score.shyness + affstrack.score.stupidity
affstrack.goldenscore = affstrack.goldenscore / 100
affstrack.mentalscore = affstrack.score.agoraphobia + affstrack.score.claustrophobia + affstrack.score.dementia + affstrack.score.epilepsy + affstrack.score.masochism + affstrack.score.recklessness + affstrack.score.vertigo + affstrack.score.confusion + affstrack.score.dizziness + affstrack.score.impatience + affstrack.score.paranoia + affstrack.score.stupidity + affstrack.score.addiction
affstrack.mentalscore = affstrack.mentalscore / 100
softscore = affstrack.score.anorexia + affstrack.score.slickness + affstrack.score.asthma
softscore = softscore / 100
truescore = affstrack.score.paralysis + affstrack.score.impatience + affstrack.score.anorexia + affstrack.score.slickness + affstrack.score.asthma
truescore = truescore / 100
affstrack.totalaffs = 0
affstrack.enlightenscore = 0
for k,v in pairs(affstrack.score) do
   if v &gt; 1 then
      affstrack.totalaffs = affstrack.totalaffs + v
      if table.contains(affstrack.enlightenlist, k) then
         affstrack.enlightenscore = affstrack.enlightenscore + v
      end
   end
end
affstrack.totalaffs = affstrack.totalaffs / 100
affstrack.enlightenscore = affstrack.enlightenscore/ 100
if affstrack.totalaffs == 0 then affstrack.score.cadmuscurse = 0 end

opromptscoreup()
if nodisplay then noDisplay() else refreshAffs() end
end
</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>oscore edit functions</name>
								<packageName></packageName>
								<script>--OppGainedAff
function OppGainedAff(aff)

	local affStr = {}

	aff = aff:lower()

   if string.find(aff," ") then                          --Multi Venoms
      for word in string.gmatch(aff, "%a+") do
         if (word == "sensitivity" or word == "prefarar") and affstrack.score.deaf == 0 then word = "deaf" end
         if affstrack.score[word] then
            if affstrack.score[word] &lt; 100 then       
               affstrack.score[word] = 100
               AddedAffReset(word)
               if (word == "deaf" or word == "sensitivity") then word = "prefarar" end   
               table.insert(affStr,word:title())
            end
         elseif affstrack.venoms[word] then 
            if affstrack.score[affstrack.venoms[word]] &lt; 100 then    
               affstrack.score[affstrack.venoms[word]] = 100
               AddedAffReset(affstrack.venoms[word])
               if (word == "deaf" or word == "sensitivity") then word = "prefarar" end
               table.insert(affStr,affstrack.venoms[word]:title())  
            end
         end
		end
	else
     if (aff == "sensitivity" or aff == "prefarar") and affstrack.score.deaf == 0 then aff = "deaf" end                                                        --Single venom
     if affstrack.score[aff] then
            if affstrack.score[aff] &lt; 100 then       
               affstrack.score[aff] = 100
               AddedAffReset(aff)
               if aff == "deaf" or aff == "sensitivity" then aff = "prefarar" end
               table.insert(affStr,aff:title())    
            end
         elseif affstrack.venoms[aff] then 
            if affstrack.score[affstrack.venoms[aff]] &lt; 100 then    
               affstrack.score[affstrack.venoms[aff]] = 100
               AddedAffReset(affstrack.venoms[aff])
               if aff == "deaf" or aff == "sensitivity" then aff = "prefarar" end
               table.insert(affStr,affstrack.venoms[aff]:title())       
            end
         end
	end
	if #affStr &gt; 0 then 
			oechogain(table.concat(affStr, " ")) 
			if rtpkrnl then ApK(table.concat(affStr, " rtpkrnl ")) end
	end
	scoreup()

if aff == "slickness" then

sileris = 0


end

end



function OppLostAff(aff)

	local affStr = ""

	aff = aff:lower()

	if affstrack.venoms[aff] then
	aff = affstrack.venoms[aff]
	
	
	end
	
	
	if string.find(aff," ") then
		for word in string.gmatch(aff, "%a+") do
			if affstrack.score[word] &gt; 0 then
				affstrack.score[word] = 0
				affStr = word:title()
			end
		end
	else
		if affstrack.score[aff] &gt; 0 then
			affstrack.score[aff] = 0
			affStr = aff:title()
		end
	end
   if affStr:len() &gt; 0 then oecholost(affStr) end



	scoreup()

end</script>
								<eventHandlerList />
							</Script>
							<ScriptGroup isActive="yes" isFolder="yes">
								<name>Class Specific Changing</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
								<eventHandlerList />
							</ScriptGroup>
						</ScriptGroup>
						<ScriptGroup isActive="no" isFolder="yes">
							<name>Stacks</name>
							<packageName></packageName>
							<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
							<eventHandlerList />
							<ScriptGroup isActive="no" isFolder="yes">
								<name>Dragon Stacks</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
								<eventHandlerList />
								<Script isActive="yes" isFolder="no">
									<name>DragonStack(rends)</name>
									<packageName></packageName>
									<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function dragonstack ()
vcombo = {nil}
if math.random(100)&lt;50 then
    if affstrack.score.paralysis&lt;100 then
        table.insert(vcombo,"curare")
    elseif affstrack.score.crippledarm&lt;100 then
        table.insert(vcombo,"epteth")
    elseif affstrack.score.crippledleg&lt;100 then
        table.insert(vcombo,"epseth")
    elseif affstrack.score.stupidity&lt;100 then
        table.insert(vcombo,"aconite")
    elseif affstrack.score.sensitivity&lt;100 then
        table.insert(vcombo,"prefarar")
    end
else
    if affstrack.score.stupidity&lt;100 then
        table.insert(vcombo,"aconite")
    elseif affstrack.score.dizziness&lt;100 then
        table.insert(vcombo,"larkspur")
    elseif affstrack.score.clumsiness&lt;100 then
        table.insert(vcombo,"xentio")
    elseif affstrack.score.sensitivity&lt;100 then
        table.insert(vcombo,"prefarar")
    elseif affstrack.score.paralysis&lt;100 then
        table.insert(vcombo,"curare")
    end
    
end
dragoncurser()
end</script>
									<eventHandlerList />
								</Script>
								<ScriptGroup isActive="yes" isFolder="yes">
									<name>Cursing</name>
									<packageName></packageName>
									<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
									<eventHandlerList />
									<Script isActive="yes" isFolder="no">
										<name>DragonCurser</name>
										<packageName></packageName>
										<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function dragoncurser () 
      if math.random(100)&lt;50 then
         if affstrack.score.paralysis&lt;100 and vcombo[1] ~= "curare" then
            dragoncurse = "paralysis"
         elseif affstrack.score.asthma&lt;100 and vcombo[1] ~= "kalmia" then
            dragoncurse = "asthma"
         elseif affstrack.score.sensitivity&lt;100 then
            dragoncurse = "sensitivity"
         elseif affstrack.score.impatience&lt;100 then
            dragoncurse = "impatience"
         end
      else
         if affstrack.score.asthma&lt;100 and vcombo[1] ~= "kalmia"  then
            dragoncurse = "asthma"
         elseif affstrack.score.impatience&lt;100 then
            dragoncurse = "impatience"
         elseif affstrack.score.sensitivity&lt;100 then
            dragoncurse = "stupidity"
         elseif affstrack.score.paralysis&lt;100 and vcombo[1] ~= "curare"  then
            dragoncurse = "paralysis"
         end
    
      end
   if affstrack.score.sensitivity&lt;100 and vcombo[1] == "prefarar" and affstrack.score.blind ~= 100 then dragoncurse = "sensitivity" end
end
</script>
										<eventHandlerList />
									</Script>
								</ScriptGroup>
							</ScriptGroup>
							<ScriptGroup isActive="no" isFolder="yes">
								<name>Serpent Stacks</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
								<eventHandlerList />
								<Script isActive="yes" isFolder="no">
									<name>Kelp</name>
									<packageName></packageName>
									<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function serpentkelpstack()
vcombo = {nil}
--Primary Venom Selection
if affstrack.score.paralysis&lt;100 then
   table.insert(vcombo,"curare")
elseif affstrack.score.darkshade&lt;100 then
   table.insert(vcombo,"darkshade")
elseif affstrack.score.asthma&lt;100 then
   table.insert(vcombo,"kalmia")
end

--Secondary Venom Selection
if math.random(100)&lt;50 then
    if affstrack.score.clumsiness&lt;65 then
        table.insert(vcombo,"xentio")
    elseif affstrack.score.sensitivity&lt;65 then
        table.insert(vcombo,"prefarar")
    elseif affstrack.score.weariness&lt;65 and affstrack.score.impatience&gt;0  then
        table.insert(vcombo,"vernalius")
    elseif affstrack.score.asthma&lt;50 then
        table.insert(vcombo,"kalmia")
    elseif affstrack.score.slickness&lt;100 then
        table.insert(vcombo,"gecko")
    elseif affstrack.score.anorexia&lt;100 then
        table.insert(vcombo,"slike")
    end
else
    if affstrack.score.clumsiness&lt;65 then
        table.insert(vcombo,"xentio")
    elseif affstrack.score.sensitivity&lt;65 then
        table.insert(vcombo,"prefarar")
    elseif affstrack.score.weariness&lt;65 and affstrack.score.impatience&gt;0 then
        table.insert(vcombo,"vernalius")
    elseif affstrack.score.asthma&lt;50 then
        table.insert(vcombo,"kalmia")
    elseif affstrack.score.slickness&lt;100 then
        table.insert(vcombo,"gecko")
    elseif affstrack.score.anorexia&lt;100 then
        table.insert(vcombo,"slike")
    end    
end
 --Can have a seperate script that runs if they have asthma, so you can go ahead and progress a vlock

if affstrack.score.asthma &gt; 0 then 
   asthmacheckers() 
end 
lockcheckserpent()
end</script>
									<eventHandlerList />
								</Script>
								<Script isActive="yes" isFolder="no">
									<name>AsthmaCheck</name>
									<packageName></packageName>
									<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function asthmacheckers ()
if affstrack.score.asthma&gt;0 then
    if affstrack.score.slickness&lt;100 then
        table.insert(vcombo, 1, "gecko")
        --cecho("\n\n&lt;cyan&gt;Changing Venoms (Asthma Checker Script!)\n\n")
    end
    if affstrack.score.anorexia&lt;100 then
        table.insert(vcombo, 1, "slike")
        --cecho("\n\n&lt;cyan&gt;Changing Venoms (Asthma Checker Script!)\n\n")
    end
end
end</script>
									<eventHandlerList />
								</Script>
								<Script isActive="no" isFolder="no">
									<name>LockCheck</name>
									<packageName></packageName>
									<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function lockcheckserpent() end</script>
									<eventHandlerList />
								</Script>
							</ScriptGroup>
							<ScriptGroup isActive="no" isFolder="yes">
								<name>Shaman Stacks</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
								<eventHandlerList />
								<Script isActive="yes" isFolder="no">
									<name>asthmastack</name>
									<packageName></packageName>
									<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function asthmastack ()
   if affstrack.score.paralysis&lt;100 then
      docurse = "paralyse"
   elseif affstrack.score.impatience&lt;100 then
      docurse = "impatience"
   elseif affstrack.score.slickness&lt;100 then
      venomslick()
   elseif affstrack.score.anorexia&lt;100 then
      docurse = "anorexia"
   elseif classlockaffshaman() then
       classlockaffshaman()
   else
       ivp()
   end
end</script>
									<eventHandlerList />
								</Script>
								<Script isActive="yes" isFolder="no">
									<name>venomslickness</name>
									<packageName></packageName>
									<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
function venomslick()
   currentvenoms = currentvenoms or {}
   currentvenoms[venomdeliver] = currentvenoms[venomdeliver] or {}
   if currentvenoms[venomdeliver][1] ~= "gecko" then
      needsgecko = 2
   else
      needsgecko = 1
   end
end</script>
									<eventHandlerList />
								</Script>
								<Script isActive="yes" isFolder="no">
									<name>Attack Selection</name>
									<packageName></packageName>
									<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function attackselect()
   vodun = vodun or {}
   vodun.dolls = vodun.dolls or {}
   if Tzacheck() then
      docurse = "tzantza" 
   end
   if docurse == "swiftcurse" then 
      send("setalias oattack stand/swiftcurse") 
   elseif docurse == "tzantza" then
      if curseward == 1 then 
         send("setalias oattack stand/wield shield/curse "..target.." breach invoke soulrend",false)
      else
         send("setalias oattack stand/wield shield/curse "..target.." tzantza",false)
      end
   elseif needsgecko == 1 then
      send("setalias oattack stand/get axe/wield shield dirk/stab "..target,false)
   elseif needsgecko == 2 then
      send("setalias oattack stand/get axe/wield shield dirk/envenom dirk with gecko/stab "..target,false)
   elseif needsgecko == 3 then
      if curseward == 1 then 
         send("setalias oattack stand/wield shield/curse "..target.." breach invoke soulrend",false)
      else
         send("setalias oattack stand/wield shield/swiftcurse "..target.." "..docurse.." invoke coagulation slickness",false)
      end
   elseif relapse then
      if curseward == 1 then 
         send("setalias oattack stand/wield shield/curse "..target.." breach invoke soulrend",false)
      else
         send("setalias oattack stand/wield shield/swiftcurse "..target.." "..docurse.." invoke relapse "..relapse,false)
      end
   elseif needsgecko == 0 then
      if attackselectt == nil or attackselect == "curse" then 
         if curseward == 1 then 
            send("setalias oattack stand/wield shield/curse "..target.." breach invoke soulrend",false)
         else
            send("setalias oattack stand/wield shield/swiftcurse "..target.." "..docurse.." invoke soulrend",false)
         end
      elseif attackselectt == "blight" then 
         if curseward == 1 then 
            send("setalias oattack stand/wield shield/curse "..target.." breach invoke soulrend",false)
         else
            send("setalias oattack stand/wield shield/blight "..target.." "..docurse.." invoke soulrend",false)
         end
      elseif attackselectt == "torq" then
         if docurse == "stupid" then 
            send("setalias oattack wield shield/stand/mind stupidity "..target,false)
         else
            send("setalias oattack wield shield/stand/mind paralyse "..target,false)
         end
      elseif attackselectt == "doll" then
            send("setalias oattack stand/get "..vodun.dolls[target].." from pack/wield shield "..vodun.dolls[target].."/vodun "..docurse,false)
      elseif attackselectt == "fashion" then
            send("setalias oattack wield shield/stand/outr rope/outr cloth/fashion doll of "..docurse,false)
      end
   end
end</script>
									<eventHandlerList />
								</Script>
								<Script isActive="yes" isFolder="no">
									<name>Straight Tzantza</name>
									<packageName></packageName>
									<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function stk ()
   if swiftcount == 1 then
      docurse = "swiftcurse"
   else
      if affstrack.score.paralysis&lt;50 then
         docurse = "paralyse"
      elseif affstrack.score.dementia&lt;50 then
         docurse = "dementia"
      elseif affstrack.score.addiction&lt;50 then
         docurse = "addiction"
      elseif affstrack.score.paranoia&lt;50 then
         docurse = "paranoia"
      elseif affstrack.score.stupidity&lt;50 and not affstrack.score.impatience&gt;49 then
         docurse = "stupid"
      elseif affstrack.score.impatience&lt;49 then
         docurse = "impatience"
      elseif affstrack.score.dizziness&lt;50 and affstrack.score.impatience&gt;49 then
         docurse = "dizzy"
      elseif affstrack.score.epilepsy&lt;50 and affstrack.score.impatience&gt;49 then
         docurse = "epilepsy"
      elseif affstrack.score.stupidity&lt;50 and affstrack.score.impatience&gt;49 then
         docurse = "stupid"
      else
         docurse = "tzantza"
      end
   end 
end</script>
									<eventHandlerList />
								</Script>
								<Script isActive="yes" isFolder="no">
									<name>Can Tzantza</name>
									<packageName></packageName>
									<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function Tzacheck()
if affstrack.mentalscore + 0.1&gt;4 or affstrack.mentalscore + 0.1 == 4 then --tzacount &gt; 4 or tzacount == 4 then
   return true
else
   return false
end
end

function roundDown(number, places)
   return math.floor(number * math.pow(10,places)) / math.pow(10,places)
end
function roundUp(number, places)
   return math.ceil(number * math.pow(10,places)) / math.pow(10,places)
end</script>
									<eventHandlerList />
								</Script>
								<Script isActive="yes" isFolder="no">
									<name>avp</name>
									<packageName></packageName>
									<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
--Stack Asthma with Paralysis
function avp ()
   if affstrack.score.asthma&gt;25 then
      asthmastack()
   else
      if swiftcount == 1 then
         docurse = "swiftcurse"
      else
         if affstrack.score.paralysis&lt;100 then
            docurse = "paralyse" 
            relapse = "paralyse"
         elseif affstrack.score.clumsiness&lt;66 then
            docurse = "clumsy"
         elseif affstrack.score.sensitivity&lt;66 then
            docurse = "sensitivity"
         elseif affstrack.score.weariness&lt;66 then
            docurse = "weariness"
         elseif affstrack.score.healthleech&lt;66 then
            docurse = "healthleech"
         else
            docurse = "asthma"
         end
      end 
   end
end</script>
									<eventHandlerList />
								</Script>
								<Script isActive="yes" isFolder="no">
									<name>ivp</name>
									<packageName></packageName>
									<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
--Stack Impatience with Paralysis
--affstrack.score.agoraphobia + affstrack.score.claustrophobia + affstrack.score.dementia + affstrack.score.epilepsy + affstrack.score.masochism + affstrack.score.recklessness + affstrack.score.vertigo + affstrack.score.confusion + affstrack.score.dizziness + affstrack.score.impatience + affstrack.score.paranoia + affstrack.score.stupidity + affstrack.score.addiction
function ivp ()
   if swiftcount == 1 then
      docurse = "swiftcurse"
   else
      if affstrack.score.paralysis&lt;100 then
         docurse = "paralyse"
         relapse = "paralyse"
      elseif affstrack.score.impatience&lt;100 then
         docurse = "impatience"
      elseif affstrack.score.dizziness&lt;100 and affstrack.score.impatience== 100 then
         docurse = "dizzy"
      elseif affstrack.score.epilepsy&lt;100 and affstrack.score.impatience== 100 then
         docurse = "epilepsy"
      elseif affstrack.score.stupidity&lt;100 and affstrack.score.impatience== 100 then
         docurse = "stupid"
         attackselectt = "torq"
      else
         docurse = "tzantza"
      end
   end 
end</script>
									<eventHandlerList />
								</Script>
								<Script isActive="yes" isFolder="no">
									<name>RelapseChecker</name>
									<packageName></packageName>
									<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function relapsecheck()
      if affstrack.score.paralysis&lt;100 and docurse ~= "paralyse" then
         relapse = "paralyse"
      elseif affstrack.score.asthma&lt;100 and docurse ~= "asthma" then
         relapse = "asthma"
      elseif affstrack.score.impatience&lt;100 and docurse ~= "impatience" then
         relapse = "impatience"
      end
end</script>
									<eventHandlerList />
								</Script>
								<Script isActive="yes" isFolder="no">
									<name>NewAttack Reset(shamana)</name>
									<packageName></packageName>
									<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function shamana()
   needsgecko = 0
   attackselectt = nil
   relapse = nil
end</script>
									<eventHandlerList />
								</Script>
							</ScriptGroup>
							<ScriptGroup isActive="no" isFolder="yes">
								<name>Apostate Stacks</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
								<eventHandlerList />
								<Script isActive="yes" isFolder="no">
									<name>Deadeyes</name>
									<packageName></packageName>
									<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function deadeyes()
      --First Stare
         if affstrack.score.paralysis&lt;100 then
            docurse2 = "paralyse"
         elseif affstrack.score.clumsiness&lt;66 then
            docurse2 = "clumsy"
         elseif affstrack.score.sensitivity&lt;66 then
            docurse2 = "sensitivity"
         elseif affstrack.score.weariness&lt;66 then
            docurse2 = "weariness"
         elseif affstrack.score.healthleech&lt;66 then
            docurse2 = "healthleech"
         else
            docurse2 = "asthma"
         end

      --Second Stare
         if affstrack.score.asthma&lt;100 then
            docurse2 = "asthma"
         elseif affstrack.score.clumsiness&lt;66 then
            docurse2 = "clumsy"
         elseif affstrack.score.sensitivity&lt;66 then
            docurse2 = "sensitivity"
         elseif affstrack.score.weariness&lt;66 then
            docurse2 = "weariness"
         elseif affstrack.score.healthleech&lt;66 then
            docurse2 = "healthleech"
         else
            docurse2 = "asthma"
         end
end
 </script>
									<eventHandlerList />
								</Script>
							</ScriptGroup>
							<ScriptGroup isActive="no" isFolder="yes">
								<name>Sword N Board Stacks</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
								<eventHandlerList />
								<Script isActive="yes" isFolder="no">
									<name>Kelp Stack</name>
									<packageName></packageName>
									<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function boardattackkelp()
         vcombo = vcombo or {}
         if affstrack.score.asthma&lt;100 and vcombo[1] ~= "kalmia" then
            boarda = "drive"
         elseif affstrack.score.paralysis&lt;100 and vcombo[1] ~= "curare" then
            boarda = "smash mid"
         elseif affstrack.score.clumsiness&lt;100 and vcombo[1] ~= "xentio" then
            boarda = "smash low"
         else 
            boarda = "smash high"
         end
         boardkelpstack()
end

function boardkelpstack()
vcombo = {nil}
if math.random(100)&lt;50 then
    if affstrack.score.paralysis&lt;100 then
        table.insert(vcombo,"curare")
    elseif affstrack.score.clumsiness&lt;65 then
        table.insert(vcombo,"xentio")
    elseif affstrack.score.sensitivity&lt;65 then
        table.insert(vcombo,"prefarar")
    elseif affstrack.score.weariness&lt;65 then
        table.insert(vcombo,"vernalius")
    elseif affstrack.score.asthma&lt;50  then
        table.insert(vcombo,"kalmia")
    elseif affstrack.score.slickness&lt;100 then
        table.insert(vcombo,"gecko")
    elseif affstrack.score.anorexia&lt;100 then
        table.insert(vcombo,"slike")
    end
else
    if affstrack.score.paralysis&lt;100  then
        table.insert(vcombo,"curare")
    elseif affstrack.score.clumsiness&lt;65 then
        table.insert(vcombo,"xentio")
    elseif affstrack.score.sensitivity&lt;65 then
        table.insert(vcombo,"prefarar")
    elseif affstrack.score.weariness&lt;65  then
        table.insert(vcombo,"vernalius")
    elseif affstrack.score.asthma&lt;50 then
        table.insert(vcombo,"kalmia")
    elseif affstrack.score.slickness&lt;100 then
        table.insert(vcombo,"gecko")
    elseif affstrack.score.anorexia&lt;100 then
        table.insert(vcombo,"slike")
    end
end
end



</script>
									<eventHandlerList />
								</Script>
							</ScriptGroup>
							<ScriptGroup isActive="no" isFolder="yes">
								<name>Bard Stacks</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
--
--Everything that follows was originally written by Klendathu

--I have mildly modified portions of be more up to date with my current offense tracking system,
--while attempting to leave the majority of it in place so he has to do very little to maintain
--continued functionality.  If you are a using this section, I strongly encourage you to make sure
--to spend a few extra seconds and drop him a thank you.

--Thank you.


--*************THESE HAVE NOT BEEN IMPLEMENTED INTO AN OFFENSIVE STRATEGY YET!!!*******************</script>
								<eventHandlerList />
								<Script isActive="yes" isFolder="no">
									<name>Auto-Select Voicecraft</name>
									<packageName></packageName>
									<script>






--*************THESE HAVE NOT BEEN IMPLEMENTED INTO AN OFFENSIVE STRATEGY YET!!!*******************

function nextSong()
	if rebounding == 1 or shielded == 1 then
		return "sing cantata at "..target

	elseif math.random(100) &lt; 50 and affstrack.score.stupidity &lt; 100 then
		return "sing passion at "..target

	elseif affstrack.score.clumsiness &lt; 100 then
		return "sing maqam at "..target

	elseif affstrack.score.stupidity &lt; 100 then
		return "sing passion at "..target

	elseif affstrack.score.anorexia &lt; 100 then
		return "sing qasida at "..target

	elseif affstrack.score.impatience &lt; 100 then
		return "sing limerick at "..target

	elseif affstrack.score.paralyse &lt; 100 then
		return "recite epic at "..target

	elseif affstrack.score.confusion &lt; 100 then
		return "recite haiku at "..target

	elseif affstrack.score.claustrophobia &lt; 100 then
		return "sing isorhythm at "..target

	--elseif affstrack.score.fear &lt; 100 then
	--	return "sing fugue at"..target

	elseif affstrack.score.illness &lt; 100 then
		return "recite poem at "..target

	elseif affstrack.score.vertigo &lt; 100 then
		return "sing pastorale at "..target

	elseif affstrack.score.epilepsy &lt; 100 then
		return "sing ditty at "..target

	elseif affstrack.score.paranoia &lt; 100 then
		return "sing requiem at "..target

	elseif affstrack.score.addiction &lt; 100 then
		return "recite ode at "..target

	else
		return "sing chant at "..target

	end
end
</script>
									<eventHandlerList />
								</Script>
							</ScriptGroup>
							<ScriptGroup isActive="no" isFolder="yes">
								<name>Magi Stacks</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
								<eventHandlerList />
								<Script isActive="yes" isFolder="no">
									<name>Staff Affliction Tracking</name>
									<packageName></packageName>
									<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function staffaff()
  if attackweapon[1] == "air staff" then
	   OppGainedAff("prone")
  elseif attackweapon[1] == "fire staff" then
	   OppGainedAff("aflame")
  --elseif attackweapon[1] == "earth staff" then
	   --OppGainedAff("prone")
  elseif attackweapon[1] == "water staff" then
	   OppGainedAff("frozen")
  end
end

--DO NOT MESS WITH THIS--</script>
									<eventHandlerList />
								</Script>
							</ScriptGroup>
							<ScriptGroup isActive="no" isFolder="yes">
								<name>BladeMaster Stacks</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
								<eventHandlerList />
								<Script isActive="yes" isFolder="no">
									<name>Blademaster Lock</name>
									<packageName></packageName>
									<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

--Thank you pastebin.com for this wonderful contribution

function bmLock()
    if affstrack.score.voidfist &lt; 100 then
       lockStrike = "vfist"
    elseif affstrack.score.paralysis &lt; 100 then
       lockStrike = "neck"
    elseif affstrack.score.hypochondria &lt; 100 and affstrack.score.impatience &lt; 100 then
          lockStrike = "chest"
    elseif affstrack.score.asthma &lt; 100 then
           lockStrike = "throat"
    elseif affstrack.score.impatience &gt; 99 then
           if affstrack.score.weariness &lt; 100 then
              lockStrike = "shoulder"
           elseif affstrack.score.slickness &lt; 100 then
              lockStrike = "underarm"
           elseif affstrack.score.anorexia &lt; 100 then
              lockStrike = "stomach"
           end
    end
end</script>
									<eventHandlerList />
								</Script>
								<Script isActive="yes" isFolder="no">
									<name>BM offense</name>
									<packageName></packageName>
									<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function bmattackdecide()
   if lockStrike == "vfist" then
    --  send("setalias oattack voidfist "..target,false)
     -- send("setalias oattacklr voidfist "..target,false)
    --  send("setalias oattackll voidfist "..target,false)
    --  send("setalias oattackal voidfist "..target,false)
    --  send("setalias oattackar voidfist "..target,false)
    --  send("setalias oattackch voidfist "..target,false)
    --  send("setalias oattackct voidfist "..target,false)
   else
    --  send("setalias oattack pommelstrike "..target.."/strike "..target.." "..lockStrike,false)
     -- send("setalias oattacklr legslash "..target.." right/strike "..target.." "..lockStrike,false)
    --  send("setalias oattackll legslash "..target.." left/strike "..target.." "..lockStrike,false)
     -- send("setalias oattackal armslash "..target.." left/strike "..target.." "..lockStrike,false)
    --  send("setalias oattackar armslash "..target.." right/strike "..target.." "..lockStrike,false)
    --  send("setalias oattackch centreslash "..target.." up/strike "..target.." "..lockStrike,false)
    --  send("setalias oattackct centreslash "..target.." down/strike "..target.." "..lockStrike,false)
   end
end</script>
									<eventHandlerList />
								</Script>
							</ScriptGroup>
							<ScriptGroup isActive="no" isFolder="yes">
								<name>Dual Cutting Stacks</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
								<eventHandlerList />
								<Script isActive="yes" isFolder="no">
									<name>Ginseng</name>
									<packageName></packageName>
									<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function dualcuttingginsengstack()
vcombo = {nil}
--Primary Venom Selection
if affstrack.score.paralysis&lt;100 then
   table.insert(vcombo,"curare")
elseif affstrack.score.asthma&lt;100 then
   table.insert(vcombo,"kalmia")
end

--Secondary Venom Selection
if math.random(100)&lt;50 then
    if affstrack.score.addiction&lt;100 then
        table.insert(vcombo,"vardrax")
    elseif affstrack.score.illness&lt;100 then
        table.insert(vcombo,"euphorbia")
    elseif affstrack.score.darkshade&lt;100 then
        table.insert(vcombo,"darkshade")
    elseif affstrack.score.asthma&lt;100 and vcombo[1] ~= "kalmia" then
        table.insert(vcombo,"kalmia")
    end
else
    if affstrack.score.addiction&lt;100 then
        table.insert(vcombo,"vardrax")
    elseif affstrack.score.darkshade&lt;100 then
        table.insert(vcombo,"darkshade")
    elseif affstrack.score.asthma&lt;100 and vcombo[1] ~= "kalmia" then
        table.insert(vcombo,"kalmia")
    elseif affstrack.score.illness&lt;100 then
        table.insert(vcombo,"euphorbia")
    end   
end
end</script>
									<eventHandlerList />
								</Script>
							</ScriptGroup>
						</ScriptGroup>
						<ScriptGroup isActive="no" isFolder="yes">
							<name>Displays</name>
							<packageName></packageName>
							<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
							<eventHandlerList />
							<Script isActive="yes" isFolder="no">
								<name>odisplay</name>
								<packageName></packageName>
								<script>


function refreshAffs()
   if table.contains(mycharacters,gmcp.Char.Name.name) then  ---This is for my personal GUI
      austeregui()                                         
   else
      refreshAffsOLD()
   end

end

function refreshAffsOLD()                               --This is my standard display included
        WindowWidth = 0;
        WindowHeight = 0;
        WindowWidth, WindowHeight = getMainWindowSize()
        moveWindow("aff_display", WindowWidth-190,WindowHeight-900)
        resizeWindow("aff_display", 175,890)
        clearWindow("aff_display")
        if rebounding then 
             if rebounding == 1 then 
                  cecho("aff_display","\nRebounding: &lt;red&gt;YES!\n")
             else cecho("aff_display","\nRebounding: &lt;yellow&gt;NONE!\n")
             end 
        end
        if shielded then 
             if shielded == 1 then 
                  cecho("aff_display","\nShielding: &lt;red&gt;YES!\n")
             else cecho("aff_display","\nShielding: &lt;yellow&gt;NONE!\n")
        end 
        end
        if curseward then 
             if curseward == 1 then 
                  cecho("aff_display","\nWarding: &lt;red&gt;YES!\n")
             else cecho("aff_display","\nWarding: &lt;yellow&gt;NONE!\n")
        end 
        end
        if swiftcount then 
             if swiftcount == 1 then 
                  cecho("aff_display","\nSwifting: &lt;red&gt;FALLING!\n\n")
             else 
                  cecho("aff_display","\nSwifting: &lt;yellow&gt;"..swiftcount.."!\n\n")
             end 
        end
        if vodun.fashions ~= nil then
           cecho("aff_display","0Fashions:&lt;orange_red&gt;"..vodun.fashions.."\n\n")
        end
        if stack then echo("aff_display","Stacking:"..stack.."\n") else echo("aff_display","\nStacking: NONE!\n\n") end
        targetrelay()
        echo("aff_display","\n0Afflictions:       \n\n")
        for k,v in pairs(affstrack.score) do
        if v &gt; 1 then
           echo("aff_display", k.." "..v.."\n")
           end
        end
        if affstrack.kelpscore &gt; .1 then    echo("aff_display","\nKelp:        "..affstrack.kelpscore.."|4\n") end
        if affstrack.ginsengscore &gt; .1 then echo("aff_display","Ginseng:     "..affstrack.ginsengscore.."|5\n") end
        if affstrack.goldenscore &gt; .1 then  echo("aff_display","Goldenseal:  "..affstrack.goldenscore.."|5\n") end
        if affstrack.mentalscore &gt; .1 then  echo("aff_display","Mentals:  "..affstrack.mentalscore.."|4\n") end
        if softscore then if softscore &gt;= 3 then cecho("aff_display", "Locks:\n SOFT LOCKED!") end end
        if truescore then if truescore &gt;= 5 then cecho("aff_display", "TRUE LOCKED!") end end
        limbshow()
end

function noDisplay()
        WindowWidth = 0;
        WindowHeight = 0;
        WindowWidth, WindowHeight = getMainWindowSize()
        moveWindow("aff_display", 0,0)
        resizeWindow("aff_display", 0,0)
        clearWindow("aff_display")
end



function init()
        winX, winY = getMainWindowSize()
        createMiniConsole("aff_display", winX-145,0,130,400)
        setBackgroundColor("aff_display", 150, 150, 150, 255)
        setMiniConsoleFontSize( "aff_display", 10 )
        setFgColor("aff_display", 10, 0, 0)
        setBgColor("aff_display", 150, 150, 150)
--refreshAffs()
end


</script>
								<eventHandlerList>
									<string>svo system loaded</string>
								</eventHandlerList>
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>oprompt Short Name Conversion/Tracking</name>
								<packageName></packageName>
								<script>--promptconversion
-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function opromptscoreup()
  if not convert then convoset() end
  promptset = {}
  for k,v in pairs(affstrack.score) do
      if v &gt; 1 and convert[k] then            --Change this if you only want to relay guaranteed affs
         --table.insert( promptset, convert[k]) 
         table.insert( promptset, convert[k].."["..math.floor(v + 0.5).."]" )
      end
  end
end

function convoset()
convert = {

                ["addiction"]      = "add",
                ["agoraphobia"]    = "agor",
                ["anorexia"]       = "anor",
                ["aeon"]           = "aeon",
                ["aflame"]         = "aflame",
                ["airfist"]        = "afist",
                ["asthma"]         = "ast",
                ["blind"]          = "bld",
                ["blackout"]       = "blko",
                ["bound"]          = "bound",
                ["cadmuscurse"]    = "cadmus",
                ["claustrophobia"] = "claus",
                ["clumsiness"]     = "clum",
                ["confusion"]      = "conf",
                ["crippledarm"]    = "carm",
                ["crippledleg"]    = "cleg",
                ["darkshade"]      = "dark",
                ["deadening"]      = "dead",
                ["deaf"]           = "deaf",
                ["dementia"]       = "dem",
                ["disloyalty"]     = "dloyal",
                ["disrupt"]        = "dis",
                ["dizziness"]      = "diz",
                ["epilepsy"]       = "epi",
                ["frozen"]         = "frzn",
                ["generosity"]     = "genor",
                ["haemophilia"]    = "haem",
                ["hallucinations"] = "hall",
                ["hamstring"]      = "hamst",
                ["healthleech"]    = "hleach",
                ["hellsight"]      = "hsight",
                ["hecate"]         = "hecate",
                ["hypersomnia"]    = "hyper",
                ["hypochondria"]   = "hypo",
                ["illness"]        = "ill",
                ["impaleslash"]    = "is",
                ["impatience"]     = "imp",
                ["kola"]           = "kola",
                ["lethargy"]       = "leth",
                ["loneliness"]     = "lonl",
                ["masochism"]      = "maso",
                ["manaleech"]      = "mleach",
                ["nausea"]         = "naus",
                ["pacifism"]       = "pac",
                ["paralysis"]      = "para",
                ["paranoia"]       = "prnd",
                ["prone"]          = "prn",
                ["recklessness"]   = "reck",
                ["scytherus"]      = "scy",
                ["selarnia"]       = "sel",
                ["sensitivity"]    = "sen",
                ["shyness"]        = "shy",
                ["slickness"]      = "slick",
                ["stupidity"]      = "stu",
                ["transfixed"]     = "trans",
                ["timeflux"]       = "tfx",
                ["weariness"]      = "weari",
                ["whispermadness"] = "wmad",
                ["vertigo"]        = "vert",
                ["vitiate"]        = "vit",
                ["voyria"]         = "voyria",
                ["voidfist"]       = "vfist",
                ["rightleg"]       = "rl",
                ["leftleg"]       = "ll",
                ["rightarm"]       = "ra",
                ["leftarm"]       = "la",
                ["head"]       = "h",
                ["torso"]       = "tt",
}
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>oprompt Wys Script</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
--type wshow display
--add @owysprompt into your prompt

function wsys.prompttags.owysprompt()
  if not target then 
     return "" 
  elseif #promptset &gt; 0 then
     return ("&lt;yellow&gt;["..table.concat(promptset, ", ").."&lt;yellow&gt;]")
  else
     return ""
  end
end
                    



</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>oecho</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function oechogain(string)
   if gmcp.Char.Name.name == "Klendathu" then  
      cecho("  &lt;cyan&gt;GAINED AFF:&lt;white&gt; "..string.."&lt;reset&gt;") 
   elseif table.contains(mycharacterstwo,gmcp.Char.Name.name) then 
      cecho("&lt;cyan&gt;\nProcessed Affliction(&lt;grey&gt;" ..string.. "&lt;cyan&gt;)") 
   else 
      EchoForAddedAff(string)
   end
end

function oecholost(string)
   if gmcp.Char.Name.name == "Klendathu" then 
      cecho("  &lt;cyan&gt;GAINED AFF:&lt;white&gt; "..string.."&lt;reset&gt;")
   elseif table.contains(mycharacterstwo,gmcp.Char.Name.name) then 
      cecho("&lt;cyan&gt;\nLost Affliction(&lt;grey&gt;" ..string.. "&lt;cyan&gt;)") 
   else
      EchoForLostAff(string) 
   end
end

function oechoForPossibleCures(string)
   if gmcp.Char.Name.name == "Klendathu" then 
      cecho("  &lt;cyan&gt;AFF PROCESSED:&lt;white&gt; "..string.."&lt;reset&gt;")
   elseif table.contains(mycharacterstwo,gmcp.Char.Name.name) then 
      cecho("&lt;cyan&gt;Processed Cures(&lt;grey&gt;" ..string.. "&lt;cyan&gt;)")
   else
      EchoForPossibleCures(string) 
   end
end</script>
								<eventHandlerList />
							</Script>
						</ScriptGroup>
						<ScriptGroup isActive="yes" isFolder="yes">
							<name>BackTracking</name>
							<packageName></packageName>
							<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
							<eventHandlerList />
							<Script isActive="yes" isFolder="no">
								<name>Opponent Priority Table</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

ocured = ocured or {
   parseout = {},
   conversion = {
       ["aurum flake"]      = "kelp",
       ["piece of kelp"]    = "kelp",
       ["lobelia seed"]     = "lobelia",
       ["argentum flake"]   = "lobelia",
       ["prickly ash bark"] = "ash",
       ["stannum flake"]    = "ash",
       ["bellwort flower"]  = "bellwort",
       ["cuprum flake"]     = "bellwort",
       ["goldenseal root"]  = "goldenseal",
       ["plumbum flake"]    = "goldenseal",
       ["bloodroot leaf"]   = "bloodroot",
       ["magnesium chip"]   = "bloodroot",
       ["ginseng root"]     = "ginseng",
       ["ferrum flake"]     = "ginseng",
       ["rage"]             = "rage",
       ["hawthorn berry"]   = "hawthorn",
       ["calamine crystal"] = "hawthorn",
       ["bayberry bark"]    = "bayberry",
       ["arsenic pellet"]   = "bayberry"
   },
   curemethods = {
   "treed",
   "focused",
   "restored",
   "smoked",
   "cureall",
   } 
}

function resetbacktrack()
ocured = {
   conversion = {
       ["aurum flake"]      = "kelp",
       ["piece of kelp"]    = "kelp",
       ["lobelia seed"]     = "lobelia",
       ["argentum flake"]   = "lobelia",
       ["prickly ash bark"] = "ash",
       ["stannum flake"]    = "ash",
       ["bellwort flower"]  = "bellwort",
       ["cuprum flake"]     = "bellwort",
       ["goldenseal root"]  = "goldenseal",
       ["plumbum flake"]    = "goldenseal",
       ["bloodroot leaf"]   = "bloodroot",
       ["magnesium chip"]   = "bloodroot",
       ["ginseng root"]     = "ginseng",
       ["ferrum flake"]     = "ginseng",
       ["rage"]             = "rage",
       ["hawthorn berry"]    = "hawthorn",
       ["calamine crystal"] = "hawthorn",
       ["bayberry bark"]    = "bayberry",
       ["arsenic pellet"]   = "bayberry"
   },
   curemethods = {
   "treed",
   "focused",
   "restored",
   "smoked",
   "cureall",
   } 
}
end

</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>Thought I had Functions</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function thoughtIhad(affliction)
   if obacktrack == true then
      if affstrack.score[affliction] &gt; 0 then
         possiblecuremethods = {}
         ocured.bestcuremethod = nil
         FindTheCures(affliction)
         RemoveTheCures(affliction)
         LowestProbableCure(affliction)--YOU FUCKER!!
         ParseOcured(affliction)
         scoreup()
         cecho("&lt;yellow&gt;\n\n\n\nBack Tracked:&lt;white&gt; "..affliction:title().."!\n")
      end
   else
         affstrack.score[affliction] = 0
         scoreup()
   end
end

function ParseOcured(affliction)
   affstrack.score[affliction] = 0
   if ocured.bestcuremethod then
      ocured[ocured.bestcuremethod][affliction] = nil
      for k,v in pairs(ocured[ocured.bestcuremethod]) do
         affstrack.score[k] = v
      end
   end
end


function LowestProbableCure(affliction)
   --ocured.bestcuremethod = {} 
   ocured.highestcurepercent = nil    
   for i = 1, #possiblecuremethods do 
      if possiblecuremethods[i] then
         ocured.bestcuremethod = ocured.bestcuremethod or possiblecuremethods[1]         
           if ocured[possiblecuremethods[i]] then
              if table.contains(ocured[possiblecuremethods[i]], affliction) then
                 ocured.highestcurepercent = ocured.highestcurepercent or ocured[possiblecuremethods[i]][affliction] 
                 if ocured[possiblecuremethods[i]][affliction] &lt; ocured.highestcurepercent then
                    ocured.highestcurepercent = ocured.highestcurepercent or ocured[possiblecuremethods[i]][affliction] 
                    ocured.highestcurepercent = ocured[possiblecuremethods[i]][affliction]
                    ocured.bestcuremethod = possiblecuremethods[i]
                 end
              end
          end  
       end
   end
end

function RemoveTheCures(affliction)
   if possiblecuremethods then
      for i = 1, #possiblecuremethods do
         ocured[possiblecuremethods[i]] = ocured[possiblecuremethods[i]] or {}
         if not table.contains(ocured[possiblecuremethods[i]], affliction) then
            possiblecuremethods[i] = "none"
         end
      end
   end
   while table.index_of(possiblecuremethods, "none") do
     table.remove(possiblecuremethods, table.index_of(possiblecuremethods, "none"))
   end
end

function FindTheCures(affliction)
   for k,v in pairs(affstrack.eaten) do
       if table.contains(affstrack.eaten[k], affliction) and not table.contains(possiblecuremethods, ocured.conversion[k]) then
          table.insert(possiblecuremethods, ocured.conversion[k])
       end
   end
   for i = 1, #ocured.curemethods do
      if table.contains(affstrack[ocured.curemethods[i]], affliction) then
         table.insert(possiblecuremethods, ocured.curemethods[i])
      end
   end
end

</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>Added Aff Reset</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function AddedAffReset(affliction)
if ocured then
   for k,v in pairs(ocured) do
      --display(ocured[k]) 
      if table.contains(ocured[k], affliction) then
         ocured[k] = nil
      end   
   end
end
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>ProTracking Functions</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function ProTrackingConfirmed(affliction) 
--we decided it WAS the affliction
   if oprotrack == true then
      if affstrack.score[affliction] &gt; 0 and affstrack.score[affliction] &lt; 100 then
         possiblecuremethods = {}
         affspro = {}
         ocured.parseout = {}
         ocured.bestcuremethod = nil
         FindTheCures(affliction)
         RemoveTheCures(affliction)
         LowestProbableCure(affliction)
         ParseOcuredPro(affliction)
         FinalOcuredProParse()
         affstrack.score[affliction] = 100
         scoreup()   
         cecho("&lt;yellow&gt;\n\n\n\nPro Tracked:&lt;white&gt; "..affliction:title().."!\n")   
      else
         affstrack.score[affliction] = 100
         scoreup()
      end
   else
         affstrack.score[affliction] = 100
         scoreup()
   end
end

function FinalOcuredProParse()
    if #ocured.parseout &gt; 0 then
      oechoForPossibleCures(table.concat(ocured.parseout, " "))
      for i = 1, #ocured.parseout do
         affstrack.score[ocured.parseout[i]] = affstrack.score[ocured.parseout[i]] - affstrack.score[ocured.parseout[i]] / #ocured.parseout
         if affstrack.score[ocured.parseout[i]] &lt; 34 then
            affstrack.score[ocured.parseout[i]] = 0
         end
      end
   end
end

function ParseOcuredPro(affliction)
   affstrack.score[affliction] = 0
   if ocured.bestcuremethod then
      ocured[ocured.bestcuremethod][affliction] = nil
      for k,v in pairs(ocured[ocured.bestcuremethod]) do
         affstrack.score[k] = v
         table.insert(ocured.parseout, k)
      end
      ocured[ocured.bestcuremethod] = nil 
   end
end</script>
								<eventHandlerList />
							</Script>
						</ScriptGroup>
						<ScriptGroup isActive="yes" isFolder="yes">
							<name>Limbs</name>
							<packageName></packageName>
							<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
							<eventHandlerList />
							<Script isActive="yes" isFolder="no">
								<name>Limb Display </name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function limbshow ()

cecho("aff_display","\n&lt;blue&gt;****************\n")
cecho("aff_display","\nLimbs:                \n")
limbcount = limbcount or {}
if limbcount[target] ~= nil then
   cecho("aff_display","\n\nH+T  :&lt;yellow&gt;"..limbcount[target].head.." "..limbcount[target].torso.."      \n")
   cecho("aff_display","\n\nArms: &lt;yellow&gt;"..limbcount[target].leftarm.." "..limbcount[target].rightarm.."      \n")
   cecho("aff_display","\n\nLegs: &lt;yellow&gt;"..limbcount[target].leftleg.." "..limbcount[target].rightleg.."      ")
end

end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>Limb Counter</name>
								<packageName></packageName>
								<script>function assess(targetmaxhealth) 
 brkl = nil

knightassess(targetmaxhealth)




for k,v in pairs(weaponstabs) do
    



if weaponstabs[k].damagestat ~= 420 and not weaponstabs[k].augment then
       brkl = (320+(targetmaxhealth*0.24))/((10+(targetmaxhealth*0.005))+weaponstabs[k].damagestat)
       weaponstabs[k].damagepercent = 100 / brkl
       weaponstabs[k].damagepercent = math.floor((weaponstabs[k].damagepercent) + .05)
    elseif weaponstabs[k].damagestat ~= 420 and weaponstabs[k].augment == "Board" then
       brkl = ((7*targetmaxhealth)/(400-weaponstabs[k].damagestat) + (17/8)*(weaponstabs[k].damagestat+10))
       brkl = targetmaxhealth/brkl
       weaponstabs[k].damagepercent = 100 / brkl
       weaponstabs[k].damagepercent = math.floor(weaponstabs[k].damagepercent)
    elseif weaponstabs[k].damagestat ~= 420 and weaponstabs[k].augment == "nonrunie" then
       weaponstabs[k].damagepercent = math.ceil(targetmaxhealth/(7*targetmaxhealth/(400-weaponstabs[k].damagestat) + (17/8)*(weaponstabs[k].damagestat+10)))
    elseif weaponstabs[k].damagestat ~= 420 and weaponstabs[k].augment == "laguz" then
       brkl = math.ceil(targetmaxhealth/(7*targetmaxhealth/(400-weaponstabs[k].damagestat) + (17/8)*(weaponstabs[k].damagestat+10)))
       brkl = brkl * 1.1
       weaponstabs[k].damagepercent = 100 / brkl
       weaponstabs[k].damagepercent = math.floor(weaponstabs[k].damagepercent)

else




    end




 end
 limbcounttable()
 --display(limbcount[target])
 --display(weaponstabs["a simple, training shortsword"])
end 

function limbcheck(limb)       -----Reset Timer
  limbcounttable()
  limbtimer = limbtimer or {}
  limbtimer[target] = limbtimer[target] or {}
  if (limbcount[target][limb] &gt; 100 or limbcount[target][limb] == 100) and limb ~= "head" then
     limbcount[target][limb] = 0
     affstrack.score[limb] = 200

cecho("&lt;green&gt;-----------\nLIMB BROKE!!!    \n-----------")


restoincoming = true

  elseif (limbcount[target][limb] &gt; 100 or limbcount[target][limb] == 100) then
     limbcount[target][limb] = 0
     affstrack.score[limb] = 100
     affstrack.score.stupidity = 100
  end
  cecho("&lt;yellow&gt;\nTargets "..limb.." is at "..limbcount[target][limb].."!!")
  if limbtimer[target][limb] then killTimer(limbtimer[target][limb]) end
  limbtimer[target][limb] = tempTimer(180, [[ 
      cecho("&lt;yellow&gt;\n\nReset ]]..target..[['s ]]..limb..[[!\n")
      limbcount.]]..target..[[.]]..limb..[[ = 0
      scoreup()
  ]])
end


function limbcounttable()
 limbcount = limbcount or {}
 limbcount[target] = limbcount[target] or {}
 limbcount[target].rightarm = limbcount[target].rightarm or 0 
 limbcount[target].rightleg = limbcount[target].rightleg or 0 
 limbcount[target].leftarm = limbcount[target].leftarm or 0 
 limbcount[target].leftleg = limbcount[target].leftleg or 0 
 limbcount[target].torso = limbcount[target].torso or 0 
 limbcount[target].head = limbcount[target].head or 0 
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>Limb Vars</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

--Use "board" augment for slice

weaponstabs = {           --blunt x 1.5                                     

-- ["Your WEAPON DESC GOES HERE "] = {WEAPONS DAMAGE STAT, damagepercent = 0&lt;optional augment = "type"&gt;} 

   ["a simple, training shortsword"] = {damagestat = 114, damagepercent = 0},


--I AM NOT SURE ABOUT THESE LINES!!--

   ["a Blackened rapier"]            = {damagestat =  57, damagepercent = 0},     
   ["a Eagle's Scream"]              = {damagestat =  60, damagepercent = 0},     
   ["a Soulpiercer"]                 = {damagestat =  63, damagepercent = 0},


-- ALL ARTEFACT WEAPONS!
   ["a longsword"]                    = {damagestat = 119, damagepercent = 0, augment = "laguz"},
   ["a rapier carved from living ice"] = {damagestat = 63, damagepercent = 0}, 
   ["a sharpened buckawn's spine"] = {damagestat = 15, damagepercent = 0, augment = "Board"},
   ["Neraeos' Fork"]               = {damagestat = 100, damagepercent = 0},
   ["a mithril spear"]             = {damagestat = 96, damagepercent = 0},
   ["a spiked steel spear"]        = {damagestat = 93, damagepercent = 0},
   ["a Stormspear"]                = {damagestat = 100, damagepercent = 0},
   ["a Devil's Fork"]              = {damagestat = 96, damagepercent = 0},
   ["a Defender's Trident"]        = {damagestat = 93, damagepercent = 0},
   ["an assassin's dirk"]          = {damagestat = 11, damagepercent = 0},
   ["an Orcsplitter battleaxe"]    = {damagestat = 162, damagepercent = 0},
   ["Thoth's fang"]                = {damagestat = 20, damagepercent = 0},
   ["a Logosian battleaxe"]        = {damagestat = 174, damagepercent = 0},
   ["a Sylvan axe"]                = {damagestat = 96, damagepercent = 0},
   ["an Axe of the Hunt"]          = {damagestat = 101, damagepercent = 0},
   ["an Axe of Gaian Fury"]        = {damagestat = 106, damagepercent = 0},
   ["a Stonereaver battleaxe"]     = {damagestat = 168, damagepercent = 0},
   ["an Auroran Mace"]             = {damagestat = 180, damagepercent = 0},
   ["a Worldforge Warhammer"]      = {damagestat = 192, damagepercent = 0},
   ["a Skullsplitter flail"]       = {damagestat = 144, damagepercent = 0},
   ["a Stonesmith's Maul"]         = {damagestat = 186, damagepercent = 0},
   ["a Hellforge Hammer"]          = {damagestat = 200, damagepercent = 0},
   ["a Raphaelan mace"]            = {damagestat = 173, damagepercent = 0},
   ["a Braincrusher flail"]        = {damagestat = 150, damagepercent = 0},
   ["an Odyssean mace"]            = {damagestat = 165, damagepercent = 0},
   ["a Mutilator flail"]           = {damagestat = 140, damagepercent = 0},
   ["a Barbarian's morningstar"]   = {damagestat = 73, damagepercent = 0},
   ["a Berserker's morningstar"]   = {damagestat = 77, damagepercent = 0},
   ["Matsuhama's morningstar"]     = {damagestat = 85, damagepercent = 0},
["a sooty, steel longsword"] = {damagestat = 119, damagepercent = 0},


--THESE STAY THE SAME, DO NOT FUCK WITH THE DAMAGE STAT!!

   ["dragon rend"]                 = {damagestat = 420, damagepercent = 25},
   ["sylvan rend"]                   = {damagestat = 420, damagepercent = 25},
   ["earth staff"]                 = {damagestat = 420, damagepercent = 15},
   ["water staff"]                 = {damagestat = 420, damagepercent = 15},
   ["fire staff"]                  = {damagestat = 420, damagepercent = 15},
   ["air staff"]                   = {damagestat = 420, damagepercent = 7}
}
</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>Weapon Adding</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
--weaponstabs = { 
function oweaponadd()
   for k,v in pairs(oweapons) do
      --display(k)
      --display(oweapons[k])
      if not table.contains(weaponstabs, oweapons[k]) then
         weaponstabs = table.union(weaponstabs, oweapons)
         return
      end
   end  
end</script>
								<eventHandlerList />
							</Script>
						</ScriptGroup>
						<ScriptGroup isActive="yes" isFolder="yes">
							<name>Cure Methods</name>
							<packageName></packageName>
							<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
							<eventHandlerList />
							<Script isActive="yes" isFolder="no">
								<name>oeaten</name>
								<packageName></packageName>
								<script>function affsate(what)
   affs = {}
   akrandomaffs = akrandomaffs or {}
   ocured = ocured or {}
   ocured[ocured.conversion[what]] = {}
   if affstrack.score.anorexia&gt;0 then 
      thoughtIhad("anorexia")  
   end
   if what == "hawthorn berry" or what == "calamine crystal" then
      affstrack.score.deaf = 100
      tempTimer(3,[[affstrack.score.deaf = 0;scoreup()]])
   else
      for i = 1, #affstrack.eaten[what] do
         if affstrack.score[affstrack.eaten[what][i]] &gt; 0 then
            table.insert(affs, affstrack.eaten[what][i])
         end
      end
      if #affs &gt; 0 then
         oechoForPossibleCures(table.concat(affs, " "))
         for i = 1, #affs do
            ocured[ocured.conversion[what]][affs[i]] = affstrack.score[affs[i]]
            affstrack.score[affs[i]] = affstrack.score[affs[i]] - affstrack.score[affs[i]] / #affs
            if affstrack.score[affs[i]] &lt; 34 then
                affstrack.score[affs[i]] = 0
            end
         end
      elseif #akrandomaffs &gt; 0 then

      end
   end
   scoreup()
end

</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>osmoke</name>
								<packageName></packageName>
								<script>function affssmoke ()
   affs = {}
   ocured = ocured or {}
   akrandomaffs = akrandomaffs or {}
   ocured.smoked = {}
   if affstrack.score.asthma&gt;0 then 
      thoughtIhad("asthma") 
   end
   for i = 1, #affstrack.smoked do
      if affstrack.score[affstrack.smoked[i]] &gt; 0 then
         table.insert(affs, affstrack.smoked[i])
      end
   end
   if #affs &gt; 0 then
      oechoForPossibleCures(table.concat(affs, " "))
      for i = 1, #affs do
         ocured.smoked[affs[i]] = affstrack.score[affs[i]]
         affstrack.score[affs[i]] = affstrack.score[affs[i]] - affstrack.score[affs[i]] / #affs
         if affstrack.score[affs[i]] &lt; 34 then
            affstrack.score[affs[i]] = 0
         end
      end
   elseif #akrandomaffs &gt; 0 then

   else
       reboundingaccountak = true
       reboundingaktime = nil
       reboundingaktime = tempTimer(8.5,[[reboundingaccountak = false]])
   end
   scoreup()
end

</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>oapply</name>
								<packageName></packageName>
								<script>function affsapply(what)
   affs = {}
   ocured = ocured or {}
   akrandomaffs = akrandomaffs or {}
   ocured.applied = {}
   affoverone = {}
   affovertwo = {}
   if affstrack.score.slickness&gt;0 and affstrack.score.slickness&lt;100 then 
      thoughtIhad("slickness")  
   end
   for i = 1, #affstrack.applied[what] do
       --display( affstrack.applied[what][i])--probable cures
       if affstrack.score[affstrack.applied[what][i]] &gt; 0 then
          table.insert(affs, affstrack.applied[what][i])
       end
       if affstrack.score[affstrack.applied[what][i]] &gt; 100 then
          table.insert(affoverone, affstrack.applied[what][i]) 
          affstrack.score[affstrack.applied[what][i]] = affstrack.score[affstrack.applied[what][i]] - 100
       end
       if affstrack.score[affstrack.applied[what][i]] &gt; 100 then
          table.insert(affovertwo, affstrack.applied[what][i]) 
          affstrack.score[affstrack.applied[what][i]] = affstrack.score[affstrack.applied[what][i]] - 100
       end   
   end
   if #affs &gt; 0 then
      oechoForPossibleCures(table.concat(affs, " "))
      for i = 1, #affs do
         ocured.applied[affs[i]] = affstrack.score[affs[i]]
         affstrack.score[affs[i]] = affstrack.score[affs[i]] - affstrack.score[affs[i]] / #affs
         if affstrack.score[affs[i]] &lt; 34 then
            affstrack.score[affs[i]] = 0
         end
         if table.contains(affoverone, affs[i]) then
            affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
         end 
         if table.contains(affovertwo, affs[i]) then
            affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
         end 
      end
   elseif #akrandomaffs &gt; 0 then

   end
   scoreup()
end



</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>ofocus</name>
								<packageName></packageName>
								<script>function affsfocus ()
   affs = {}
   ocured = ocured or {}
   ocured.focused = {}
   akrandomaffs = akrandomaffs or {}
   if affstrack.score.impatience&gt;0 then 
      thoughtIhad("impatience")  
   end
   for i = 1, #affstrack.focused do
      if affstrack.score[affstrack.focused[i]] &gt; 0 then
         table.insert(affs, affstrack.focused[i])
      end
   end
   if #affs &gt; 0 then
      oechoForPossibleCures(table.concat(affs, " "))
      for i = 1, #affs do
         ocured.focused[affs[i]] = affstrack.score[affs[i]]
         affstrack.score[affs[i]] = affstrack.score[affs[i]] - affstrack.score[affs[i]] / #affs
         if affstrack.score[affs[i]] &lt; 34 then
            affstrack.score[affs[i]] = 0
         end
      end
   elseif #akrandomaffs &gt; 0 then

   end
   scoreup()
end

</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>otree</name>
								<packageName></packageName>
								<script>function affstree ()
   affs = {}
   ocured = ocured or {}
   ocured.treed = {}
   akrandomaffs = akrandomaffs or {}
   affoverone = {}
   if affstrack.score.paralysis &gt; 0 then
      thoughtIhad("paralysis") 
   end
   for i = 1, #affstrack.treed do


      if affstrack.score[affstrack.treed[i]] &gt; 0 and affstrack.score[affstrack.treed[i]] ~= 200 then
         table.insert(affs, affstrack.treed[i]) 
      end     
      if affstrack.score[affstrack.treed[i]] &gt; 100 and affstrack.score[affstrack.treed[i]] ~= 200 then
         table.insert(affoverone, affstrack.treed[i]) 
         affstrack.score[affstrack.treed[i]] = affstrack.score[affstrack.treed[i]] - 100
      end   
   end
   if #affs &gt; 0 then
      oechoForPossibleCures(table.concat(affs, " "))
      for i = 1, #affs do
         ocured.treed[affs[i]] = affstrack.score[affs[i]]
         affstrack.score[affs[i]] = affstrack.score[affs[i]] - affstrack.score[affs[i]] / #affs
         if affstrack.score[affs[i]] &lt; 34 then
            affstrack.score[affs[i]] = 0
         end     
         if table.contains(affoverone, affs[i]) then
            affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
         end           
      end  
   elseif #akrandomaffs &gt; 0 then
   
   end
   scoreup()
end

</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>opassive</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function affspassive ()
   affs = {}
   akrandomaffs = akrandomaffs or {}
   ocured = ocured or {}
   ocured.cureall = {}
   for i = 1, #affstrack.cureall do
      if affstrack.score[affstrack.cureall[i]] &gt; 0 then
         table.insert(affs, affstrack.cureall[i])
      end
   end
   if #affs &gt; 0 then
      oechoForPossibleCures(table.concat(affs, " "))
      for i = 1, #affs do
         ocured.cureall[affs[i]] = affstrack.score[affs[i]]
         affstrack.score[affs[i]] = affstrack.score[affs[i]] - affstrack.score[affs[i]] / #affs
         if affstrack.score[affs[i]] &lt; 34 then
            affstrack.score[affs[i]] = 0
         end
      end
   elseif #akrandomaffs &gt; 0 then

   end
   scoreup()
end</script>
								<eventHandlerList />
							</Script>
						</ScriptGroup>
						<Script isActive="yes" isFolder="no">
							<name>Expert Diagnosing</name>
							<packageName></packageName>
							<script>--Just messing with you, this doesn't work


function expertAk()
   possiblechecksAK = {}
   for k,v in pairs(affstrack.score) do
      if v &gt; 1 then
         table.insert(possiblechecksAK, k)
         possiblechecksAK = AkcheckPrioList[k] 
      end
   end
end

--x = importance of affliction   [ 1 - 100 ]

--y = uncertainty of affliction   [ 0 - 50 ]

--a &amp; b = multipliers that you can choose

--whichever affliction's (ax+by) is the highest should be checked.

--This is basically just "weighting" your priorities.  You could simply use: 
  --(x/2 + y) for simplicity, and that'd probably be just fine.

--I would also recommend not checking anything unless the value is over a certain 
  --threshold (you wouldn't want to waste expert diagnose balance on something 
  --unimportant and relatively certain, just because nothing else looked better at the moment).

AkcheckPrioList = {
                ["addiction"]      = 0,
                ["aeon"]           = 0,
                ["agoraphobia"]    = 0,
                ["anorexia"]       = 0,
                ["aflame"]         = 0,
                ["airfist"]        = 0,
                ["asthma"]         = 0,
                ["blind"]          = 0,
                ["blackout"]       = 0,
                ["bound"]          = 0,
                ["cadmuscurse"]    = 0,
                ["claustrophobia"] = 0,
                ["clumsiness"]     = 0,
                ["confusion"]      = 0,
                ["crippledarm"]    = 0,
                ["crippledleg"]    = 0,
                ["darkshade"]      = 0,
                ["deadening"]      = 0,
                ["deaf"]           = 0,
                ["dementia"]       = 0,
                ["disloyalty"]     = 0,
                ["disrupt"]        = 0,
                ["dizziness"]      = 0,
                ["epilepsy"]       = 0,
                ["frozen"]         = 0,
                ["generosity"]     = 0,
                ["haemophilia"]    = 0,
                ["hallucinations"] = 0,
                ["hamstring"]      = 0,
                ["healthleech"]    = 0,
                ["hecate"]         = 0,
                ["hellsight"]      = 0,
                ["hypersomnia"]    = 0,
                ["hypochondria"]   = 0,
                ["illness"]        = 0,
                ["impaleslash"]    = 0,
                ["impatience"]     = 0,
                ["insomnia"]       = 0,
                ["kola"]           = 0,
                ["lethargy"]       = 0,
                ["loneliness"]     = 0,
                ["masochism"]      = 0,
                ["manaleech"]      = 0,
                ["nausea"]         = 0,
                ["pacifism"]       = 0,
                ["paralysis"]      = 0,
                ["paranoia"]       = 0,
                ["prone"]          = 0,
                ["recklessness"]   = 0,
                ["scytherus"]      = 0,
                ["selarnia"]       = 0,
                ["sensitivity"]    = 0,
                ["shyness"]        = 0,
                ["slickness"]      = 0,
                ["sleep"]          = 0,
                ["stupidity"]      = 0,
                ["transfixed"]     = 0,
                ["timeflux"]       = 0,
                ["weariness"]      = 0,
                ["whispermadness"] = 0,
                ["vertigo"]        = 0,
                ["vitiate"]        = 0,
                ["voidfist"]       = 0,
                ["voyria"]         = 0,
                ["rightleg"]       = 0,
                ["leftleg"]        = 0,
                ["rightarm"]       = 0,
                ["leftarm"]        = 0,
                ["head"]           = 0,
                ["torso"]          = 0,
}</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
				</ScriptGroup>
				<ScriptGroup isActive="no" isFolder="yes">
					<name>quivers</name>
					<packageName></packageName>
					<script>

--[[

Example Workflow:
Adding 100 Undyed Arrows:
INQ(100)  -- Adds 100 regular arrows (undyed)

Removing 50 Arrows:
OUTQ(50, "undyed")  -- Removes 50 undyed arrows from the quiver

Inspecting the Quiver:
IQ()  -- Displays current arrows in the quiver

Dyeing 10 Arrows Blue:
DYE(10, "blue")  -- Dye 10 arrows blue

Envenoming Blue Arrows with Loki Venom:
ENVENOM("blue", "loki")  -- Envenom blue arrows with Loki venom

Switching to Green Arrows:
SWITCH("green")  -- Switch to green arrows for next SHOOT

]]</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>getQuiverCapacity</name>
						<packageName></packageName>
						<script>-- Function to determine quiver capacity
function getQuiverCapacity()
    if quiver.type == "dragonskin" then
        return quiver.dragonskin
    elseif quiver.type == "celestial" then
        return quiver.celestial
    else
        return quiver.regular
    end
end
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>INQ</name>
						<packageName></packageName>
						<script>-- Function to add arrows to the quiver
function INQ(amount, arrowType)
    -- Initialize quiver.arrows["undyed"] to 0 if it doesn't exist yet
    quiver.arrows["undyed"] = quiver.arrows["undyed"] or 0  -- Set to 0 if nil

    if amount == "ALL" then
        echo("\nAll arrows are being added to the quiver.")
        -- For simplicity, assume we're adding undyed arrows (regular arrows)
        quiver.arrows["undyed"] = quiver.arrows["undyed"] + quiver.regular
        -- Send the INQUIVER command
        send("INQUIVER " .. quiver.regular .. " ARROWS")
    else
        amount = tonumber(amount)
        if amount then
            if quiver.arrows["undyed"] + amount &lt;= getQuiverCapacity() then
                quiver.arrows["undyed"] = quiver.arrows["undyed"] + amount
                echo("\n"..amount .. " regular arrows added to the quiver.") 
                -- Send the INQUIVER command for the specific amount
                send("INQUIVER " .. amount .. " ARROWS")
            else
                echo("\nCannot add more arrows. Quiver is full.")
            end
        else
            echo("\nInvalid amount entered for INQ.") 
        end
    end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>OUTQ</name>
						<packageName></packageName>
						<script>-- Function to remove arrows from the quiver
function OUTQ(amount, color)
    amount = tonumber(amount)
    if amount then
        if quiver.arrows[color] and quiver.arrows[color] &gt;= amount then
            quiver.arrows[color] = quiver.arrows[color] - amount
            echo("\n"..amount .. " arrows of color " .. (color or "undyed") .. " removed from the quiver.") 
            -- Send OUTQUIVER command
            send("OUTQUIVER " .. amount .. " " .. color .. " ARROW")
        else
            echo("\nNot enough arrows of that color in the quiver.")
        end
    else
       echo("\nInvalid amount entered for OUTQ.")
    end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>IQ</name>
						<packageName></packageName>
						<script>-- Function to inspect the contents of the quiver
function IQ()
    echo("\nInspecting Quiver:")
    echo("\nRegular Arrows (Undyed): " .. (quiver.arrows["undyed"] or 0))
    echo("\nMeteor Arrows: " .. (quiver.meteorArrows or 0))
    for color, amount in pairs(quiver.arrows) do
        if color ~= "undyed" then
            echo("\n"..color .. " arrows: " .. amount)
        end
    end
    -- Send INSPECT QUIVER command
    send("IQ")
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>ENVENOM</name>
						<packageName></packageName>
						<script>-- Function to envenom arrows
function ENVENOM(color, venom)
    if color and venom then
       -- echo("\nEnvenoming arrows of color " .. color .. " with " .. venom .. " venom.")
        -- Send ENVENOM command
        send("ENVENOM ARROWS " .. color .. " " .. venom)
    else
        echo("\nInvalid envenom command. You need to specify the color and venom type.")
    end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>DYE</name>
						<packageName></packageName>
						<script>-- Function to dye arrows
function DYE(amount, color)
    if amount and color then
       -- echo("\n"..amount .. " arrows dyed to " .. color .. ".")
        -- Send DYE command
        send("DYE " .. amount .. " ARROWS " .. color)
    else
        echo("\nInvalid dye command. You need to specify the amount and color.")
    end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>SWITCH</name>
						<packageName></packageName>
						<script>-- Function to switch to a specific set of arrows
function SWITCH(color)
    if color then
        echo("\nSwitching to " .. color .. " arrows for next SHOOT.")
        -- Send SWITCH command
        send("SWITCH " .. color)
    else
        echo("\nSwitching to Meteor arrows for next SHOOT.")
        -- Assuming you switch to Meteor arrows by default
        quiver.meteorArrows = quiver.meteorArrows + 1
        send("SWITCH METEOR")
    end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>handleCapturedData</name>
						<packageName></packageName>
						<script>-- Function to handle adding or updating arrows in the quiver
function handleCapturedData(color, venom, amount)
    color = color:lower()  -- Normalize color to lowercase
    amount = tonumber(amount)  -- Ensure the amount is a number

    -- Insert into the quiver
    table.insert(quiver.arrows, {color = color, venom = venom, amount = amount})
end

</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>maintainArrowCapacity</name>
						<packageName></packageName>
						<script>-- Function to ensure each color-venom combination has exactly 100 arrows
function maintainArrowCapacity()
    for venom, color in pairs(venoms) do
        local entry = findArrowEntry(color, venom)
        if entry then
            -- If the amount is less than 100, dye and envenom to fill it up
            if entry.amount &lt; quiver.maxArrowCapacity then
                local amountToAdd = quiver.maxArrowCapacity - entry.amount
                -- Dye and envenom to reach full capacity
                print(string.format("Dyeing and envenoming %d arrows of color %s and venom %s.", amountToAdd, color, venom))
                entry.amount = quiver.maxArrowCapacity
            end
        else
            -- If no entry exists, we add the full 100 arrows for this color-venom combo
            print(string.format("Adding 100 arrows of color %s and venom %s to the quiver.", color, venom))
            table.insert(quiver.arrows, {color = color, venom = venom, amount = quiver.maxArrowCapacity})
        end
    end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>dyeUndyedArrows</name>
						<packageName></packageName>
						<script>-- Function to dye undyed arrows until each color has 100 arrows
function dyeUndyedArrows(undyedAmount)
    -- Define the venoms and corresponding colors
    local quiver_venoms = {
        kalmia = "black",
        curare = "blue",
        prefarar = "gold",
        voyria = "green",
        delphinium = "grey",
        nechamandra = "orange",
        larkspur = "purple",
        oculus = "red",
        loki = "silver",
        xentio = "white",
        Undyed = "None"  -- Special handling for undyed arrows
    }

    -- First, dye the undyed arrows until each color has 100 arrows
    for venom, color in pairs(quiver_venoms) do
        if venom ~= "Undyed" then  -- Skip the Undyed venom entry
            local existingEntry = findArrowEntry(color, venom)

            -- If the color-venom combination does not exist, we need to dye arrows first
            if not existingEntry then
                if undyedAmount &gt; 0 then
                    -- Only dye arrows until we reach 100 per color
                    local amountToAdd = math.min(100, undyedAmount)
                    table.insert(quiver.arrows, {color = color, venom = venom, amount = amountToAdd})
                    undyedAmount = undyedAmount - amountToAdd

                    -- Send the DYE command
                    DYE(amountToAdd, color)  -- Dye the arrows
                    cecho(string.format("\nDyeing %d arrows of color %s.", amountToAdd, color))

                    -- Exit after dyeing the required amount for this color
                    return undyedAmount
                end
            elseif existingEntry then
                -- If arrows already exist with this color, we only dye the remaining arrows
                if existingEntry.amount &lt; 100 and undyedAmount &gt; 0 then
                    local amountToDye = math.min(100 - existingEntry.amount, undyedAmount)
                    existingEntry.amount = existingEntry.amount + amountToDye
                    undyedAmount = undyedAmount - amountToDye

                    -- Send the DYE command
                    DYE(amountToDye, color)  -- Dye the arrows
                    cecho(string.format("\nDyeing %d arrows of color %s.", amountToDye, color))

                    -- Exit after dyeing the required amount for this color
                    return undyedAmount
                end
            end
        end
    end

    return undyedAmount  -- Return remaining undyedAmount if no more can be dyed
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>envenomArrows</name>
						<packageName></packageName>
						<script>-- Function to envenom arrows that are already dyed
function envenomArrows()
    -- Define the venoms and corresponding colors
    local quiver_venoms = {
        kalmia = "black",
        curare = "blue",
        prefarar = "gold",
        voyria = "green",
        delphinium = "grey",
        nechamandra = "orange",
        larkspur = "purple",
        oculus = "red",
        loki = "silver",
        xentio = "white",
        Undyed = "None"
    }

    -- Now handle envenoming the arrows that are already dyed but missing venom
    for venom, color in pairs(quiver_venoms) do
        if venom ~= "Undyed" then  -- Skip the Undyed venom entry
            local existingEntry = findArrowEntry(color, venom)

            if existingEntry and existingEntry.amount &gt; 0 then
                -- If arrows are already dyed, we need to check if they are envenomed
                if existingEntry.venom == "None" then
                    -- If the arrows are dyed but not envenomed, apply venom
                    ENVENOM(color, venom)
                    cecho(string.format("\nEnvenoming arrows of color %s with venom %s.", color, venom))
                end

                return  -- Exit after processing one color + venom set
            end
        end
    end
end
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>dyeAndEnvenomUndyedArrows</name>
						<packageName></packageName>
						<script>-- Main function to manage dyeing and envenoming arrows
function dyeAndEnvenomUndyedArrows()
    -- Find undyed arrows
    local undyedEntry = findArrowEntry("undyed", "None")
    
    -- Check if there are undyed arrows
    if undyedEntry and undyedEntry.amount &gt; 0 then
        -- Step 1: Dye the undyed arrows and update the undyedAmount
        local undyedAmount = tonumber(undyedEntry.amount)
        undyedAmount = dyeUndyedArrows(undyedAmount)  -- Dye the undyed arrows
    else
        -- Step 2: If no undyed arrows, start envenoming the arrows that already have color but no venom
        envenomArrows()
    end
end
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>calculateTotalArrows</name>
						<packageName></packageName>
						<script>-- Function to calculate and print the total number of arrows in the quiver
function calculateTotalArrows()
    local totalArrows = 0

    -- Iterate through the quiver.arrows table and sum the amounts
    for _, entry in ipairs(quiver.arrows) do
        totalArrows = totalArrows + entry.amount
    end

    -- Print the total arrow count
    cecho(string.format("\nCurrent total number of arrows in the quiver: %d\n", totalArrows))

    return totalArrows
end
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>findArrowEntry</name>
						<packageName></packageName>
						<script>-- Function to check if a color-venom combination already exists in the quiver
function findArrowEntry(color, venom)
    for _, entry in ipairs(quiver.arrows) do
        if entry.color == color and entry.venom == venom then
            return entry
        end
    end
    return nil
end</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="no" isFolder="yes">
					<name>serpent</name>
					<packageName></packageName>
					<script></script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>dstab</name>
						<packageName></packageName>
						<script>function dstab()
  
  setStackList()
  checkForAsthma()
  checkForLock()
  
   if isEnemyLocked and not lobbed --[[and NDB_getClass(target):lower() == "psion"]] then
      requestconcussion = true
      return
   end
  
  carrier, carrierIndex = dstabaffselect(stacklist)
  stacker, stackerIndex = dstabaffselect(stacklist, carrierIndex)
  carriervenom = affselector[carrier].venom
  stackervenom = affselector[stacker].venom

  if inslowcuringmode() then
    handleAeonCombat()
  else

    handleSnapForLock() 
    handleStabForLock()
    handleCombatAction()
    handleExecute()  
    handleHinderOnLock() 
    handleReboundingAndShield() 
          
          
          
    if not(requestExecute) then
      send("queue addclear be!p!tu " .. balstring)
    end

  end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>prefix</name>
						<packageName></packageName>
						<script>function prefix()
  local cs = cmdsep
  local pref =
    {
      "stand",
      "purge",
      checkForParry(),
      "get body",
      "order treesnake attack " .. target,
      "dispel " .. target,
    }
  -- Iterate over the prefix commands
  for i, v in ipairs(pref) do
    -- Check if the command is not empty
    if v ~= "" then
      -- Concatenate with a semicolon
      pref[i] = v .. cs
    end
  end
  -- Concatenate all prefix commands
  return table.concat(pref)
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>dstabaffselect</name>
						<packageName></packageName>
						<script>function dstabaffselect(stacklist, exclude)
  local foundone = 0
  local returnvar = "paralysis"
  local index = 0
  for i = 1, #stacklist, 1 do
    if i ~= exclude and (stacklist[i][1] ~= "paralysis" or probabilityTable["paralysis"] ~= 1) then
      if probabilityTable[stacklist[i][1]] &lt; stacklist[i][2] and foundone == 0 then
        foundone = i
        index = i
      end
    end
  end
  if foundone &gt; 0 then
    returnvar = stacklist[foundone][1]
  end
  return returnvar, index
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>targetcheck</name>
						<packageName></packageName>
						<script>targetcheck =
  function()
    if not (target) then
      secho("&lt;red&gt;SET A TARGET IDIOT")
      return
    end
  end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>handleCombatAction</name>
						<packageName></packageName>
						<script>function handleCombatAction()
  
  balstring = ""
  
  -- command separator
  local cs = cmdsep
  -- Initialize balstring to avoid nil errors
  if not table.contains(myaffs, "prone") then
    if requestpinshot then
      -- Handle pinshot action
      balstring =
        "get bow from backstrap" ..
        cs ..
        "wield bow" ..
        cs ..
        blockDecide() ..
        cs ..
        checkHypnosis() ..
        "pinshot " ..
        target ..
        cs ..
        cLightWall()
    else
      -- Handle hypnosis logic
      if
        hypnocount &lt; hypnopointer and
        ((hypnostatus == "reset") or (hypnostatus == "locked")) and
        not (hypnostatus == "hypnotised") and
        not (hypnostatus == "snapped")
      then
        balstring = hypnomakestring()
      else
        -- Default combat action
        balstring =
          prefix() ..
          cs ..
          "wield shield fang" ..
          cs ..
          "wipe dirk" ..
          cs ..
          "dstab " ..
          target ..
          " " ..
          stackervenom ..
          " " ..
          carriervenom ..
          " "
      end
    end
  end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>handleSnapForLock</name>
						<packageName></packageName>
						<script>-- Main snap function.
function handleSnapForLock()
    local targetClass = NDB_getClass(target:title()):lower()
    local enemyBal = getRemainingEnemyTimerTime(targetClass)  -- Get enemy balance time
    local myBal = getRemainingPersonalTimerTime("balance")  -- Get your personal balance time
    local herbTimer = getRemainingEnemyTimerTime("herb")  -- Get enemy herb timer
    local treeTimer = getRemainingEnemyTimerTime("tree")  -- Get enemy tree timer

    -- Debug output for tracking timers
    --if DEBUG_MODE then
        myDebugEcho("cyan", string.format("Enemy Bal: %.2f, My Bal: %.2f, Herb: %.2f, Tree: %.2f", 
            enemyBal, myBal, herbTimer, treeTimer))
    --end

    -- Handle threshold checks
    handleTimerThresholdChecks(myBal, herbTimer, treeTimer)
end


function isWithinThreshold(value, minThreshold, maxThreshold)
    return value &gt;= minThreshold and value &lt;= maxThreshold
end

-- Helper function for checking affliction probability thresholds
function needsAfflictionCheck(affliction, threshold)
    return prob(affliction) &lt; threshold
end

-- Main function to handle balance and timer threshold checks
function handleTimerThresholdChecks(myBal, herbTimer, treeTimer)
   
    local minBalThreshold = 1.2    -- Updated balance timer range (min)
    local maxBalThreshold = 1.6    -- Updated balance timer range (max)
    local minTimerThreshold = 0.7
    local maxTimerThreshold = 1.2

    -- Check balance and timer conditions
    local myBalConditionMet = isWithinThreshold(myBal, minBalThreshold, maxBalThreshold)
    local herbTimerConditionMet = isWithinThreshold(herbTimer, minTimerThreshold, maxTimerThreshold)

    -- Log data if balance timer is active
    if myBal &gt; 0 then
        table.insert(snapDataLog, {
            myBal = myBal,
            herbTimer = herbTimer,
            treeTimer = treeTimer,
            minBalThreshold = minBalThreshold,
            maxBalThreshold = maxBalThreshold,
            minTimerThreshold = minTimerThreshold,
            maxTimerThreshold = maxTimerThreshold,
            myBalConditionMet = myBalConditionMet,
            herbTimerConditionMet = herbTimerConditionMet,
            snapTriggered = myBalConditionMet and herbTimerConditionMet and not isSnapCooldownActive(),
            cooldownActive = isSnapCooldownActive()
        })
    end

     -- Trigger snap only if both conditions are met and cooldown is inactive
    if myBalConditionMet and herbTimerConditionMet and not isSnapCooldownActive() then
        handleActionExecution(treeTimer)
        resetSnapCooldown()
    end
end

-- Utility function to print snap data log to the screen
function printSnapDataLog()
    cecho("&lt;cyan&gt;Snap Data Log:\n")
    for index, entry in ipairs(snapDataLog) do
        cecho(string.format(
            "&lt;cyan&gt;Entry #%d:\n&lt;white&gt;  My Balance: %.2f\n  Herb Timer: %.2f\n  Tree Timer: %.2f\n" ..
            "  Bal Thresholds: [%.2f - %.2f]\n  Timer Thresholds: [%.2f - %.2f]\n" ..
            "  Bal Condition Met: %s\n  Herb Timer Condition Met: %s\n  Snap Triggered: %s\n" ..
            "  Cooldown Active: %s\n\n",
            index,
            entry.myBal,
            entry.herbTimer,
            entry.treeTimer,
            entry.minBalThreshold,
            entry.maxBalThreshold,
            entry.minTimerThreshold,
            entry.maxTimerThreshold,
            tostring(entry.myBalConditionMet),
            tostring(entry.herbTimerConditionMet),
            tostring(entry.snapTriggered),
            tostring(entry.cooldownActive)
        ))
    end
end

-- Action execution function, simplified with new helper functions
function handleActionExecution(treeTimer)
    local haveParalysis = needsAfflictionCheck("paralysis", 0.85)
    local haveAsthma = needsAfflictionCheck("asthma", 0.85)
    local haveSlickness = needsAfflictionCheck("slickness", 0.85)
    local haveReckless = needsAfflictionCheck("recklessness", 0.85)
    local haveStupidity = needsAfflictionCheck("stupidity", 0.85)
    local haveSelarnia = needsAfflictionCheck("selarnia", 0.85)
   --local treeTimer = getRemainingEnemyTimerTime("tree")

    -- Clarified treeTimer condition for better readability
   -- local timerConditionMet = treeTimer &gt;= 1.5 and haveSlickness --(treeTimer &gt; 0) or 

   -- if timerConditionMet then
        if hypnostatus == "hypnotised" and haveAsthma and haveSlickness and classBlockerCheck() and not isEnemyLocked then
            executeSnapCommand(treeTimer, haveReckless, haveSelarnia, haveStupidity)
        end
   -- end
end

-- Function to check if balance is within threshold range
function checkBalCondition(myBal, minBalThreshold, maxBalThreshold)
    return isWithinThreshold(myBal, minBalThreshold, maxBalThreshold)
end

-- Function to check if herb timer is within threshold range
function checkHerbTimerCondition(herbTimer, minTimerThreshold, maxTimerThreshold)
    return isWithinThreshold(herbTimer, minTimerThreshold, maxTimerThreshold)
end

function executeSnapCommand(haveReckless, haveSelarnia, haveStupidity)


    -- Only proceed with the snap if cooldown is not active
    if not isSnapCooldownActive() and not rebounding and not shielded then
        -- Execute snap command depending on the class and conditions
        if enemyclass.depthswalker.enabled and haveReckless then
            send("snap " .. target)
        elseif enemyclass.shaman.enabled and haveSelarnia then
            send("snap " .. target)
        elseif enemyclass.alchemist.enabled and haveStupidity then
            send("snap " .. target)
        else
            send("snap " .. target)
        end

        -- Reset the cooldown timer after the snap
        resetSnapCooldown()
    else
        -- Optionally, log that the snap is skipped due to cooldown
        cecho("&lt;yellow&gt;Snap skipped due to cooldown.\n")
    end
end


    -- Function to check if cooldown is active
    function isSnapCooldownActive()
        local currentTime = os.clock()
        return (currentTime - lastSnapTime) &lt; snapCooldownTime
    end

    -- Reset cooldown after snap
    function resetSnapCooldown()
        snapCooldownActive = true
        lastSnapTime = os.clock()
    end
    
      -- Function to check if an affliction is needed based on a threshold using prob()
    function needsAfflictionCheck(affliction, threshold)
        local afflictionProbability = prob(affliction)  -- Get the probability for the affliction
        return afflictionProbability &gt;= threshold  -- Return true if the probability is above the threshold
    end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>classBlockerCheck</name>
						<packageName></packageName>
						<script>function classBlockerCheck()
  if enemyclass.dragon.enabled then
    if probabilityTable["weariness"] == 1 and probabilityTable["recklessness"] == 1 then
      return true
    else
      return false
    end
  elseif enemyclass.magi.enabled then
    if probabilityTable["stupidity"] == 1 then
      return true
    else
      return false
    end
  else
    if isFitnessClass() or enemyclass.serpent.enabled then
      if probabilityTable["weariness"] == 1 then
        return true
      else
        return false
      end
    end
  end
  return true
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>handleHinderOnLock</name>
						<packageName></packageName>
						<script>function handleHinderOnLock()
  -- Logic to handle enemy lock conditions
  local cs = cmdsep
  if probabilityTable["voyria"] == 1 and not isEnemyPrepped then
    
    -- Start building the common part of the balstring
    local baseBalstring = prefix() ..
                          cs ..
                          "wield shield fang" ..
                          cs ..
                          "wipe dirk" ..
                          cs ..
                          "dstab " .. target .. " "
    
    -- Determine which venom to use based on conditions
    if isEnemyLocked then
      if probabilityTable["sleep"] == 0 then
        -- If enemy is locked and not asleep, use delphinium
        carriervenom = "delphinium"
        stackervenom = "delphinium"
      elseif probabilityTable["crippledarms"] == 0 then
        -- If enemy is locked and arms are crippled, use epteth
        carriervenom = "epteth"
        stackervenom = "epteth"
      elseif probabilityTable["crippledlegs"] == 0 then
        -- If enemy is locked and legs are crippled, use epseth
        carriervenom = "epseth"
        stackervenom = "epseth"
      else
        -- If no conditions matched, mark enemy as prepped
        isEnemyPrepped = true
      end

      -- Add venoms to the baseBalstring only once
      balstring = baseBalstring .. stackervenom .. " " .. carriervenom .. " "
    end
  end
end
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>handleStabForLock</name>
						<packageName></packageName>
						<script>function handleStabForLock()
  -- Check if snapped and not enemy locked
  if hypnostatus == "snapped" and not isEnemyLocked then
    local slickness = probabilityTable["slickness"] &lt; 1
    local anorexia = probabilityTable["anorexia"] &lt; 1
    local reckless = probabilityTable["recklessness"] &lt; 1
    local stupidity = probabilityTable["stupidity"] &lt; 1
    local selarnia = probabilityTable["selarnia"] &lt; 1
    local paralysis = probabilityTable["selarnia"] &lt; 1
    
    --magi but bloodboil is at least random and stopped by broken arms."
    if enemyclass.depthswalker.enabled then
      if reckless then
        carriervenom = "eurypteria"
      end
    elseif enemyclass.jester.enabled or enemyclass.magi.enabled then
      if paralysis then
        carriervenom = "curare"
      end
    elseif enemyclass.shaman.enabled then
      if selarnia then
        carriervenom = "selarnia"
      end
    elseif enemyclass.alchemist.enabled then
      if stupidity then
        carriervenom = "stupidity"
      end
    else
      if slickness then
        carriervenom = "gecko"
      end
    end
    if anorexia then
      stackervenom = "slike"
    end
    
    --[[If either slickness or anorexia is false, set carriervenom to paralysis or next aff,

     and stackervenom to slike or gecko depending on which is not present, if bot evaluate to false

     then select the next aff in stacker venom table.--]]
    --[[if not slickness or not anorexia then

            carriervenom = not slickness and not anorexia and (probabilityTable["paralysis"] == 1 and affselector[carrier].venom or "curare") or carriervenom
      
            stackervenom = not slickness and not anorexia and affselector[stacker].venom or (slickness and "slike" or "gecko")

        end]]
  end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>handleReboundingAndShield</name>
						<packageName></packageName>
						<script>function handleReboundingAndShield()
  local cs = cmdsep
  -- Logic to handle rebounding and shield conditions
  if not (requestpinshot) then
    if rebounding then
      -- Only set rebounding string if rebounding is true
      balstring = "purge"..cs.."wield lash fang"..cs.."flay " .. target .. " rebounding curare"
    elseif shielded then
      -- Only set shielded string if shielded is true
      balstring = "purge"..cs.."wield lash fang"..cs.."flay " .. target .. " shield curare"
    -- We don't clear or overwrite balstring when rebounding and shielded are both false
    end
  end
end

</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>handleAmnesia</name>
						<packageName></packageName>
						<script>function handleAmnesia()
  local cs = cmdsep
  if table.contains(myaffs, "amnesia") then
    return "touch dirk"..cs..""
  else
    return ""
  end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>handleExecute</name>
						<packageName></packageName>
						<script>function handleExecute()
  local cs = cmdsep
  if
    isEnemyLocked and isEnemyPrepped and
    (probabilityTable["prone"] == 1 or probabilityTable["sleep"] == 1) and
    not (shielded) and
    not (rebounding)
  then      
   
      systemPaused=true
      balstring = "wield lash fang"..cs.."execute  " .. target

  end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>handleCamusBite</name>
						<packageName></packageName>
						<script>function handleCamusBite()
  local cs = cmdsep
  -- Logic to handle camus bite conditions
  if
    isEnemyLocked and
    probabilityTable["prone"] == 0 and
    probabilityTable["crippledlegs"] == 1 and
    probabilityTable["crippledarms"] == 1 and
    probabilityTable["voyria"] == 1
  then
    if not (shielded) and not (rebounding) then
      if not (sileris) then
        if probabilityTable["scytherus"] == 1 then
          --balstring =
          --  "purge"..cs.."wield shield fang"..cs.."dstab " .. target .. " " .. carriervenom .. " " .. "gecko"
        else
        --  balstring = "purge"..cs.."secrete scytherus"..cs.."bite  " .. target
        end
      else
        --balstring = "purge"..cs.."wield lash fang"..cs.."flay " .. target .. " sileris " .. carriervenom
      end
    end
  end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>lightwall</name>
						<packageName></packageName>
						<script>function cLightWall()
  local exits = table.keys(gmcp.Room.Info.exits)
  local lightwalldir = exits[math.random(#exits)]
  lightwallstring = "conjure lightwall " .. lightwalldir
  if table.contains({inv_room}, "a lightwall") then
    return ""
  else
    return lightwallstring
  end
end

--LIGHTWALL

function isLightWall()
  for id, item in pairs(inv_room) do
    if item.name == "a lightwall" then
      return true
    end
  end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>blockDecide</name>
						<packageName></packageName>
						<script>function blockDecide()
  local listofexits = getRoomExits(gmcp.Room.Info.num) or gmcp.Room.Info.exits
  local mydirections = {}
  local blockstring = ""
  if exits ~= {} then
    for k, v in pairs(listofexits) do
      table.insert(mydirections, k)
    end
  end
  if #mydirections &gt; 0 then
    blockstring = "block " .. mydirections[math.random(1, #mydirections)]
  end
  if blocking then
    return ""
  else
    return blockstring
  end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>convertAffList</name>
						<packageName></packageName>
						<script>function convertAffList()
  affselector =
    {
      asthma = {venom = "kalmia"},
      paralysis = {venom = "curare"},
      anorexia = {venom = "slike"},
      clumsiness = {venom = "xentio"},
      weariness = {venom = "vernalius"},
      sensitivity = {venom = "prefarar"},
      addiction = {venom = "vardrax"},
      nausea = {venom = "euphorbia"},
      darkshade = {venom = "darkshade"},
      impatience = {venom = "impatience"},
      dizziness = {venom = "larkspur"},
      scytherus = {venom = "scytherus"},
      slickness = {venom = "gecko"},
      stupidity = {venom = "aconite"},
      voyria = {venom = "voyria"},
      sleep = {venom = "delphinium"},
      selarnia = {venom = "selarnia"},
      recklessness = {venom = "eurypteria"},
      disloyalty = {venom = "monkshood"},
      crippledarms = {venom = "epteth"},
      crippledlegs = {venom = "epseth"},
    }
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>setStackList</name>
						<packageName></packageName>
						<script>function setStackList()
  if enemyclass.magi.enabled then
    stacklist =
      {
        {"paralysis", 1},
        {"clumsiness", 0.33},
        {"darkshade", 1},
        {"epteth", 0.33},
        {"asthma", 1},
        {"slickness", 1},
        {"anorexia", 1},
        {"voyria", 1},
      }
  elseif enemyclass.dragon.enabled then
    stacklist =
      {
        {"paralysis", 1},
        {"weariness", 1},
        {"darkshade", 1},
        {"clumsiness", .33},
        {"asthma", 1},
        {"slickness", 1},
        {"anorexia", 1},
        {"voyria", 1},
      }
  elseif
    enemyclass.depthswalker.enabled or enemyclass.shaman.enabled or enemyclass.alchemist.enabled
  then
    stacklist =
      {
        {"paralysis", 1},
        {"clumsiness", .33},
        {"darkshade", 1},
        {"asthma", 1},
        {"slickness", 1},
        {"anorexia", 1},
        {"voyria", 1},
      }
  elseif isFitnessClass() or enemyclass.serpent.enabled then
    stacklist =
      {
        {"asthma", 1},
        {"paralysis", 1},
        {"weariness", 1},
        {"sensitivity", .33},
        {"darkshade", 1},
        {"clumsiness", .33},
        {"asthma", 1},
        {"slickness", 1},
        {"anorexia", 1},
        {"voyria", 1},
      }
  else
    stacklist =
      {
        {"paralysis", 1},
        {"weariness", .33},
        {"clumsiness", .33},
        --{"sensitivity", .24},
        {"asthma", 1},        
        {"slickness", 1},
        {"anorexia", 1},
        {"darkshade", .33},
        {"stupidity", .33},        
        {"dizziness", .33},
        {"voyria", 1},
      }
  end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>hypnomake</name>
						<packageName></packageName>
						<script>function hypnomake()
  if hypnostatus == "snapped" then
    hypnostatus = "reset"
  end
  hypnochain = {"disrupt", "confusion", "impatience"}
  if hypnostatus == "reset" then
    send("hypnotise " .. target)
    hypnopointer = 1
  end
  if hypnostatus == "locked" then
    if hypnopointer &gt; #hypnochain then
      send("seal " .. target .. " 1")
    else
      send("queue addclear eqbal suggest " .. target .. " " .. hypnochain[hypnopointer])
    end
  end
  if hypnostatus == "hypnotised" then
    echo("\nplayer hypnotised")
  end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>hypnomakestring</name>
						<packageName></packageName>
						<script>function hypnomakestring()
  local command = ""
  -- Initialize the command variable
  if hypnostatus == "reset" then
    command = "hypnotise " .. target
  elseif hypnostatus == "locked" then
    if hypnopointer &gt; #hypnochain then
      command = "seal " .. target .. " 1"
    else
      command = "suggest " .. target .. " " .. hypnochain[hypnopointer]
    end
  elseif hypnostatus == "hypnotised" then
    echo("\nplayer hypnotised")
    -- Use echo function to display a message
  end
  return command
  -- Return the generated command
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>checkHypnosis</name>
						<packageName></packageName>
						<script>function checkHypnosis()
  local cs = cmdsep
  if hypnostatus == "locked" then
    return ""
  end
  return "hypnotise " .. target .. cs
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>checkForLock</name>
						<packageName></packageName>
						<script>function checkForLock()
  if hypnostatus == "snapped" or hypnostatus == "reset" then
    local locktable = {"paralysis", "impatience", "asthma", "slickness", "anorexia"}
    local anyValueLessThanThreshold = false
    -- Track if any value is less than 0.51
    for _, v in pairs(locktable) do
      if not (probabilityTable[v] &gt;= 0.51) then
        anyValueLessThanThreshold = true
        break
      end
    end
    isEnemyLocked = not anyValueLessThanThreshold    
  end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>checkForAsthma</name>
						<packageName></packageName>
						<script>function checkForAsthma()
  local smokeTimer = getRemainingEnemyTimerTime("smoke")
  if smokeTimer == 0 and probabilityTable["slickness"] == 1 then
    if probabilityTable["asthma"] == 0 then
      updateProbabilityTable("kelp", probabilityTable)
      probabilityTable["asthma"] = 1
    end
  end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>checkForParalysis</name>
						<packageName></packageName>
						<script>function checkForParalysis()
  if probabilityTable["paralysis"] &gt; .48 and hisbal + .5 &lt; os.clock() then
    probabilityTable["paralysis"] = 1
  end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>cureillusion</name>
						<packageName></packageName>
						<script>function cureillusion(cure, trueorder)
cureillusions = {magnesium = "Ryze eats a magnesium flake.", ferrum = "Ryze eats a ferrum flake.", stannum = "Ryze eats a stannum flake.", aurum = "Ryze eats an aurum flake.", plumbum = "Ryze eats a plumbum flake."}
 
creation = ""
endillusion = false
startillusion = false
padding = false

local cs = cmdsep 
 
for i = 1, #trueorder, 1 do
 
rand1 = math.random(1, #trueorder)
rand2 = math.random(1, #trueorder)
 
trueorder[rand1],trueorder[rand2] = trueorder[rand2], trueorder[rand1] 
 
 
end
 
 
order = {}
 
for i = 1, #trueorder do
 
order[i] = trueorder[i]
 
 
end
 
 
for i = 1, #order, 1 do
--cecho("\nnow processing "..order[i])
 
 
if order[i] == cure then
creation = creation..""..cs.."outr "..order[i]..""..cs.."eat "..order[i]
padding = true
 
else
if padding then
 
creation = creation..""..cs.."outr "..order[i]..""..cs.."eat "..order[i]
 
else
 
 
if not(startillusion) then
 
creation = creation..""..cs.."conjure illusion "..target.." "..cureillusions[order[i]]
startillusion = true
 
else
creation = creation.."\\n"..cureillusions[order[i]]
 
 
end
 
 
end
 
end
 
 
end
send(creation)
 
 
 
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>combat reset</name>
						<packageName></packageName>
						<script>function combat_reset()

    snapCooldownActive = false
    snapCooldownTime = 1.5 -- Adjust as necessary (in seconds)
    lastSnapTime = 0
    requestconcussion = false
    lobbed = false

    -- serpent variables
    bound = false
    throatslit = false
    squinted = false
    isEnemyPrepped = false
    requestExecute = false
    hypnocount = -1
  -- hypnochain = {"impatience"}
    hypnochain = {"disrupt","confusion","impatience"}
    hypnopointer = 1
    requestsnap = false
    hypnostatus = "reset"
    requestbite = false
    requestpinshot = true
    requestlightwall = false
  
    -- dragon variables
    antiparry = false
    parrybreak = false
    healrequested = false
    limbrequested = "torso"
    avalancherequested = false
    calcifyrequested = false
    keepingpara = false
    waitingforbind = false
  

    -- chase variables
    room_count = 0
    room_count_set = 0
    chase_target_locked = false
    lookdirection = ""       
    chasedirection = ""
    
    
    -- general all class variables
    requestchase = false
    sileris = true
    rebounding = true
    shielded = false
    targetlyred = false
    nextAction = ""
    isEnemyLocked = false
    hindered = false
    aeoncommand = ""
    aeonsensitivity = .1
    cansend = true
    cansendreset = false
    requestbrazier = false
    brazierpoint = 0

  
    -- Function calls to reset other states
    jinx = 0
    setStackList()
    resetEnemyAffs()
    resetAllEnemyBalanceTimes()
    resetEducatedGuessHistory()
    
end
</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="no" isFolder="yes">
					<name>dragon</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>initializeDragonVariables</name>
						<packageName></packageName>
						<script>-- Setup and Initialization
function initializeDragonVariables()
    local balstring = ""
    local limb = limbrequested or ""
    local jinx = 0

    local affcheck = {
        sensitivity = {claw = "prefarar", curse = "dragoncurse " .. target .. " sensitivity"},
        paralysis = {claw = "curare", curse = "dragoncurse " .. target .. " paralysis"},
        impatience = {curse = "dragoncurse " .. target .. " impatience"},
        asthma = {claw = "kalmia"},
        recklessness = {curse = "dragoncurse " .. target .. " recklessness", claw = "eurypteria"},
        stupidity = {curse = "dragoncurse " .. target .. " stupidity", claw = "aconite"},
        slickness = {claw = "gecko"},
        anorexia = {claw = "slike"},
        weariness = {claw = "vernalius"},
        clumsiness = {claw = "xentio"}
    }

    stacklist = stacklist or {
        {"paralysis", 1},
        {"impatience", 1},
        {"clumsiness", 0.5},
        {"asthma", 0.5},
        {"slickness", 0.5},
        {"anorexia", 1}
    }

    return balstring, limb, jinx, affcheck
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>determineDragonAfflictions</name>
						<packageName></packageName>
						<script>function determineDragonAfflictions()
    local carrier = dragonaffdecide()
    local stacker = dragonaffdecide()
    return carrier, stacker
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>selectDragonClawAndCurse</name>
						<packageName></packageName>
						<script>-- Select Claw and Curse
function selectDragonClawAndCurse(carrier, stacker, carrierclaw, stackerclaw, carriercurse, stackercurse)
    local selectedclaw, selectedcurse
    if carrierclaw == carriercurse then
        if stacker == "paralysis" then
            -- do nothing
        end

        if stacker == stackercurse then
            selectedclaw = carrierclaw
            selectedcurse = stackercurse
        else
            selectedclaw = stackerclaw
            selectedcurse = carriercurse
        end

        if carrier == "paralysis" and selectedcurse == carriercurse and getRemainingEnemyTimerTime("herb") &lt; os.clock() + 1 then
            selectedclaw = carrierclaw
            selectedcurse = carriercurse
        end

        if carrier == carrierclaw and keepingpara then
            selectedcurse = "paralysis"
        end
    else
        selectedclaw = carrierclaw
        selectedcurse = carriercurse

        if keepingpara then
            selectedcurse = "paralysis"
        end
    end
    return selectedclaw, selectedcurse
end

</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>determineDragonClawAndCurse</name>
						<packageName></packageName>
						<script>function determineDragonClawAndCurse(affcheck)
    local carrierclaw = dragonrends(affcheck)
    local stackerclaw = dragonrends(affcheck)
    local carriercurse = dragoncurses(affcheck)
    local stackercurse = dragoncurses(affcheck)
    return carrierclaw, stackerclaw, carriercurse, stackercurse
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>limb &amp; command</name>
						<packageName></packageName>
						<script>-- Determine Limb and Generate Commands
function determineDragonLimbAndCommands(limb, selectedclaw, selectedcurse, affcheck)
    local balstring = ""
    local classstring

    if antiparry and not parrybreak then
        limb = ""
    else
        limb = limbrequested
        balstring = "rend " .. target .. " " .. limb .. " " .. affcheck[selectedclaw].claw .. ""..cmdsep.."breathgust " .. target
    end

    if shielded then
        balstring = "tailsmash " .. target
    end

    if affcheck[selectedcurse].curse then
        classstring = affcheck[selectedcurse].curse
    end

    if not (limb == "" or limb == "squeeze") then
        if limbdamage[limb] + 25 &gt; 100 and not (probabilityTable["prone"] == 100) then
            balstring = balstring .. ""..cmdsep.."breathgust " .. target
        end
    end

    if antiparry and not (waitingforbind or parrybreak) then
        balstring = "enmesh " .. target
    end

    if avalancherequested then
        balstring = ""
        if not waitingforbind then
            balstring = "enmesh " .. target
        else
            balstring = "rend " .. target .. " " .. affcheck[selectedclaw].claw .. ""..cmdsep.."breathgust " .. target
        end
    end

    if calcifyrequested then
        balstring = "summon lightning"..cmdsep.."breathstorm"
    end

    if limb == "squeeze" then
        if probabilityTable["prone"] == 100 then
            balstring = "bite " .. target
        else
            if probabilityTable["deafness"] == 100 then
                balstring = "dragonroar " .. target
            end
        end
    end

    if healrequested then
        balstring = "dragonheal"
    end

    return balstring, classstring
end
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>dragondecide</name>
						<packageName></packageName>
						<script>-- Main Function
function dragondecide()

  if not (systemLoaded) then
    return
  end
  
  if systemPaused then
    return
  end

  if balance_data.stunned.in_use then
    return
  end

    local balstring, limb, jinx, affcheck = initializeDragonVariables()
    local carrier, stacker = determineDragonAfflictions()
    local carrierclaw, stackerclaw, carriercurse, stackercurse = determineDragonClawAndCurse(affcheck)
    local selectedclaw, selectedcurse = selectDragonClawAndCurse(carrier, stacker, carrierclaw, stackerclaw, carriercurse, stackercurse)
    balstring, classstring = determineDragonLimbAndCommands(limb, selectedclaw, selectedcurse, affcheck)
    sendDragonCommands(balstring, classstring)
end

-- Send Commands
function sendDragonCommands(balstring, classstring)
    send("clearqueue all")
    send("queue add eqbal " .. balstring)
    send("queue add class " .. classstring .. " 1")
end
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>dragoncurses</name>
						<packageName></packageName>
						<script>-- Function to decide curses
function dragoncurses(affcheck)
    local foundone = 0
    local returnvar = "paralysis"
    for i = 1, #stacklist do
        if probabilityTable[stacklist[i][1]] &lt; stacklist[i][2] and i ~= jinx and foundone == 0 then
            if affcheck[stacklist[i][1]] and affcheck[stacklist[i][1]].curse then
                foundone = i
                jinx = i
            else
                if DEBUG_MODE then print("Warning: Missing curse for affliction " .. stacklist[i][1]) end
            end
        end
    end
    if foundone &gt; 0 then
        returnvar = stacklist[foundone][1]
    end
    return returnvar
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>dragonrends</name>
						<packageName></packageName>
						<script>-- Function to decide rends
function dragonrends(affcheck)
    local foundone = 0
    local returnvar = "paralysis"
    for i = 1, #stacklist do
        if probabilityTable[stacklist[i][1]] &lt; stacklist[i][2] and i ~= jinx and foundone == 0 then
            if affcheck[stacklist[i][1]] and affcheck[stacklist[i][1]].claw then
                foundone = i
                jinx = i
            else
                if DEBUG_MODE then print("Warning: Missing claw for affliction " .. stacklist[i][1]) end
            end
        end
    end
    if foundone &gt; 0 then
        returnvar = stacklist[foundone][1]
    end
    return returnvar
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>dragonaffdecide</name>
						<packageName></packageName>
						<script>-- Function to decide afflictions
function dragonaffdecide()
    local foundone = 0
    local returnvar = "paralysis"
    for i = 1, #stacklist do
        if probabilityTable[stacklist[i][1]] &lt; stacklist[i][2] and i ~= jinx and foundone == 0 then
            foundone = i
            jinx = i
        end
    end
    if foundone &gt; 0 then
        returnvar = stacklist[foundone][1]
    end
    return returnvar
end
</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="no" isFolder="yes">
					<name>shikudo Script</name>
					<packageName>Shikudo Script</packageName>
					<script></script>
					<eventHandlerList />
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Shikudo</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>Shikudo</name>
							<packageName></packageName>
							<script>function GMCPParse(stat)
  --Because they sometimes pass goofy stuff
  --in the 'charstats' sub-table of vitals,
  --we need a way to parse that. Forrrrr example,
  --bleed. It gets passed as Bleed: # in charstats[1],
  --buuuut it might not ALWAYS be charstats[1], or
  --maybe it isn't there at all. Stupid. But here's
  --my solution.
  
  local stat = stat:title()..": "
  local toRet = false
  for _, v in pairs(gmcp.Char.Vitals.charstats) do
    if string.find(v, stat) then
      toRet = v:gsub(stat, "")
      toRet = toRet:gsub("%%", "")
      --sometimes we want the STRING, like morph: jaguar &lt;-- want jaguar,
      --this will skip if there isn't a valid tonumber.
      if tonumber(toRet) then
        toRet = tonumber(toRet)
      end
    end
  end
  
  return toRet
end


function MonkStance()
monkstance = string.match(gmcp.Char.Vitals.charstats[4],"Stance\: (%w+)")
end

function getkai()
mykaii = tonumber(string.match(gmcp.Char.Vitals.charstats[3],"Kai\: (%d+)"))
end

--shikudostance = {}
--katachain = {}

stances = {
	willow = {
		kick = {z = "flashheel left", x = "flashheel right"},
		strike = {r = "shatter", q = "hiraku", e = "hiru"},
		transition = {x = "rain"}
	},
	rain = {
		kick = {a = "frontkick left", d = "frontkick right"},
		strike = {r = "shatter", w = "hiru", a = "ruku left", s = "ruku torso", d = "ruku right", z = "kuro left", x = "kuro right"},
		transition = {z = "tykonos", x = "oak"}
	},
	oak = {
		kick = {w = "risingkick head", s = "risingkick torso"},
		strike = {r = "shatter", w = "nervestrike", e = "livestrike", s = "ruku torso", a = "ruku left", d = "ruku right", z = "kuro left", x = "kuro right" },
		transition = {z = "willow", x = "gaital"}
	},
	gaital = {
		kick = {w = "spinkick", z = "flashheel left", x = "flashheel right"},
		strike = {r = "shatter", w = "needle", a = "ruku left", s = "ruku torso", d = "ruku right", z = "kuro left", x = "kuro right"},
		transition = {z = "rain", x = "maelstrom"}
	},
	maelstrom = {
		kick = {w = "risingkick head", s = "risingkick torso", q = "crescent"},
		strike = {r = "shatter", a = "ruku left", s = "ruku torso", d = "ruku right", w = "livestrike", e = "jinzuku"},
		transition = {x = "oak"}
	},
	tykonos = {
		kick = {w = "risingkick"},
	   strike = {w = "sweep", a = "thrust left arm", s = "thrust left arm", d = "thrust right arm"},
	   transition = {x = "willow"}

	}
}


function getStance()
	for k, v in ipairs(gmcp.Char.Vitals.charstats) do
		if string.find(v, "Form") then stance = v:gsub("Form:%s", "") stance = stance:lower() end
	end
end
registerAnonymousEventHandler("gmcp.Char.Vitals", "getStance")


</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Shikudo R2</name>
							<packageName></packageName>
							<script>---what is my shikudo stance
shikudostance = shikudostance or ""

--what is my katachain

katachain= 0

--target shield = false



--Make sure to set this in triggers when people parry!
tpla = false
tpll = false
tph = false
tpto = false
tpra = false
tprl = false

-- Set the Kick in the Shikudo Combo per stance
function kickshikudoattack()
kicked = kicked or ""

-- Rain Stance
if shikudostance == "rain" then

 if tpla == false then
 kicked = "frontkick left"
 else
   kicked = "frontkick right"
   end
end

-- Oak Stance
if shikudostance == "oak" then
 if tph == false then
  kicked = "risingkick head"
 else
  kicked = "risingkick torso"
 end
end

--Willow Stance
if shikudostance == "willow" then
 if tpll == false then
  kicked = "flashheel left"
 else
  kicked = "flashheel right"
 end
end

--Gaital Stance
if shikudostance == "gaital" then
  if tAffs.prone then
    kicked = "spinkick"
  elseif tpll == false then
  kicked = "flashheel left"
 else
  kicked = "flashheel right"
  end
end

--Maelstrom Stance
if shikudostance == "maelstrom" then
if tph == false then
  kicked = "risingkick head"
 else
  kicked = "risingkick torso"
 end
 
 --Tykonos
 if shikudostance == "tykonos" then
if tph == false then
  kicked = "risingkick head"
 else
  kicked = "risingkick torso"
 end
end
end
  

-- Set Staff Attack Number One or First Arm Strike
function shikudostaffstrike()
staff = staff or ""

-- Rain Stance
 if shikudostance == "rain" then
 if tAffs.asthma and tpto == false then
  staff = "ruku torso"
 elseif tAffs.weariness and tpll == false then
  staff = "kuro left"
 elseif tAffs.weariness and tpll == true then
  staff = "kuro right"
  
 elseif tAffs.lethargy and tpll == false then
  staff = "kuro left"
 elseif tAffs.lethargy and tpll == true then
  staff = "kuro right"
  
 elseif tAffs.clumsiness and tpla == true then
  staff = "ruku right"
 elseif tAffs.clumsiness and tpla == false then
  staff = "ruku left"
  
 elseif tAffs.healthleech and tpla == false then
  staff = "ruku left"
 elseif tAffs.healthleech  and tpla == true then
  staff = "ruku right"
  
 elseif tAffs.dizziness then
  staff = "hiru"
  
 elseif tAffs.slickness and tpto == false then
  staff = "ruku torso"
 
 else
  staff = "kuro left"
   end
 end
 
 
 if shikudostance == "oak" then
  if tAffs.paralysis then
   staff = "nervestrike"
   
  elseif tAffs.asthma then
   staff = "livestrike"
  
   elseif tAffs.slickness and tpto == false then
   staff = "ruku torso"
   
  elseif tAffs.weariness and tpll == false then
   staff = "kuro left"
  elseif tAffs.weariness and tpll == true then
   staff = "kuro right"
  
  elseif tAffs.lethargy and tpll == false then
   staff = "kuro left"
  elseif tAffs.lethargy and tpll == true then
   staff = "kuro right"
   
  elseif tAffs.clumsiness and tpla == true then
   staff = "ruku right"
  elseif tAffs.clumsiness and tpla == false then
   staff = "ruku left"
      
  elseif tAffs.healthleech and tpla == false then
   staff = "ruku left"
  elseif tAffs.healthleech and tpla == true then
   staff = "ruku right"
  else
   staff = "ruku torso"
  end
 end
 
 if shikudostance == "willow" then
  if tAffs.anorexia  then
   staff = "hiraku"
  elseif tAffs.anorexia then
   staff = "hiraku"
  else
   staff = "hiru"
  end
 end
 
 if shikudostance == "gaital" then
  if tAffs.slickness and tpto == false then
   staff = "ruku torso"
   
  elseif tAffs.weariness and tpll == false then
   staff = "kuro left"
  elseif tAffs.weariness and tpll == true then
   staff = "kuro right"
  
  elseif tAffs.lethargy and tpll == false then
   staff = "kuro left"
  elseif tAffs.lethargy and tpll == true then
   staff = "kuro right"
  elseif tAffs.clumsiness and tpla == true then
   staff = "ruku right"
  elseif tAffs.clumsiness and tpla == false then
   staff = "ruku left"
    
  
  elseif tAffs.healthleech and tpla == false then
   staff = "ruku left"
  elseif tAffs.healthleech and tpla == true then
   staff = "ruku right"
  else
   staff = "needle"
   end
  end
  
 if shikudostance == "maelstrom" then
  if tAffs.asthma then
   staff = "livestrike"
  elseif tAffs.addiction then
   staff = "jinzuku"
  elseif tAffs.slickness then
   staff = "ruku torso"
  elseif tAffs.clumsiness and tpla == true then
   staff = "ruku right"
  elseif tAffs.clumsiness and tpla == false then
   staff = "ruku left"
  elseif tAffs.healthleech and tpla == false then
   staff = "ruku left"
  elseif tAffs.healthleech and tpla == true then
   staff = "ruku right"
  else
   staff = "jinzuku"
  end
 end
end



-- Set Second Staff Attack or Second Arm Balance
function shikudostafftwo()
stafftwo = stafftwo or ""

--Rain Stance
 if shikudostance == "rain" then
 
if tAffs.clumsiness and (staff ~= "ruku right" or staff ~= "ruku left") and tpla == true then
   stafftwo = "ruku right"
  elseif tAffs.clumsiness and (staff ~= "ruku right" or staff ~= "ruku left") and tpla == false then
   stafftwo = "ruku left"
  
  elseif tAffs.lethargy and tpll == false then
   stafftwo = "kuro left"
  elseif tAffs.lethargy and tpll == true then
   stafftwo = "kuro right"
  
  elseif tAffs.healthleech and tpla == false then
   stafftwo = "ruku left"
  elseif tAffs.healthleech and tpla == true then
   stafftwo = "ruku right"
   
elseif tAffs.weariness and (staff ~= "kuro right" or staff ~= "kuro left") and tpll == false then
   stafftwo = "kuro left"
elseif tAffs.weariness and (staff ~= "kuro right" or staff ~= "kuro left") and tpll == true then
   stafftwo = "kuro right"
elseif tAffs.dizziness and staff ~= "hiru" then
   stafftwo = "hiru"
  
elseif tAffs.slickness and staff ~= "ruku torso" and tpto == false then
   stafftwo = "ruku torso"
else
   stafftwo = "ruku torso"
   end
  end
  
if shikudostance == "oak" then
     
  if tAffs.paralysis and staff ~= "nervestrike" then
   stafftwo = "nervestrike"
elseif tAffs.asthma and staff ~= "livestrike" then
   stafftwo = "livestrike"
  
elseif tAffs.slickness and tpto == false and staff ~= "ruku torso" then
   stafftwo = "ruku torso"
   
elseif tAffs.weariness and (staff ~= "kuro right" or staff ~= "kuro left") and tpll == false then
   stafftwo = "kuro left"
elseif tAffs.weariness and (staff ~= "kuro right" or staff ~= "kuro left") and tpll == true then
   stafftwo = "kuro right"

elseif tAffs.lethargy and tpll == false then
   stafftwo = "kuro left"
elseif tAffs.lethargy and tpll == true then
   stafftwo = "kuro right"
   
elseif tAffs.clumsiness and (staff ~= "ruku right" or staff ~= "ruku left") and tpla == true then
   stafftwo = "ruku right"
elseif tAffs.clumsiness and (staff ~= "ruku right" or staff ~= "ruku left") and tpla == false then
   stafftwo = "ruku left"
    
elseif tAffs.healthleech and tpla == false then
   stafftwo = "ruku left"
elseif tAffs.healthleech and tpla == true then
   stafftwo = "ruku right"
 
else
   stafftwo = "ruku torso"
  end
 end
 
if shikudostance == "willow" then
  if tAffs.anorexia and staff ~= "hiraku" then
   stafftwo = "hiraku"
  elseif staff ~= "hiru" then
   stafftwo = "hiru"
  end
 end
 
if shikudostance == "gaital" then
if tAffs.slickness and tpto == false and staff ~= "ruku torso" then
   stafftwo = "ruku torso"
  elseif tAffs.lethargy and tpll == false then
   stafftwo = "kuro left"
  elseif tAffs.lethargy and tpll == true then
   stafftwo = "kuro right"   
elseif tAffs.clumsiness and (staff ~= "ruku right" or staff ~= "ruku left") and tpla == true then
   stafftwo = "ruku right"
elseif tAffs.clumsiness and (staff ~= "ruku right" or staff ~= "ruku left") and tpla == false then
   stafftwo = "ruku left"
    
  
  elseif tAffs.healthleech and tpla == false then
   stafftwo = "ruku left"
  elseif tAffs.healthleech and tpla == true then
   stafftwo = "ruku right"
   
elseif tAffs.weariness and (staff ~= "kuro right" or staff ~= "kuro left") and tpll == false then
   stafftwo = "kuro left"
elseif tAffs.weariness and (staff ~= "kuro right" or staff ~= "kuro left") and tpll == true then
   stafftwo = "kuro right"
else
   stafftwo = "needle"
   end
 end
  
 if shikudostance == "maelstrom" then
  if tAffs.asthma and staff ~= "livestrike" then
   stafftwo = "livestrike"
  elseif tAffs.addiction and staff ~= "jinzuku" then
   stafftwo = "jinzuku"
  elseif tAffs.slickness and staff ~= "ruku torso" then
   stafftwo = "ruku torso"
   
  elseif tAffs.healthleech and tpla == false then
   stafftwo = "ruku left"
  elseif tAffs.healthleech and tpla == true then
   stafftwo = "ruku right"
   
elseif tAffs.clumsiness and (staff ~= "ruku right" or staff ~= "ruku left") and tpla == true then
   stafftwo = "ruku right"
elseif tAffs.clumsiness and (staff ~= "ruku right" or staff ~= "ruku left") and tpla == false then
   stafftwo = "ruku left"
  else
   stafftwo = "jinzuku"
  end
 end

end
end



</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>ShikudoBashing</name>
							<packageName></packageName>
							<script>function getStance()
	for k, v in ipairs(gmcp.Char.Vitals.charstats) do
		if string.find(v, "Form") then shikudoForm = v:gsub("Form:%s", "") shikudoForm = stance:lower() end
	end
end
registerAnonymousEventHandler("gmcp.Char.Vitals", "getStance")


function shikudoBashing()
 shikudo_bashing = {
  willow = "combo "..target.." hiru hiraku flashheel right",
  rain = "combo "..target.." ruku torso kuro left frontkick left",
  oak = "combo "..target.." livestrike nervestrike risingkick head",
  tykonos = "combo "..target.." thrust head thrust head risingkick head"
 }
 
 shikudo_nextform = {
  willow = "rain",
  rain = "oak",
  oak = "willow",
  tykonos = "willow"
 }
 
 
 shikudo_katachange = {
  willow = 9,
  rain = 5,
  oak = 5,
  tykonos = 5
 }
 
 if not shikudo_bashing[shikudoForm] then
  send("adopt willow form")
 elseif kata &gt;= shikudo_katachange[shikudoForm] then
  send("transition to "..shikudo_nextform[shikudoForm].." form")
 else
  send(shikudo_bashing[shikudoForm])
 end

end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="no" isFolder="no">
							<name>Dispatch Dat Hoe</name>
							<packageName></packageName>
							<script>function dispatchdatass()
-- If using Romaen's Limb Counter then the limb prep will be if lb[target].hits["right leg"] &gt;= 90
-- Lowest Damage Point is 10.1 damage per limb

-- For dispatch we will need prone, level 2 head and needle. So at the very least it would be break right leg in oak, switch to gaital, Break second leg/prone/, Spinkick break head/needle, dispatch

--All variables for Dispatch are true
sform = ""

if affstrack.score.prone &gt;= 100 and (lb[target].hits["head"] &gt;= 100) and tneedle &gt;= 50 then
tdispatch = true
--Target is prone, but head is not broke nor crushedthroat, this needs to be done in gaital form and parry doesn't matter because of prone
elseif affstrack.score.prone &gt;= 100 and (lb[target].hits["head"] &lt; 100) and tneedle &lt;= 50 then
aneedle = true
aspinkick = true
-- We broke left level 2 before
akuroright = true
sform = "gaital"
--If Target is NOT prone, but both legs and head are prepped and parry doesn't matter due to sweep. This has to be done in Gaital form as Oak form doesn't have a prone ability
elseif affstrack.score.prone&lt;100 and (lb[target].hits["right leg"] &gt;= 90 or lb[target].hits["left leg"] &gt;= 90 and lb[target].hits["head"] &gt;= 90) then
asweep = true
-- Break Left First
aflashheelleft = true
sform = "gaital"
elseif (lb[target].hits["right leg"] &lt;= 89 and lb[target].hits["left leg"] &lt;= 89 and lb[target].hits["head"] &lt;= 90) then


  end
end

-- We may want to just manual the prep 
-- without a target parrying
-- Spinkick gives 40 percent limb damage to head when on ground -- only need to prep head to 60 before spinkick

-- Willow gives me 3 full combos - at the end 61.8 Head and 42 Left Leg | combo totto flashheel left hiru hiraku x 3 | transition at 9 to rain

-- Rain gives me 8 Full combos (if you want) - at the end Head 97.2 and Left Leg 94.5 and right leg 60
-- combo totto flashheel left hiru  x 1 for Head
-- combo aegoth frontkick left kuro left kuro left
-- combo aegoth frontkick left kuro right kuro right x 3</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
				</ScriptGroup>
				<ScriptGroup isActive="no" isFolder="yes">
					<name>monk</name>
					<packageName></packageName>
					<script></script>
					<eventHandlerList />
					<Script isActive="no" isFolder="no">
						<name>transmute</name>
						<packageName></packageName>
						<script>
-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function calctrans()

  if not (systemLoaded) then
    return
  end
  
  if systemPaused then
    return
  end

  if inslowcuringmode() then 
    return 
  end

  if balance_data.stunned.in_use then
    return
  end

local returnstring = ""
local maxhp = tonumber(gmcp.Char.Vitals.maxhp) or "5500"
local hp = tonumber(gmcp.Char.Vitals.hp) or "5500"
local maxmana = tonumber(gmcp.Char.Vitals.maxmp) or "4500" 
local mana = tonumber(gmcp.Char.Vitals.mp) or "4500"


if hp &lt; transmutehp then



hpneeded = transmutehp - hp

if mana - hpneeded &lt; manathreshold then


hpneeded = mana - manathreshold



end


returnstring = calculatetransmuteamount(hpneeded)

if not(string.find(returnstring, "transmute")) then

returnstring = ""


end



end


return returnstring


end

function transmoote()

transmutehp = 4500  --- amount of health you want to transmute to
manathreshold = 500 --- dont drop below this mana level
if not(calctrans () == "") then

tsend("queue add eqbal "..calctrans())
else 

end
end

function calculatetransmuteamount(amount)
local cs = cmdsep

local producedstring = ""

while amount &gt; 0 do


if amount &gt; 1000 then

producedstring = producedstring..""..cs.."transmute 1000"
amount = amount - 1000
else


producedstring = producedstring..""..cs.."transmute ".. math.floor(amount)

amount = 0

end

end


return producedstring

end

</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Zynthesys</name>
				<packageName>Zynthesys(Spiritlore Export)</packageName>
				<script></script>
				<eventHandlerList />
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Zynthesys Shaman Handling</name>
					<packageName></packageName>
					<script></script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>Spiritlore Handling</name>
						<packageName></packageName>
						<script>-- Configuration
local PRESETS = {
  hunting = {
    binds = {
      {spirit = "marak", command = "spirit bind marak"},
      {spirit = "aelkesh", command = "spirit bind aelkesh"},
      {spirit = "daina", command = "spirit bind daina"},
      {spirit = "garon", command = "spirit bind garon"},
      {spirit = "rishen", command = "spirit bind ri'shen"}
    },
    attunes = {
      {spirit = "marak", command = "spirit attune marak"},
      {spirit = "aelkesh", command = "spirit attune aelkesh"},
      {spirit = "daina", command = "spirit attune daina"}
    }
  },
  pvp = {
    binds = {
      {spirit = "maligus", command = "spirit bind maligus"},
      {spirit = "daina", command = "spirit bind daina"},
      {spirit = "teraile", command = "spirit bind teraile"},
      {spirit = "garon", command = "spirit bind garon"},
      {spirit = "rishen", command = "spirit bind ri'shen"}
    },
    attunes = {
      {spirit = "maligus", command = "spirit attune maligus"},
      {spirit = "teraile", command = "spirit attune teraile"},
      {spirit = "daina", command = "spirit attune daina"}
    }
  }
}

local ALL_SPIRITS = {
  "daina", "jhulian", "arius", "silvanix", "rishen",
  "maligus", "aspar", "aelkesh", "teraile", "arcanor",
  "syvis", "marak", "anthius", "garon", "tarnel",
  "kosuira", "arayan", "adchachel"
}

-- Utility Functions
function SpEcho(ToEcho)
  cecho("\n&lt;white&gt;[&lt;gold&gt;Zynth&lt;white&gt;]:&lt;green&gt; " .. ToEcho)
end

function spInfo()
    cecho("\n&lt;white&gt;╔══════════════════════════════════════════════╗")
    cecho("\n&lt;white&gt;║ &lt;gold&gt;✧ Zynthesys Spiritlore System Guide ✧        &lt;white&gt;║")
    cecho("\n&lt;white&gt;╠══════════════════════════════════════════════╣")
    cecho("\n&lt;white&gt;║ &lt;gold&gt;Available Commands:                          &lt;white&gt;║")
    cecho("\n&lt;white&gt;║ • &lt;green&gt;spup pvp    &lt;white&gt;- Load PvP spirit bindings     ║")
    cecho("\n&lt;white&gt;║ • &lt;green&gt;spup hunting&lt;white&gt;- Load Hunting spirit bindings ║")
    cecho("\n&lt;white&gt;║ • &lt;green&gt;spreset     &lt;white&gt;- Reset all spirit settings    ║")
    cecho("\n&lt;white&gt;╠══════════════════════════════════════════════╣")
    cecho("\n&lt;white&gt;║ &lt;gold&gt;Two presets included: PvP and Hunting        &lt;white&gt;║")
    cecho("\n&lt;white&gt;║ &lt;gold&gt;Custom presets can be added in script file   &lt;white&gt;║")
    cecho("\n&lt;white&gt;╚══════════════════════════════════════════════╝")
end


function spReset()
  for _, spirit in ipairs(ALL_SPIRITS) do
    _G["spa_" .. spirit] = false
    _G["spb_" .. spirit] = false
  end
  
  local allUnbound = true
  for _, spirit in ipairs(ALL_SPIRITS) do
    if _G["spa_" .. spirit] or _G["spb_" .. spirit] then
      allUnbound = false
      break
    end
  end
  
  if allUnbound then
    SpEcho("All Spirits Unbound!")
  end
end

function sp_checkall()
  if not sp_need_spirits then return end
  if not sp_communed or not sp_seated then return end

  local preset = sp_hunting and "hunting" or (sp_pvp and "pvp")
  if not preset then
    SpEcho("You have not selected a preset (Hunting or PvP). Please choose one.")
    return
  end

  local config = PRESETS[preset]
  
  -- Handle bindings
  for _, bind in ipairs(config.binds) do
    if not _G["spb_" .. bind.spirit] and spb_bal then
      send(bind.command)
      return
    end
  end

  -- Check if all bindings are complete
  local all_bound = true
  for _, bind in ipairs(config.binds) do
    if not _G["spb_" .. bind.spirit] then
      all_bound = false
      break
    end
  end

  -- Handle attunements if all bound
  if all_bound then
    for _, attune in ipairs(config.attunes) do
      if not _G["spa_" .. attune.spirit] then
        send(attune.command)
        return
      end
    end
  end

  -- Check completion
  local all_attuned = true
  for _, attune in ipairs(config.attunes) do
    if not _G["spa_" .. attune.spirit] then
      all_attuned = false
      break
    end
  end

  -- Finish if everything is complete
  if all_bound and all_attuned and zData.stats.bal == true then
    sp_need_spirits = false
    local message = preset == "hunting" and "&lt;yellow&gt;Hunting" or "&lt;red&gt;PvP"
    SpEcho(message .. " &lt;green&gt;Preset Finished")
    send("stand")
  end
end

function handleAttunement(spirit)
    spirit = string.match(spirit, "([^,]+)")  -- Captures everything before the first comma
    spirit = string.gsub(spirit, " ", "")     -- Removes any spaces
    spirit = string.lower(spirit)             -- Converts to lowercase
    if spirit == "Ri'shen" then spirit = "rishen" end
    _G["spa_" .. spirit] = true
    sp_checkall()
end

function handleSpiritBinding(mode)
    if sp_seated or sp_communed then return end
    
    send("sit")
    send("commune")
    
    if mode == "hunting" then
        sp_pvp = false
        sp_hunting = true
        sp_need_spirits = true
        spbhunting()
        SpEcho("Beginning Binding Process for - HUNTING")
    elseif mode == "pvp" then
        sp_hunting = false
        sp_pvp = true
        sp_need_spirits = true
        spbpvp()
        SpEcho("Beginning Binding Process for - &lt;red&gt;PVP")
    end
end
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Vodun Handling</name>
						<packageName></packageName>
						<script>function CheckMonolith()
  local foundMonolith = false
  for _, item in pairs(zData.items.room) do
    if string.find(item.name:lower(), "monolith") then
      foundMonolith = true
      break
    end
  end

  if foundMonolith then
    SpEcho("Monolith Sigil! - Move Elsewhere!")
  else
    send("get doll/imia from pack|wield doll/imia|vodun travel")
  end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Shaman PvP with Tracking</name>
						<packageName></packageName>
						<script>-- Configuration
local CONFIG = {
    DEFAULT_KP = "Tzantza",
    JINX_COMBOS = {
        {score = "anorexia", combo = "anorexia {impatience}"},
        {score = "dizziness", combo = "dizzy {claustrophobia}"},
        {score = "anorexia", combo = "asthma {anorexia}"},
        {score = "recklessness", combo = "reckless {vertigo}"},
        {score = "addiction", combo = "addiction {dementia}"},
        {score = "epilepsy", combo = "epilepsy {stupid}"},
        {score = "agoraphobia", combo = "agoraphobia {masochism}"},
        {score = "clumsiness", combo = "clumsy {paralyse}"},
        {score = "weariness", combo = "weariness {paralyse}"},
        {score = "asthma", combo = "asthma {paralyse}"},
        {score = "healthleech", combo = "healthleech {paralyse}"},
        {score = "asthma", combo = "asthma {paralyse}"}
    },
    BASIC_COMBOS = {
        {score = "anorexia", combo = "anorexia"},
        {score = "impatience", combo = "impatience"},
        {score = "clumsiness", combo = "paralyse"},
        {score = "weariness", combo = "weariness"},
        {score = "nausea", combo = "vomiting"},
        {score = "clumsiness", combo = "clumsy"},
        {score = "asthma", combo = "asthma"},
        {score = "healthleech", combo = "healthleech"},
        {score = "addiction", combo = "addiction"},
        {score = "asthma", combo = "asthma"}
    }
}

-- Combat Helper Functions
local function sendCombo(score, comboName, isJinx)
    if affstrack.score[score] &lt; 100 then
        send((isJinx and "JinxCombo1" or "BasicCombo1") .. " {" .. comboName .. "}")
        return true
    end
    return false
end

local function checkLimbConditions()
    return affstrack.score["leftarm"] &lt; 100 and
           affstrack.score["rightarm"] &lt; 100 and
           affstrack.score["leftleg"] &lt; 100 and
           affstrack.score["rightleg"] &lt; 100
end

-- Main Combat Functions
function CurseHandle()
    MyKP = MyKP or CONFIG.DEFAULT_KP
    
    if ak.defs.curseward then
        send("PvP_Breach")
        return
    end
    
    PvP_Insta_Check()
    
    if PvP_Jinx then
        handleJinxCombos()
    elseif MyKP == "Tzantza" and not PvP_Jinx and PvP_DollHeld then
        handleBasicCombos()
    end
end

function handleJinxCombos()
    if affstrack.score.slickness &lt; 100 and affstrack.score.asthma &gt; 99 and PvP_DollHeld then
        send("vodun imbibe gecko")
    elseif checkLimbConditions() and affstrack.score.slickness &gt; 99 and PvP_DollHeld then
        send("vodun cripple")
    else
        for _, combo in ipairs(CONFIG.JINX_COMBOS) do
            if sendCombo(combo.score, combo.combo, true) then return end
        end
    end
end

function handleBasicCombos()
    if affstrack.score.slickness &lt; 100 and affstrack.score.asthma &gt; 99 then
        send("vodun imbibe gecko")
    elseif checkLimbConditions() and affstrack.score.slickness &gt; 100 then
        send("vodun cripple")
    else
        for _, combo in ipairs(CONFIG.BASIC_COMBOS) do
            if sendCombo(combo.score, combo.combo, false) then return end
        end
    end
end

-- Doll Management Functions
function PvP_Doll()
    PvP_DollCheck()
    PvP_DollCheckWield()
    PvP_DollHandle()
end

function PvP_DollHandle()
    if PvP_DollHeld then
        send("fashion doll of " .. target)
    elseif PvP_DollMade and not PvP_DollHeld then
        send("wield doll/"..target)
    elseif not PvP_DollMade then
        send("Fashion doll of " .. target)
    end
end

function PvP_DollCheck()
    PvP_DollMade = false
    for _, value in pairs(zData.items.inv) do
        if string.find(value.name, "doll") then
            PvP_DollMade = true
            return
        end
    end
end

function PvP_DollCheckWield()
    PvP_DollHeld = false
    for _, description in pairs(zData.items.wielded) do
        if type(description) == "string" and description:match("doll") then
            PvP_DollHeld = true
            return
        end
    end
end

function PvP_DollAway()
    if not zData or not zData.items or not zData.items.inv then
        PvP_Echo("&lt;red&gt;Inventory data is not available.")
        return
    end
    
    local holdingDoll = false
    for _, item in pairs(zData.items.inv) do
        if item.name and item.name:lower():find("doll") then
            holdingDoll = true
            break
        end
    end
    
    if holdingDoll then
        send("relax grip|unwield doll|put doll in pack")
    else
        PvP_Echo("&lt;yellow&gt;You are not currently holding a doll.")
    end
end

function PvP_Insta_Check()
    if truescore &gt; 5 and affstrack.mentalscore &gt; 5 then
        PvP_Echo("\n&lt;red&gt;TARGET PREPPED FOR TZANTZA")
        send("INSTAKILL")
    end
end


function PvP_Echo(msg)
    cecho("\n&lt;white&gt;[&lt;red&gt;PvP&lt;white&gt;]: " .. msg)
end</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Zynthesys Harvester</name>
					<packageName></packageName>
					<script></script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>Harvesting Script</name>
						<packageName></packageName>
						<script>-- Configuration and Data Storage
local CONFIG = {
    FILE_PATH = getMudletHomeDir() .. "/harvest_table.lua",
    ENVIRONMENT_PLANTS = {
        Garden = { "Echinacea", "Myrrh", "Elm", "Ginger", "Ginseng", "Lobelia" },
        Forest = { "Echinacea", "Myrrh", "Elm", "Ginger", "Ginseng", "Lobelia" },
        Grasslands = { "Goldenseal", "Slipper" },
        Ocean = { "Kelp" },
        River = { "Kelp" },
        Freshwater = { "Kelp" },
        Hills = { "Bayberry", "Hawthorn" },
        ["Natural underground"] = { "Bloodroot", "Irid" },
        Mountains = { "Valerian"},
        Valley = { "Sileris" },
        Jungle = { "Kola", "Kuzu", "Skullcap" },
        Swamp = { "Bellwort", "Cohosh", "Ash" },
        Desert = { "Pear", "Weed" }
    }
}

-- Initialize Tables
Harvest_Table = Harvest_Table or {
    Ginseng = true, Echinacea = true, Myrrh = true, Elm = true,
    Ginger = true, Lobelia = true, Goldenseal = true, Slipper = true,
    Kelp = true, Bayberry = true, Hawthorn = true, Bloodroot = true,
    Irid = true, Valerian = true, Sileris = true,
    Kola = true, Kuzu = true, Skullcap = true, Bellwort = true,
    Cohosh = true, Ash = true, Pear = true, Weed = true
}

ToHarvest_Table = ToHarvest_Table or {}

-- Core Functions
local function vHarvesterLoad()
    if io.exists(CONFIG.FILE_PATH) then
        local tbl = {}
        table.load(CONFIG.FILE_PATH, tbl)
        Harvest_Table = tbl
        vHarvestEcho("&lt;green&gt;Harvest Table Loaded!")
    end
end

local function vHarvesterSave()
    table.save(CONFIG.FILE_PATH, Harvest_Table)
    vHarvestEcho("&lt;green&gt;Harvest Table Saved!")
end

function vHarvestPlantsSet()
    -- Reset ToHarvest_Table
    for plant in pairs(Harvest_Table) do
        ToHarvest_Table[plant] = false
    end
    
    -- Set plants for current environment
    local environment = gmcp.Room.Info.environment
    local plants = CONFIG.ENVIRONMENT_PLANTS[environment]
    
    if plants then
        for _, plant in ipairs(plants) do
            if Harvest_Table[plant] then
                ToHarvest_Table[plant] = true
            end
        end
    end

    if next(ToHarvest_Table) then
        vHarvestPlants()
    else
        vHarvestingPlants = false
        vHarvestEcho("&lt;orange&gt;No harvestable plants here")
    end
end

function vHarvestPlants()
    if not (vHarvestingPlants and gmcp.Char.Vitals.bal == "1") then return end
    
    for plant, canHarvest in pairs(ToHarvest_Table) do
        if canHarvest then
            VH_Tar = plant
            send("harvest " .. plant:lower())
            return
        end
    end
end

function vHarvestedPlants()
    if not next(ToHarvest_Table) then
        vHarvestEcho("&lt;white&gt;Finished Harvesting!")
        vHarvestingPlants = false
        if vHerbAway then send("inr all") end
        return
    end
    vHarvestPlants()
end

-- Utility Functions
function vNoPlants()
    if VH_Tar then
        ToHarvest_Table[VH_Tar] = false
        deleteLine()
        vHarvestEchoWarn()
    end
end

function vHarvesterReset()
    for plant in pairs(ToHarvest_Table) do
        ToHarvest_Table[plant] = false
    end
    vHarvestEcho("&lt;green&gt;Success! To harvest values reset!")
end

-- Output Functions
function vHarvestEcho(msg)
    cecho("\n&lt;white&gt;[&lt;gold&gt;Harvester&lt;white&gt;]:" .. msg)
end

function vHarvestEchoWarn()
    cecho("\n&lt;white&gt;[&lt;gold&gt;Harvester&lt;white&gt;]:&lt;yellow&gt; " .. VH_Tar .. " &lt;orange&gt;UnHarvestable!?")
end

function vHarvesterShow()
    cecho("\n&lt;white&gt;╔══════════════════════════════╗")
    cecho("\n&lt;white&gt;║ &lt;gold&gt;✧ Plant Harvesting Status ✧  &lt;white&gt;║")
    cecho("\n&lt;white&gt;╠══════════════════════════════╣")
    
    -- Sort plants alphabetically
    local sortedPlants = {}
    for name in pairs(Harvest_Table) do
        table.insert(sortedPlants, name)
    end
    table.sort(sortedPlants)
    
    -- Display in formatted columns
    for i, name in ipairs(sortedPlants) do
        local status = Harvest_Table[name] and "&lt;green&gt;Active" or "&lt;red&gt;Inactive"
        cecho(string.format("\n&lt;white&gt;║ &lt;gold&gt;%-12s &lt;white&gt;│ %s        &lt;white&gt;║", name, status))
        
        -- Optional divider every 5 plants
        if i % 5 == 0 and i ~= #sortedPlants then
            cecho("\n&lt;white&gt;╟──────────────────────────────╢")
        end
    end
    
    cecho("\n&lt;white&gt;╚══════════════════════════════╝")
end


-- Event Registration
registerNamedEventHandler("vHarvester", "system load", "sysLoadEvent", vHarvesterLoad)
registerNamedEventHandler("vHarvester", "system exit", "sysExitEvent", vHarvesterSave)

</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Zynthesys Fishy System</name>
					<packageName></packageName>
					<script></script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>Zynthesys Fishing Main</name>
						<packageName></packageName>
						<script>Zynthesys = Zynthesys or {}
Zynthesys.fishing = {
    config = {
        FISH_BASE_VALUE = 5.66,
        POLE_NAME = "a deep sea fishing pole",
        DEFAULT_CAST = "short",
        LINE_STATUS = {
            out = false,
            fighting = false,
            depth = 0
        }
    },
    
    stats = {
        session_catches = 0,
        total_pounds = 0,
        total_ounces = 0,
        fish_types = {},
        heaviest_weight = 0,
        heaviest_species = ""   
    }
}

function Zynthesys.fishing.checkContainer()
    if not Zynthesys.fishing.baitContainer then
        if gmcp.Room.Info.environment == "Vessel" then
          if table.contains(zData.items.room, "a bait tank") then
              Zynthesys.fishing.baitContainer = "tank"
              cecho("\n&lt;white&gt;[&lt;gold&gt;Fishy&lt;white&gt;]: &lt;green&gt;Bait Tank found, using it as bait source!")
              return true
          elseif table.contains(zData.items.inv, "a barnacle-encrusted bucket") then
              Zynthesys.fishing.baitContainer = "bucket"
              cecho("\n&lt;white&gt;[&lt;gold&gt;Fishy&lt;white&gt;]: &lt;green&gt;Bait Bucket found, using it as bait source!")
              return true
          end
        else
            cecho("\n&lt;white&gt;[&lt;gold&gt;Fishy&lt;white&gt;]: &lt;red&gt;No Container Found or Not on Ship, Assuming Inventory Bait!")
            return false
        end
    end
    return true
end

function Zynthesys.fishing.checkEquipped()
    if not table.contains(zData.items.inv, Zynthesys.fishing.config.POLE_NAME) then
        cecho("\n&lt;white&gt;[&lt;gold&gt;Fishy&lt;white&gt;]: &lt;red&gt;Fishing pole not found in inventory!")
        return false
    end
    
    if not table.contains(zData.items.wielded, Zynthesys.fishing.config.POLE_NAME) then
        cecho("\n&lt;white&gt;[&lt;gold&gt;Fishy&lt;white&gt;]: Pole Not Wielded, Equipping for you!")
        
        for k,v in pairs(zData.items.inv) do
          if v.name ==  Zynthesys.fishing.config.POLE_NAME then
            send("wield "..k)
            cecho("\n&lt;white&gt;[&lt;gold&gt;Fishy&lt;white&gt;]: &lt;green&gt;Let's Fish!")
            return true
          end
        end

        
    end
    

end

function Zynthesys.fishing.cast()
    if not table.contains(zData.items.wielded, Zynthesys.fishing.config.POLE_NAME) then
        return false
    end

    if Zynthesys.fishing.needBait and Zynthesys.fishing.baitContainer then
        send("get bait from " .. Zynthesys.fishing.baitContainer)
        send("bait hook with bait")
    else
        send("bait hook with bait")
    end
    return true
end

function Zynthesys.fishing.reel()
send("reel line")
end

function Zynthesys.fishing.start()
 Zynthesys.fishing.config.LINE_STATUS = {
        depth = 0,
        fighting = false,
        out = false
    }
    
    Zynthesys.fishing.active = true
    Zynthesys.fishing.needBait = true
    
    if Zynthesys.fishing.checkContainer() then
        if Zynthesys.fishing.checkEquipped() then
            Zynthesys.fishing.cast()
        end
    end
end

function Zynthesys.fishing.showStats()
    local BOX_WIDTH = 48
    local CONTENT_WIDTH = BOX_WIDTH - 2

    local BORDER = {
        TOP    = "╔" .. string.rep("═", BOX_WIDTH) .. "╗",
        MID    = "╠" .. string.rep("═", BOX_WIDTH) .. "╣",
        BOTTOM = "╚" .. string.rep("═", BOX_WIDTH) .. "╝",
        SIDE   = "&lt;white&gt;║"
    }

    local function formatLine(text)
        local stripped = text:gsub("&lt;[^&gt;]+&gt;", "")
        local padding = CONTENT_WIDTH - #stripped
        local formatted = BORDER.SIDE .. " " .. text .. string.rep(" ", padding) .. " " .. BORDER.SIDE
        return formatted
    end

    local function formatStatLine(text)
        local stripped = text:gsub("&lt;[^&gt;]+&gt;", "")
        local totalSpace = BOX_WIDTH + 4
        local padding = math.floor((totalSpace - #stripped) / 2)
        local formatted = BORDER.SIDE .. string.rep(" ", padding) .. text .. string.rep(" ", padding) .. BORDER.SIDE
        return formatted
    end

    cecho("\n&lt;white&gt;" .. BORDER.TOP)
    cecho("\n&lt;white&gt;" .. formatStatLine("&lt;gold&gt;✧ Zynthesys Fishing Statistics ✧"))
    cecho("\n&lt;white&gt;" .. BORDER.MID)
    cecho("\n&lt;white&gt;" .. formatLine(string.format("Total Catches: &lt;gold&gt;%d", Zynthesys.fishing.stats.session_catches)))
    
    if Zynthesys.fishing.stats.session_catches &gt; 0 then
        local total_weight = Zynthesys.fishing.stats.total_pounds + (Zynthesys.fishing.stats.total_ounces / 16)
        local total_value = total_weight * Zynthesys.fishing.config.FISH_BASE_VALUE
        
        cecho("\n&lt;white&gt;" .. BORDER.MID)
        cecho("\n&lt;white&gt;" .. formatLine(string.format("Weight: &lt;gold&gt;%d&lt;white&gt; lbs, &lt;gold&gt;%d&lt;white&gt; oz", 
            Zynthesys.fishing.stats.total_pounds, 
            Zynthesys.fishing.stats.total_ounces)))
        cecho("\n&lt;white&gt;" .. formatLine(string.format("Value: &lt;gold&gt;%.2f&lt;white&gt; gold", total_value)))
        
        if Zynthesys.fishing.stats.heaviest_species ~= "" then
            cecho("\n&lt;white&gt;" .. BORDER.MID)
            local heaviest = string.format("%s (%.2f lbs)", 
                Zynthesys.fishing.stats.heaviest_species,
                Zynthesys.fishing.stats.heaviest_weight)
            cecho("\n&lt;white&gt;" .. formatLine(string.format("Heaviest: &lt;gold&gt;%s", heaviest)))
        end
        
        if next(Zynthesys.fishing.stats.fish_types) then
            cecho("\n&lt;white&gt;" .. BORDER.MID)
            cecho("\n&lt;white&gt;" .. formatLine("&lt;gold&gt;Fish Species Caught:"))
            for species, count in pairs(Zynthesys.fishing.stats.fish_types) do
                local fish_entry = string.format("%s: %d", species, count)
                cecho("\n&lt;white&gt;" .. formatLine(string.format("• &lt;gold&gt;%s", fish_entry)))
            end
        end
    end
    
    cecho("\n&lt;white&gt;" .. BORDER.BOTTOM)
end





function Zynthesys.fishing.reset()
    send("reel line")
    Zynthesys.fishing.stats = {
        session_catches = 0,
        total_pounds = 0,
        total_ounces = 0,
        fish_types = {}
    }
    
    Zynthesys.fishing.config.LINE_STATUS = {
        out = false,
        fighting = false,
        depth = 0
    }
    
    Zynthesys.fishing.active = false
    Zynthesys.fishing.needBait = false
    Zynthesys.fishing.needCast = false
    Zynthesys.fishing.hasBal = true
    Zynthesys.fishing.needReel = false
    Zynthesys.fishing.baitContainer = nil
    
    send("get bait from pole|put bait in tank")
    
    cecho("\n&lt;white&gt;[&lt;gold&gt;Fishy&lt;white&gt;]: System fully reset and ready for new session!")
end

function Zynthesys.fishing.addCatch(species, pounds, ounces)
    local stats = Zynthesys.fishing.stats
    
    -- Track catch count and weight
    stats.session_catches = stats.session_catches + 1
    stats.total_pounds = stats.total_pounds + pounds
    stats.total_ounces = stats.total_ounces + (ounces or 0)
    
    -- Convert excess ounces to pounds
    while stats.total_ounces &gt;= 16 do
        stats.total_pounds = stats.total_pounds + 1
        stats.total_ounces = stats.total_ounces - 16
    end
    
    -- Track fish types
    stats.fish_types[species] = (stats.fish_types[species] or 0) + 1
    
    -- Track heaviest catch
    local current_weight = pounds + (ounces or 0)/16
    if current_weight &gt; stats.heaviest_weight then
        stats.heaviest_weight = current_weight
        stats.heaviest_species = species
    end
end
</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Zynthesys Data</name>
					<packageName></packageName>
					<script></script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>zData Core</name>
						<packageName></packageName>
						<script>--## SYSTEM CORE ##--

zData = zData or {}

color_table.zsSilver = {160,160,160}

zData.directory = {"me", "stats", "currency", "room", "items", "players", "comms", "time"}
zData.revdirectory = {}
for k, v in ipairs(zData.directory) do
    zData.revdirectory[v] = k
end

-- Core display functions
function zData.showall()
    cecho("\n")
    cecho("&lt;zsSilver&gt;zData tables:\n")
    cecho("\n")
    for k, v in pairs(zData.directory) do
        cecho("&lt;zsSilver&gt;  zData." .. v .. "\n")
    end
    cecho("\n")
    cecho("&lt;zsSilver&gt;type any of the above to see what data is stored\n")
    cecho("\n")
    cecho("&lt;zsSilver&gt;tip: events are raised when data changes,\n")
    cecho("&lt;zsSilver&gt;     with the same name as the tables\n")
    cecho("\n")
end

function zData.showtable(t)
    t = t:lower()
    
    if not zData.revdirectory[t] then
        cecho("&lt;zsSilver&gt;zData." .. t .. " invalid.\n\n")
        return
    end
    
    -- Header
    cecho("&lt;zsSilver&gt;zData." .. t .. " contents:\n\n")
    
    -- Content display
    for _, v in ipairs(zData[t].directory) do
        local value = zData[t][v]
        local display = ""
        
        if type(value) == "table" then
            display = "(table)"
        elseif type(value) == "string" then
            display = string.format('"%s"', value)
        else
            display = tostring(value)
        end
        
        cecho(string.format("&lt;zsSilver&gt;  zData.%s.%s: %s\n", t, v, display))
    end
    
    -- Description display
    if zData[t].description then
        cecho("\n")
        for _, v in ipairs(zData[t].description) do
            cecho("&lt;zsSilver&gt;  " .. v .. "\n")
        end
    end
    
    cecho("\n")
end


function zData.showitems(t)
    t = t:lower()
    local m = zData.items
    if t == "denizenlist" then
        cecho("&lt;zsSilver&gt;zData.items." .. t .. " contents:\n")
        cecho("\n")
        for k, v in pairs(m[t]) do
            local x = "&lt;zsSilver&gt;zData.items." .. t .. "[\"" .. k .. "\"] = \"" .. v .. "\"\n"
            cecho(x)
        end
    elseif t == "wielded" then
        cecho("&lt;zsSilver&gt;zData.items." .. t .. " contents:\n")
        cecho("\n")
        for k, v in pairs(m[t]) do
            if (k == "left" or k == "right" or k == "both") and v then
                local x = "&lt;zsSilver&gt;zData.items." .. t .. "." .. k .. " = \"" .. v .. "\"\n"
                cecho(x)
            end
        end
        for k, v in pairs(m[t]) do
            if not (k == "left" or k == "right" or k == "both") then
                local x = "&lt;zsSilver&gt;zData.items." .. t .. "[\"" .. k .. "\"] = \"" .. v .. "\"\n"
                cecho(x)
            end
        end
    elseif m[t] then
        cecho("&lt;zsSilver&gt;zData.items." .. t .. " contents:\n")
        cecho("\n")
        for k, v in pairs(m[t]) do
            local x = "&lt;zsSilver&gt;zData.items." .. t .. "[\"" .. k .. "\"] = {"
            x = x .. "name=\"" .. v.name .. "\""
            for p in pairs(v) do
                if p ~= "name" then
                    x = x .. ", " .. p .. "=true"
                end
            end
            x = x .. "}\n"
            cecho(x)
        end
    else
        cecho("&lt;zsSilver&gt;zData.items." .. t .. " invalid.\n")
    end
    cecho("\n")
    cecho("\n")
end

function zData.showItemsOnGui(t)
    t = t:lower()
    local m = zData.items
    if t == "wielded" then
        GUI.data:cecho("&lt;ansi_white&gt;  Wielded:\n")
        --GUI.data:cecho("\n")
        
        for k, v in pairs(m[t]) do
            if (k == "left" or k == "right" or k == "both") and v then
                local x = "&lt;DimGrey&gt;" .. t .. "." .. k .. " = \"" .. v .. "\"\n"
                 GUI.data:cecho(x)
            end
        end
        for k, v in pairs(m[t]) do
            if not (k == "left" or k == "right" or k == "both") then
                local x = "&lt;DimGrey&gt;" .. t .. "[\"" .. k .. "\"] = \"" .. v .. "\"\n"
                 GUI.data:cecho(x)
            end
        end
    elseif m[t] then
        GUI.data:cecho("&lt;ansi_white&gt;  Wielded:\n")
        --GUI.data:cecho("\n")
        for k, v in pairs(m[t]) do
            local x = "&lt;DimGrey&gt;[\"" .. k .. "\"] = {"
            x = x .. "name=\"" .. v.name .. "\""
            for p in pairs(v) do
                if p ~= "name" then
                    x = x .. ", " .. p .. "=true"
                end
            end
            x = x .. "}\n"
             GUI.data:cecho(x)
        end
    end
end


function myDataOutput()
  if systemLoaded then
    GUI.data:clear()
    local dataString = ""  -- Initialize an empty string
    local ignoreFields = {directory = true, prefix = true, target = true, credits = true}  -- Fields to ignore in zData.me

    --zData.showItemsOnGui("wielded")

    GUI.data:cecho("\n&lt;gold&gt;  --- Character Data ---\n")
    
    -- Loop through zData.me and add relevant data
    for key, value in pairs(zData.me) do
        if not ignoreFields[key] and type(value) ~= "function" then  -- Exclude ignored fields and functions
          if key == "suffix" then
              dataString = dataString .. string.format("&lt;ansi_white&gt;  Last Name:&lt;DimGrey&gt;%s\n", tostring(value))
          elseif key == "racespec" then
              dataString = dataString .. string.format("&lt;ansi_white&gt;  Spec:&lt;DimGrey&gt;%s\n", tostring(value))
          else
              dataString = dataString .. string.format("&lt;ansi_white&gt;  %s: &lt;DimGrey&gt;%s\n", key:title(), tostring(value):title())
          end
        end
    end

    -- Add a separator for clarity
    dataString = dataString .. "\n&lt;gold&gt;  --- Currency Data ---\n"

    -- Loop through zData.currency and format specific fields as requested
    for key, value in pairs(zData.currency) do
        if key ~= "directory" and type(value) ~= "function" then  -- Exclude "directory" field and functions
            if key == "gold" then
                dataString = dataString .. string.format("&lt;ansi_white&gt;  Gold: &lt;DimGrey&gt;%s\n", tostring(value))
            elseif key == "bgold" then
                dataString = dataString .. string.format("&lt;ansi_white&gt;  Bank gold: &lt;DimGrey&gt;%s\n", tostring(value))
            elseif key == "tgold" then
                dataString = dataString .. string.format("&lt;ansi_white&gt;  Total gold: &lt;DimGrey&gt;%s\n", tostring(value))
           -- elseif key == "credits" then
           --     dataString = dataString .. string.format("&lt;ansi_white&gt;  Credits: &lt;DimGrey&gt;%s\n", tostring(value))
            elseif key == "bcredits" then
                dataString = dataString .. string.format("&lt;ansi_white&gt;  (b) Credits: &lt;DimGrey&gt;%s\n", tostring(value))
            elseif key == "tcredits" then
                dataString = dataString .. string.format("&lt;ansi_white&gt;  Total credits: &lt;DimGrey&gt;%s\n", tostring(value))
            elseif key == "bcrowns" then
                dataString = dataString .. string.format("&lt;ansi_white&gt;  (b) Crowns: &lt;DimGrey&gt;%s\n", tostring(value))
            elseif key == "tcrowns" then
                dataString = dataString .. string.format("&lt;ansi_white&gt;  Total crowns: &lt;DimGrey&gt;%s\n", tostring(value))
            else
                dataString = dataString .. string.format("&lt;ansi_white&gt;  %s: &lt;DimGrey&gt;%s\n", key:title(), tostring(value):title())
            end
        end
    end

    -- Output the concatenated string to GUI.data:cecho()
    GUI.data:cecho(dataString)
  end
end

--##Me##--
zData.me = zData.me or {
    name = "", prefix = "", suffix = "", fullname = "",
    race = "", racespec = "", fullrace = "", class = "", gender = "",
    level = 0, xp = 0,
    target = "",
}

zData.me.directory = {
    "name", "prefix", "suffix", "fullname",
    "race", "racespec", "fullrace", "class", "gender",
    "level", "xp", "target"
}

function zData.me.parse()
    local g = gmcp.Char.Status
    local m = zData.me

    -- Basic character info
    m.name = g.name
    m.fullname = g.fullname

    -- Handle prefix/suffix
    m.prefix = g.fullname:match("^(.+)" .. g.name:gsub("([%-%.%+%[%]%(%)%$%^%%%?%*])", "%%%1")) or ""
    m.suffix = g.fullname:match(g.name:gsub("([%-%.%+%[%]%(%)%$%^%%%?%*])", "%%%1") .. "(.+)$") or ""

    -- Race handling
    local isdragon = g.race:find("Dragon") ~= nil
    local havespec = g.specialisation ~= ""

    m.race = isdragon and "Dragon" or g.race
    m.racespec = isdragon and g.race:match("^(.+) Dragon") or g.specialisation
    m.fullrace = havespec and (m.race .. " " .. m.racespec) or g.race

    -- Character stats
    m.class = g.class
    m.gender = g.gender

    -- Parse level and XP
    local levelMatch = g.level:match("^(%d+)")  -- Matches the number at the start
    local xpMatch = g.level:match("%(([%d%.]+)%%%)")  -- Matches the percentage value within parentheses

    m.level = tonumber(levelMatch) or 0  -- Convert to number or default to 0
    m.xp = tonumber(xpMatch) or 0        -- Convert to number or default to 0

    m.target = g.target

    raiseEvent("zData.me")
    myDataOutput()
end


-- =======
--  Stats
-- =======

zData.stats = zData.stats or {
    hp = 100, mhp = 100, php = 100,
    mp = 100, mmp = 100, pmp = 100,
    ep = 100, mep = 100, pep = 100,
    wp = 100, mwp = 100, pwp = 100,
    xp = 0, rage = 0,
    bal = true, eq = true,
}

zData.stats.directory = {
    "hp", "mhp", "php",
    "mp", "mmp", "pmp",
    "ep", "mep", "pep",
    "wp", "mwp", "pwp",
    "xp", "rage",
    "bal", "eq",
}

function zData.stats.parse()
  if not table.contains(myaffs, "blackout") then
    local g = gmcp.Char.Vitals
    local m = zData.stats

    m.hp = tonumber(g.hp)
    m.mhp = tonumber(g.maxhp)
    m.php = math.floor(m.hp/m.mhp*100)

    m.mp = tonumber(g.mp)
    m.mmp = tonumber(g.maxmp)
    m.pmp = math.floor(m.mp/m.mmp*100)

    m.ep = tonumber(g.ep)
    m.mep = tonumber(g.maxep)
    m.pep = math.floor(m.ep/m.mep*100)

    m.wp = tonumber(g.wp)
    m.mwp = tonumber(g.maxwp)
    m.pwp = math.floor(m.wp/m.mwp*100)

    m.xp = tonumber(g.nl)
    m.rage = tonumber(string.sub(g.charstats[2], 7))

    m.bal = g.bal == "1"
    m.eq = g.eq == "1"

    raiseEvent("zData.stats")
  end
end

-- ==========
--  Currency
-- ==========

zData.currency = zData.currency or {
    gold = 0,    bgold = 0,    tgold = 0,
    credits = 0, bcredits = 0, tcredits = 0,
    crowns = 0,  bcrowns = 0,  tcrowns = 0,
    lessons = 0,
}

zData.currency.directory = {
    "gold",    "bgold",    "tgold",
    "credits", "bcredits", "tcredits",
    "crowns",  "bcrowns",  "tcrowns",
    "lessons"
}

function zData.currency.parse()
    local g = gmcp.Char.Status
    local m = zData.currency

    m.gold = tonumber(g.gold)
    m.bgold = tonumber(g.bank)
    m.tgold = m.gold + m.bgold
    m.credits = tonumber(g.unboundcredits)
    m.bcredits = tonumber(g.boundcredits)
    m.tcredits = m.credits + m.bcredits
    m.crowns = tonumber(g.mayancrowns)
    m.bcrowns = tonumber(g.boundmayancrowns)
    m.tcrowns = m.crowns + m.bcrowns
    m.lessons = tonumber(g.lessons)

    raiseEvent("zData.currency")
    myDataOutput()
end

-- ======
--  Room
-- ======

zData.room = zData.room or {name = "", area = "", env = "", indoors = false}

zData.room.directory = {"name", "area", "env", "indoors"}

function zData.room.parse()
    local m = zData.room
    local g = gmcp.Room.Info

    m.name = g.name
    m.env = g.environment
    m.area = g.area
    m.indoors = g.name:sub(-9,-1) == "(indoors)"

    raiseEvent("zData.room")
end

-- =======
--  Comms
-- =======

zData.comms = zData.comms or {channel = "", text = ""}

zData.comms.directory = {"channel", "cname", "text", "speaker", "decho"}

function zData.comms.parse()
    local channel = gmcp.Comm.Channel.Text.channel
    if channel:sub(0, 4) == "tell" then
        channel = "tells"
    else
        local list = {}
        for k, v in pairs(gmcp.Comm.Channel.List) do list[v.name] = v.caption end
        channel = list[channel] or channel
        if channel:sub(0, 8) == "The Clan" then channel = channel:sub(13) end
    end
    zData.comms.channel = channel
    zData.comms.cname = gmcp.Comm.Channel.Text.channel
    zData.comms.text = ansi2string(gmcp.Comm.Channel.Text.text)
    zData.comms.decho = ansi2decho(gmcp.Comm.Channel.Text.text)
    zData.comms.speaker = gmcp.Comm.Channel.Text.talker
    raiseEvent("zData.comms")
end

function zData.comms.register()
    sendGMCP('Core.Supports.Add ["Comm.Channel 1"]')
end

-- =========
--  Players
-- =========

zData.players = zData.players or {}

zData.players.list = zData.players.list or {}
zData.players.revlist = zData.players.revlist or {}
zData.players.textlist = zData.players.textlist or ""
zData.players.num = zData.players.num or 0

zData.players.directory = {"list", "revlist", "textlist", "num"}
zData.players.description = {
    "'list' is numerically indexed with player names as the values",
    "'revlist' is indexed with player names, values are the positions in 'list'",
}

function zData.players.parselist()
    local g = gmcp.Room.Players
    local m = zData.players
    m.list = {}
    for k, v in pairs(g) do
        m.list[#m.list+1] = v.name
    end
    m.finishlists()
end

function zData.players.parseadd()
    local g = gmcp.Room.AddPlayer
    local m = zData.players
    m.list[#m.list+1] = g.name
    m.finishlists()
end

function zData.players.parseremove()
    local g = gmcp.Room.RemovePlayer
    local m = zData.players
    table.remove(m.list, m.revlist[g])
    m.finishlists()
end

function zData.players.finishlists()
    local m = zData.players
    for k, v in ipairs(m.list) do
        if v == zData.me.name then
            table.remove(m.list, k)
            break
        end
    end
    table.sort(m.list)
    m.revlist = {}
    for k, v in ipairs(m.list) do
        m.revlist[v] = k
    end
    m.textlist = table.concat(m.list, ", ")
    m.num = #m.list
    raiseEvent("zData.players")
end

-- =======
--  Items
-- =======

zData.items = zData.items or {}

zData.items.inv = zData.items.inv or {}
zData.items.wielded = zData.items.wielded or {left = false, right = false, both = false}
zData.items.room = zData.items.room or {}
zData.items.denizens = zData.items.denizens or {}
zData.items.denizenlist = zData.items.denizenlist or {}
zData.items.denizennum = zData.items.denizennum or 0

zData.items.directory = {"inv", "wielded", "room", "denizens", "denizenlist", "denizennum"}

zData.items.description = {
    "each table except denizenlist contains tables indexed by the item number",
    "each item's table contains a name key and keys for each property",
    "properties: denizen, container, edible, filled, groupable, riftable",
    "            takeable, wearable, worn, wieldleft, and wieldright",
    "",
    "note that two-handed weapons have both wieldleft and wieldright set",
    "",
    "to give an example:",
    "",
    'zData.items.inv = {',
    '  ["123456"] = {',
    '    name = "a dragonskin pack",',
    '    container = true',
    '    worn = true,',
    '    },',
    '  }',
    "",
    "denizenlist contains tables indexed by denizen name, with the values as",
    "the item number of one of the denizens present by that name",
}

zData.items.properties = {
    c = "container",
    e = "edible",
    f = "filled",
    g = "groupable",
    l = "wieldleft",
    L = "wieldright",
    m = "denizen",
    r = "riftable",
    t = "takeable",
    W = "wearable",
    w = "worn",
}

function zData.items.parselist()
    local g = gmcp.Char.Items.List
    local m = zData.items
    if g.location == "room" then
        m.room = {}
        m.denizens = {}
    elseif g.location == "inv" then
        m.inv = {}
    end
    if g.location == "room" or g.location == "inv" then
        for k, v in pairs(g.items) do
            local location = g.location
            if location == "room" and v.attrib and string.match(v.attrib, "m") then
                location = "denizens"
            end
            m[location][v.id] = {}
            m[location][v.id].name = v.name
            if v.attrib then
                m.getproperties(location, v.id, v.attrib)
            end
        end
        if g.location == "room" then
            m.getdenizenlist()
        end
    end
    if g.location == "inv" then m.getwielded() end
    raiseEvent("zData.items")
end

function zData.items.parseadd()
    local g = gmcp.Char.Items.Add
    local m = zData.items
    if g.location == "room" or g.location == "inv" then
        local location = g.location
        if location == "room" and g.item.attrib and string.match(g.item.attrib, "m") then
            location = "denizens"
        end
        m[location][g.item.id] = {}
        m[location][g.item.id].name = g.item.name
        if g.item.attrib then
            m.getproperties(location, g.item.id, g.item.attrib)
        end
        if g.location == "room" then
            m.getdenizenlist()
        end
    end
    if g.location == "inv" then m.getwielded() end
    raiseEvent("zData.items")
end

function zData.items.parseremove()
    local g = gmcp.Char.Items.Remove
    local m = zData.items
    if g.location == "room" or g.location == "inv" then
        local location = g.location
        if location == "room" and g.item.attrib and string.match(g.item.attrib, "m") then
            location = "denizens"
        end
        m[location][g.item.id] = nil
        if g.location == "room" then
            m.getdenizenlist()
        end
    end
    if g.location == "inv" then m.getwielded() end
    raiseEvent("zData.items")
end

function zData.items.parseupdate()
    local g = gmcp.Char.Items.Update
    local m = zData.items
    if g.location == "room" or g.location == "inv" then
        local location = g.location
        if location == "room" and g.item.attrib and string.match(g.item.attrib, "m") then
            location = "denizens"
        end
        m[location][g.item.id] = {}
        m[location][g.item.id].name = g.item.name
        if g.item.attrib then
            m.getproperties(location, g.item.id, g.item.attrib)
        end
        if g.location == "room" then
            m.getdenizenlist()
        end
    end
    if g.location == "inv" then m.getwielded() end
    raiseEvent("zData.items")
end

function zData.items.getproperties(location, item, attrib)
    local m = zData.items[location][item]
    for k, v in pairs(zData.items.properties) do
        if string.match(attrib, k) then
            m[v] = true
        end
    end
end

function zData.items.getwielded()
    local m = zData.items
    m.wielded = {left = false, right = false, both = false}
    for k, v in pairs(m.inv) do
        if v.wieldleft and v.wieldright then
            m.wielded.both = k
        elseif v.wieldleft then
            m.wielded.left = k
        elseif v.wieldright then
            m.wielded.right = k
        end
    end
    for k, v in pairs(m.wielded) do
        if v and m.inv[v] then m.wielded[v] = m.inv[v].name end
    end
end

function zData.items.getdenizenlist()
    local m = zData.items
    m.denizennum = 0
    m.denizenlist = {}
    if targetGMCP then targetGMCP.count = 0 end
    for k, v in pairs(m.denizens) do
        m.denizennum = m.denizennum + 1
        if targetGMCP and targetGMCP.rev[v.name] then targetGMCP.count = targetGMCP.count + 1 end
        m.denizenlist[v.name] = k
    end
end

-- ======
--  Time
-- ======

zData.time = zData.time or {
    time = "", day = 0, month = "", mon = 0, year = 0, daystring = "0th",
    season = "", fullseason = "", shortseason = ""
}

zData.time.directory = {"time", "day", "month", "mon", "season", "fullseason", "shortseason", "year", "daystring"}
zData.time.revdirectory = {}
for k, v in ipairs(zData.time.directory) do
    zData.time.revdirectory[v] = true
end

function zData.time.parselist()
    zData.time.parse("List")
end

function zData.time.parseupdate()
    zData.time.parse("Update")
end

function zData.time.parse(scope)
    local tonum = {day=true, mon=true, year=true}
    for k, v in pairs(gmcp.IRE.Time[scope]) do
        if zData.time.revdirectory[k] then
            zData.time[k] = tonum[k] and tonumber(v) or v
        end
        if k == "time" then
            local replace = {
                "It is ", "It's ", " in Achaea",
                "The sun has awakened from its long slumber. ",
                " has overtaken the light",
                "The sun sits at its apex. ",
                "The shadows have lengthened. ",
                "Darkness rules the land. "
            }
            for i in ipairs(replace) do
                zData.time.time = zData.time.time:gsub("(%w*)" .. replace[i] .. "(%w*)", "%1%2")
            end
            zData.time.time = zData.time.time:sub(1, -2):lower()
        end
        if k == "day" then
            zData.time.daystring = v .. (({"st","nd","rd"})[tonumber(v:sub(-1, -1))] or "th")
        end
        if k == "mon" then
            zData.time.shortseason = ({"mWi", "lWi", "eSp", "mSp", "lSp", "eSu",
                                     "mSu", "lSu", "eAu", "mAu", "lAu", "eWi"})[tonumber(v)]
            zData.time.season = ({"mid winter",   "late winter",  "early spring", "mid spring",
                                "late spring",  "early summer", "mid summer",   "late summer",
                                "early autumn", "mid autumn",   "late autumn",  "early winter"})[tonumber(v)]
            zData.time.fullseason = ({"winter", "winter", "spring", "spring", "spring", "summer",
                                    "summer", "summer", "autumn", "autumn", "autumn", "winter"})[tonumber(v)]
        end
    end
    raiseEvent("zData.time")
end

-- ================
--  Event Handlers
-- ================
function zData.initializeEvents()
    reg = registerAnonymousEventHandler
    
    -- Character data
    reg("gmcp.Char.Status", "zData.me.parse")
    reg("gmcp.Char.Vitals", "zData.stats.parse")
    reg("gmcp.Char.Status", "zData.currency.parse")
    
    -- Room information
    reg("gmcp.Room.Info", "zData.room.parse")
    
    -- Communication handlers
    reg("zData.init", "zData.comms.register")
    reg("gmcp.Comm.Channel.Text", "zData.comms.parse")
    
    -- Player tracking
    reg("gmcp.Room.Players", "zData.players.parselist")
    reg("gmcp.Room.AddPlayer", "zData.players.parseadd")
    reg("gmcp.Room.RemovePlayer", "zData.players.parseremove")
    
    -- Inventory management
    reg("gmcp.Char.Items.List", "zData.items.parselist")
    reg("gmcp.Char.Items.Add", "zData.items.parseadd")
    reg("gmcp.Char.Items.Remove", "zData.items.parseremove")
    reg("gmcp.Char.Items.Update", "zData.items.parseupdate")
    
    -- Time tracking
    reg("gmcp.IRE.Time.List", "zData.time.parselist")
    reg("gmcp.IRE.Time.Update", "zData.time.parseupdate")
end
</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
			</ScriptGroup>
		</ScriptGroup>
	</ScriptPackage>
	<KeyPackage>
		<KeyGroup isActive="yes" isFolder="yes">
			<name>Achaean System</name>
			<packageName>Achaean System</packageName>
			<script></script>
			<command></command>
			<keyCode>0</keyCode>
			<keyModifier>0</keyModifier>
			<KeyGroup isActive="yes" isFolder="yes">
				<name>system</name>
				<packageName></packageName>
				<script></script>
				<command></command>
				<keyCode>33554431</keyCode>
				<keyModifier>0</keyModifier>
				<KeyGroup isActive="yes" isFolder="yes">
					<name>movement</name>
					<packageName></packageName>
					<script></script>
					<command></command>
					<keyCode>33554431</keyCode>
					<keyModifier>0</keyModifier>
					<Key isActive="yes" isFolder="no">
						<name>north</name>
						<packageName></packageName>
						<script>hunting = false
--if failsafe and not hamstrung then
 -- slashtype = "pommelstrike"
 -- if not (inslowcuringmode()) then
  --   if myclass() == "blademaster" then
   --     blademaster(slashtype, limb)
  --    end
  --end
--elseif failsafe and not(evaderequested) then
 -- evaderequested=true
--else
  failsafe = false
  combinedMove("n")
--end</script>
						<command></command>
						<keyCode>56</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>northeast</name>
						<packageName></packageName>
						<script>hunting = false
--if failsafe and not hamstrung then
 -- slashtype = "pommelstrike"
 -- if not (inslowcuringmode()) then
  --   if myclass() == "blademaster" then
   --     blademaster(slashtype, limb)
   --   end
  --end
--elseif failsafe and not(evaderequested) then
 -- evaderequested=true
--else
failsafe = false
combinedMove("ne")
--end</script>
						<command></command>
						<keyCode>57</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>east</name>
						<packageName></packageName>
						<script>hunting = false
--if failsafe and not hamstrung then
 -- slashtype = "pommelstrike"
 -- if not (inslowcuringmode()) then
   --  if myclass() == "blademaster" then
    --    blademaster(slashtype, limb)
    --  end
 -- end
--elseif failsafe and not(evaderequested) then
 -- evaderequested=true
--else
failsafe = false
combinedMove("e")
--end</script>
						<command></command>
						<keyCode>54</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>southeast</name>
						<packageName></packageName>
						<script>hunting = false
--if failsafe and not hamstrung then
 -- slashtype = "pommelstrike"
 -- if not (inslowcuringmode()) then
   --  if myclass() == "blademaster" then
   --     blademaster(slashtype, limb)
   --  end
  --end
--elseif failsafe and not(evaderequested) then
 -- evaderequested=true
--else
failsafe = false
combinedMove("se")
--end</script>
						<command></command>
						<keyCode>51</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>south</name>
						<packageName></packageName>
						<script>hunting = false
--if failsafe and not hamstrung then
  --slashtype = "pommelstrike"
  --if not (inslowcuringmode()) then
   --  if myclass() == "blademaster" then
   --     blademaster(slashtype, limb)
   --   end
 -- end
--elseif failsafe and not(evaderequested) then
 -- evaderequested=true
--else
failsafe = false
combinedMove("s")
--end</script>
						<command></command>
						<keyCode>50</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>southwest</name>
						<packageName></packageName>
						<script>hunting = false
--if failsafe and not hamstrung then
 -- slashtype = "pommelstrike"
  --if not (inslowcuringmode()) then
   --  if myclass() == "blademaster" then
    --    blademaster(slashtype, limb)
    --  end
  --end
--elseif failsafe and not(evaderequested) then
 -- evaderequested=true
--else
failsafe = false
combinedMove("sw")
--end</script>
						<command></command>
						<keyCode>49</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>west</name>
						<packageName></packageName>
						<script>hunting = false
--if failsafe and not hamstrung then
 -- slashtype = "pommelstrike"
 -- if not (inslowcuringmode()) then
   --  if myclass() == "blademaster" then
    --    blademaster(slashtype, limb)
     -- end
 -- end
--elseif failsafe and not(evaderequested) then
 -- evaderequested=true
--else
  failsafe = false
  combinedMove("w")
--end</script>
						<command></command>
						<keyCode>52</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>northwest</name>
						<packageName></packageName>
						<script>hunting = false
--if failsafe and not hamstrung then
 -- slashtype = "pommelstrike"
 -- if not (inslowcuringmode()) then
  --   if myclass() == "blademaster" then
  --      blademaster(slashtype, limb)
  --    end
 -- end
--elseif failsafe and not(evaderequested) then
 -- evaderequested=true
--else
  failsafe = false
  combinedMove("nw")
--end</script>
						<command></command>
						<keyCode>55</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>up</name>
						<packageName></packageName>
						<script>hunting = false
--if failsafe and not hamstrung then
 -- slashtype = "pommelstrike"
 -- if not (inslowcuringmode()) then
  --   if myclass() == "blademaster" then
  --      blademaster(slashtype, limb)
  --    end
 -- end
--elseif failsafe and not(evaderequested) then
--  evaderequested=true
--else
  failsafe = false
  combinedMove("u")
--end</script>
						<command></command>
						<keyCode>45</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>down</name>
						<packageName></packageName>
						<script>hunting = false
--if failsafe and not hamstrung then
 -- slashtype = "pommelstrike"
 --if not (inslowcuringmode()) then
     --if myclass() == "blademaster" then
      --  blademaster(slashtype, limb)
     -- end
  --end
--elseif failsafe and not(evaderequested) then
  --evaderequested=true
--else
  failsafe = false
  combinedMove("d")
--end
  </script>
						<command></command>
						<keyCode>43</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>in</name>
						<packageName></packageName>
						<script>hunting = false
--if failsafe and not hamstrung then
  --slashtype = "pommelstrike"
 -- if not (inslowcuringmode()) then
    -- if myclass() == "blademaster" then
    --    blademaster(slashtype, limb)
    --  end
 -- end
--elseif failsafe and not(evaderequested) then
--  evaderequested=true
--else
  failsafe = false
  combinedMove("in")
--end</script>
						<command></command>
						<keyCode>47</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>out</name>
						<packageName></packageName>
						<script>hunting = false
--if failsafe and not hamstrung then
  --slashtype = "pommelstrike"
  --if not (inslowcuringmode()) then
    -- if myclass() == "blademaster" then
      --  blademaster(slashtype, limb)
     -- end
 -- end
--elseif failsafe and not(evaderequested) then
  --evaderequested=true
--else
  failsafe = false
  combinedMove("out")
--end</script>
						<command></command>
						<keyCode>42</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
				</KeyGroup>
				<KeyGroup isActive="yes" isFolder="yes">
					<name>blademaster</name>
					<packageName></packageName>
					<script></script>
					<command></command>
					<keyCode>-1</keyCode>
					<keyModifier>0</keyModifier>
					<Key isActive="no" isFolder="no">
						<name>aff reset ( + )</name>
						<packageName></packageName>
						<script>
resetbacktrack()

if not(NDB_getClass(target:title()) == "Unknown") then
  set_class(NDB_getClass(target):title())
else
  cecho("\n&lt;yellow&gt; SET CLASS MANUALLY")
end


     -- chase variables
    room_count = 0
    room_count_set = 0
    chase_target_locked = false
    lookdirection = ""       
    chasedirection = ""
        
    resetAllEnemyBalanceTimes()
    resetEducatedGuessHistory()

affstrack = {
        venoms = {
                ["xentio"]     = "clumsiness",
                ["eurypteria"] = "recklessness",
                ["kalmia"]     = "asthma",
                ["delphinium"] = "sleep",
                ["digitalis"]  = "shyness",
                ["darkshade"]  = "darkshade",
                ["curare"]     = "paralysis",
                ["epteth"]     = "crippledarm",
                ["prefarar"]   = "sensitivity",
                ["monkshood"]  = "disloyalty",
                ["euphorbia"]  = "illness",
                ["colocasia"]  = "deafblind",
                ["vernalius"]  = "weariness",
                ["epseth"]     = "crippledleg",
                ["larkspur"]   = "dizziness",
                ["slike"]      = "anorexia",
                ["notechis"]   = "haemophilia",
                ["vardrax"]    = "addiction",
                ["aconite"]    = "stupidity",
                ["selarnia"]   = "selarnia",
                ["gecko"]      = "slickness",
                ["scytherus"]  = "scytherus",
                ["voyria"]     = "voyria",
                ["pothealthleech"]= "healthleech",
                ["potloneliness"] = "loneliness",
                ["potepilepsy"]   = "epilepsy"
        },
 
        applied = {
                ["body"]  = {"anorexia","frozen"},
                ["skin"]  = {"anorexia", "crippledarm", "crippledleg","frozen"},
                ["torso"] = {"anorexia", "torso", "aflame"},
                ["head"]  = {"head"},
                ["arms"]  = {"crippledarm", "rightarm", "leftarm"},
                ["legs"]  = {"crippledleg","rightleg","leftleg"}
        },
 
        eaten = {
                ["piece of kelp"]    = {"asthma", "clumsiness", "hypochondria", "sensitivity", "weariness", "healthleech"},
                ["aurum flake"]      = {"asthma", "clumsiness", "hypochondria", "sensitivity", "weariness", "healthleech"},
                ["lobelia seed"]     = {"agoraphobia", "claustrophobia", "loneliness", "masochism", "recklessness", "vertigo"},
                ["argentum flake"]   = {"agoraphobia", "claustrophobia", "loneliness", "masochism", "recklessness", "vertigo"},
                ["prickly ash bark"] = {"confusion", "dementia", "hallucinations", "hypersomnia", "paranoia"},
                ["stannum flake"]    = {"confusion", "dementia", "hallucinations", "hypersomnia", "paranoia"},
                ["bellwort flower"]  = {"generosity", "pacifism"},
                ["cuprum flake"]     = {"generosity", "pacifism"},
                ["bayberry bark"]         = {"blind"},
                ["arsenic pellet"]   = {"blind"},
                ["hawthorn berry"]   = {"deaf"},
                ["calamine crystal"] = {"deaf"},
                ["goldenseal root"]  = {"dizziness", "epilepsy", "impatience", "shyness", "stupidity"},
                ["plumbum flake"]    = {"dizziness", "epilepsy", "impatience", "shyness", "stupidity"},
                ["bloodroot leaf"]   = {"paralysis", "slickness"},
                ["magnesium chip"]   = {"paralysis", "slickness"},
                ["ginseng root"]     = {"addiction", "darkshade", "haemophilia", "lethargy", "illness", "scytherus"},
                ["ferrum flake"]     = {"addiction", "darkshade", "haemophilia", "lethargy", "illness", "scytherus"},
                ["rage"]             = {"generosity", "pacifism"},
        },
 
        focused = {
                "agoraphobia",
                "anorexia",
                "claustrophobia",
                "confusion",
                "dizziness",
                "epilepsy",
                "generosity",
                "loneliness",
                "masochism",
                "pacifism",
                "recklessness",
                "shyness",
                "stupidity",
                "weariness",
                "vertigo"              
        },

        treed = {
                "clumsiness",
                "aflame",
                "paranoia",
                "vertigo",
                "agoraphobia",
                "dizziness",
                "claustrophobia",
                "recklessness",
                "epilepsy",
                "addiction",
                "stupidity",
                "scytherus",
                "slickness",
                "generosity",
                "pacifism",
                "confusion",
                "voyria",
                "illness",
                "haemophilia",
                "weariness",
                "hallucinations",
                "confusion",
                "disloyalty",
                "lethargy",
                "shyness",
                "sensitivity",
                "asthma",
                "crippledarm",
                "crippledleg",
                "darkshade",
                "impatience",
                "anorexia",
                "loneliness",
                "hypochondria", 
                "selarnia",
                "leftleg",
                "leftarm",
                "rightleg",
                "rightarm",
                "frozen",
        },
 
        restored = {
                "crippledarm",
                "crippledleg",
                "rightleg",
                "leftleg",
                "rightarm",
                "leftarm",              
        },
 
        smoked = {
                "deadening",
                "disloyalty",
                "slickness",
                "manaleech",
                "aeon",
                "hellsight",
        },

        score = {
                ["addiction"]      = 0,
                ["aeon"]           = 0,
                ["agoraphobia"]    = 0,
                ["anorexia"]       = 0,
                ["aflame"]         = 0,
                ["airfist"]        = 0,
                ["asthma"]         = 0,
                ["blind"]          = 0,
                ["blackout"]       = 0,
                ["bound"]          = 0,
                ["cadmuscurse"]    = 0,
                ["claustrophobia"] = 0,
                ["clumsiness"]     = 0,
                ["confusion"]      = 0,
                ["crippledarm"]    = 0,
                ["crippledleg"]    = 0,
                ["darkshade"]      = 0,
                ["deadening"]      = 0,
                ["deaf"]           = 0,
                ["dementia"]       = 0,
                ["disloyalty"]     = 0,
                ["disrupt"]        = 0,
                ["dizziness"]      = 0,
                ["epilepsy"]       = 0,
                ["frozen"]         = 0,
                ["generosity"]     = 0,
                ["haemophilia"]    = 0,
                ["hallucinations"] = 0,
                ["hamstring"]      = 0,
                ["healthleech"]    = 0,
                ["hecate"]         = 0,
                ["hellsight"]      = 0,
                ["hypersomnia"]    = 0,
                ["hypochondria"]   = 0,
                ["illness"]        = 0,
                ["impaleslash"]    = 0,
                ["impatience"]     = 0,
                ["insomnia"]       = 0,
                ["kola"]           = 0,
                ["lethargy"]       = 0,
                ["loneliness"]     = 0,
                ["masochism"]      = 0,
                ["manaleech"]      = 0,
                ["nausea"]         = 0,
                ["pacifism"]       = 0,
                ["paralysis"]      = 0,
                ["paranoia"]       = 0,
                ["prone"]          = 0,
                ["recklessness"]   = 0,
                ["scytherus"]      = 0,
                ["selarnia"]       = 0,
                ["sensitivity"]    = 0,
                ["shyness"]        = 0,
                ["slickness"]      = 0,
                ["sleep"]          = 0,
                ["stupidity"]      = 0,
                ["transfixed"]     = 0,
                ["timeflux"]       = 0,
                ["weariness"]      = 0,
                ["whispermadness"] = 0,
                ["vertigo"]        = 0,
                ["vitiate"]        = 0,
                ["voidfist"]       = 0,
                ["voyria"]         = 0,

                ["rightleg"]       = 0,
                ["leftleg"]       = 0,
                ["rightarm"]       = 0,
                ["leftarm"]       = 0,
                ["head"]       = 0,
                ["torso"]       = 0,
        },
 
        cureall = {
                "addiction",
                "aflame",
                "agoraphobia",
                "anorexia",
                "asthma",
                "claustrophobia",
                "clumsiness",
                "confusion",
                "crippledarm",
                "crippledleg",   
                "darkshade",     
                "deadening",                
                "dementia",      
                "disloyalty",     
                "disrupt",       
                "dizziness",      
                "epilepsy",     
                "generosity",     
                "haemophilia",    
                "hallucinations", 
                "healthleech",
                "hypersomnia",    
                "hypochondria",   
                "illness",        
                "impatience",     
                "lethargy",       
                "loneliness", 
                "manaleech",    
                "masochism",      
                "pacifism",       
                "paralysis",      
                "paranoia",       
                "recklessness",   
                "scytherus",    
                "selarnia",    
                "sensitivity",   
                "shyness",      
                "slickness",    
                "stupidity",     
                "weariness",     
                "vertigo",        
                "voyria",
                },
}
affstrack.blademasterstance = affstrack.blademasterstance or "none"
affstrack.voidtimes = {
      ["none"] = 4.5,
      ["thyr"] = 4.5,
      ["sanya"] = 7.5,
      ["mir"] = 4.5,
      ["doya"] = 4.5,
      ["arash"] = 4.5,
}
affstrack.airtimes = {
      ["none"] = 14.5,
      ["thyr"] = 20,
      ["sanya"] = 14.5,
      ["mir"] = 14.5,
      ["doya"] = 14.5,
      ["arash"] = 14.5,
}
affstrack.hecatescore = {

}
affstrack.crushedpots = {
   ["piece of kelp"]   = "pothealthleech",
   ["bellwort flower"] = "vernalius",
   ["valerian leaf"]   = "gecko",
   ["lobelia seed"]    = "potloneliness",
   ["piece of slippery elm"] = "larkspur",
   ["kola nut"]        = "delphinium",
   ["goldenseal root"] = "potepilepsy",
   ["hawthorn berry"]  = "prefarar",
}
affstrack.enlightenlist = { "dementia","stupidity","confusion","hypersomnia","paranoia","hallucinations","impatience","hypochondria","recklessness","masochism","agoraphobia","anorexia","loneliness","claustrophobia","lovers"}
affstrack.enlightenscore = 0
affstrack.ginsengscore = 0
affstrack.goldenscore = 0
affstrack.kelpscore = 0
affstrack.mentalscore = 0
affstrack.totalaffs = 0
herbhalftime = 0
opponenthalftree = 0
scoreup()


cecho("\n&lt;green&gt;COMBAT RESET")</script>
						<command></command>
						<keyCode>43</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>shield ( . )</name>
						<packageName></packageName>
						<script>requestshield = not requestshield

if not(requestshield) then
  requestshield = false
  boxDisplay("Shield Request Removed","white:red")
else
  requestshield = true
  send("queue addclear eqbal touch shield")
  boxDisplay("Shield Requested","white:green")
end
</script>
						<command></command>
						<keyCode>46</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>tumble (  0  )</name>
						<packageName></packageName>
						<script>tumblerequested = true
</script>
						<command></command>
						<keyCode>48</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>flee ( shift + 0 )</name>
						<packageName></packageName>
						<script>fleerequested = true
</script>
						<command></command>
						<keyCode>48</keyCode>
						<keyModifier>570425344</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>mount jump ( - )</name>
						<packageName></packageName>
						<script>mjrequested = true</script>
						<command></command>
						<keyCode>45</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>airfist ( F1 )</name>
						<packageName></packageName>
						<script>airfistrequested = true</script>
						<command></command>
						<keyCode>16777264</keyCode>
						<keyModifier>0</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>voidfist ( F2 )</name>
						<packageName></packageName>
						<script>voidfistrequested = true</script>
						<command></command>
						<keyCode>16777265</keyCode>
						<keyModifier>0</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>left arm ( ctrl + 4 )</name>
						<packageName></packageName>
						<script>failsafe = true
limb = "left arm"
if not (inslowcuringmode()) then
  if myclass() == "blademaster" then
    blademaster(limb)
  end
end

</script>
						<command></command>
						<keyCode>52</keyCode>
						<keyModifier>603979776</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>right arm ( ctrl + 6 )</name>
						<packageName></packageName>
						<script>failsafe = true
limb = "right arm"
if not (inslowcuringmode()) then
  if myclass() == "blademaster" then
    blademaster(limb)
  end
end</script>
						<command></command>
						<keyCode>54</keyCode>
						<keyModifier>603979776</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>torso ( ctrl + 5 )</name>
						<packageName></packageName>
						<script>failsafe = true
limb = "torso"
if not (inslowcuringmode()) then
  if myclass() == "blademaster" then
    blademaster(limb)
  end
end
</script>
						<command></command>
						<keyCode>53</keyCode>
						<keyModifier>603979776</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>head ( ctrl + 8 )</name>
						<packageName></packageName>
						<script>failsafe = true
limb = "head"
if not (inslowcuringmode()) then
   if myclass() == "blademaster" then
      blademaster(limb)
    end
end</script>
						<command></command>
						<keyCode>56</keyCode>
						<keyModifier>603979776</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>left leg ( ctrl + 1 )</name>
						<packageName></packageName>
						<script>failsafe = true
limb = "left leg"
if not (inslowcuringmode()) then
  if myclass() == "blademaster" then
    blademaster(limb)
  end
end


</script>
						<command></command>
						<keyCode>49</keyCode>
						<keyModifier>603979776</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>right leg ( ctrl + 3 )</name>
						<packageName></packageName>
						<script>failsafe = true
limb = "right leg"
if not (inslowcuringmode()) then
  if myclass() == "blademaster" then
    blademaster(limb)
  end
end</script>
						<command></command>
						<keyCode>51</keyCode>
						<keyModifier>603979776</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>balance slash ( ctrl + 2 )</name>
						<packageName></packageName>
						<script>failsafe = true
limb = ""
  if not (inslowcuringmode()) then
     if myclass() == "blademaster" then
        blademaster(slashtype, limb)
      end
  end

</script>
						<command></command>
						<keyCode>50</keyCode>
						<keyModifier>603979776</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>pommel strike ( ctrl + / )</name>
						<packageName></packageName>
						<script>failsafe = true
limb = ""
if not (inslowcuringmode()) then
  if myclass() == "blademaster" then
     blademaster(slashtype, limb)
  end
end</script>
						<command></command>
						<keyCode>47</keyCode>
						<keyModifier>603979776</keyModifier>
					</Key>
					<KeyGroup isActive="no" isFolder="yes">
						<name>combat</name>
						<packageName></packageName>
						<script></script>
						<command></command>
						<keyCode>33554431</keyCode>
						<keyModifier>0</keyModifier>
						<Key isActive="no" isFolder="no">
							<name>failsafe</name>
							<packageName></packageName>
							<script>failSafe()</script>
							<command></command>
							<keyCode>96</keyCode>
							<keyModifier>134217728</keyModifier>
						</Key>
						<Key isActive="no" isFolder="no">
							<name>rebounding</name>
							<packageName></packageName>
							<script>if rebounding == 1 then 
rebounding = false
opponentsmoke = 0
cecho("\n\n&lt;cyan&gt; REBOUNDING TURNED OFF!")
cecho("\n&lt;cyan&gt; DISABLED REDEF SINGLE!\n\n")
scoreup()
else
rebounding = true
opponentsmoke = 1
cecho("\n\n&lt;cyan&gt; REBOUNDING TURNED ON!")
cecho("\n&lt;cyan&gt; ENABLED REDEF SINGLE!\n\n")
scoreup() 
end</script>
							<command></command>
							<keyCode>48</keyCode>
							<keyModifier>536870912</keyModifier>
						</Key>
						<Key isActive="no" isFolder="no">
							<name>Illusion Send -</name>
							<packageName></packageName>
							<script>scoreup()
oillusions_send()
if gmcp.Char.Status.race == "Dragon" then 
   send("conjure " ..target.. " illusion " .. illusion)
elseif gmcp.Char.Status.class == "Serpent" then 
   send("conjure " ..target.. " illusion " .. illusion)
elseif gmcp.Char.Status.class == "Magi" or gmcp.Char.Status.class == "Sylvan" then
   send("cast " ..target.. " illusion " .. illusion)
end
illusionredo = 1</script>
							<command></command>
							<keyCode>45</keyCode>
							<keyModifier>536870912</keyModifier>
						</Key>
						<Key isActive="no" isFolder="no">
							<name>chase</name>
							<packageName></packageName>
							<script>expandAlias("chase")</script>
							<command></command>
							<keyCode>53</keyCode>
							<keyModifier>536870912</keyModifier>
						</Key>
					</KeyGroup>
				</KeyGroup>
				<KeyGroup isActive="yes" isFolder="yes">
					<name>hunting</name>
					<packageName></packageName>
					<script></script>
					<command></command>
					<keyCode>33554431</keyCode>
					<keyModifier>0</keyModifier>
					<Key isActive="yes" isFolder="no">
						<name>hunting (toggle)</name>
						<packageName></packageName>
						<script>updateDenizenPriorities()
hunttarget = ""
huntToggle()
if autohunting then
  commandSent = false
  huntNext()
  
end</script>
						<command></command>
						<keyCode>91</keyCode>
						<keyModifier>67108864</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>auto hunting (toggle)</name>
						<packageName></packageName>
						<script>autoHuntToggle()</script>
						<command></command>
						<keyCode>93</keyCode>
						<keyModifier>67108864</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>start hunting (toggle)</name>
						<packageName></packageName>
						<script>commandSent = false
huntNext()</script>
						<command></command>
						<keyCode>92</keyCode>
						<keyModifier>67108864</keyModifier>
					</Key>
				</KeyGroup>
			</KeyGroup>
		</KeyGroup>
	</KeyPackage>
	<VariablePackage>
		<HiddenVariables />
	</VariablePackage>
</MudletPackage>
